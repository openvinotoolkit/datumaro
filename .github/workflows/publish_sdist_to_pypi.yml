name: Build and upload to internal PyPI

on:
  workflow_dispatch: # run on request (no need for PR)

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-20.04', 'windows-2022']
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Installing python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: pip
      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.15.0
      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
      - uses: actions/upload-artifact@v4
        with:
          name: artifact-wheels_${{ matrix.os }}
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Python 3.9
        uses: actions/setup-python@v3
        with:
          python-version: "3.9"
      - name: Install pypa/build
        run: python -m pip install build
      - name: Build sdist
        run: python -m build --sdist
      - uses: actions/upload-artifact@v3
        with:
          name: artifact-sdist_${{ matrix.os }}
          path: dist/*.tar.gz

  publish_package:
    name: Publish package
    needs: [build_wheels, build_sdist]
    environment: pypi
    runs-on: [self-hosted, linux, x64, ubuntu20.04]
    permissions: write-all
    steps:
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: python -m pip install twine
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        path: dist
        pattern: artifact-*
        merge-multiple: true
    # to determine where to publish the source distribution to PyPI or TestPyPI
    - name: Check tag
      id: check-tag
      uses: actions-ecosystem/action-regex-match@v2
      with:
        text: ${{ github.ref }}
        regex: '^refs/heads/releases/[0-9]+\.[0-9]+\.[0-9]+(rc[0-9]+)?$'
    - name: Check dist contents
      run: twine check dist/*
    - name: Publish package dist to internal PyPI
      if: ${{ steps.check-tag.outputs.match != '' }}
      run: |
        export no_proxy=${{ secrets.PYPI_HOST }}
        export REPOSITORY_URL=http://${{ secrets.PYPI_HOST }}:${{ secrets.PYPI_PORT }}
        twine upload --verbose --repository-url $REPOSITORY_URL dist/* -u ${{ secrets.PYPI_USER }} -p ${{ secrets.PYPI_PASSWORD }}
    - name: Publish package distributions to TestPyPI
      if: ${{ steps.check-tag.outputs.match == '' }}
      run: |
        export REPOSITORY_URL=https://test.pypi.org/legacy/
        twine upload --verbose --repository-url $REPOSITORY_URL dist/* -u __token__ -p ${{ secrets.TESTPYPI_API_TOKEN }}
    - name: Clean up dist
      if: ${{ always() }}
      run: |
        if OUTPUT=$(ls | grep -c dist)
        then
          echo "Cleaning up dist directory"
          rm -r dist
        fi
