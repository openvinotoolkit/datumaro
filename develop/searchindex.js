Search.setIndex({"docnames": ["docs/command-reference/context/checkout", "docs/command-reference/context/commit", "docs/command-reference/context/create", "docs/command-reference/context/export", "docs/command-reference/context/index", "docs/command-reference/context/log", "docs/command-reference/context/models", "docs/command-reference/context/projects", "docs/command-reference/context/sources", "docs/command-reference/context/status", "docs/command-reference/context/util", "docs/command-reference/context_free/compare", "docs/command-reference/context_free/convert", "docs/command-reference/context_free/detect", "docs/command-reference/context_free/dinfo", "docs/command-reference/context_free/download", "docs/command-reference/context_free/explain", "docs/command-reference/context_free/explorer", "docs/command-reference/context_free/filter", "docs/command-reference/context_free/generate", "docs/command-reference/context_free/index", "docs/command-reference/context_free/merge", "docs/command-reference/context_free/patch", "docs/command-reference/context_free/prune", "docs/command-reference/context_free/stats", "docs/command-reference/context_free/transform", "docs/command-reference/context_free/validate", "docs/command-reference/helper/format", "docs/command-reference/helper/index", "docs/command-reference/overview", "docs/data-formats/datumaro_format", "docs/data-formats/formats/ade20k2017", "docs/data-formats/formats/ade20k2020", "docs/data-formats/formats/align_celeba", "docs/data-formats/formats/arrow", "docs/data-formats/formats/ava_action", "docs/data-formats/formats/brats", "docs/data-formats/formats/brats_numpy", "docs/data-formats/formats/celeba", "docs/data-formats/formats/cifar", "docs/data-formats/formats/cityscapes", "docs/data-formats/formats/coco", "docs/data-formats/formats/common_semantic_segmentation", "docs/data-formats/formats/common_super_resolution", "docs/data-formats/formats/cvat", "docs/data-formats/formats/datumaro", "docs/data-formats/formats/datumaro_binary", "docs/data-formats/formats/dota", "docs/data-formats/formats/icdar", "docs/data-formats/formats/image_zip", "docs/data-formats/formats/imagenet", "docs/data-formats/formats/index", "docs/data-formats/formats/kaggle", "docs/data-formats/formats/kinetics", "docs/data-formats/formats/kitti", "docs/data-formats/formats/kitti_raw", "docs/data-formats/formats/labelme", "docs/data-formats/formats/lfw", "docs/data-formats/formats/mapillary_vistas", "docs/data-formats/formats/market1501", "docs/data-formats/formats/mars", "docs/data-formats/formats/mmdet", "docs/data-formats/formats/mnist", "docs/data-formats/formats/mot", "docs/data-formats/formats/mots", "docs/data-formats/formats/mpii", "docs/data-formats/formats/mpii_json", "docs/data-formats/formats/mvtec", "docs/data-formats/formats/nyu_depth_v2", "docs/data-formats/formats/open_images", "docs/data-formats/formats/pascal_voc", "docs/data-formats/formats/roboflow", "docs/data-formats/formats/segment_anything", "docs/data-formats/formats/sly_pointcloud", "docs/data-formats/formats/synthia", "docs/data-formats/formats/tabular", "docs/data-formats/formats/vgg_face2", "docs/data-formats/formats/video", "docs/data-formats/formats/vott_csv", "docs/data-formats/formats/vott_json", "docs/data-formats/formats/wider_face", "docs/data-formats/formats/yolo", "docs/data-formats/formats/yolo_ultralytics", "docs/data-formats/media_formats", "docs/explanation/architecture", "docs/explanation/concept", "docs/explanation/plugins/index", "docs/explanation/plugins/openvino_plugin", "docs/explanation/project", "docs/get-started/introduction", "docs/get-started/quick-start-guide/examples", "docs/get-started/quick-start-guide/index", "docs/get-started/quick-start-guide/installation", "docs/get-started/quick-start-guide/usage", "docs/index", "docs/jupyter_notebook_examples/dataset_IO", "docs/jupyter_notebook_examples/e2e_example", "docs/jupyter_notebook_examples/explore", "docs/jupyter_notebook_examples/manipulate", "docs/jupyter_notebook_examples/notebooks/01_merge_multiple_datasets_for_classification", "docs/jupyter_notebook_examples/notebooks/02_merge_heterogeneous_datasets_for_detection", "docs/jupyter_notebook_examples/notebooks/03_visualize", "docs/jupyter_notebook_examples/notebooks/04_filter", "docs/jupyter_notebook_examples/notebooks/05_transform", "docs/jupyter_notebook_examples/notebooks/06_tiling", "docs/jupyter_notebook_examples/notebooks/07_data_explorer", "docs/jupyter_notebook_examples/notebooks/08_e2e_example_yolo_ultralytics_trainer", "docs/jupyter_notebook_examples/notebooks/09_encrypt_dataset", "docs/jupyter_notebook_examples/notebooks/10_noisy_label_detection_cls", "docs/jupyter_notebook_examples/notebooks/11_validate", "docs/jupyter_notebook_examples/notebooks/12_correct_dataset", "docs/jupyter_notebook_examples/notebooks/13_noisy_label_detection_det", "docs/jupyter_notebook_examples/notebooks/14_import_export_det_data", "docs/jupyter_notebook_examples/notebooks/15_import_export_seg_data", "docs/jupyter_notebook_examples/notebooks/16_missing_annotation_detection", "docs/jupyter_notebook_examples/notebooks/17_data_pruning", "docs/jupyter_notebook_examples/notebooks/18_bbox_to_instance_mask_using_sam", "docs/jupyter_notebook_examples/notebooks/19_automatic_instance_mask_gen_using_sam", "docs/jupyter_notebook_examples/notebooks/20_kaggle_data_import", "docs/jupyter_notebook_examples/notebooks/21_kaggle_data_cleaning", "docs/jupyter_notebook_examples/refine", "docs/jupyter_notebook_examples/transform", "docs/level-up/advanced_skills/12_project_versioning", "docs/level-up/advanced_skills/13_pseudo_label_generation", "docs/level-up/advanced_skills/14_data_pruning", "docs/level-up/advanced_skills/index", "docs/level-up/basic_skills/01_project_manipulation", "docs/level-up/basic_skills/02_dataset_download", "docs/level-up/basic_skills/03_dataset_import_export", "docs/level-up/basic_skills/04_detect_data_format", "docs/level-up/basic_skills/index", "docs/level-up/intermediate_skills/05_data_aggregation", "docs/level-up/intermediate_skills/06_data_comparison", "docs/level-up/intermediate_skills/07_data_merge", "docs/level-up/intermediate_skills/08_data_validate", "docs/level-up/intermediate_skills/09_data_filtering", "docs/level-up/intermediate_skills/10_data_exploration", "docs/level-up/intermediate_skills/11_data_generation", "docs/level-up/intermediate_skills/index", "docs/reference/_autosummary/datumaro", "docs/reference/_autosummary/datumaro.cli", "docs/reference/_autosummary/datumaro.cli.commands", "docs/reference/_autosummary/datumaro.cli.commands.compare", "docs/reference/_autosummary/datumaro.cli.commands.convert", "docs/reference/_autosummary/datumaro.cli.commands.detect_format", "docs/reference/_autosummary/datumaro.cli.commands.download", "docs/reference/_autosummary/datumaro.cli.commands.downloaders", "docs/reference/_autosummary/datumaro.cli.commands.downloaders.downloader", "docs/reference/_autosummary/datumaro.cli.commands.downloaders.kaggle", "docs/reference/_autosummary/datumaro.cli.commands.downloaders.tfds", "docs/reference/_autosummary/datumaro.cli.commands.explain", "docs/reference/_autosummary/datumaro.cli.commands.explore", "docs/reference/_autosummary/datumaro.cli.commands.filter", "docs/reference/_autosummary/datumaro.cli.commands.generate", "docs/reference/_autosummary/datumaro.cli.commands.info", "docs/reference/_autosummary/datumaro.cli.commands.merge", "docs/reference/_autosummary/datumaro.cli.commands.patch", "docs/reference/_autosummary/datumaro.cli.commands.prune", "docs/reference/_autosummary/datumaro.cli.commands.require_project", "docs/reference/_autosummary/datumaro.cli.commands.require_project.modification", "docs/reference/_autosummary/datumaro.cli.commands.require_project.modification.add", "docs/reference/_autosummary/datumaro.cli.commands.require_project.modification.create", "docs/reference/_autosummary/datumaro.cli.commands.require_project.modification.export", "docs/reference/_autosummary/datumaro.cli.commands.require_project.modification.import_", "docs/reference/_autosummary/datumaro.cli.commands.require_project.modification.remove", "docs/reference/_autosummary/datumaro.cli.commands.require_project.versioning", "docs/reference/_autosummary/datumaro.cli.commands.require_project.versioning.checkout", "docs/reference/_autosummary/datumaro.cli.commands.require_project.versioning.commit", "docs/reference/_autosummary/datumaro.cli.commands.require_project.versioning.info", "docs/reference/_autosummary/datumaro.cli.commands.require_project.versioning.log", "docs/reference/_autosummary/datumaro.cli.commands.require_project.versioning.status", "docs/reference/_autosummary/datumaro.cli.commands.stats", "docs/reference/_autosummary/datumaro.cli.commands.transform", "docs/reference/_autosummary/datumaro.cli.commands.validate", "docs/reference/_autosummary/datumaro.cli.contexts", "docs/reference/_autosummary/datumaro.cli.contexts.model", "docs/reference/_autosummary/datumaro.cli.contexts.project", "docs/reference/_autosummary/datumaro.cli.contexts.source", "docs/reference/_autosummary/datumaro.cli.contexts.util", "docs/reference/_autosummary/datumaro.cli.helpers", "docs/reference/_autosummary/datumaro.cli.helpers.format", "docs/reference/_autosummary/datumaro.cli.util", "docs/reference/_autosummary/datumaro.cli.util.compare", "docs/reference/_autosummary/datumaro.cli.util.errors", "docs/reference/_autosummary/datumaro.cli.util.project", "docs/reference/_autosummary/datumaro.components", "docs/reference/_autosummary/datumaro.components.abstracts", "docs/reference/_autosummary/datumaro.components.abstracts.merger", "docs/reference/_autosummary/datumaro.components.abstracts.model_interpreter", "docs/reference/_autosummary/datumaro.components.algorithms", "docs/reference/_autosummary/datumaro.components.algorithms.hash_key_inference", "docs/reference/_autosummary/datumaro.components.algorithms.hash_key_inference.base", "docs/reference/_autosummary/datumaro.components.algorithms.hash_key_inference.explorer", "docs/reference/_autosummary/datumaro.components.algorithms.hash_key_inference.hashkey_util", "docs/reference/_autosummary/datumaro.components.algorithms.hash_key_inference.prune", "docs/reference/_autosummary/datumaro.components.algorithms.noisy_label_detection", "docs/reference/_autosummary/datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer", "docs/reference/_autosummary/datumaro.components.algorithms.rise", "docs/reference/_autosummary/datumaro.components.annotation", "docs/reference/_autosummary/datumaro.components.annotations", "docs/reference/_autosummary/datumaro.components.annotations.matcher", "docs/reference/_autosummary/datumaro.components.annotations.merger", "docs/reference/_autosummary/datumaro.components.cli_plugin", "docs/reference/_autosummary/datumaro.components.comparator", "docs/reference/_autosummary/datumaro.components.config", "docs/reference/_autosummary/datumaro.components.config_model", "docs/reference/_autosummary/datumaro.components.contexts", "docs/reference/_autosummary/datumaro.components.contexts.importer", "docs/reference/_autosummary/datumaro.components.crypter", "docs/reference/_autosummary/datumaro.components.dataset", "docs/reference/_autosummary/datumaro.components.dataset_base", "docs/reference/_autosummary/datumaro.components.dataset_item_storage", "docs/reference/_autosummary/datumaro.components.dataset_storage", "docs/reference/_autosummary/datumaro.components.environment", "docs/reference/_autosummary/datumaro.components.errors", "docs/reference/_autosummary/datumaro.components.exporter", "docs/reference/_autosummary/datumaro.components.extractor_tfds", "docs/reference/_autosummary/datumaro.components.filter", "docs/reference/_autosummary/datumaro.components.format_detection", "docs/reference/_autosummary/datumaro.components.generator", "docs/reference/_autosummary/datumaro.components.hl_ops", "docs/reference/_autosummary/datumaro.components.importer", "docs/reference/_autosummary/datumaro.components.launcher", "docs/reference/_autosummary/datumaro.components.lazy_plugin", "docs/reference/_autosummary/datumaro.components.media", "docs/reference/_autosummary/datumaro.components.merge", "docs/reference/_autosummary/datumaro.components.merge.base", "docs/reference/_autosummary/datumaro.components.merge.exact_merge", "docs/reference/_autosummary/datumaro.components.merge.extractor_merger", "docs/reference/_autosummary/datumaro.components.merge.intersect_merge", "docs/reference/_autosummary/datumaro.components.merge.union_merge", "docs/reference/_autosummary/datumaro.components.operations", "docs/reference/_autosummary/datumaro.components.progress_reporting", "docs/reference/_autosummary/datumaro.components.project", "docs/reference/_autosummary/datumaro.components.registry", "docs/reference/_autosummary/datumaro.components.shift_analyzer", "docs/reference/_autosummary/datumaro.components.transformer", "docs/reference/_autosummary/datumaro.components.validator", "docs/reference/_autosummary/datumaro.components.visualizer", "docs/reference/_autosummary/datumaro.errors", "docs/reference/_autosummary/datumaro.ops", "docs/reference/_autosummary/datumaro.plugins", "docs/reference/_autosummary/datumaro.plugins.accuracy_checker_plugin", "docs/reference/_autosummary/datumaro.plugins.accuracy_checker_plugin.details", "docs/reference/_autosummary/datumaro.plugins.anchor_generator", "docs/reference/_autosummary/datumaro.plugins.configurable_validator", "docs/reference/_autosummary/datumaro.plugins.data_formats", "docs/reference/_autosummary/datumaro.plugins.data_formats.ade20k2017", "docs/reference/_autosummary/datumaro.plugins.data_formats.ade20k2020", "docs/reference/_autosummary/datumaro.plugins.data_formats.arrow", "docs/reference/_autosummary/datumaro.plugins.data_formats.arrow.base", "docs/reference/_autosummary/datumaro.plugins.data_formats.arrow.exporter", "docs/reference/_autosummary/datumaro.plugins.data_formats.arrow.format", "docs/reference/_autosummary/datumaro.plugins.data_formats.arrow.importer", "docs/reference/_autosummary/datumaro.plugins.data_formats.arrow.mapper", "docs/reference/_autosummary/datumaro.plugins.data_formats.arrow.mapper.dataset_item", "docs/reference/_autosummary/datumaro.plugins.data_formats.arrow.mapper.media", "docs/reference/_autosummary/datumaro.plugins.data_formats.ava", "docs/reference/_autosummary/datumaro.plugins.data_formats.ava.ava", "docs/reference/_autosummary/datumaro.plugins.data_formats.ava.ava_label_pb2", "docs/reference/_autosummary/datumaro.plugins.data_formats.brats", "docs/reference/_autosummary/datumaro.plugins.data_formats.brats_numpy", "docs/reference/_autosummary/datumaro.plugins.data_formats.camvid", "docs/reference/_autosummary/datumaro.plugins.data_formats.celeba", "docs/reference/_autosummary/datumaro.plugins.data_formats.celeba.align_celeba", "docs/reference/_autosummary/datumaro.plugins.data_formats.celeba.celeba", "docs/reference/_autosummary/datumaro.plugins.data_formats.cifar", "docs/reference/_autosummary/datumaro.plugins.data_formats.cityscapes", "docs/reference/_autosummary/datumaro.plugins.data_formats.coco", "docs/reference/_autosummary/datumaro.plugins.data_formats.coco.base", "docs/reference/_autosummary/datumaro.plugins.data_formats.coco.exporter", "docs/reference/_autosummary/datumaro.plugins.data_formats.coco.extractor_merger", "docs/reference/_autosummary/datumaro.plugins.data_formats.coco.format", "docs/reference/_autosummary/datumaro.plugins.data_formats.coco.importer", "docs/reference/_autosummary/datumaro.plugins.data_formats.coco.page_mapper", "docs/reference/_autosummary/datumaro.plugins.data_formats.common_semantic_segmentation", "docs/reference/_autosummary/datumaro.plugins.data_formats.common_super_resolution", "docs/reference/_autosummary/datumaro.plugins.data_formats.cvat", "docs/reference/_autosummary/datumaro.plugins.data_formats.cvat.base", "docs/reference/_autosummary/datumaro.plugins.data_formats.cvat.exporter", "docs/reference/_autosummary/datumaro.plugins.data_formats.cvat.format", "docs/reference/_autosummary/datumaro.plugins.data_formats.datumaro", "docs/reference/_autosummary/datumaro.plugins.data_formats.datumaro.base", "docs/reference/_autosummary/datumaro.plugins.data_formats.datumaro.exporter", "docs/reference/_autosummary/datumaro.plugins.data_formats.datumaro.format", "docs/reference/_autosummary/datumaro.plugins.data_formats.datumaro.importer", "docs/reference/_autosummary/datumaro.plugins.data_formats.datumaro.page_mapper", "docs/reference/_autosummary/datumaro.plugins.data_formats.datumaro_binary", "docs/reference/_autosummary/datumaro.plugins.data_formats.datumaro_binary.base", "docs/reference/_autosummary/datumaro.plugins.data_formats.datumaro_binary.exporter", "docs/reference/_autosummary/datumaro.plugins.data_formats.datumaro_binary.format", "docs/reference/_autosummary/datumaro.plugins.data_formats.datumaro_binary.importer", "docs/reference/_autosummary/datumaro.plugins.data_formats.datumaro_binary.mapper", "docs/reference/_autosummary/datumaro.plugins.data_formats.datumaro_binary.mapper.annotation", "docs/reference/_autosummary/datumaro.plugins.data_formats.datumaro_binary.mapper.common", "docs/reference/_autosummary/datumaro.plugins.data_formats.datumaro_binary.mapper.dataset_item", "docs/reference/_autosummary/datumaro.plugins.data_formats.datumaro_binary.mapper.media", "docs/reference/_autosummary/datumaro.plugins.data_formats.dota", "docs/reference/_autosummary/datumaro.plugins.data_formats.icdar", "docs/reference/_autosummary/datumaro.plugins.data_formats.icdar.base", "docs/reference/_autosummary/datumaro.plugins.data_formats.icdar.exporter", "docs/reference/_autosummary/datumaro.plugins.data_formats.icdar.format", "docs/reference/_autosummary/datumaro.plugins.data_formats.image_dir", "docs/reference/_autosummary/datumaro.plugins.data_formats.image_zip", "docs/reference/_autosummary/datumaro.plugins.data_formats.imagenet", "docs/reference/_autosummary/datumaro.plugins.data_formats.imagenet_txt", "docs/reference/_autosummary/datumaro.plugins.data_formats.kaggle", "docs/reference/_autosummary/datumaro.plugins.data_formats.kaggle.base", "docs/reference/_autosummary/datumaro.plugins.data_formats.kinetics", "docs/reference/_autosummary/datumaro.plugins.data_formats.kitti", "docs/reference/_autosummary/datumaro.plugins.data_formats.kitti.base", "docs/reference/_autosummary/datumaro.plugins.data_formats.kitti.exporter", "docs/reference/_autosummary/datumaro.plugins.data_formats.kitti.format", "docs/reference/_autosummary/datumaro.plugins.data_formats.kitti.importer", "docs/reference/_autosummary/datumaro.plugins.data_formats.kitti_raw", "docs/reference/_autosummary/datumaro.plugins.data_formats.kitti_raw.base", "docs/reference/_autosummary/datumaro.plugins.data_formats.kitti_raw.exporter", "docs/reference/_autosummary/datumaro.plugins.data_formats.kitti_raw.format", "docs/reference/_autosummary/datumaro.plugins.data_formats.labelme", "docs/reference/_autosummary/datumaro.plugins.data_formats.lfw", "docs/reference/_autosummary/datumaro.plugins.data_formats.mapillary_vistas", "docs/reference/_autosummary/datumaro.plugins.data_formats.mapillary_vistas.base", "docs/reference/_autosummary/datumaro.plugins.data_formats.mapillary_vistas.format", "docs/reference/_autosummary/datumaro.plugins.data_formats.mapillary_vistas.importer", "docs/reference/_autosummary/datumaro.plugins.data_formats.market1501", "docs/reference/_autosummary/datumaro.plugins.data_formats.mars", "docs/reference/_autosummary/datumaro.plugins.data_formats.mmdet", "docs/reference/_autosummary/datumaro.plugins.data_formats.mnist", "docs/reference/_autosummary/datumaro.plugins.data_formats.mnist_csv", "docs/reference/_autosummary/datumaro.plugins.data_formats.mot", "docs/reference/_autosummary/datumaro.plugins.data_formats.mots", "docs/reference/_autosummary/datumaro.plugins.data_formats.mpii", "docs/reference/_autosummary/datumaro.plugins.data_formats.mpii.format", "docs/reference/_autosummary/datumaro.plugins.data_formats.mpii.mpii_json", "docs/reference/_autosummary/datumaro.plugins.data_formats.mpii.mpii_mat", "docs/reference/_autosummary/datumaro.plugins.data_formats.mvtec", "docs/reference/_autosummary/datumaro.plugins.data_formats.mvtec.base", "docs/reference/_autosummary/datumaro.plugins.data_formats.mvtec.exporter", "docs/reference/_autosummary/datumaro.plugins.data_formats.mvtec.format", "docs/reference/_autosummary/datumaro.plugins.data_formats.mvtec.importer", "docs/reference/_autosummary/datumaro.plugins.data_formats.nyu_depth_v2", "docs/reference/_autosummary/datumaro.plugins.data_formats.open_images", "docs/reference/_autosummary/datumaro.plugins.data_formats.roboflow", "docs/reference/_autosummary/datumaro.plugins.data_formats.roboflow.base", "docs/reference/_autosummary/datumaro.plugins.data_formats.roboflow.base_tfrecord", "docs/reference/_autosummary/datumaro.plugins.data_formats.roboflow.importer", "docs/reference/_autosummary/datumaro.plugins.data_formats.segment_anything", "docs/reference/_autosummary/datumaro.plugins.data_formats.segment_anything.base", "docs/reference/_autosummary/datumaro.plugins.data_formats.segment_anything.exporter", "docs/reference/_autosummary/datumaro.plugins.data_formats.segment_anything.importer", "docs/reference/_autosummary/datumaro.plugins.data_formats.sly_pointcloud", "docs/reference/_autosummary/datumaro.plugins.data_formats.sly_pointcloud.base", "docs/reference/_autosummary/datumaro.plugins.data_formats.sly_pointcloud.exporter", "docs/reference/_autosummary/datumaro.plugins.data_formats.sly_pointcloud.format", "docs/reference/_autosummary/datumaro.plugins.data_formats.synthia", "docs/reference/_autosummary/datumaro.plugins.data_formats.synthia.base", "docs/reference/_autosummary/datumaro.plugins.data_formats.synthia.format", "docs/reference/_autosummary/datumaro.plugins.data_formats.synthia.importer", "docs/reference/_autosummary/datumaro.plugins.data_formats.tabular", "docs/reference/_autosummary/datumaro.plugins.data_formats.tf_detection_api", "docs/reference/_autosummary/datumaro.plugins.data_formats.tf_detection_api.base", "docs/reference/_autosummary/datumaro.plugins.data_formats.tf_detection_api.exporter", "docs/reference/_autosummary/datumaro.plugins.data_formats.tf_detection_api.format", "docs/reference/_autosummary/datumaro.plugins.data_formats.vgg_face2", "docs/reference/_autosummary/datumaro.plugins.data_formats.video", "docs/reference/_autosummary/datumaro.plugins.data_formats.voc", "docs/reference/_autosummary/datumaro.plugins.data_formats.voc.base", "docs/reference/_autosummary/datumaro.plugins.data_formats.voc.exporter", "docs/reference/_autosummary/datumaro.plugins.data_formats.voc.format", "docs/reference/_autosummary/datumaro.plugins.data_formats.voc.importer", "docs/reference/_autosummary/datumaro.plugins.data_formats.vott_csv", "docs/reference/_autosummary/datumaro.plugins.data_formats.vott_json", "docs/reference/_autosummary/datumaro.plugins.data_formats.widerface", "docs/reference/_autosummary/datumaro.plugins.data_formats.yolo", "docs/reference/_autosummary/datumaro.plugins.data_formats.yolo.base", "docs/reference/_autosummary/datumaro.plugins.data_formats.yolo.exporter", "docs/reference/_autosummary/datumaro.plugins.data_formats.yolo.format", "docs/reference/_autosummary/datumaro.plugins.data_formats.yolo.importer", "docs/reference/_autosummary/datumaro.plugins.explorer", "docs/reference/_autosummary/datumaro.plugins.framework_converter", "docs/reference/_autosummary/datumaro.plugins.inference_server_plugin", "docs/reference/_autosummary/datumaro.plugins.inference_server_plugin.base", "docs/reference/_autosummary/datumaro.plugins.inference_server_plugin.ovms", "docs/reference/_autosummary/datumaro.plugins.inference_server_plugin.samples", "docs/reference/_autosummary/datumaro.plugins.inference_server_plugin.samples.face_detection", "docs/reference/_autosummary/datumaro.plugins.inference_server_plugin.triton", "docs/reference/_autosummary/datumaro.plugins.missing_annotation_detection", "docs/reference/_autosummary/datumaro.plugins.ndr", "docs/reference/_autosummary/datumaro.plugins.openvino_plugin", "docs/reference/_autosummary/datumaro.plugins.openvino_plugin.launcher", "docs/reference/_autosummary/datumaro.plugins.openvino_plugin.samples", "docs/reference/_autosummary/datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_atss_interp", "docs/reference/_autosummary/datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_ssd_interp", "docs/reference/_autosummary/datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_yolox_interp", "docs/reference/_autosummary/datumaro.plugins.openvino_plugin.samples.utils", "docs/reference/_autosummary/datumaro.plugins.openvino_plugin.shift_launcher", "docs/reference/_autosummary/datumaro.plugins.sam_transforms", "docs/reference/_autosummary/datumaro.plugins.sam_transforms.automatic_mask_gen", "docs/reference/_autosummary/datumaro.plugins.sam_transforms.bbox_to_inst_mask", "docs/reference/_autosummary/datumaro.plugins.sam_transforms.interpreters", "docs/reference/_autosummary/datumaro.plugins.sam_transforms.interpreters.sam_decoder_for_amg", "docs/reference/_autosummary/datumaro.plugins.sam_transforms.interpreters.sam_decoder_for_bbox", "docs/reference/_autosummary/datumaro.plugins.sam_transforms.interpreters.sam_encoder", "docs/reference/_autosummary/datumaro.plugins.sampler", "docs/reference/_autosummary/datumaro.plugins.sampler.algorithm", "docs/reference/_autosummary/datumaro.plugins.sampler.algorithm.algorithm", "docs/reference/_autosummary/datumaro.plugins.sampler.algorithm.entropy", "docs/reference/_autosummary/datumaro.plugins.sampler.random_sampler", "docs/reference/_autosummary/datumaro.plugins.sampler.relevancy_sampler", "docs/reference/_autosummary/datumaro.plugins.specs", "docs/reference/_autosummary/datumaro.plugins.splitter", "docs/reference/_autosummary/datumaro.plugins.synthetic_data", "docs/reference/_autosummary/datumaro.plugins.synthetic_data.image_generator", "docs/reference/_autosummary/datumaro.plugins.synthetic_data.utils", "docs/reference/_autosummary/datumaro.plugins.tiling", "docs/reference/_autosummary/datumaro.plugins.tiling.merge_tile", "docs/reference/_autosummary/datumaro.plugins.tiling.tile", "docs/reference/_autosummary/datumaro.plugins.tiling.util", "docs/reference/_autosummary/datumaro.plugins.transforms", "docs/reference/_autosummary/datumaro.plugins.validators", "docs/reference/_autosummary/datumaro.project", "docs/reference/_autosummary/datumaro.rust_api", "docs/reference/_autosummary/datumaro.util", "docs/reference/_autosummary/datumaro.util.annotation_util", "docs/reference/_autosummary/datumaro.util.attrs_util", "docs/reference/_autosummary/datumaro.util.definitions", "docs/reference/_autosummary/datumaro.util.file_utils", "docs/reference/_autosummary/datumaro.util.image", "docs/reference/_autosummary/datumaro.util.image_cache", "docs/reference/_autosummary/datumaro.util.import_util", "docs/reference/_autosummary/datumaro.util.log_utils", "docs/reference/_autosummary/datumaro.util.mask_tools", "docs/reference/_autosummary/datumaro.util.meta_file_util", "docs/reference/_autosummary/datumaro.util.multi_procs_util", "docs/reference/_autosummary/datumaro.util.os_util", "docs/reference/_autosummary/datumaro.util.pickle_util", "docs/reference/_autosummary/datumaro.util.samples", "docs/reference/_autosummary/datumaro.util.scope", "docs/reference/_autosummary/datumaro.util.tabular_util", "docs/reference/_autosummary/datumaro.util.telemetry_stub", "docs/reference/_autosummary/datumaro.util.telemetry_utils", "docs/reference/_autosummary/datumaro.util.tf_util", "docs/reference/_autosummary/datumaro.version", "docs/reference/datumaro_module", "docs/reference/supported_plugins", "docs/release_notes", "docs/user-manual/extending", "docs/user-manual/how_to_control_tm_data_collection", "docs/user-manual/how_to_use_datumaro", "docs/user-manual/model_preparation", "index"], "filenames": ["docs/command-reference/context/checkout.md", "docs/command-reference/context/commit.md", "docs/command-reference/context/create.md", "docs/command-reference/context/export.md", "docs/command-reference/context/index.rst", "docs/command-reference/context/log.md", "docs/command-reference/context/models.md", "docs/command-reference/context/projects.md", "docs/command-reference/context/sources.md", "docs/command-reference/context/status.md", "docs/command-reference/context/util.md", "docs/command-reference/context_free/compare.md", "docs/command-reference/context_free/convert.md", "docs/command-reference/context_free/detect.md", "docs/command-reference/context_free/dinfo.md", "docs/command-reference/context_free/download.md", "docs/command-reference/context_free/explain.md", "docs/command-reference/context_free/explorer.md", "docs/command-reference/context_free/filter.md", "docs/command-reference/context_free/generate.md", "docs/command-reference/context_free/index.rst", "docs/command-reference/context_free/merge.md", "docs/command-reference/context_free/patch.md", "docs/command-reference/context_free/prune.md", "docs/command-reference/context_free/stats.md", "docs/command-reference/context_free/transform.md", "docs/command-reference/context_free/validate.md", "docs/command-reference/helper/format.md", "docs/command-reference/helper/index.rst", "docs/command-reference/overview.rst", "docs/data-formats/datumaro_format.md", "docs/data-formats/formats/ade20k2017.md", "docs/data-formats/formats/ade20k2020.md", "docs/data-formats/formats/align_celeba.md", "docs/data-formats/formats/arrow.md", "docs/data-formats/formats/ava_action.md", "docs/data-formats/formats/brats.md", "docs/data-formats/formats/brats_numpy.md", "docs/data-formats/formats/celeba.md", "docs/data-formats/formats/cifar.md", "docs/data-formats/formats/cityscapes.md", "docs/data-formats/formats/coco.md", "docs/data-formats/formats/common_semantic_segmentation.md", "docs/data-formats/formats/common_super_resolution.md", "docs/data-formats/formats/cvat.md", "docs/data-formats/formats/datumaro.md", "docs/data-formats/formats/datumaro_binary.md", "docs/data-formats/formats/dota.md", "docs/data-formats/formats/icdar.md", "docs/data-formats/formats/image_zip.md", "docs/data-formats/formats/imagenet.md", "docs/data-formats/formats/index.rst", "docs/data-formats/formats/kaggle.md", "docs/data-formats/formats/kinetics.md", "docs/data-formats/formats/kitti.md", "docs/data-formats/formats/kitti_raw.md", "docs/data-formats/formats/labelme.md", "docs/data-formats/formats/lfw.md", "docs/data-formats/formats/mapillary_vistas.md", "docs/data-formats/formats/market1501.md", "docs/data-formats/formats/mars.md", "docs/data-formats/formats/mmdet.md", "docs/data-formats/formats/mnist.md", "docs/data-formats/formats/mot.md", "docs/data-formats/formats/mots.md", "docs/data-formats/formats/mpii.md", "docs/data-formats/formats/mpii_json.md", "docs/data-formats/formats/mvtec.md", "docs/data-formats/formats/nyu_depth_v2.md", "docs/data-formats/formats/open_images.md", "docs/data-formats/formats/pascal_voc.md", "docs/data-formats/formats/roboflow.md", "docs/data-formats/formats/segment_anything.md", "docs/data-formats/formats/sly_pointcloud.md", "docs/data-formats/formats/synthia.md", "docs/data-formats/formats/tabular.md", "docs/data-formats/formats/vgg_face2.md", "docs/data-formats/formats/video.md", "docs/data-formats/formats/vott_csv.md", "docs/data-formats/formats/vott_json.md", "docs/data-formats/formats/wider_face.md", "docs/data-formats/formats/yolo.md", "docs/data-formats/formats/yolo_ultralytics.md", "docs/data-formats/media_formats.md", "docs/explanation/architecture.rst", "docs/explanation/concept.rst", "docs/explanation/plugins/index.rst", "docs/explanation/plugins/openvino_plugin.md", "docs/explanation/project.rst", "docs/get-started/introduction.rst", "docs/get-started/quick-start-guide/examples.rst", "docs/get-started/quick-start-guide/index.rst", "docs/get-started/quick-start-guide/installation.rst", "docs/get-started/quick-start-guide/usage.rst", "docs/index.rst", "docs/jupyter_notebook_examples/dataset_IO.rst", "docs/jupyter_notebook_examples/e2e_example.rst", "docs/jupyter_notebook_examples/explore.rst", "docs/jupyter_notebook_examples/manipulate.rst", "docs/jupyter_notebook_examples/notebooks/01_merge_multiple_datasets_for_classification.ipynb", "docs/jupyter_notebook_examples/notebooks/02_merge_heterogeneous_datasets_for_detection.ipynb", "docs/jupyter_notebook_examples/notebooks/03_visualize.ipynb", "docs/jupyter_notebook_examples/notebooks/04_filter.ipynb", "docs/jupyter_notebook_examples/notebooks/05_transform.ipynb", "docs/jupyter_notebook_examples/notebooks/06_tiling.ipynb", "docs/jupyter_notebook_examples/notebooks/07_data_explorer.ipynb", "docs/jupyter_notebook_examples/notebooks/08_e2e_example_yolo_ultralytics_trainer.ipynb", "docs/jupyter_notebook_examples/notebooks/09_encrypt_dataset.ipynb", "docs/jupyter_notebook_examples/notebooks/10_noisy_label_detection_cls.ipynb", "docs/jupyter_notebook_examples/notebooks/11_validate.ipynb", "docs/jupyter_notebook_examples/notebooks/12_correct_dataset.ipynb", "docs/jupyter_notebook_examples/notebooks/13_noisy_label_detection_det.ipynb", "docs/jupyter_notebook_examples/notebooks/14_import_export_det_data.ipynb", "docs/jupyter_notebook_examples/notebooks/15_import_export_seg_data.ipynb", "docs/jupyter_notebook_examples/notebooks/16_missing_annotation_detection.ipynb", "docs/jupyter_notebook_examples/notebooks/17_data_pruning.ipynb", "docs/jupyter_notebook_examples/notebooks/18_bbox_to_instance_mask_using_sam.ipynb", "docs/jupyter_notebook_examples/notebooks/19_automatic_instance_mask_gen_using_sam.ipynb", "docs/jupyter_notebook_examples/notebooks/20_kaggle_data_import.ipynb", "docs/jupyter_notebook_examples/notebooks/21_kaggle_data_cleaning.ipynb", "docs/jupyter_notebook_examples/refine.rst", "docs/jupyter_notebook_examples/transform.rst", "docs/level-up/advanced_skills/12_project_versioning.rst", "docs/level-up/advanced_skills/13_pseudo_label_generation.rst", "docs/level-up/advanced_skills/14_data_pruning.rst", "docs/level-up/advanced_skills/index.rst", "docs/level-up/basic_skills/01_project_manipulation.rst", "docs/level-up/basic_skills/02_dataset_download.rst", "docs/level-up/basic_skills/03_dataset_import_export.rst", "docs/level-up/basic_skills/04_detect_data_format.rst", "docs/level-up/basic_skills/index.rst", "docs/level-up/intermediate_skills/05_data_aggregation.rst", "docs/level-up/intermediate_skills/06_data_comparison.rst", "docs/level-up/intermediate_skills/07_data_merge.rst", "docs/level-up/intermediate_skills/08_data_validate.rst", "docs/level-up/intermediate_skills/09_data_filtering.rst", "docs/level-up/intermediate_skills/10_data_exploration.rst", "docs/level-up/intermediate_skills/11_data_generation.rst", "docs/level-up/intermediate_skills/index.rst", "docs/reference/_autosummary/datumaro.rst", "docs/reference/_autosummary/datumaro.cli.rst", "docs/reference/_autosummary/datumaro.cli.commands.rst", "docs/reference/_autosummary/datumaro.cli.commands.compare.rst", "docs/reference/_autosummary/datumaro.cli.commands.convert.rst", "docs/reference/_autosummary/datumaro.cli.commands.detect_format.rst", "docs/reference/_autosummary/datumaro.cli.commands.download.rst", "docs/reference/_autosummary/datumaro.cli.commands.downloaders.rst", "docs/reference/_autosummary/datumaro.cli.commands.downloaders.downloader.rst", "docs/reference/_autosummary/datumaro.cli.commands.downloaders.kaggle.rst", "docs/reference/_autosummary/datumaro.cli.commands.downloaders.tfds.rst", "docs/reference/_autosummary/datumaro.cli.commands.explain.rst", "docs/reference/_autosummary/datumaro.cli.commands.explore.rst", "docs/reference/_autosummary/datumaro.cli.commands.filter.rst", "docs/reference/_autosummary/datumaro.cli.commands.generate.rst", "docs/reference/_autosummary/datumaro.cli.commands.info.rst", "docs/reference/_autosummary/datumaro.cli.commands.merge.rst", "docs/reference/_autosummary/datumaro.cli.commands.patch.rst", "docs/reference/_autosummary/datumaro.cli.commands.prune.rst", "docs/reference/_autosummary/datumaro.cli.commands.require_project.rst", "docs/reference/_autosummary/datumaro.cli.commands.require_project.modification.rst", "docs/reference/_autosummary/datumaro.cli.commands.require_project.modification.add.rst", "docs/reference/_autosummary/datumaro.cli.commands.require_project.modification.create.rst", "docs/reference/_autosummary/datumaro.cli.commands.require_project.modification.export.rst", "docs/reference/_autosummary/datumaro.cli.commands.require_project.modification.import_.rst", "docs/reference/_autosummary/datumaro.cli.commands.require_project.modification.remove.rst", "docs/reference/_autosummary/datumaro.cli.commands.require_project.versioning.rst", "docs/reference/_autosummary/datumaro.cli.commands.require_project.versioning.checkout.rst", "docs/reference/_autosummary/datumaro.cli.commands.require_project.versioning.commit.rst", "docs/reference/_autosummary/datumaro.cli.commands.require_project.versioning.info.rst", "docs/reference/_autosummary/datumaro.cli.commands.require_project.versioning.log.rst", "docs/reference/_autosummary/datumaro.cli.commands.require_project.versioning.status.rst", "docs/reference/_autosummary/datumaro.cli.commands.stats.rst", "docs/reference/_autosummary/datumaro.cli.commands.transform.rst", "docs/reference/_autosummary/datumaro.cli.commands.validate.rst", "docs/reference/_autosummary/datumaro.cli.contexts.rst", "docs/reference/_autosummary/datumaro.cli.contexts.model.rst", "docs/reference/_autosummary/datumaro.cli.contexts.project.rst", "docs/reference/_autosummary/datumaro.cli.contexts.source.rst", "docs/reference/_autosummary/datumaro.cli.contexts.util.rst", "docs/reference/_autosummary/datumaro.cli.helpers.rst", "docs/reference/_autosummary/datumaro.cli.helpers.format.rst", "docs/reference/_autosummary/datumaro.cli.util.rst", "docs/reference/_autosummary/datumaro.cli.util.compare.rst", "docs/reference/_autosummary/datumaro.cli.util.errors.rst", "docs/reference/_autosummary/datumaro.cli.util.project.rst", "docs/reference/_autosummary/datumaro.components.rst", "docs/reference/_autosummary/datumaro.components.abstracts.rst", "docs/reference/_autosummary/datumaro.components.abstracts.merger.rst", "docs/reference/_autosummary/datumaro.components.abstracts.model_interpreter.rst", "docs/reference/_autosummary/datumaro.components.algorithms.rst", "docs/reference/_autosummary/datumaro.components.algorithms.hash_key_inference.rst", "docs/reference/_autosummary/datumaro.components.algorithms.hash_key_inference.base.rst", "docs/reference/_autosummary/datumaro.components.algorithms.hash_key_inference.explorer.rst", "docs/reference/_autosummary/datumaro.components.algorithms.hash_key_inference.hashkey_util.rst", "docs/reference/_autosummary/datumaro.components.algorithms.hash_key_inference.prune.rst", "docs/reference/_autosummary/datumaro.components.algorithms.noisy_label_detection.rst", "docs/reference/_autosummary/datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.rst", "docs/reference/_autosummary/datumaro.components.algorithms.rise.rst", "docs/reference/_autosummary/datumaro.components.annotation.rst", "docs/reference/_autosummary/datumaro.components.annotations.rst", "docs/reference/_autosummary/datumaro.components.annotations.matcher.rst", "docs/reference/_autosummary/datumaro.components.annotations.merger.rst", "docs/reference/_autosummary/datumaro.components.cli_plugin.rst", "docs/reference/_autosummary/datumaro.components.comparator.rst", "docs/reference/_autosummary/datumaro.components.config.rst", "docs/reference/_autosummary/datumaro.components.config_model.rst", "docs/reference/_autosummary/datumaro.components.contexts.rst", "docs/reference/_autosummary/datumaro.components.contexts.importer.rst", "docs/reference/_autosummary/datumaro.components.crypter.rst", "docs/reference/_autosummary/datumaro.components.dataset.rst", "docs/reference/_autosummary/datumaro.components.dataset_base.rst", "docs/reference/_autosummary/datumaro.components.dataset_item_storage.rst", "docs/reference/_autosummary/datumaro.components.dataset_storage.rst", "docs/reference/_autosummary/datumaro.components.environment.rst", "docs/reference/_autosummary/datumaro.components.errors.rst", "docs/reference/_autosummary/datumaro.components.exporter.rst", "docs/reference/_autosummary/datumaro.components.extractor_tfds.rst", "docs/reference/_autosummary/datumaro.components.filter.rst", "docs/reference/_autosummary/datumaro.components.format_detection.rst", "docs/reference/_autosummary/datumaro.components.generator.rst", "docs/reference/_autosummary/datumaro.components.hl_ops.rst", "docs/reference/_autosummary/datumaro.components.importer.rst", "docs/reference/_autosummary/datumaro.components.launcher.rst", "docs/reference/_autosummary/datumaro.components.lazy_plugin.rst", "docs/reference/_autosummary/datumaro.components.media.rst", "docs/reference/_autosummary/datumaro.components.merge.rst", "docs/reference/_autosummary/datumaro.components.merge.base.rst", "docs/reference/_autosummary/datumaro.components.merge.exact_merge.rst", "docs/reference/_autosummary/datumaro.components.merge.extractor_merger.rst", "docs/reference/_autosummary/datumaro.components.merge.intersect_merge.rst", "docs/reference/_autosummary/datumaro.components.merge.union_merge.rst", "docs/reference/_autosummary/datumaro.components.operations.rst", "docs/reference/_autosummary/datumaro.components.progress_reporting.rst", "docs/reference/_autosummary/datumaro.components.project.rst", "docs/reference/_autosummary/datumaro.components.registry.rst", "docs/reference/_autosummary/datumaro.components.shift_analyzer.rst", "docs/reference/_autosummary/datumaro.components.transformer.rst", "docs/reference/_autosummary/datumaro.components.validator.rst", "docs/reference/_autosummary/datumaro.components.visualizer.rst", "docs/reference/_autosummary/datumaro.errors.rst", "docs/reference/_autosummary/datumaro.ops.rst", "docs/reference/_autosummary/datumaro.plugins.rst", "docs/reference/_autosummary/datumaro.plugins.accuracy_checker_plugin.rst", "docs/reference/_autosummary/datumaro.plugins.accuracy_checker_plugin.details.rst", "docs/reference/_autosummary/datumaro.plugins.anchor_generator.rst", "docs/reference/_autosummary/datumaro.plugins.configurable_validator.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.ade20k2017.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.ade20k2020.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.arrow.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.arrow.base.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.arrow.exporter.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.arrow.format.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.arrow.importer.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.arrow.mapper.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.arrow.mapper.dataset_item.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.arrow.mapper.media.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.ava.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.ava.ava.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.ava.ava_label_pb2.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.brats.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.brats_numpy.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.camvid.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.celeba.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.celeba.align_celeba.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.celeba.celeba.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.cifar.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.cityscapes.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.coco.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.coco.base.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.coco.exporter.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.coco.extractor_merger.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.coco.format.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.coco.importer.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.coco.page_mapper.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.common_semantic_segmentation.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.common_super_resolution.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.cvat.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.cvat.base.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.cvat.exporter.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.cvat.format.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.datumaro.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.datumaro.base.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.datumaro.exporter.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.datumaro.format.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.datumaro.importer.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.datumaro.page_mapper.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.datumaro_binary.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.datumaro_binary.base.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.datumaro_binary.exporter.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.datumaro_binary.format.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.datumaro_binary.importer.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.datumaro_binary.mapper.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.datumaro_binary.mapper.common.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.datumaro_binary.mapper.dataset_item.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.datumaro_binary.mapper.media.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.dota.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.icdar.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.icdar.base.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.icdar.exporter.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.icdar.format.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.image_dir.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.image_zip.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.imagenet.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.imagenet_txt.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.kaggle.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.kaggle.base.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.kinetics.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.kitti.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.kitti.base.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.kitti.exporter.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.kitti.format.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.kitti.importer.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.kitti_raw.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.kitti_raw.base.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.kitti_raw.exporter.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.kitti_raw.format.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.labelme.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.lfw.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.mapillary_vistas.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.mapillary_vistas.base.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.mapillary_vistas.format.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.mapillary_vistas.importer.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.market1501.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.mars.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.mmdet.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.mnist.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.mnist_csv.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.mot.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.mots.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.mpii.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.mpii.format.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.mpii.mpii_json.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.mpii.mpii_mat.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.mvtec.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.mvtec.base.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.mvtec.exporter.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.mvtec.format.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.mvtec.importer.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.nyu_depth_v2.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.open_images.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.roboflow.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.roboflow.base.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.roboflow.base_tfrecord.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.roboflow.importer.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.segment_anything.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.segment_anything.base.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.segment_anything.exporter.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.segment_anything.importer.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.sly_pointcloud.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.sly_pointcloud.base.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.sly_pointcloud.exporter.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.sly_pointcloud.format.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.synthia.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.synthia.base.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.synthia.format.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.synthia.importer.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.tabular.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.tf_detection_api.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.tf_detection_api.base.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.tf_detection_api.exporter.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.tf_detection_api.format.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.vgg_face2.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.video.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.voc.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.voc.base.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.voc.exporter.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.voc.format.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.voc.importer.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.vott_csv.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.vott_json.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.widerface.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.yolo.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.yolo.base.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.yolo.exporter.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.yolo.format.rst", "docs/reference/_autosummary/datumaro.plugins.data_formats.yolo.importer.rst", "docs/reference/_autosummary/datumaro.plugins.explorer.rst", "docs/reference/_autosummary/datumaro.plugins.framework_converter.rst", "docs/reference/_autosummary/datumaro.plugins.inference_server_plugin.rst", "docs/reference/_autosummary/datumaro.plugins.inference_server_plugin.base.rst", "docs/reference/_autosummary/datumaro.plugins.inference_server_plugin.ovms.rst", "docs/reference/_autosummary/datumaro.plugins.inference_server_plugin.samples.rst", "docs/reference/_autosummary/datumaro.plugins.inference_server_plugin.samples.face_detection.rst", "docs/reference/_autosummary/datumaro.plugins.inference_server_plugin.triton.rst", "docs/reference/_autosummary/datumaro.plugins.missing_annotation_detection.rst", "docs/reference/_autosummary/datumaro.plugins.ndr.rst", "docs/reference/_autosummary/datumaro.plugins.openvino_plugin.rst", "docs/reference/_autosummary/datumaro.plugins.openvino_plugin.launcher.rst", "docs/reference/_autosummary/datumaro.plugins.openvino_plugin.samples.rst", "docs/reference/_autosummary/datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_atss_interp.rst", "docs/reference/_autosummary/datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_ssd_interp.rst", "docs/reference/_autosummary/datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_yolox_interp.rst", "docs/reference/_autosummary/datumaro.plugins.openvino_plugin.samples.utils.rst", "docs/reference/_autosummary/datumaro.plugins.openvino_plugin.shift_launcher.rst", "docs/reference/_autosummary/datumaro.plugins.sam_transforms.rst", "docs/reference/_autosummary/datumaro.plugins.sam_transforms.automatic_mask_gen.rst", "docs/reference/_autosummary/datumaro.plugins.sam_transforms.bbox_to_inst_mask.rst", "docs/reference/_autosummary/datumaro.plugins.sam_transforms.interpreters.rst", "docs/reference/_autosummary/datumaro.plugins.sam_transforms.interpreters.sam_decoder_for_amg.rst", "docs/reference/_autosummary/datumaro.plugins.sam_transforms.interpreters.sam_decoder_for_bbox.rst", "docs/reference/_autosummary/datumaro.plugins.sam_transforms.interpreters.sam_encoder.rst", "docs/reference/_autosummary/datumaro.plugins.sampler.rst", "docs/reference/_autosummary/datumaro.plugins.sampler.algorithm.rst", "docs/reference/_autosummary/datumaro.plugins.sampler.algorithm.algorithm.rst", "docs/reference/_autosummary/datumaro.plugins.sampler.algorithm.entropy.rst", "docs/reference/_autosummary/datumaro.plugins.sampler.random_sampler.rst", "docs/reference/_autosummary/datumaro.plugins.sampler.relevancy_sampler.rst", "docs/reference/_autosummary/datumaro.plugins.specs.rst", "docs/reference/_autosummary/datumaro.plugins.splitter.rst", "docs/reference/_autosummary/datumaro.plugins.synthetic_data.rst", "docs/reference/_autosummary/datumaro.plugins.synthetic_data.image_generator.rst", "docs/reference/_autosummary/datumaro.plugins.synthetic_data.utils.rst", "docs/reference/_autosummary/datumaro.plugins.tiling.rst", "docs/reference/_autosummary/datumaro.plugins.tiling.merge_tile.rst", "docs/reference/_autosummary/datumaro.plugins.tiling.tile.rst", "docs/reference/_autosummary/datumaro.plugins.tiling.util.rst", "docs/reference/_autosummary/datumaro.plugins.transforms.rst", "docs/reference/_autosummary/datumaro.plugins.validators.rst", "docs/reference/_autosummary/datumaro.project.rst", "docs/reference/_autosummary/datumaro.rust_api.rst", "docs/reference/_autosummary/datumaro.util.rst", "docs/reference/_autosummary/datumaro.util.annotation_util.rst", "docs/reference/_autosummary/datumaro.util.attrs_util.rst", "docs/reference/_autosummary/datumaro.util.definitions.rst", "docs/reference/_autosummary/datumaro.util.file_utils.rst", "docs/reference/_autosummary/datumaro.util.image.rst", "docs/reference/_autosummary/datumaro.util.image_cache.rst", "docs/reference/_autosummary/datumaro.util.import_util.rst", "docs/reference/_autosummary/datumaro.util.log_utils.rst", "docs/reference/_autosummary/datumaro.util.mask_tools.rst", "docs/reference/_autosummary/datumaro.util.meta_file_util.rst", "docs/reference/_autosummary/datumaro.util.multi_procs_util.rst", "docs/reference/_autosummary/datumaro.util.os_util.rst", "docs/reference/_autosummary/datumaro.util.pickle_util.rst", "docs/reference/_autosummary/datumaro.util.samples.rst", "docs/reference/_autosummary/datumaro.util.scope.rst", "docs/reference/_autosummary/datumaro.util.tabular_util.rst", "docs/reference/_autosummary/datumaro.util.telemetry_stub.rst", "docs/reference/_autosummary/datumaro.util.telemetry_utils.rst", "docs/reference/_autosummary/datumaro.util.tf_util.rst", "docs/reference/_autosummary/datumaro.version.rst", "docs/reference/datumaro_module.rst", "docs/reference/supported_plugins.rst", "docs/release_notes.rst", "docs/user-manual/extending.md", "docs/user-manual/how_to_control_tm_data_collection.md", "docs/user-manual/how_to_use_datumaro.md", "docs/user-manual/model_preparation.md", "index.rst"], "titles": ["Checkout", "Commit", "Create", "Export", "Context Commands", "Log", "Model (context)", "Project (context)", "Source (context)", "Status", "Util", "Compare", "Convert", "Detect", "Info", "Download", "Explain", "Explore", "Filter", "Generate", "Context-free Commands", "Merge", "Patch", "Prune", "Stats", "Transform", "Validate", "Format", "Helper Commands", "Overview", "Datumaro Format", "ADE20k (v2017)", "ADE20k (v2020)", "Align CelebA", "Arrow", "AVA Action", "BraTS", "BraTS Numpy", "CelebA", "CIFAR", "Cityscapes", "COCO", "Common Semantic Segmentation", "Common Super Resolution", "CVAT", "Datumaro", "DatumaroBinary", "DOTA", "ICDAR", "Image zip", "ImageNet", "Supported Data Formats", "Kaggle", "Kinetics", "KITTI", "Velodyne Points / KITTI Raw 3D", "LabelMe", "LFW", "Mapillary Vistas", "Market-1501", "MARS", "MMDetection COCO", "MNIST", "Multiple Object Tracking (MOT)", "Multiple Object Tracking and Segmentation (MOTS)", "MPII Human Pose", "MPII Human Pose JSON", "MVTec AD", "NYU Depth Dataset V2", "Open Images", "Pascal VOC", "Roboflow", "Segment Anything", "Supervisely Point Cloud", "SYNTHIA", "Tabular", "Vgg Face2 CSV", "Video", "VoTT CSV", "VoTT JSON", "WIDER Face", "YOLO", "YOLO-Ultralytics", "Supported Media Formats", "Architecture", "Concepts", "Plugins", "OpenVINO\u2122 Inference Interpreter", "Command-Line Workflow", "Introduction", "Examples", "Quick Start Guide", "Installation", "Usage", "Docs", "Dataset I/O", "From Datumaro to Model Training", "Explore", "Manipulate", "Merge Multiple Datasets for Classification Tasks", "Merge Heterogeneous Datasets for Detection", "Visualize Your Data", "Filter Data through Your Query", "Transform Dataset: Re-id, Reindexing, Remapping, etc.", "Tile your Dataset to Cope with High-Resolution Images", "Find Most Similar Data from Image or Text Queries", "Train Your OpenVINO\u2122 Model Using YoloV8 Trainer For Any Dataset Format", "Encrypt Your Dataset", "Noisy label detection for classification tasks from training loss dynamics statistics", "Validate Dataset To Detect Anomalies", "Correct Dataset from Validation Report", "Noisy label detection for detection tasks from training loss dynamics statistics", "Import and Export Public Data", "Import and Export Public Semantic Segmentation Data", "Missing Annotation Detection", "Prune Dataset to extract representative subset", "Transform bounding box to instance mask annotations using Segment Anything Model", "Automatic instance mask annotations generation using Segment Anything Model", "Kaggle Datasets Import", "Data preparation with Datumaro", "Refine", "Transform", "Level 12: Project Versioning", "Level 13: Pseudo Label Generation", "Level 14: Dataset Pruning", "Advanced Skills", "Level 1: Project Manipulation", "Level 2: Dataset download", "Level 3: Data Import and Export", "Level 4: Detect Data Format from an Unknown Dataset", "Basic Skills", "Level 5: Data Subset Aggregation", "Level 6: Data Comparison with Two Heterogeneous Datasets", "Level 7: Merge Two Heterogeneous Datasets", "Level 8: Dataset Validation", "Level 9: Dataset Filtering", "Level 10: Dataset Explorartion from a Query Image/Text", "Level 11: Data Generation", "Intermediate Skills", "datumaro", "datumaro.cli", "datumaro.cli.commands", "datumaro.cli.commands.compare", "datumaro.cli.commands.convert", "datumaro.cli.commands.detect_format", "datumaro.cli.commands.download", "datumaro.cli.commands.downloaders", "datumaro.cli.commands.downloaders.downloader", "datumaro.cli.commands.downloaders.kaggle", "datumaro.cli.commands.downloaders.tfds", "datumaro.cli.commands.explain", "datumaro.cli.commands.explore", "datumaro.cli.commands.filter", "datumaro.cli.commands.generate", "datumaro.cli.commands.info", "datumaro.cli.commands.merge", "datumaro.cli.commands.patch", "datumaro.cli.commands.prune", "datumaro.cli.commands.require_project", "datumaro.cli.commands.require_project.modification", "datumaro.cli.commands.require_project.modification.add", "datumaro.cli.commands.require_project.modification.create", "datumaro.cli.commands.require_project.modification.export", "datumaro.cli.commands.require_project.modification.import_", "datumaro.cli.commands.require_project.modification.remove", "datumaro.cli.commands.require_project.versioning", "datumaro.cli.commands.require_project.versioning.checkout", "datumaro.cli.commands.require_project.versioning.commit", "datumaro.cli.commands.require_project.versioning.info", "datumaro.cli.commands.require_project.versioning.log", "datumaro.cli.commands.require_project.versioning.status", "datumaro.cli.commands.stats", "datumaro.cli.commands.transform", "datumaro.cli.commands.validate", "datumaro.cli.contexts", "datumaro.cli.contexts.model", "datumaro.cli.contexts.project", "datumaro.cli.contexts.source", "datumaro.cli.contexts.util", "datumaro.cli.helpers", "datumaro.cli.helpers.format", "datumaro.cli.util", "datumaro.cli.util.compare", "datumaro.cli.util.errors", "datumaro.cli.util.project", "datumaro.components", "datumaro.components.abstracts", "datumaro.components.abstracts.merger", "datumaro.components.abstracts.model_interpreter", "datumaro.components.algorithms", "datumaro.components.algorithms.hash_key_inference", "datumaro.components.algorithms.hash_key_inference.base", "datumaro.components.algorithms.hash_key_inference.explorer", "datumaro.components.algorithms.hash_key_inference.hashkey_util", "datumaro.components.algorithms.hash_key_inference.prune", "datumaro.components.algorithms.noisy_label_detection", "datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer", "datumaro.components.algorithms.rise", "datumaro.components.annotation", "datumaro.components.annotations", "datumaro.components.annotations.matcher", "datumaro.components.annotations.merger", "datumaro.components.cli_plugin", "datumaro.components.comparator", "datumaro.components.config", "datumaro.components.config_model", "datumaro.components.contexts", "datumaro.components.contexts.importer", "datumaro.components.crypter", "datumaro.components.dataset", "datumaro.components.dataset_base", "datumaro.components.dataset_item_storage", "datumaro.components.dataset_storage", "datumaro.components.environment", "datumaro.components.errors", "datumaro.components.exporter", "datumaro.components.extractor_tfds", "datumaro.components.filter", "datumaro.components.format_detection", "datumaro.components.generator", "datumaro.components.hl_ops", "datumaro.components.importer", "datumaro.components.launcher", "datumaro.components.lazy_plugin", "datumaro.components.media", "datumaro.components.merge", "datumaro.components.merge.base", "datumaro.components.merge.exact_merge", "datumaro.components.merge.extractor_merger", "datumaro.components.merge.intersect_merge", "datumaro.components.merge.union_merge", "datumaro.components.operations", "datumaro.components.progress_reporting", "datumaro.components.project", "datumaro.components.registry", "datumaro.components.shift_analyzer", "datumaro.components.transformer", "datumaro.components.validator", "datumaro.components.visualizer", "datumaro.errors", "datumaro.ops", "datumaro.plugins", "datumaro.plugins.accuracy_checker_plugin", "datumaro.plugins.accuracy_checker_plugin.details", "datumaro.plugins.anchor_generator", "datumaro.plugins.configurable_validator", "datumaro.plugins.data_formats", "datumaro.plugins.data_formats.ade20k2017", "datumaro.plugins.data_formats.ade20k2020", "datumaro.plugins.data_formats.arrow", "datumaro.plugins.data_formats.arrow.base", "datumaro.plugins.data_formats.arrow.exporter", "datumaro.plugins.data_formats.arrow.format", "datumaro.plugins.data_formats.arrow.importer", "datumaro.plugins.data_formats.arrow.mapper", "datumaro.plugins.data_formats.arrow.mapper.dataset_item", "datumaro.plugins.data_formats.arrow.mapper.media", "datumaro.plugins.data_formats.ava", "datumaro.plugins.data_formats.ava.ava", "datumaro.plugins.data_formats.ava.ava_label_pb2", "datumaro.plugins.data_formats.brats", "datumaro.plugins.data_formats.brats_numpy", "datumaro.plugins.data_formats.camvid", "datumaro.plugins.data_formats.celeba", "datumaro.plugins.data_formats.celeba.align_celeba", "datumaro.plugins.data_formats.celeba.celeba", "datumaro.plugins.data_formats.cifar", "datumaro.plugins.data_formats.cityscapes", "datumaro.plugins.data_formats.coco", "datumaro.plugins.data_formats.coco.base", "datumaro.plugins.data_formats.coco.exporter", "datumaro.plugins.data_formats.coco.extractor_merger", "datumaro.plugins.data_formats.coco.format", "datumaro.plugins.data_formats.coco.importer", "datumaro.plugins.data_formats.coco.page_mapper", "datumaro.plugins.data_formats.common_semantic_segmentation", "datumaro.plugins.data_formats.common_super_resolution", "datumaro.plugins.data_formats.cvat", "datumaro.plugins.data_formats.cvat.base", "datumaro.plugins.data_formats.cvat.exporter", "datumaro.plugins.data_formats.cvat.format", "datumaro.plugins.data_formats.datumaro", "datumaro.plugins.data_formats.datumaro.base", "datumaro.plugins.data_formats.datumaro.exporter", "datumaro.plugins.data_formats.datumaro.format", "datumaro.plugins.data_formats.datumaro.importer", "datumaro.plugins.data_formats.datumaro.page_mapper", "datumaro.plugins.data_formats.datumaro_binary", "datumaro.plugins.data_formats.datumaro_binary.base", "datumaro.plugins.data_formats.datumaro_binary.exporter", "datumaro.plugins.data_formats.datumaro_binary.format", "datumaro.plugins.data_formats.datumaro_binary.importer", "datumaro.plugins.data_formats.datumaro_binary.mapper", "datumaro.plugins.data_formats.datumaro_binary.mapper.annotation", "datumaro.plugins.data_formats.datumaro_binary.mapper.common", "datumaro.plugins.data_formats.datumaro_binary.mapper.dataset_item", "datumaro.plugins.data_formats.datumaro_binary.mapper.media", "datumaro.plugins.data_formats.dota", "datumaro.plugins.data_formats.icdar", "datumaro.plugins.data_formats.icdar.base", "datumaro.plugins.data_formats.icdar.exporter", "datumaro.plugins.data_formats.icdar.format", "datumaro.plugins.data_formats.image_dir", "datumaro.plugins.data_formats.image_zip", "datumaro.plugins.data_formats.imagenet", "datumaro.plugins.data_formats.imagenet_txt", "datumaro.plugins.data_formats.kaggle", "datumaro.plugins.data_formats.kaggle.base", "datumaro.plugins.data_formats.kinetics", "datumaro.plugins.data_formats.kitti", "datumaro.plugins.data_formats.kitti.base", "datumaro.plugins.data_formats.kitti.exporter", "datumaro.plugins.data_formats.kitti.format", "datumaro.plugins.data_formats.kitti.importer", "datumaro.plugins.data_formats.kitti_raw", "datumaro.plugins.data_formats.kitti_raw.base", "datumaro.plugins.data_formats.kitti_raw.exporter", "datumaro.plugins.data_formats.kitti_raw.format", "datumaro.plugins.data_formats.labelme", "datumaro.plugins.data_formats.lfw", "datumaro.plugins.data_formats.mapillary_vistas", "datumaro.plugins.data_formats.mapillary_vistas.base", "datumaro.plugins.data_formats.mapillary_vistas.format", "datumaro.plugins.data_formats.mapillary_vistas.importer", "datumaro.plugins.data_formats.market1501", "datumaro.plugins.data_formats.mars", "datumaro.plugins.data_formats.mmdet", "datumaro.plugins.data_formats.mnist", "datumaro.plugins.data_formats.mnist_csv", "datumaro.plugins.data_formats.mot", "datumaro.plugins.data_formats.mots", "datumaro.plugins.data_formats.mpii", "datumaro.plugins.data_formats.mpii.format", "datumaro.plugins.data_formats.mpii.mpii_json", "datumaro.plugins.data_formats.mpii.mpii_mat", "datumaro.plugins.data_formats.mvtec", "datumaro.plugins.data_formats.mvtec.base", "datumaro.plugins.data_formats.mvtec.exporter", "datumaro.plugins.data_formats.mvtec.format", "datumaro.plugins.data_formats.mvtec.importer", "datumaro.plugins.data_formats.nyu_depth_v2", "datumaro.plugins.data_formats.open_images", "datumaro.plugins.data_formats.roboflow", "datumaro.plugins.data_formats.roboflow.base", "datumaro.plugins.data_formats.roboflow.base_tfrecord", "datumaro.plugins.data_formats.roboflow.importer", "datumaro.plugins.data_formats.segment_anything", "datumaro.plugins.data_formats.segment_anything.base", "datumaro.plugins.data_formats.segment_anything.exporter", "datumaro.plugins.data_formats.segment_anything.importer", "datumaro.plugins.data_formats.sly_pointcloud", "datumaro.plugins.data_formats.sly_pointcloud.base", "datumaro.plugins.data_formats.sly_pointcloud.exporter", "datumaro.plugins.data_formats.sly_pointcloud.format", "datumaro.plugins.data_formats.synthia", "datumaro.plugins.data_formats.synthia.base", "datumaro.plugins.data_formats.synthia.format", "datumaro.plugins.data_formats.synthia.importer", "datumaro.plugins.data_formats.tabular", "datumaro.plugins.data_formats.tf_detection_api", "datumaro.plugins.data_formats.tf_detection_api.base", "datumaro.plugins.data_formats.tf_detection_api.exporter", "datumaro.plugins.data_formats.tf_detection_api.format", "datumaro.plugins.data_formats.vgg_face2", "datumaro.plugins.data_formats.video", "datumaro.plugins.data_formats.voc", "datumaro.plugins.data_formats.voc.base", "datumaro.plugins.data_formats.voc.exporter", "datumaro.plugins.data_formats.voc.format", "datumaro.plugins.data_formats.voc.importer", "datumaro.plugins.data_formats.vott_csv", "datumaro.plugins.data_formats.vott_json", "datumaro.plugins.data_formats.widerface", "datumaro.plugins.data_formats.yolo", "datumaro.plugins.data_formats.yolo.base", "datumaro.plugins.data_formats.yolo.exporter", "datumaro.plugins.data_formats.yolo.format", "datumaro.plugins.data_formats.yolo.importer", "datumaro.plugins.explorer", "datumaro.plugins.framework_converter", "datumaro.plugins.inference_server_plugin", "datumaro.plugins.inference_server_plugin.base", "datumaro.plugins.inference_server_plugin.ovms", "datumaro.plugins.inference_server_plugin.samples", "datumaro.plugins.inference_server_plugin.samples.face_detection", "datumaro.plugins.inference_server_plugin.triton", "datumaro.plugins.missing_annotation_detection", "datumaro.plugins.ndr", "datumaro.plugins.openvino_plugin", "datumaro.plugins.openvino_plugin.launcher", "datumaro.plugins.openvino_plugin.samples", "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_atss_interp", "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_ssd_interp", "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_yolox_interp", "datumaro.plugins.openvino_plugin.samples.utils", "datumaro.plugins.openvino_plugin.shift_launcher", "datumaro.plugins.sam_transforms", "datumaro.plugins.sam_transforms.automatic_mask_gen", "datumaro.plugins.sam_transforms.bbox_to_inst_mask", "datumaro.plugins.sam_transforms.interpreters", "datumaro.plugins.sam_transforms.interpreters.sam_decoder_for_amg", "datumaro.plugins.sam_transforms.interpreters.sam_decoder_for_bbox", "datumaro.plugins.sam_transforms.interpreters.sam_encoder", "datumaro.plugins.sampler", "datumaro.plugins.sampler.algorithm", "datumaro.plugins.sampler.algorithm.algorithm", "datumaro.plugins.sampler.algorithm.entropy", "datumaro.plugins.sampler.random_sampler", "datumaro.plugins.sampler.relevancy_sampler", "datumaro.plugins.specs", "datumaro.plugins.splitter", "datumaro.plugins.synthetic_data", "datumaro.plugins.synthetic_data.image_generator", "datumaro.plugins.synthetic_data.utils", "datumaro.plugins.tiling", "datumaro.plugins.tiling.merge_tile", "datumaro.plugins.tiling.tile", "datumaro.plugins.tiling.util", "datumaro.plugins.transforms", "datumaro.plugins.validators", "datumaro.project", "datumaro.rust_api", "datumaro.util", "datumaro.util.annotation_util", "datumaro.util.attrs_util", "datumaro.util.definitions", "datumaro.util.file_utils", "datumaro.util.image", "datumaro.util.image_cache", "datumaro.util.import_util", "datumaro.util.log_utils", "datumaro.util.mask_tools", "datumaro.util.meta_file_util", "datumaro.util.multi_procs_util", "datumaro.util.os_util", "datumaro.util.pickle_util", "datumaro.util.samples", "datumaro.util.scope", "datumaro.util.tabular_util", "datumaro.util.telemetry_stub", "datumaro.util.telemetry_utils", "datumaro.util.tf_util", "datumaro.version", "Datumaro Module", "Supported Plugins", "Release Notes", "Extending", "How to control telemetry data collection", "How to use Datumaro", "Model Preparation", "Welcome to Datumaro Documentation!"], "terms": {"thi": [0, 1, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 92, 93, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 188, 196, 197, 198, 200, 201, 207, 209, 210, 211, 212, 215, 217, 218, 220, 221, 222, 223, 224, 225, 229, 230, 232, 233, 236, 244, 253, 275, 282, 287, 289, 292, 358, 374, 384, 386, 387, 391, 392, 393, 394, 396, 397, 398, 400, 401, 402, 410, 414, 415, 416, 418, 427, 433, 435, 437, 446], "command": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 21, 22, 23, 24, 25, 26, 27, 29, 44, 46, 48, 50, 57, 62, 73, 76, 77, 80, 83, 93, 99, 108, 111, 114, 115, 116, 117, 122, 126, 127, 128, 132, 135, 137, 181, 233, 407, 414, 416, 445, 447], "allow": [0, 1, 2, 3, 6, 10, 11, 12, 15, 17, 18, 19, 21, 22, 23, 25, 34, 35, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 54, 55, 56, 57, 59, 62, 63, 64, 67, 69, 70, 73, 76, 80, 81, 84, 88, 93, 108, 111, 115, 119, 120, 122, 124, 126, 129, 132, 136, 160, 162, 163, 164, 171, 196, 197, 200, 201, 207, 209, 215, 220, 221, 229, 233, 374, 418, 427, 433, 437, 444, 446], "restor": [0, 9, 88, 233, 433, 448], "specif": [0, 3, 8, 11, 16, 24, 25, 29, 32, 51, 84, 85, 88, 89, 101, 103, 105, 109, 112, 115, 118, 119, 135, 197, 209, 218, 220, 221, 224, 253, 374, 387, 418, 419, 444, 445, 446], "project": [0, 1, 3, 4, 5, 6, 8, 9, 10, 11, 13, 14, 16, 17, 18, 21, 22, 23, 25, 26, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 87, 90, 92, 106, 113, 118, 124, 125, 128, 130, 132, 133, 134, 135, 136, 160, 162, 163, 164, 171, 445, 446, 448], "revis": [0, 1, 5, 7, 9, 11, 14, 16, 21, 22, 84, 85, 88, 171, 184, 233, 448], "tree": [0, 1, 7, 8, 9, 11, 14, 17, 18, 21, 22, 23, 25, 84, 85, 88, 112, 113, 118, 122, 132, 162, 205, 209, 233], "separ": [0, 3, 8, 10, 21, 22, 25, 26, 31, 32, 36, 37, 41, 46, 48, 51, 61, 62, 75, 81, 88, 107, 113, 160, 162, 163, 171, 181, 229, 407, 418, 433, 444, 445, 446], "sourc": [0, 1, 3, 4, 7, 9, 11, 12, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 54, 55, 56, 58, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 78, 79, 81, 82, 84, 85, 87, 92, 106, 113, 119, 122, 132, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 178, 180, 181, 182, 183, 184, 187, 188, 191, 192, 193, 194, 196, 197, 198, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 260, 261, 262, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 307, 308, 310, 311, 312, 313, 315, 316, 317, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 333, 334, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 355, 356, 357, 358, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 389, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440, 441, 445, 446], "A": [0, 2, 3, 6, 8, 11, 12, 15, 18, 21, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 52, 53, 54, 55, 56, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 88, 89, 110, 117, 118, 160, 162, 163, 164, 171, 184, 187, 188, 196, 197, 198, 200, 201, 203, 209, 210, 212, 214, 217, 218, 220, 221, 222, 224, 225, 227, 228, 229, 230, 233, 236, 237, 245, 253, 254, 256, 282, 292, 296, 368, 374, 378, 384, 391, 392, 393, 396, 397, 398, 400, 402, 406, 408, 415, 418, 419, 427, 431, 433, 437, 439, 446, 447], "can": [0, 1, 3, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 21, 22, 23, 25, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 92, 93, 95, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 122, 124, 126, 128, 129, 131, 132, 133, 134, 135, 136, 137, 187, 188, 196, 197, 198, 200, 201, 209, 210, 211, 212, 215, 217, 218, 220, 221, 222, 225, 227, 229, 230, 233, 236, 249, 250, 253, 270, 273, 282, 283, 285, 345, 358, 367, 374, 375, 377, 386, 391, 392, 393, 394, 396, 397, 398, 407, 410, 415, 418, 427, 431, 433, 443, 445, 446, 447], "commit": [0, 4, 5, 8, 9, 85, 88, 128, 134, 233, 448], "hash": [0, 5, 7, 17, 23, 51, 85, 88, 105, 115, 136, 196, 200, 201, 229, 233, 387], "branch": [0, 85, 88, 92, 113, 122, 221, 233, 253, 273, 285, 345, 377, 445], "tag": [0, 78, 79, 85, 113, 118, 233, 279], "ani": [0, 2, 13, 16, 17, 18, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 62, 63, 64, 65, 66, 67, 69, 70, 72, 73, 74, 76, 78, 79, 80, 81, 82, 83, 84, 85, 88, 89, 96, 100, 101, 103, 105, 109, 110, 112, 118, 119, 137, 147, 171, 187, 188, 196, 197, 198, 200, 201, 209, 210, 211, 212, 214, 217, 218, 220, 221, 224, 226, 227, 228, 229, 230, 233, 238, 249, 250, 253, 254, 255, 256, 266, 274, 282, 286, 292, 294, 297, 345, 347, 374, 377, 387, 391, 392, 393, 397, 398, 400, 418, 419, 422, 431, 433, 437], "rel": [0, 8, 34, 55, 81, 82, 218, 220, 221, 233, 253, 374, 414, 416, 434, 445], "refer": [0, 11, 27, 44, 52, 75, 85, 102, 103, 105, 109, 110, 115, 116, 117, 119, 122, 126, 188, 200, 201, 218, 220, 221, 224, 225, 229, 233, 244, 253, 374, 414, 416, 433], "git": [0, 85, 88, 92, 115, 233, 446], "format": [0, 3, 5, 7, 8, 9, 10, 11, 12, 15, 17, 18, 21, 22, 23, 25, 26, 28, 85, 87, 88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 103, 104, 105, 108, 111, 114, 115, 116, 120, 126, 127, 130, 132, 133, 134, 135, 162, 184, 194, 197, 209, 214, 215, 218, 220, 221, 222, 224, 233, 238, 253, 254, 273, 275, 285, 287, 288, 326, 343, 345, 357, 374, 377, 382, 406, 418, 427, 431, 445, 448, 449], "ha": [0, 8, 11, 15, 21, 25, 26, 34, 35, 40, 41, 42, 43, 44, 45, 46, 50, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 67, 68, 70, 72, 73, 76, 77, 80, 81, 82, 84, 85, 88, 92, 101, 102, 106, 107, 109, 110, 114, 115, 116, 117, 119, 122, 126, 128, 129, 133, 135, 187, 188, 198, 200, 201, 217, 218, 220, 221, 225, 229, 230, 253, 282, 292, 374, 382, 386, 396, 397, 400, 407, 418, 433], "multipl": [0, 8, 11, 13, 16, 17, 21, 25, 29, 30, 34, 40, 41, 44, 46, 58, 67, 70, 75, 77, 84, 85, 88, 89, 98, 103, 112, 113, 116, 117, 122, 132, 133, 197, 198, 209, 218, 220, 221, 224, 226, 227, 229, 230, 236, 253, 273, 285, 345, 377, 382, 396, 397, 398, 406, 410, 433], "form": [0, 11, 13, 21, 23, 25, 30, 46, 100, 184, 198, 201, 217, 282, 292, 374, 398, 406, 433], "1": [0, 6, 7, 9, 10, 11, 13, 16, 21, 24, 25, 30, 31, 34, 35, 44, 50, 51, 52, 60, 64, 68, 72, 75, 77, 80, 82, 84, 88, 90, 92, 99, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 121, 124, 130, 142, 162, 171, 182, 184, 187, 188, 196, 197, 198, 200, 201, 209, 211, 212, 213, 217, 218, 220, 221, 222, 224, 225, 227, 229, 230, 232, 233, 236, 237, 238, 244, 245, 252, 253, 254, 256, 262, 265, 267, 270, 272, 279, 282, 286, 292, 293, 296, 301, 311, 312, 317, 322, 324, 325, 328, 329, 330, 337, 338, 356, 362, 364, 367, 368, 374, 376, 380, 381, 382, 385, 386, 387, 391, 392, 393, 396, 397, 398, 400, 401, 405, 410, 414, 416, 418, 423, 427, 431, 433, 447, 448], "datum": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 87, 88, 90, 93, 99, 107, 115, 118, 122, 124, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 208, 249, 251, 290, 414, 416, 444, 445, 448], "2": [0, 6, 7, 9, 11, 13, 14, 16, 21, 22, 24, 25, 31, 34, 35, 51, 58, 64, 68, 75, 76, 80, 82, 84, 88, 90, 92, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 121, 130, 131, 137, 142, 162, 182, 184, 196, 197, 198, 200, 201, 209, 211, 212, 217, 218, 220, 221, 222, 224, 229, 230, 233, 237, 252, 253, 254, 256, 258, 262, 265, 267, 270, 272, 282, 286, 292, 293, 296, 301, 311, 312, 317, 322, 330, 337, 338, 356, 362, 367, 368, 374, 376, 386, 387, 396, 397, 405, 410, 414, 416, 418, 423, 427, 428, 431], "source1": [0, 22, 23, 83, 88, 448], "3": [0, 6, 7, 9, 11, 16, 18, 19, 21, 24, 25, 31, 34, 39, 40, 41, 46, 54, 62, 68, 69, 75, 82, 84, 85, 88, 90, 92, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 111, 114, 115, 116, 117, 118, 119, 120, 130, 131, 142, 162, 171, 184, 196, 197, 198, 200, 201, 209, 211, 212, 217, 218, 220, 224, 229, 230, 233, 237, 252, 253, 254, 270, 272, 282, 286, 292, 293, 301, 329, 338, 364, 367, 368, 374, 405, 406, 407, 408, 410, 412, 414, 416, 422, 427], "source2": [0, 88], "all": [0, 3, 11, 14, 15, 16, 17, 18, 21, 22, 23, 25, 27, 29, 30, 39, 40, 41, 44, 45, 49, 52, 54, 60, 62, 67, 69, 70, 74, 81, 84, 85, 88, 92, 101, 102, 106, 114, 115, 118, 119, 120, 122, 137, 187, 188, 196, 197, 198, 200, 203, 209, 210, 211, 212, 217, 218, 220, 221, 224, 225, 227, 229, 230, 233, 236, 253, 282, 287, 288, 292, 374, 386, 396, 397, 398, 407, 408, 418, 431, 433, 445, 447], "correspond": [0, 13, 25, 41, 44, 48, 54, 58, 69, 70, 73, 84, 85, 88, 93, 100, 109, 119, 198, 209, 218, 220, 221, 224, 225, 229, 238, 253, 273, 285, 345, 374, 377, 397, 400, 401, 418, 444, 446], "work": [0, 1, 7, 8, 9, 11, 14, 17, 18, 21, 22, 23, 25, 29, 41, 62, 70, 71, 73, 81, 83, 84, 85, 88, 92, 113, 115, 126, 128, 131, 132, 137, 188, 221, 233, 374, 433, 445], "directori": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 52, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 78, 79, 80, 83, 84, 85, 88, 101, 104, 106, 107, 108, 111, 112, 113, 114, 115, 116, 118, 119, 126, 132, 133, 136, 197, 203, 209, 218, 220, 221, 233, 253, 269, 273, 275, 285, 287, 288, 302, 304, 345, 377, 445, 446], "If": [0, 1, 2, 3, 8, 9, 11, 17, 18, 19, 21, 23, 25, 29, 34, 39, 40, 41, 44, 45, 46, 50, 54, 62, 63, 69, 70, 72, 74, 76, 81, 82, 83, 84, 85, 88, 92, 102, 105, 106, 114, 116, 117, 119, 126, 132, 135, 162, 171, 184, 187, 196, 197, 198, 200, 201, 207, 208, 209, 210, 211, 212, 214, 215, 217, 218, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 232, 238, 253, 271, 273, 282, 285, 287, 288, 289, 292, 302, 304, 345, 358, 366, 374, 377, 378, 381, 382, 385, 386, 391, 392, 393, 394, 395, 396, 397, 398, 400, 407, 410, 418, 425, 431, 433, 435, 437], "ar": [0, 1, 2, 3, 8, 9, 11, 13, 15, 17, 18, 19, 21, 22, 23, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 51, 52, 54, 55, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 81, 82, 84, 85, 87, 88, 92, 93, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 124, 126, 128, 132, 134, 136, 187, 188, 196, 197, 198, 200, 201, 209, 210, 211, 212, 218, 220, 221, 222, 225, 227, 229, 230, 233, 236, 253, 274, 282, 286, 287, 288, 374, 378, 384, 386, 391, 392, 393, 397, 398, 400, 401, 402, 406, 407, 408, 410, 414, 415, 416, 418, 419, 423, 427, 431, 433, 434, 435, 446, 447], "conflict": [0, 11, 21, 41, 90, 100, 220, 225, 227], "between": [0, 9, 11, 16, 17, 21, 25, 30, 39, 40, 77, 84, 88, 92, 113, 114, 115, 118, 124, 132, 133, 134, 229, 380, 381, 382, 385, 386, 396, 397, 398, 407, 415, 433], "modifi": [0, 9, 18, 23, 25, 56, 84, 88, 103, 119, 187, 188, 197, 198, 200, 209, 211, 212, 217, 220, 227, 233, 236, 282, 292, 374, 391, 392, 393, 407, 418, 445, 447, 448], "file": [0, 2, 3, 6, 7, 8, 10, 11, 12, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 44, 45, 46, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 67, 70, 73, 74, 75, 76, 77, 80, 83, 84, 85, 88, 90, 100, 101, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 126, 127, 136, 162, 171, 184, 197, 203, 209, 217, 218, 220, 221, 224, 227, 233, 253, 254, 266, 269, 274, 282, 286, 287, 289, 292, 305, 358, 368, 374, 381, 382, 391, 392, 393, 397, 398, 408, 418, 427, 435, 447], "target": [0, 3, 6, 7, 11, 14, 16, 17, 18, 21, 22, 23, 24, 25, 26, 75, 84, 85, 88, 106, 110, 113, 122, 124, 126, 132, 135, 136, 162, 184, 194, 198, 212, 220, 224, 233, 244, 358, 379, 422, 433, 445], "an": [0, 1, 2, 6, 7, 8, 11, 16, 17, 18, 21, 25, 26, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 52, 55, 56, 63, 64, 65, 66, 67, 72, 73, 78, 79, 81, 82, 83, 84, 85, 88, 90, 93, 95, 102, 106, 107, 108, 109, 110, 111, 114, 116, 117, 118, 119, 120, 122, 126, 131, 135, 136, 137, 142, 162, 182, 184, 187, 188, 196, 197, 198, 200, 201, 209, 211, 212, 217, 218, 220, 221, 222, 223, 224, 225, 227, 229, 230, 232, 233, 236, 237, 253, 254, 255, 256, 262, 267, 270, 272, 282, 286, 292, 293, 294, 295, 296, 301, 303, 311, 312, 317, 322, 329, 330, 337, 338, 356, 358, 362, 367, 368, 374, 376, 382, 384, 386, 387, 391, 392, 393, 397, 398, 400, 401, 402, 405, 406, 410, 414, 415, 416, 418, 422, 423, 427, 431, 433, 435, 437, 445, 446, 447, 448], "error": [0, 1, 2, 7, 8, 21, 26, 29, 84, 88, 89, 107, 110, 115, 120, 134, 160, 162, 163, 164, 171, 196, 197, 203, 207, 209, 215, 220, 221, 225, 227, 229, 233, 237, 245, 374, 433, 435, 437, 445, 447], "i": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 92, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 162, 171, 184, 187, 188, 196, 197, 198, 200, 201, 208, 209, 210, 211, 212, 214, 217, 218, 220, 221, 222, 224, 225, 227, 228, 229, 230, 232, 233, 236, 238, 244, 249, 251, 253, 254, 256, 271, 273, 275, 282, 285, 287, 288, 289, 292, 302, 304, 345, 358, 366, 374, 377, 378, 380, 381, 382, 384, 385, 386, 387, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 406, 407, 410, 414, 415, 416, 418, 419, 422, 423, 427, 431, 433, 434, 435, 437, 439, 443, 445, 446, 447, 448], "rais": [0, 1, 2, 82, 88, 107, 171, 188, 197, 198, 200, 201, 209, 218, 220, 221, 229, 233, 237, 253, 374, 382, 431, 433, 445], "unless": [0, 1, 2, 7, 18, 23, 25, 84, 187, 188, 200, 201, 218, 229, 233], "forc": [0, 7, 8, 92, 233], "us": [0, 1, 2, 3, 6, 7, 8, 10, 11, 12, 13, 15, 16, 17, 18, 19, 21, 22, 23, 25, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 89, 90, 92, 93, 96, 99, 102, 104, 105, 107, 110, 118, 119, 120, 121, 122, 124, 126, 127, 128, 129, 131, 132, 133, 135, 136, 137, 162, 171, 184, 187, 188, 196, 197, 198, 200, 201, 209, 210, 212, 217, 218, 220, 221, 222, 224, 225, 227, 229, 232, 233, 236, 238, 253, 273, 274, 282, 285, 286, 287, 288, 289, 292, 345, 358, 374, 377, 384, 386, 387, 391, 392, 393, 394, 396, 397, 398, 400, 401, 402, 406, 407, 408, 410, 412, 414, 416, 418, 419, 423, 427, 431, 433, 439, 443, 445, 446, 447], "onli": [0, 1, 3, 6, 8, 9, 11, 13, 15, 16, 17, 18, 19, 22, 24, 25, 26, 35, 39, 41, 44, 46, 51, 52, 53, 54, 55, 59, 61, 62, 63, 64, 67, 70, 73, 74, 75, 76, 81, 82, 84, 88, 89, 90, 92, 93, 101, 102, 110, 112, 113, 114, 115, 116, 117, 119, 122, 126, 128, 135, 171, 184, 188, 196, 200, 201, 209, 218, 221, 224, 227, 229, 230, 232, 233, 253, 282, 287, 289, 292, 374, 387, 407, 410, 418, 431, 433, 445], "select": [0, 3, 15, 17, 18, 21, 23, 25, 30, 34, 35, 40, 41, 42, 43, 44, 45, 46, 54, 55, 59, 63, 64, 67, 68, 70, 72, 73, 78, 79, 84, 85, 89, 92, 93, 114, 115, 116, 117, 118, 124, 131, 135, 194, 197, 209, 220, 224, 387, 407, 408, 419, 445], "from": [0, 1, 3, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 19, 21, 22, 23, 25, 26, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 49, 50, 54, 55, 57, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 88, 89, 90, 92, 93, 97, 99, 101, 102, 103, 104, 106, 107, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 124, 128, 131, 132, 133, 134, 135, 137, 171, 184, 187, 188, 194, 196, 197, 198, 200, 201, 209, 210, 211, 212, 217, 218, 220, 221, 222, 224, 225, 227, 228, 229, 230, 233, 236, 238, 244, 253, 254, 255, 256, 269, 271, 273, 274, 282, 285, 286, 287, 288, 289, 292, 293, 294, 295, 296, 302, 304, 345, 366, 374, 377, 378, 381, 382, 384, 385, 386, 387, 391, 392, 393, 395, 397, 398, 400, 401, 402, 408, 412, 418, 422, 423, 427, 431, 433, 434, 435, 437, 444, 445, 446], "specifi": [0, 2, 3, 6, 7, 8, 11, 12, 15, 16, 17, 18, 19, 21, 22, 23, 25, 30, 31, 32, 34, 35, 39, 40, 41, 44, 45, 46, 48, 49, 50, 52, 53, 54, 55, 57, 59, 61, 62, 63, 64, 67, 69, 70, 72, 73, 75, 76, 80, 81, 82, 85, 88, 114, 116, 117, 119, 124, 126, 127, 132, 136, 171, 184, 196, 197, 198, 200, 201, 209, 217, 218, 220, 224, 229, 233, 236, 282, 292, 358, 374, 382, 387, 397, 398, 407, 408, 410, 418, 427, 431, 433, 435, 444], "The": [0, 1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 46, 47, 49, 50, 54, 55, 58, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 77, 81, 82, 83, 85, 88, 92, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 117, 118, 119, 121, 122, 124, 126, 128, 129, 131, 133, 134, 135, 136, 171, 184, 187, 188, 196, 197, 198, 200, 201, 203, 209, 211, 214, 217, 218, 220, 221, 222, 224, 225, 227, 229, 230, 232, 233, 236, 238, 253, 282, 287, 288, 289, 292, 358, 374, 380, 381, 382, 384, 385, 386, 391, 392, 393, 394, 396, 397, 398, 400, 401, 402, 407, 408, 410, 414, 416, 418, 423, 431, 433, 434, 443, 446, 447], "current": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 29, 64, 69, 74, 84, 85, 88, 101, 114, 118, 119, 126, 132, 160, 162, 163, 164, 171, 184, 197, 209, 218, 220, 221, 233, 253, 433, 437], "when": [0, 3, 6, 8, 10, 11, 12, 15, 17, 18, 19, 21, 22, 23, 25, 26, 34, 41, 44, 45, 46, 51, 53, 58, 69, 74, 75, 78, 79, 82, 84, 88, 92, 98, 100, 105, 109, 115, 116, 117, 119, 122, 124, 126, 128, 129, 131, 134, 171, 184, 196, 200, 201, 224, 229, 230, 233, 238, 358, 387, 396, 397, 400, 414, 415, 416, 418, 419, 431, 433, 439, 445], "set": [0, 8, 10, 15, 17, 21, 23, 25, 31, 32, 36, 37, 41, 62, 69, 70, 84, 85, 88, 92, 101, 102, 104, 105, 108, 111, 113, 114, 115, 116, 117, 118, 120, 124, 135, 136, 187, 196, 197, 198, 200, 201, 204, 209, 211, 212, 214, 217, 218, 220, 221, 226, 227, 229, 230, 232, 233, 236, 244, 245, 250, 253, 282, 286, 292, 374, 386, 396, 397, 398, 410, 414, 416, 418, 423, 431, 433, 434, 445], "name": [0, 6, 8, 9, 10, 13, 15, 18, 21, 23, 25, 27, 30, 31, 34, 35, 39, 40, 41, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 67, 69, 70, 71, 72, 75, 77, 80, 82, 83, 84, 85, 87, 88, 101, 102, 103, 104, 106, 107, 108, 109, 111, 113, 114, 115, 116, 117, 118, 120, 126, 131, 132, 133, 134, 145, 160, 162, 163, 171, 181, 182, 184, 187, 188, 196, 197, 198, 200, 201, 202, 204, 209, 210, 211, 212, 213, 214, 215, 218, 220, 221, 223, 224, 225, 227, 229, 230, 233, 234, 236, 238, 249, 250, 253, 275, 282, 303, 304, 351, 352, 358, 368, 374, 376, 380, 381, 382, 385, 387, 397, 398, 408, 410, 418, 427, 429, 433, 434, 435, 445, 447], "look": [0, 16, 21, 29, 88, 101, 102, 103, 104, 105, 108, 111, 118, 127], "usag": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 77, 84, 91, 107, 108, 111, 114, 115, 124, 134, 136, 187, 188, 209, 221, 374, 433, 445, 447], "h": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 39, 77, 84, 109, 113, 120, 124, 127, 135, 182, 197, 198, 200, 201, 209, 217, 220, 222, 224, 227, 229, 254, 282, 292, 329, 374, 387, 391, 392, 393, 398, 401, 417, 423, 444], "f": [0, 1, 3, 7, 8, 10, 11, 12, 15, 17, 21, 26, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 87, 102, 108, 111, 118, 119, 121, 122, 127, 128, 133, 171, 197, 200, 201, 229, 279, 325, 374, 414, 416, 422, 448], "p": [0, 1, 3, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 21, 22, 23, 24, 25, 26, 29, 34, 35, 37, 39, 40, 41, 44, 45, 46, 49, 54, 55, 62, 63, 64, 67, 69, 70, 72, 73, 77, 81, 83, 85, 87, 88, 106, 113, 116, 117, 122, 124, 126, 128, 134, 136, 261], "project_dir": [0, 1, 3, 5, 6, 7, 8, 9, 11, 13, 14, 16, 17, 18, 21, 22, 23, 24, 25, 26, 77, 84, 126, 160, 162, 163, 164, 171, 184, 233, 446], "rev": [0, 88, 184, 233], "paramet": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 41, 46, 84, 88, 92, 106, 114, 115, 116, 117, 124, 137, 188, 192, 193, 194, 196, 197, 198, 200, 201, 203, 209, 212, 217, 218, 220, 221, 222, 224, 225, 229, 230, 232, 233, 235, 236, 237, 238, 244, 245, 253, 273, 282, 285, 287, 288, 289, 292, 345, 358, 368, 374, 377, 378, 380, 381, 382, 384, 385, 386, 387, 391, 392, 393, 394, 396, 397, 398, 400, 401, 402, 406, 408, 410, 419, 423, 431, 433, 434], "overwrit": [0, 2, 3, 6, 7, 10, 11, 12, 15, 18, 19, 21, 22, 23, 25, 124, 127, 135, 147, 148, 149, 197, 209, 220, 418], "unsav": [0, 233], "chang": [0, 1, 9, 10, 25, 29, 46, 83, 84, 89, 90, 92, 93, 103, 111, 113, 115, 117, 122, 126, 128, 134, 197, 200, 201, 209, 212, 217, 220, 229, 233, 236, 287, 289, 396, 397, 400, 418, 427, 431, 444, 445], "case": [0, 3, 7, 11, 12, 16, 18, 21, 23, 25, 41, 44, 48, 52, 53, 55, 58, 83, 84, 92, 113, 115, 116, 119, 131, 132, 188, 197, 200, 209, 210, 212, 220, 221, 222, 223, 225, 227, 229, 232, 358, 374, 384, 391, 392, 393, 400, 401, 402, 418, 423, 433, 447], "string": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 29, 39, 41, 44, 46, 55, 69, 70, 73, 77, 102, 113, 162, 163, 171, 184, 188, 197, 203, 209, 211, 220, 221, 252, 253, 374, 382, 418, 431, 433, 434], "oper": [0, 1, 3, 5, 6, 7, 8, 9, 11, 13, 14, 16, 17, 18, 21, 22, 23, 24, 25, 26, 29, 39, 40, 41, 54, 62, 69, 70, 84, 85, 88, 93, 99, 100, 110, 113, 115, 122, 126, 132, 133, 197, 209, 211, 220, 387, 433, 444], "default": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 34, 35, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 54, 55, 57, 59, 62, 63, 64, 67, 69, 70, 73, 76, 77, 80, 81, 84, 85, 88, 92, 93, 102, 104, 105, 106, 107, 115, 116, 117, 118, 120, 122, 124, 127, 131, 163, 188, 196, 197, 198, 200, 201, 204, 209, 210, 217, 220, 221, 223, 229, 230, 233, 236, 254, 272, 282, 287, 289, 292, 303, 307, 347, 360, 362, 366, 368, 374, 382, 396, 397, 398, 408, 418, 422, 427, 431, 433, 434, 445], "help": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 24, 25, 26, 27, 29, 30, 34, 35, 39, 41, 44, 45, 46, 54, 56, 58, 63, 64, 67, 69, 70, 72, 77, 84, 88, 90, 93, 98, 112, 115, 119, 415, 418, 444, 448], "print": [0, 1, 2, 3, 5, 6, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 70, 77, 81, 84, 93, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 116, 118, 119, 129, 136, 220, 431, 448], "messag": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 25, 26, 27, 29, 44, 77, 107, 113, 115, 209, 214, 232, 233, 374, 445], "exit": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 25, 26, 27, 29, 77, 88, 113, 160, 162, 163, 164, 171, 209, 218, 220, 221, 253, 433, 437], "exampl": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 30, 47, 48, 51, 57, 58, 59, 71, 76, 77, 80, 82, 85, 88, 91, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 126, 127, 131, 132, 133, 134, 135, 136, 163, 171, 188, 198, 209, 217, 220, 221, 222, 223, 225, 229, 230, 232, 292, 304, 374, 382, 386, 387, 398, 407, 408, 410, 414, 415, 416, 418, 427, 431, 433, 434, 445, 449], "previou": [0, 5, 7, 11, 21, 22, 36, 48, 88, 102, 104, 108, 110, 111, 113, 114, 122, 126, 129, 445, 448], "head": [0, 7, 9, 11, 14, 16, 21, 22, 24, 25, 70, 85, 112, 113, 115, 118, 205, 233, 368, 374, 418, 434, 448], "save": [0, 1, 3, 6, 7, 8, 10, 11, 12, 13, 15, 16, 17, 18, 19, 21, 22, 23, 25, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 54, 55, 56, 57, 59, 62, 63, 64, 65, 66, 67, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 88, 90, 99, 104, 106, 115, 122, 127, 128, 133, 136, 182, 187, 197, 203, 209, 211, 212, 220, 224, 227, 233, 254, 282, 292, 358, 374, 387, 414, 416, 427, 445, 448], "version": [0, 7, 15, 29, 30, 39, 48, 50, 58, 69, 84, 88, 89, 92, 115, 118, 125, 126, 171, 200, 201, 216, 229, 252, 253, 279, 304, 380, 381, 382, 385, 397, 398, 440, 445, 447, 448], "33fbfbe": 0, "my": [0, 122, 126], "fix": [1, 109], "state": [1, 61, 85, 122, 198, 200, 209, 217, 232, 282, 292], "creat": [1, 4, 6, 8, 10, 11, 12, 16, 17, 18, 19, 21, 25, 31, 32, 33, 34, 35, 36, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 87, 88, 89, 90, 99, 102, 106, 107, 115, 117, 118, 120, 122, 124, 128, 132, 133, 134, 135, 136, 187, 188, 196, 197, 198, 200, 201, 209, 212, 217, 220, 222, 224, 229, 230, 233, 244, 282, 292, 374, 379, 382, 384, 391, 392, 393, 398, 402, 408, 425, 431, 433, 445, 446, 447, 448], "new": [1, 2, 6, 7, 8, 11, 15, 17, 18, 21, 25, 41, 44, 55, 73, 84, 88, 106, 115, 118, 122, 171, 188, 196, 197, 198, 200, 201, 209, 211, 217, 218, 220, 221, 229, 230, 233, 253, 282, 292, 374, 384, 391, 392, 393, 397, 398, 400, 401, 402, 418, 423, 433, 444, 446], "By": [1, 2, 3, 6, 7, 10, 11, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 29, 69, 73, 84, 102, 103, 110, 114, 115, 119, 124, 127, 129, 132, 135, 188, 197, 198, 209, 217, 220, 221, 233, 282, 292, 374, 431, 433], "check": [1, 3, 6, 8, 18, 21, 23, 25, 29, 31, 32, 46, 70, 77, 80, 84, 88, 89, 90, 104, 105, 106, 109, 110, 112, 113, 115, 119, 122, 126, 127, 128, 134, 136, 197, 209, 218, 220, 222, 229, 233, 378, 381, 382, 385, 395, 441, 446], "unknown": [1, 22, 25, 115, 118, 196, 198, 209, 211, 212, 217, 229, 230, 282, 286, 292, 374, 418, 444], "found": [1, 11, 12, 15, 19, 21, 26, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 54, 55, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 78, 79, 88, 89, 110, 114, 118, 214, 218, 221, 229, 253, 374, 445], "foreign": 1, "avail": [1, 3, 7, 8, 9, 15, 16, 18, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 48, 49, 50, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 80, 81, 82, 84, 88, 92, 93, 115, 118, 119, 128, 131, 135, 187, 196, 197, 198, 209, 210, 211, 212, 220, 225, 227, 229, 230, 233, 282, 287, 288, 374, 387, 397, 398, 407, 418, 433, 439, 444, 446], "reproduct": [1, 9], "cach": [1, 9, 22, 84, 88, 106, 115, 197, 205, 209, 217, 220, 224, 227, 233, 254, 282, 292, 374, 391, 392, 393, 412, 425, 427, 445], "becaus": [1, 41, 46, 75, 81, 82, 84, 92, 100, 101, 102, 107, 108, 109, 110, 111, 113, 116, 209, 212, 217, 218, 220, 221, 224, 227, 236, 253, 282, 292, 418, 437], "datumaro": [1, 2, 3, 6, 7, 8, 9, 15, 16, 21, 25, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 92, 93, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 112, 113, 116, 117, 118, 120, 121, 122, 124, 126, 127, 128, 129, 131, 133, 134, 135, 136, 137, 445, 446, 447], "know": [1, 9, 69], "how": [1, 11, 16, 17, 21, 23, 69, 76, 88, 95, 98, 99, 102, 108, 110, 111, 112, 114, 115, 116, 117, 118, 124, 135, 194, 197, 198, 209, 220, 394, 449], "repeat": [1, 8, 11, 17, 19, 21, 24, 25, 70, 188, 221, 229, 374, 379, 433], "them": [1, 8, 10, 21, 25, 48, 50, 52, 54, 69, 77, 81, 83, 84, 88, 89, 98, 99, 100, 102, 118, 119, 136, 194, 197, 209, 218, 220, 221, 253, 386, 396, 397, 408, 415, 418, 431, 433], "add": [1, 6, 10, 11, 12, 16, 25, 31, 32, 33, 38, 39, 40, 41, 44, 45, 46, 54, 55, 56, 57, 58, 59, 60, 62, 69, 70, 74, 78, 79, 81, 82, 83, 84, 87, 88, 90, 109, 110, 115, 122, 196, 198, 200, 201, 204, 209, 212, 220, 223, 225, 229, 230, 233, 235, 282, 374, 418, 437, 444, 445, 446, 448], "you": [1, 6, 8, 11, 15, 16, 17, 19, 23, 25, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 50, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 87, 88, 92, 99, 101, 102, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 126, 127, 128, 132, 135, 136, 137, 209, 218, 220, 221, 222, 223, 225, 233, 253, 387, 408, 414, 415, 416, 433, 443, 446], "need": [1, 3, 6, 8, 17, 21, 25, 26, 33, 38, 46, 69, 84, 87, 88, 92, 100, 103, 105, 110, 114, 116, 117, 119, 120, 122, 126, 128, 135, 137, 223, 233, 287, 288, 415, 418, 433, 435, 446], "record": [1, 18, 25, 30, 69, 84, 88, 113, 122], "metadata": [1, 26, 30, 85, 88, 109, 110, 118, 196, 200, 201, 216, 223, 229, 250, 374, 382, 401, 427], "want": [1, 8, 17, 21, 23, 25, 35, 41, 45, 46, 50, 52, 54, 55, 63, 64, 67, 69, 70, 73, 76, 81, 82, 83, 84, 88, 99, 102, 105, 114, 116, 119, 122, 124, 126, 127, 136, 387, 408, 431], "disk": [1, 69, 84, 88, 113, 197, 209, 220], "space": [1, 46, 48, 88, 113, 160, 162, 163, 171, 181, 244, 434], "have": [1, 8, 11, 17, 18, 21, 22, 23, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 78, 79, 80, 81, 82, 84, 88, 89, 99, 100, 102, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 126, 127, 132, 133, 134, 135, 187, 196, 197, 198, 200, 201, 209, 210, 211, 212, 220, 222, 223, 225, 227, 229, 230, 233, 236, 275, 282, 287, 288, 374, 387, 397, 398, 400, 401, 410, 415, 433, 445, 446], "backup": [1, 81, 374, 376], "copi": [1, 6, 8, 82, 85, 87, 88, 106, 136, 187, 188, 196, 197, 198, 200, 209, 211, 212, 217, 220, 227, 229, 230, 233, 236, 282, 292, 374, 391, 392, 393, 418], "dataset": [1, 5, 6, 7, 10, 16, 24, 30, 61, 77, 83, 87, 89, 90, 92, 93, 96, 97, 98, 102, 112, 113, 117, 120, 121, 122, 130, 137, 138, 171, 184, 187, 188, 191, 192, 193, 194, 196, 197, 198, 203, 207, 210, 211, 212, 214, 215, 217, 218, 220, 221, 222, 225, 226, 227, 228, 229, 230, 231, 233, 235, 236, 237, 238, 244, 245, 247, 248, 249, 250, 251, 253, 262, 266, 267, 270, 271, 273, 275, 279, 282, 283, 285, 287, 288, 289, 302, 304, 307, 308, 316, 318, 325, 341, 345, 352, 358, 361, 363, 364, 366, 367, 374, 375, 377, 378, 379, 381, 382, 384, 385, 386, 387, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 405, 407, 408, 410, 414, 415, 416, 418, 419, 427, 432, 443, 444, 445, 448], "stop": [1, 8, 100, 103, 105, 109, 110, 112, 113, 115], "To": [1, 2, 3, 6, 8, 15, 17, 18, 19, 23, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 50, 51, 54, 55, 58, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 78, 79, 81, 82, 83, 84, 87, 88, 100, 102, 105, 106, 108, 111, 114, 115, 116, 117, 119, 120, 127, 128, 132, 133, 135, 136, 218, 221, 253, 386, 396, 397, 398, 431, 433, 444, 446, 447], "empti": [1, 2, 3, 6, 10, 11, 12, 15, 18, 19, 21, 22, 23, 25, 70, 88, 119, 120, 197, 209, 220, 223, 232, 358, 433], "m": [1, 6, 11, 16, 18, 21, 23, 25, 26, 41, 51, 69, 75, 81, 87, 90, 92, 93, 100, 101, 105, 106, 109, 119, 122, 124, 128, 132, 133, 134, 233, 408, 419, 448], "made": [1, 9, 233, 433], "don": [1, 6, 8, 25, 50, 58, 84, 88, 126, 137, 233, 431], "t": [1, 6, 8, 9, 13, 16, 19, 22, 25, 26, 41, 49, 50, 52, 58, 60, 62, 69, 70, 76, 81, 82, 83, 84, 88, 92, 100, 101, 103, 105, 109, 110, 112, 113, 118, 119, 122, 126, 137, 160, 162, 163, 164, 171, 187, 188, 196, 197, 209, 210, 211, 212, 217, 220, 221, 224, 227, 228, 229, 230, 232, 233, 234, 236, 254, 282, 287, 288, 292, 325, 347, 374, 391, 392, 393, 397, 398, 410, 414, 416, 431, 433, 437, 444, 448], "put": [1, 17, 23, 25, 84, 88, 90, 113, 187, 197, 209, 211, 212, 220, 227, 229, 230, 233, 238, 408, 433, 446], "import": [1, 3, 6, 7, 10, 11, 16, 17, 18, 25, 27, 51, 83, 84, 87, 88, 90, 93, 95, 98, 100, 101, 102, 103, 105, 109, 110, 115, 116, 117, 122, 124, 127, 129, 130, 131, 133, 134, 135, 136, 137, 198, 209, 210, 212, 213, 217, 220, 223, 233, 234, 247, 248, 249, 258, 260, 261, 262, 265, 266, 267, 274, 275, 276, 278, 282, 286, 287, 288, 297, 299, 302, 303, 304, 305, 308, 315, 318, 319, 324, 325, 327, 328, 329, 330, 333, 334, 340, 341, 344, 346, 351, 358, 360, 363, 364, 370, 371, 372, 374, 427, 435, 443, 445, 446, 448], "coco": [1, 5, 7, 8, 11, 12, 14, 21, 22, 31, 32, 35, 46, 49, 51, 54, 55, 63, 64, 67, 70, 72, 73, 81, 84, 88, 89, 90, 93, 100, 102, 104, 107, 116, 118, 119, 128, 133, 134, 326, 343, 345, 431, 445, 448], "path": [1, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 52, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 81, 82, 83, 87, 90, 93, 104, 106, 107, 109, 110, 111, 113, 114, 115, 116, 118, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 160, 162, 163, 171, 184, 187, 193, 197, 204, 209, 211, 212, 213, 214, 217, 218, 220, 221, 224, 226, 227, 229, 230, 233, 247, 248, 249, 252, 253, 254, 256, 258, 260, 261, 262, 264, 265, 266, 267, 269, 270, 273, 274, 275, 276, 278, 282, 285, 286, 287, 288, 292, 296, 297, 299, 302, 303, 304, 305, 307, 308, 310, 311, 312, 313, 315, 318, 319, 321, 323, 324, 325, 326, 327, 328, 329, 330, 333, 334, 336, 339, 340, 341, 343, 344, 345, 346, 347, 349, 351, 355, 358, 360, 363, 364, 366, 367, 368, 370, 371, 372, 374, 377, 380, 381, 382, 385, 391, 392, 393, 397, 398, 408, 421, 422, 427, 431, 432, 434, 441, 445, 447, 448], "ad": [1, 5, 6, 8, 9, 10, 15, 18, 21, 25, 30, 34, 35, 40, 41, 42, 43, 44, 45, 46, 48, 54, 55, 56, 57, 58, 59, 63, 64, 68, 70, 72, 73, 84, 88, 104, 106, 107, 108, 111, 113, 114, 116, 122, 126, 196, 198, 209, 211, 212, 218, 229, 233, 418, 433, 445, 446, 448], "requir": [2, 13, 16, 22, 25, 33, 38, 46, 48, 52, 55, 60, 69, 71, 81, 82, 84, 88, 92, 106, 114, 116, 117, 118, 122, 124, 126, 128, 132, 134, 136, 187, 188, 196, 197, 200, 209, 210, 211, 212, 217, 218, 220, 221, 224, 227, 229, 230, 233, 236, 253, 254, 282, 287, 288, 292, 374, 380, 381, 382, 385, 386, 391, 392, 393, 394, 396, 397, 398, 407, 423, 427, 444], "most": [2, 3, 23, 25, 48, 50, 61, 75, 84, 88, 97, 100, 109, 112, 113, 118, 387, 408, 419, 433], "function": [2, 3, 21, 25, 29, 46, 84, 92, 102, 103, 108, 115, 119, 120, 129, 134, 135, 137, 141, 142, 143, 144, 145, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 180, 181, 184, 188, 193, 194, 196, 197, 198, 200, 201, 202, 207, 209, 215, 217, 218, 220, 221, 223, 225, 228, 229, 231, 234, 244, 262, 267, 275, 312, 322, 347, 355, 358, 360, 361, 368, 374, 387, 391, 392, 393, 394, 406, 409, 410, 413, 417, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 440, 441, 445, 446], "anoth": [2, 3, 12, 18, 21, 22, 23, 25, 31, 32, 46, 52, 54, 63, 69, 70, 102, 110, 111, 113, 122, 132, 133, 197, 198, 201, 209, 217, 218, 220, 221, 253, 282, 292, 374, 398, 415, 431, 433, 434], "output": [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 49, 54, 55, 56, 62, 63, 64, 65, 66, 67, 69, 70, 72, 73, 74, 75, 76, 78, 79, 81, 82, 84, 87, 90, 101, 106, 108, 111, 114, 115, 116, 118, 124, 126, 127, 128, 132, 133, 135, 136, 163, 188, 197, 200, 201, 203, 209, 220, 222, 224, 229, 236, 378, 380, 381, 382, 384, 385, 387, 389, 391, 392, 393, 394, 396, 397, 398, 400, 401, 402, 431, 434], "pass": [2, 3, 8, 21, 22, 25, 26, 29, 106, 113, 196, 197, 200, 201, 209, 220, 229, 230, 431, 433, 435, 445, 447], "o": [2, 3, 6, 7, 8, 10, 11, 12, 15, 16, 17, 18, 19, 21, 22, 23, 25, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 54, 55, 56, 57, 59, 62, 63, 64, 65, 66, 67, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 87, 99, 104, 106, 107, 108, 111, 114, 115, 116, 117, 121, 122, 124, 127, 128, 132, 134, 136, 137, 217, 414, 416, 445, 447], "dir": [2, 3, 6, 7, 8, 10, 11, 12, 15, 16, 17, 18, 19, 21, 22, 23, 25, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 54, 55, 56, 62, 63, 64, 65, 66, 67, 69, 70, 72, 73, 74, 75, 78, 79, 81, 82, 84, 90, 93, 124, 133, 135, 136, 233, 445], "alreadi": [2, 8, 100, 114, 118, 386], "contain": [2, 11, 13, 15, 18, 25, 26, 31, 32, 33, 35, 38, 39, 41, 48, 50, 52, 53, 57, 58, 59, 67, 69, 70, 74, 75, 76, 80, 81, 82, 83, 84, 88, 104, 109, 112, 113, 114, 118, 119, 128, 135, 162, 171, 184, 188, 197, 198, 200, 203, 209, 217, 218, 220, 221, 233, 237, 245, 253, 282, 292, 358, 374, 386, 397, 400, 401, 407, 408, 418, 419, 433, 445, 447], "dst_dir": [2, 3, 7, 10, 11, 12, 15, 17, 18, 21, 22, 23, 25, 84, 127, 136, 147, 148, 149, 233], "exist": [2, 3, 6, 7, 8, 9, 10, 11, 12, 15, 17, 18, 19, 21, 22, 23, 25, 34, 35, 39, 40, 41, 44, 45, 46, 48, 49, 54, 55, 62, 63, 64, 67, 69, 70, 72, 73, 81, 84, 88, 93, 102, 114, 118, 119, 132, 184, 188, 197, 209, 220, 221, 223, 229, 236, 253, 273, 285, 345, 374, 377, 382, 397, 398, 415, 418, 425, 433, 444, 445, 447], "other": [2, 3, 7, 8, 11, 13, 15, 21, 25, 27, 30, 50, 52, 53, 56, 57, 59, 75, 76, 80, 82, 83, 84, 87, 88, 89, 92, 100, 102, 103, 112, 115, 116, 117, 118, 119, 122, 132, 135, 171, 198, 200, 201, 204, 209, 217, 218, 220, 221, 225, 229, 230, 236, 253, 282, 292, 368, 374, 387, 389, 397, 398, 408, 418, 431, 434, 446, 447], "touch": [2, 25], "my_dataset": [2, 55, 73], "remov": [2, 9, 18, 23, 25, 84, 88, 89, 93, 101, 102, 109, 110, 115, 117, 120, 121, 135, 160, 162, 163, 171, 181, 187, 197, 200, 201, 204, 209, 211, 212, 217, 220, 227, 229, 230, 233, 270, 374, 387, 396, 397, 400, 414, 416, 418, 433, 434, 444, 445], "one": [2, 3, 7, 11, 12, 13, 19, 22, 23, 25, 29, 32, 34, 41, 44, 48, 50, 52, 58, 59, 60, 69, 70, 74, 75, 76, 81, 84, 88, 89, 99, 100, 101, 102, 103, 104, 105, 110, 111, 112, 113, 114, 117, 118, 122, 133, 136, 137, 184, 194, 197, 198, 209, 217, 218, 220, 221, 225, 226, 227, 229, 230, 232, 238, 253, 282, 292, 396, 397, 410, 418, 431, 433, 444, 446], "some": [3, 7, 8, 18, 21, 25, 26, 30, 48, 50, 52, 55, 57, 71, 76, 80, 84, 88, 90, 92, 95, 99, 102, 117, 118, 119, 120, 127, 131, 188, 197, 209, 220, 221, 223, 374, 386, 410, 415, 433], "support": [3, 6, 8, 12, 13, 15, 16, 17, 18, 21, 22, 23, 25, 26, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 84, 88, 89, 99, 100, 112, 113, 114, 115, 120, 124, 126, 128, 132, 136, 200, 201, 218, 220, 221, 229, 233, 253, 275, 374, 418, 427, 445, 446], "more": [3, 6, 8, 14, 17, 21, 25, 27, 31, 34, 35, 39, 40, 41, 44, 45, 46, 48, 49, 50, 52, 54, 56, 57, 59, 62, 63, 64, 67, 69, 70, 71, 72, 76, 80, 83, 84, 87, 88, 90, 102, 104, 106, 107, 108, 110, 111, 114, 115, 116, 117, 119, 122, 124, 126, 128, 131, 133, 134, 135, 136, 188, 200, 201, 209, 211, 218, 220, 221, 225, 229, 230, 253, 374, 387, 396, 397, 407, 433, 444, 445], "info": [3, 6, 17, 20, 23, 25, 26, 29, 30, 35, 40, 41, 42, 43, 44, 45, 46, 54, 55, 59, 63, 64, 67, 68, 70, 73, 84, 88, 90, 99, 100, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 126, 128, 134, 187, 188, 196, 197, 209, 210, 211, 212, 214, 217, 220, 221, 222, 224, 225, 227, 228, 229, 230, 233, 236, 237, 249, 250, 254, 282, 286, 287, 288, 292, 374, 384, 391, 392, 393, 397, 398, 400, 401, 402, 418, 421, 445, 447], "about": [3, 8, 9, 14, 15, 16, 17, 23, 25, 31, 32, 39, 40, 41, 44, 48, 50, 54, 57, 59, 62, 69, 76, 80, 82, 84, 88, 102, 115, 119, 124, 126, 128, 134, 136, 137, 187, 196, 197, 209, 210, 211, 212, 218, 220, 221, 227, 228, 229, 230, 233, 236, 247, 248, 249, 250, 253, 282, 287, 288, 307, 308, 318, 325, 341, 358, 363, 374, 397, 398, 418, 444, 445, 447], "option": [3, 6, 7, 8, 10, 11, 13, 15, 16, 18, 21, 22, 23, 25, 26, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 54, 55, 57, 58, 59, 62, 63, 64, 66, 67, 69, 70, 73, 74, 76, 77, 78, 79, 80, 81, 82, 84, 85, 88, 90, 92, 93, 106, 107, 114, 119, 127, 128, 129, 131, 134, 136, 162, 171, 184, 197, 198, 209, 215, 218, 219, 220, 224, 226, 227, 229, 230, 232, 233, 236, 254, 255, 256, 282, 292, 341, 358, 368, 382, 391, 392, 393, 394, 397, 398, 408, 418, 427, 433, 445], "detail": [3, 11, 23, 27, 31, 44, 84, 88, 102, 104, 106, 107, 108, 109, 111, 114, 115, 116, 119, 122, 124, 128, 131, 132, 133, 134, 135, 136, 188, 218, 220, 221, 225, 229, 253, 374, 433, 446], "list": [3, 8, 9, 12, 14, 15, 17, 21, 25, 30, 31, 32, 33, 35, 38, 39, 40, 41, 42, 44, 45, 46, 50, 51, 53, 54, 55, 57, 62, 65, 66, 67, 69, 70, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 88, 92, 101, 102, 103, 109, 111, 113, 118, 127, 136, 160, 163, 181, 187, 188, 192, 194, 196, 197, 198, 200, 201, 202, 203, 209, 210, 211, 212, 213, 214, 217, 218, 220, 221, 222, 223, 224, 227, 229, 230, 233, 235, 237, 238, 244, 245, 247, 248, 249, 250, 252, 253, 254, 258, 260, 261, 262, 265, 266, 267, 273, 274, 275, 276, 278, 282, 285, 292, 293, 294, 297, 299, 302, 303, 304, 305, 308, 313, 315, 318, 319, 323, 324, 325, 327, 328, 329, 330, 333, 334, 339, 340, 341, 343, 344, 345, 346, 349, 351, 358, 360, 363, 364, 368, 370, 371, 372, 374, 377, 378, 380, 382, 384, 385, 389, 391, 392, 393, 394, 397, 398, 400, 401, 402, 414, 416, 418, 419, 431, 433, 434, 444, 445, 446], "extend": [3, 16, 69, 84, 88, 92], "custom": [3, 6, 13, 17, 18, 22, 23, 25, 31, 32, 33, 38, 42, 44, 45, 46, 58, 74, 78, 79, 82, 84, 88, 89, 90, 93, 118, 135, 197, 200, 201, 209, 220, 229, 446], "plugin": [3, 6, 7, 13, 17, 18, 22, 23, 25, 40, 54, 85, 87, 88, 103, 104, 109, 110, 114, 115, 116, 117, 118, 119, 131, 134, 137, 197, 205, 209, 213, 220, 223, 445], "tip": [3, 88], "inform": [3, 8, 11, 13, 14, 15, 16, 17, 22, 25, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 52, 54, 55, 57, 59, 62, 63, 64, 67, 68, 69, 72, 73, 74, 76, 80, 82, 84, 88, 89, 103, 109, 115, 116, 117, 118, 119, 120, 128, 134, 135, 188, 196, 197, 198, 209, 218, 220, 221, 222, 224, 227, 253, 282, 292, 374, 384, 391, 392, 393, 394, 400, 401, 402, 415, 433, 445, 447], "topic": [3, 29, 84, 88], "writer": [3, 12, 15, 21, 22], "addit": [3, 6, 8, 12, 15, 21, 22, 30, 45, 46, 56, 57, 69, 84, 88, 92, 107, 115, 116, 117, 119, 121, 126, 134, 135, 198, 201, 214, 217, 220, 282, 292, 374, 398, 445, 447], "after": [3, 6, 8, 10, 12, 15, 21, 22, 23, 25, 26, 50, 58, 59, 60, 70, 77, 82, 84, 85, 88, 99, 101, 102, 104, 107, 108, 115, 116, 119, 122, 126, 187, 194, 196, 197, 200, 201, 209, 210, 211, 212, 217, 220, 224, 227, 229, 230, 233, 236, 274, 282, 286, 287, 288, 292, 374, 387, 396, 397, 398, 414, 416, 433, 445], "main": [3, 6, 8, 11, 12, 15, 17, 18, 21, 22, 23, 25, 26, 41, 50, 70, 77, 84, 132, 233, 368, 433], "argument": [3, 6, 8, 12, 15, 21, 22, 25, 26, 29, 46, 50, 52, 77, 88, 106, 108, 111, 114, 116, 117, 120, 126, 129, 188, 196, 198, 200, 201, 209, 212, 220, 221, 229, 230, 282, 374, 382, 433, 435, 445, 447], "common": [3, 11, 23, 26, 39, 51, 75, 88, 110, 118, 198, 292], "where": [3, 11, 23, 31, 32, 50, 51, 69, 75, 82, 92, 103, 112, 115, 119, 122, 126, 129, 198, 209, 210, 212, 218, 244, 374, 433, 445], "applic": [3, 17, 18, 21, 25, 115, 198, 201, 217, 282, 292, 374, 398], "media": [3, 8, 10, 12, 15, 21, 22, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 62, 63, 64, 65, 66, 67, 69, 70, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 84, 85, 88, 90, 99, 100, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 122, 127, 128, 133, 135, 187, 188, 196, 197, 209, 210, 211, 212, 217, 220, 222, 225, 227, 229, 230, 233, 236, 250, 252, 253, 254, 282, 286, 287, 288, 289, 292, 374, 378, 381, 382, 385, 391, 392, 393, 395, 397, 398, 418, 443, 445, 448], "which": [3, 8, 10, 11, 13, 15, 16, 17, 18, 19, 21, 23, 25, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 48, 54, 55, 56, 60, 63, 64, 67, 68, 69, 70, 72, 73, 75, 81, 82, 84, 85, 88, 89, 92, 102, 104, 105, 108, 109, 111, 112, 114, 115, 116, 117, 118, 119, 128, 135, 136, 160, 162, 163, 164, 171, 188, 196, 197, 198, 200, 201, 209, 217, 218, 220, 221, 222, 229, 233, 244, 253, 274, 282, 286, 292, 374, 380, 381, 382, 384, 385, 386, 387, 391, 392, 393, 394, 396, 397, 398, 400, 401, 402, 408, 427, 431, 433, 437, 439, 446], "imag": [3, 6, 8, 10, 11, 16, 17, 18, 19, 21, 22, 23, 24, 25, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 67, 70, 71, 72, 73, 74, 76, 77, 80, 82, 83, 84, 85, 87, 88, 89, 90, 93, 97, 99, 100, 101, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 120, 121, 127, 135, 137, 188, 192, 197, 198, 209, 210, 212, 215, 217, 218, 220, 221, 222, 224, 227, 235, 238, 244, 250, 252, 253, 254, 256, 260, 269, 272, 275, 279, 280, 282, 284, 286, 290, 292, 296, 297, 301, 302, 304, 305, 318, 319, 322, 327, 330, 341, 362, 372, 374, 384, 387, 391, 392, 393, 394, 396, 397, 398, 400, 401, 402, 407, 408, 410, 412, 413, 414, 415, 416, 418, 428, 431, 434, 443, 444, 445], "along": [3, 22, 117, 119, 394, 396, 397, 401], "annot": [3, 6, 8, 10, 11, 12, 16, 17, 18, 21, 22, 24, 25, 26, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 78, 79, 80, 83, 84, 85, 88, 89, 90, 93, 96, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 118, 120, 121, 128, 131, 132, 134, 135, 137, 162, 184, 187, 188, 194, 196, 197, 207, 209, 210, 211, 212, 215, 217, 220, 221, 222, 225, 227, 229, 230, 233, 236, 238, 250, 252, 253, 254, 258, 262, 269, 272, 274, 282, 284, 286, 287, 288, 289, 290, 292, 318, 319, 326, 341, 343, 346, 348, 362, 368, 374, 378, 384, 386, 391, 392, 393, 396, 397, 398, 400, 401, 402, 407, 408, 410, 414, 415, 416, 418, 419, 423, 427, 443, 444, 445, 446, 448], "disabl": [3, 18, 25, 41, 55, 233, 437, 445, 447], "ext": [3, 10, 34, 39, 40, 41, 44, 45, 46, 48, 49, 50, 54, 55, 57, 59, 61, 62, 63, 64, 69, 70, 72, 73, 76, 77, 80, 81, 162, 171, 184, 197, 209, 217, 224, 227, 254, 282, 292, 374, 391, 392, 393, 427, 434], "extens": [3, 10, 25, 30, 39, 40, 41, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 57, 59, 62, 63, 64, 69, 70, 73, 75, 76, 77, 80, 81, 113, 197, 209, 217, 224, 227, 254, 282, 292, 374, 391, 392, 393, 418, 433, 449], "jpg": [3, 8, 10, 30, 31, 32, 33, 35, 38, 41, 44, 47, 49, 50, 52, 55, 56, 57, 58, 59, 60, 65, 66, 69, 70, 71, 76, 78, 79, 80, 81, 82, 83, 88, 104, 106, 107, 111, 114, 115, 116, 117, 258, 262, 270, 272, 279, 280, 282, 283, 284, 287, 289, 290, 302, 303, 304, 305, 316, 318, 319, 324, 325, 329, 330, 341, 346, 348, 352, 353, 358, 361, 362, 363, 367, 368, 372, 374, 375, 434], "png": [3, 10, 11, 16, 17, 30, 31, 32, 34, 39, 40, 42, 43, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 62, 63, 64, 67, 69, 70, 73, 74, 76, 77, 80, 83, 90, 118, 132, 249, 251, 254, 256, 262, 266, 267, 272, 275, 282, 284, 290, 297, 300, 301, 311, 312, 322, 327, 328, 337, 338, 362, 368], "etc": [3, 6, 8, 10, 14, 21, 29, 39, 40, 41, 42, 51, 54, 62, 69, 70, 74, 81, 83, 84, 85, 88, 89, 92, 118, 119, 120, 121, 197, 198, 209, 210, 212, 220, 374], "tri": [3, 7, 16, 25, 88, 119, 197, 200, 201, 209, 220, 229, 233, 410], "keep": [3, 8, 25, 39, 40, 41, 44, 46, 48, 54, 55, 57, 58, 59, 62, 63, 64, 70, 73, 80, 84, 88, 89, 90, 93, 107, 160, 162, 163, 171, 181, 387, 407, 410, 418, 444], "origin": [3, 15, 16, 21, 25, 31, 32, 33, 34, 36, 37, 38, 44, 48, 49, 50, 51, 52, 55, 57, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 73, 74, 80, 81, 85, 88, 103, 108, 112, 113, 115, 116, 118, 119, 129, 182, 188, 198, 201, 217, 220, 222, 244, 282, 292, 374, 384, 391, 392, 393, 394, 398, 400, 401, 402, 427, 431], "convert": [3, 6, 7, 15, 17, 20, 25, 27, 31, 32, 33, 34, 35, 36, 37, 38, 42, 44, 45, 46, 48, 49, 50, 56, 57, 59, 63, 64, 65, 66, 67, 72, 74, 75, 76, 78, 79, 80, 81, 82, 84, 88, 90, 102, 106, 114, 116, 119, 162, 171, 198, 200, 201, 209, 215, 217, 220, 229, 233, 254, 255, 256, 282, 292, 293, 294, 295, 296, 374, 396, 398, 418, 427, 431, 434, 445, 446, 449], "filter": [3, 12, 20, 40, 41, 54, 69, 80, 81, 83, 84, 88, 89, 90, 103, 113, 117, 120, 134, 138, 197, 209, 220, 224, 227, 233, 282, 292, 386, 396, 397, 400, 445, 448], "element": [3, 17, 18, 19, 25, 84, 85, 93, 197, 198, 209, 218, 220, 229, 232, 282, 374, 406, 418, 422, 431], "read": [3, 8, 10, 22, 39, 46, 55, 69, 70, 73, 84, 88, 89, 93, 107, 118, 137, 209, 218, 221, 224, 227, 233, 253, 254, 282, 292, 302, 358, 364, 368, 427, 445, 446], "descript": [3, 6, 15, 17, 25, 26, 40, 48, 50, 57, 58, 69, 73, 80, 84, 90, 109, 110, 114, 118, 124, 126, 128, 131, 132, 133, 134, 135, 136, 214, 216, 218, 221, 253, 341, 353, 374, 378, 389, 395, 445, 447], "appli": [3, 6, 17, 18, 22, 23, 25, 50, 54, 70, 75, 77, 84, 88, 89, 90, 99, 102, 111, 114, 115, 116, 117, 119, 122, 197, 198, 209, 215, 217, 218, 220, 221, 236, 292, 387, 391, 392, 393, 394, 396, 397, 398, 400, 414, 416, 431, 444], "build": [3, 6, 7, 17, 18, 23, 25, 84, 88, 89, 92, 99, 113, 115, 116, 117, 118, 122, 184, 204, 233, 254, 255, 256, 292, 293, 294, 295, 296], "stage": [3, 7, 17, 18, 22, 23, 25, 85, 88, 111, 113, 114, 119, 162, 205, 233], "combin": [3, 6, 18, 21, 23, 25, 41, 67, 70, 85, 88, 99, 113, 114, 133, 218, 221, 244, 253, 387], "affect": [3, 13, 16, 18, 23, 25, 60, 115, 224, 227, 282, 292, 418], "e": [3, 10, 12, 16, 17, 18, 22, 23, 25, 29, 34, 35, 36, 39, 40, 41, 42, 44, 45, 46, 54, 55, 62, 63, 64, 67, 69, 70, 73, 77, 81, 84, 85, 89, 90, 100, 101, 103, 104, 106, 107, 109, 111, 112, 113, 114, 116, 118, 119, 127, 135, 137, 187, 188, 196, 197, 198, 209, 210, 211, 212, 217, 220, 221, 224, 227, 229, 230, 233, 236, 244, 282, 287, 288, 292, 374, 387, 397, 398, 407, 418, 422, 433, 435, 448], "mode": [3, 12, 18, 41, 84, 90, 106, 108, 111, 115, 162, 184, 196, 197, 203, 209, 218, 220, 221, 233, 236, 253, 380, 381, 382, 385, 396, 397, 398], "filter_mod": [3, 12], "extra_format_arg": [3, 8, 21], "xml": [3, 8, 12, 18, 44, 52, 55, 70, 87, 90, 102, 114, 118, 120, 126, 307, 317, 345, 445], "xpath": [3, 12, 18, 102, 120, 135, 209, 217, 220], "express": [3, 12, 18, 25, 80, 118, 372, 418], "item": [3, 11, 12, 15, 17, 18, 21, 22, 23, 25, 30, 34, 39, 41, 55, 59, 62, 77, 81, 83, 84, 85, 88, 90, 93, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 135, 136, 162, 184, 187, 188, 194, 196, 197, 198, 201, 204, 207, 209, 210, 211, 212, 214, 215, 217, 220, 221, 222, 225, 227, 228, 229, 230, 233, 234, 236, 238, 249, 250, 252, 253, 271, 273, 274, 282, 285, 286, 287, 288, 292, 302, 304, 345, 364, 366, 374, 378, 381, 382, 384, 385, 387, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 407, 408, 414, 416, 418, 419, 422, 427, 431, 433, 444, 445, 446, 448], "subdirectori": [3, 10, 15, 25, 41, 50, 58, 60, 69, 76, 218, 221, 253, 446], "extra": [3, 6, 8, 12, 15, 21, 22, 25, 26, 34, 35, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 54, 55, 57, 58, 59, 62, 63, 64, 67, 69, 70, 73, 76, 80, 81, 90, 92, 106, 127, 223, 445], "arg": [3, 6, 8, 12, 15, 21, 22, 25, 26, 29, 84, 85, 142, 143, 144, 145, 147, 150, 151, 152, 153, 154, 155, 156, 157, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 180, 181, 187, 197, 198, 201, 202, 204, 209, 211, 212, 213, 217, 218, 220, 221, 224, 225, 227, 229, 254, 270, 282, 292, 311, 337, 367, 374, 391, 392, 393, 397, 398, 433, 437, 439, 440, 445], "must": [3, 6, 8, 12, 15, 21, 22, 25, 29, 41, 44, 46, 49, 53, 69, 70, 82, 84, 104, 106, 107, 111, 114, 116, 126, 184, 187, 188, 196, 198, 200, 207, 209, 215, 217, 218, 221, 224, 227, 232, 253, 292, 374, 391, 392, 393, 408, 433, 446, 447], "voc": [3, 5, 7, 8, 11, 12, 18, 21, 22, 25, 32, 33, 34, 36, 37, 38, 42, 44, 45, 46, 48, 49, 50, 51, 65, 66, 67, 72, 74, 76, 78, 79, 80, 84, 87, 89, 90, 93, 100, 102, 118, 119, 431, 445, 448], "like": [3, 8, 10, 11, 12, 14, 16, 22, 23, 25, 34, 35, 44, 46, 51, 71, 83, 84, 88, 89, 90, 92, 110, 118, 119, 135, 136, 198, 200, 201, 218, 221, 229, 253, 374, 398, 427, 431, 433], "includ": [3, 11, 13, 16, 17, 18, 21, 22, 25, 41, 44, 46, 55, 63, 70, 73, 81, 84, 85, 92, 100, 104, 106, 107, 108, 111, 112, 114, 115, 116, 117, 119, 121, 122, 126, 136, 196, 198, 214, 220, 225, 229, 230, 282, 374, 410, 431, 446], "test_project": 3, "checkout": [4, 88, 118, 233, 448], "export": [4, 8, 10, 12, 15, 21, 22, 27, 51, 83, 84, 88, 89, 90, 93, 95, 99, 100, 105, 116, 127, 130, 136, 197, 209, 213, 220, 223, 249, 258, 262, 266, 267, 287, 297, 302, 303, 304, 305, 318, 319, 324, 327, 328, 329, 330, 341, 346, 358, 363, 370, 371, 372, 443, 445, 448], "log": [4, 11, 29, 106, 108, 111, 113, 115, 122, 128, 134, 136, 233, 445], "model": [4, 7, 8, 10, 11, 17, 19, 21, 23, 25, 45, 61, 70, 71, 72, 81, 85, 89, 90, 92, 99, 113, 118, 119, 121, 122, 124, 131, 132, 133, 134, 137, 162, 188, 191, 197, 205, 209, 220, 222, 233, 235, 236, 378, 380, 381, 382, 384, 385, 386, 389, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 408, 427, 445], "statu": [4, 113, 197, 198, 200, 209, 217, 220, 232, 233, 282, 292, 382, 448], "util": [4, 16, 23, 46, 108, 111, 113, 114, 115, 116, 117, 119, 129, 137, 198], "histori": [5, 88, 122, 233], "line": [5, 9, 13, 29, 31, 48, 69, 70, 81, 93, 113, 128, 160, 162, 163, 171, 181, 198, 200, 217, 238, 264, 265, 282, 292, 423], "follow": [5, 8, 9, 10, 13, 15, 16, 21, 25, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 87, 88, 89, 92, 99, 101, 102, 104, 106, 107, 108, 110, 111, 114, 115, 116, 117, 119, 122, 126, 127, 129, 131, 132, 136, 137, 188, 197, 198, 209, 218, 220, 221, 223, 229, 238, 244, 253, 275, 282, 304, 326, 343, 374, 382, 410, 414, 416, 427, 433, 446], "short": [5, 17, 26, 109, 113, 447], "n": [5, 6, 8, 10, 13, 16, 25, 27, 31, 32, 39, 44, 69, 77, 80, 88, 90, 106, 119, 122, 126, 160, 162, 163, 171, 181, 188, 193, 197, 221, 247, 248, 374, 406, 422, 424, 433, 448], "max_count": [5, 233], "max": [5, 6, 16, 24, 25, 26, 34, 115, 407], "count": [5, 11, 14, 19, 21, 24, 25, 26, 41, 109, 119, 122, 137, 197, 209, 214, 219, 224, 227, 229, 232, 282, 292, 379, 407, 408, 412, 422, 423, 431, 433], "number": [5, 11, 15, 16, 17, 19, 21, 23, 25, 26, 29, 31, 32, 34, 41, 44, 48, 55, 58, 59, 60, 70, 73, 81, 84, 88, 100, 101, 103, 109, 110, 112, 113, 117, 119, 128, 131, 134, 136, 137, 162, 171, 184, 192, 194, 196, 197, 198, 200, 209, 217, 220, 232, 235, 236, 244, 282, 287, 288, 289, 292, 380, 381, 382, 385, 387, 396, 397, 398, 400, 406, 407, 408, 418, 419, 423, 433, 444], "10": [5, 6, 11, 17, 25, 39, 51, 55, 62, 70, 75, 81, 89, 101, 102, 103, 104, 106, 107, 108, 110, 111, 115, 118, 119, 138, 192, 196, 198, 209, 211, 212, 217, 218, 221, 224, 229, 230, 232, 233, 253, 254, 282, 286, 292, 330, 368, 374, 380, 381, 382, 385, 396, 397, 398, 414, 416, 431, 433], "maximum": [5, 13, 21, 25, 34, 70, 116, 117, 197, 200, 209, 220, 229, 287, 289, 398, 423, 431, 433], "affbh33": 5, "eeffa35": 5, "execut": [6, 16, 70, 84, 115, 116, 117, 126, 194, 200, 201, 209, 215, 218, 220, 221, 223, 229, 253, 446], "deep": [6, 118, 132, 133, 137, 197, 209, 220, 446], "learn": [6, 52, 71, 99, 104, 108, 111, 118, 119, 132, 133, 137, 196, 244, 444, 446], "variou": [6, 15, 23, 24, 30, 52, 56, 61, 71, 83, 84, 92, 93, 110, 115, 118, 119, 120, 126, 128, 418, 446], "framework": [6, 61, 81, 84, 89, 112, 119, 379, 445, 446], "section": [6, 27, 41, 46, 48, 55, 70, 81, 84, 87, 92, 108, 111, 114, 115, 132, 274, 282, 286, 421, 445], "openvino": [6, 16, 17, 23, 45, 46, 86, 89, 90, 92, 96, 116, 117, 126, 223, 275, 380, 382, 396, 397, 398, 445, 447, 449], "via": [6, 84, 128, 218, 445], "launcher": [6, 7, 87, 92, 114, 126, 197, 209, 213, 220, 223, 233, 236, 380, 381, 382, 385, 386, 397, 398, 443, 445], "first": [6, 11, 16, 17, 22, 25, 30, 59, 60, 75, 88, 100, 102, 103, 106, 107, 108, 109, 112, 113, 115, 116, 117, 119, 122, 124, 128, 133, 134, 135, 136, 203, 220, 406, 418], "It": [6, 8, 11, 21, 23, 25, 27, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 44, 45, 46, 51, 54, 56, 63, 64, 65, 66, 67, 68, 69, 70, 72, 74, 75, 78, 79, 84, 88, 92, 101, 102, 106, 108, 109, 111, 114, 115, 119, 122, 132, 188, 194, 196, 197, 198, 200, 209, 217, 218, 220, 221, 222, 236, 238, 253, 273, 274, 275, 282, 285, 286, 292, 345, 377, 380, 381, 382, 384, 385, 391, 392, 393, 394, 396, 397, 398, 400, 401, 402, 406, 415, 418, 427, 433, 446], "done": [6, 8, 21, 25, 84, 88, 115, 197, 209, 220, 224, 445], "l": [6, 25, 81, 87, 112, 113, 118, 122, 126, 407, 418], "extra_arg": [6, 25, 26, 109, 110, 147, 148, 149], "data": [6, 8, 9, 11, 17, 18, 19, 22, 23, 25, 26, 29, 30, 34, 35, 36, 37, 39, 41, 44, 45, 46, 55, 56, 58, 62, 63, 67, 71, 73, 75, 76, 77, 81, 82, 84, 85, 89, 90, 95, 97, 100, 106, 108, 109, 110, 111, 114, 115, 120, 122, 124, 125, 130, 133, 134, 135, 136, 138, 171, 187, 197, 198, 203, 209, 211, 212, 215, 217, 219, 220, 221, 222, 224, 227, 233, 244, 253, 254, 256, 270, 273, 282, 285, 292, 317, 326, 327, 328, 343, 345, 374, 376, 377, 382, 387, 391, 392, 393, 398, 406, 408, 413, 418, 422, 427, 431, 445, 446], "link": [6, 8, 44, 59, 69, 82, 85, 102, 104, 105, 106, 107, 111, 114, 115, 116, 119, 396, 397, 398, 445], "load": [6, 19, 50, 76, 77, 84, 88, 114, 115, 119, 160, 162, 163, 164, 171, 184, 197, 209, 217, 220, 224, 227, 254, 282, 292, 374, 380, 381, 382, 385, 391, 392, 393, 397, 398, 427, 445], "gener": [6, 8, 11, 20, 22, 23, 25, 34, 46, 48, 50, 72, 75, 84, 89, 113, 114, 118, 119, 120, 121, 125, 132, 138, 160, 162, 163, 171, 183, 184, 187, 188, 196, 197, 198, 200, 201, 203, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 224, 227, 228, 229, 230, 233, 234, 244, 253, 254, 259, 271, 275, 282, 287, 288, 289, 292, 302, 304, 341, 366, 374, 381, 382, 384, 385, 386, 387, 391, 392, 393, 397, 398, 400, 401, 402, 410, 412, 415, 418, 423, 431, 433, 434, 445, 446], "automat": [6, 8, 19, 21, 46, 48, 50, 84, 85, 101, 105, 106, 120, 121, 128, 134, 197, 200, 201, 209, 220, 229, 232, 358, 396, 397, 400, 445], "consist": [6, 11, 21, 23, 25, 26, 31, 32, 72, 84, 85, 88, 110, 200, 201, 229, 410], "graph": [6, 85], "weight": [6, 90, 106, 109, 113, 114, 115, 126, 378, 389, 395, 413], "There": [6, 18, 25, 26, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 48, 49, 54, 55, 57, 62, 63, 64, 65, 66, 67, 69, 70, 72, 73, 74, 76, 77, 78, 79, 81, 82, 84, 87, 88, 93, 102, 106, 109, 110, 115, 209, 220, 221, 222, 223, 253, 273, 285, 345, 377, 408, 433, 446], "also": [6, 8, 11, 17, 18, 21, 22, 23, 25, 31, 32, 33, 36, 37, 38, 41, 48, 50, 57, 62, 65, 66, 68, 69, 70, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 88, 92, 100, 101, 102, 104, 108, 110, 111, 113, 114, 115, 116, 117, 118, 119, 122, 126, 128, 132, 160, 162, 163, 171, 181, 188, 200, 201, 218, 220, 221, 224, 225, 227, 229, 230, 253, 274, 282, 286, 292, 374, 391, 392, 393, 394, 410, 414, 416, 418, 433], "script": [6, 16, 25, 84, 87, 90, 93, 446, 449], "intern": [6, 85, 108, 111, 118, 196, 204, 433], "structur": [6, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 52, 54, 55, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 78, 79, 80, 88, 101, 106, 107, 113, 118, 119, 275, 304, 418], "model_nam": [6, 87, 114, 378, 380, 381, 382, 385, 389, 395, 397, 398], "d": [6, 11, 25, 27, 41, 69, 75, 87, 101, 116, 117, 126, 148, 196, 197, 229, 230, 233, 247, 248, 319, 324, 374, 418, 422], "path_to_xml": 6, "w": [6, 16, 18, 19, 25, 26, 39, 70, 84, 87, 104, 106, 107, 109, 111, 114, 115, 116, 120, 126, 135, 182, 197, 198, 200, 201, 209, 217, 220, 222, 224, 227, 229, 254, 282, 292, 319, 329, 374, 387, 391, 392, 393, 398, 401, 417, 423, 445], "path_to_bin": 6, "path_to_interpretation_script": 6, "interpret": [6, 84, 86, 88, 90, 114, 126, 196, 198, 209, 212, 229, 230, 282, 374, 378, 380, 381, 382, 385, 389, 395, 397, 398, 427, 433, 445], "detect": [6, 8, 12, 16, 20, 25, 26, 30, 34, 35, 41, 45, 46, 47, 51, 52, 54, 56, 58, 61, 63, 67, 70, 71, 72, 80, 81, 82, 84, 85, 88, 89, 90, 96, 98, 104, 106, 110, 112, 115, 116, 120, 121, 128, 130, 134, 188, 196, 197, 200, 201, 209, 218, 220, 221, 222, 229, 237, 244, 245, 247, 248, 249, 253, 258, 260, 261, 262, 265, 266, 267, 273, 275, 276, 278, 285, 287, 291, 297, 299, 302, 304, 305, 308, 312, 313, 315, 318, 319, 325, 326, 329, 333, 334, 338, 340, 341, 345, 346, 349, 363, 364, 370, 371, 372, 377, 384, 391, 392, 393, 400, 401, 402, 410, 414, 416, 419, 423, 445, 446, 449], "py": [6, 16, 84, 87, 88, 90, 110, 114, 115, 118, 126, 209, 220, 233, 445, 448], "find": [6, 16, 17, 21, 63, 69, 73, 75, 81, 84, 87, 88, 92, 97, 101, 114, 115, 118, 136, 196, 198, 209, 212, 214, 221, 229, 230, 253, 269, 273, 282, 285, 345, 374, 377, 386, 422, 431, 445], "sampl": [6, 7, 14, 16, 23, 24, 25, 26, 71, 75, 76, 85, 88, 89, 101, 103, 104, 109, 110, 113, 114, 118, 124, 131, 196, 197, 238, 387, 396, 397, 406, 407, 408, 418, 419], "instruct": [6, 56, 58, 60, 87, 92, 113, 115, 434, 446], "dm": [6, 16, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 90, 93, 99, 100, 101, 102, 103, 105, 108, 111, 114, 115, 116, 117, 118, 119, 427, 443, 448], "max_det": [6, 16, 106], "conf_thresh": 6, "0": [6, 10, 11, 16, 21, 23, 24, 25, 30, 31, 34, 39, 40, 41, 46, 51, 52, 54, 55, 58, 62, 63, 69, 70, 73, 74, 75, 77, 80, 81, 82, 84, 87, 90, 92, 93, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 124, 129, 131, 134, 135, 136, 171, 181, 182, 187, 188, 194, 196, 197, 198, 200, 201, 203, 209, 211, 212, 217, 220, 224, 225, 227, 229, 230, 232, 236, 238, 244, 245, 249, 251, 252, 253, 254, 265, 282, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 303, 312, 317, 322, 325, 329, 330, 356, 364, 368, 374, 376, 380, 381, 382, 384, 385, 386, 391, 392, 393, 396, 397, 398, 400, 401, 407, 410, 414, 416, 417, 419, 423, 427, 431, 433], "def": [6, 16, 70, 84, 101, 102, 103, 104, 109, 110, 119, 135, 187, 188, 209, 217, 220, 221, 374, 433], "process_output": [6, 16], "input": [6, 10, 12, 16, 25, 39, 44, 50, 62, 69, 73, 75, 76, 84, 88, 90, 101, 106, 114, 121, 127, 163, 188, 197, 200, 209, 212, 217, 220, 222, 232, 236, 378, 380, 381, 382, 384, 385, 389, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 407, 408, 414, 416, 418, 422, 423, 431, 434, 445], "arrai": [6, 16, 40, 41, 54, 115, 116, 198, 200, 394, 397, 400, 401, 423, 431], "shape": [6, 16, 19, 21, 102, 103, 106, 113, 118, 137, 182, 198, 200, 201, 217, 219, 220, 224, 282, 292, 374, 398, 400, 401, 412, 418, 427, 445], "c": [6, 11, 16, 39, 41, 59, 60, 69, 92, 99, 100, 101, 102, 103, 104, 105, 106, 107, 111, 114, 115, 116, 117, 118, 187, 188, 197, 209, 220, 221, 222, 229, 325, 374, 422, 424, 431, 433], "k": [6, 16, 17, 19, 23, 25, 26, 51, 70, 108, 109, 111, 114, 115, 136, 196, 229, 374, 387, 405, 406, 407, 408, 419], "7": [6, 11, 16, 24, 34, 41, 62, 69, 70, 75, 99, 101, 102, 103, 104, 106, 107, 109, 114, 115, 116, 117, 118, 119, 196, 197, 198, 209, 211, 212, 217, 224, 229, 230, 233, 254, 272, 282, 286, 292, 293, 367, 368, 374, 396, 397], "result": [6, 7, 10, 11, 12, 13, 16, 17, 18, 21, 23, 25, 26, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 48, 50, 62, 65, 66, 69, 70, 72, 74, 76, 78, 79, 83, 84, 85, 88, 89, 90, 93, 105, 106, 115, 116, 117, 119, 122, 124, 132, 136, 188, 192, 197, 198, 200, 209, 217, 218, 220, 221, 222, 224, 227, 229, 237, 253, 282, 292, 382, 384, 387, 391, 392, 393, 398, 400, 401, 402, 405, 407, 408, 418, 423, 431, 433, 437, 447], "convers": [6, 16, 25, 35, 54, 55, 63, 64, 67, 70, 73, 76, 81, 82, 87, 89, 90, 102, 118, 126, 209, 215, 220, 222, 418, 449], "zip": [6, 16, 69, 101, 109, 111, 115, 118, 303], "input_height": [6, 16], "input_width": [6, 16], "image_result": [6, 16], "det": [6, 16, 196, 329], "label": [6, 11, 14, 16, 18, 21, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 62, 63, 64, 67, 69, 70, 71, 72, 73, 74, 76, 78, 79, 80, 81, 82, 84, 85, 89, 90, 93, 96, 103, 104, 105, 106, 107, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 125, 132, 133, 135, 182, 187, 194, 196, 197, 198, 200, 201, 209, 210, 211, 212, 217, 220, 221, 222, 225, 227, 228, 229, 230, 233, 236, 238, 247, 248, 249, 250, 254, 260, 261, 272, 275, 282, 286, 287, 288, 292, 293, 305, 307, 308, 317, 318, 322, 325, 327, 329, 330, 341, 345, 358, 363, 368, 372, 374, 378, 386, 391, 392, 393, 394, 397, 398, 401, 410, 418, 423, 443, 444, 445, 448], "int": [6, 13, 16, 17, 25, 26, 59, 60, 63, 64, 109, 117, 187, 188, 192, 194, 196, 197, 198, 200, 201, 209, 210, 212, 213, 214, 216, 217, 220, 221, 224, 227, 229, 230, 232, 233, 235, 236, 238, 244, 249, 250, 251, 254, 255, 256, 270, 274, 282, 287, 288, 289, 292, 293, 294, 295, 296, 304, 307, 343, 358, 364, 368, 374, 380, 381, 382, 385, 386, 387, 391, 392, 393, 394, 396, 397, 398, 400, 405, 406, 407, 408, 412, 414, 416, 417, 418, 419, 423, 426, 427, 431, 433, 434], "conf": [6, 16, 21, 106, 182, 220, 225, 229], "float": [6, 16, 23, 25, 26, 44, 54, 63, 65, 66, 69, 113, 117, 124, 194, 196, 197, 198, 200, 201, 209, 217, 224, 229, 232, 238, 244, 282, 292, 329, 358, 364, 374, 380, 381, 382, 385, 386, 387, 391, 392, 393, 394, 396, 397, 398, 400, 414, 416, 418, 419, 423, 433], "continu": [6, 7, 100, 109, 110, 135, 445], "x": [6, 10, 16, 18, 26, 39, 56, 62, 73, 75, 84, 109, 113, 118, 120, 182, 188, 198, 200, 201, 209, 211, 217, 220, 221, 229, 282, 292, 329, 374, 397, 398, 400, 417, 423, 424, 433, 445], "y": [6, 16, 18, 26, 56, 84, 109, 118, 120, 171, 182, 188, 198, 200, 201, 217, 220, 221, 229, 238, 282, 292, 329, 374, 397, 398, 400, 417, 423, 433], "4": [6, 9, 11, 16, 21, 24, 30, 31, 34, 46, 47, 55, 69, 75, 84, 88, 90, 99, 101, 102, 103, 104, 106, 107, 109, 111, 113, 114, 115, 116, 117, 118, 119, 130, 196, 198, 200, 201, 209, 211, 212, 217, 220, 224, 229, 230, 233, 237, 254, 272, 282, 286, 292, 293, 296, 329, 367, 368, 374, 405, 410], "min": [6, 16, 24, 26], "5": [6, 9, 11, 16, 18, 23, 24, 25, 31, 34, 40, 41, 54, 69, 75, 81, 88, 90, 99, 100, 101, 102, 103, 104, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 124, 135, 194, 196, 197, 198, 203, 209, 211, 212, 217, 218, 220, 221, 224, 225, 229, 230, 233, 238, 245, 253, 254, 272, 282, 286, 292, 293, 296, 302, 304, 329, 367, 368, 374, 384, 386, 405, 407, 410, 423, 433], "6": [6, 16, 21, 24, 31, 34, 40, 59, 60, 69, 70, 99, 101, 102, 103, 104, 106, 107, 109, 115, 116, 117, 118, 196, 198, 208, 209, 211, 212, 217, 224, 229, 230, 233, 238, 254, 256, 272, 282, 286, 292, 293, 296, 367, 368, 374, 413], "append": [6, 16, 84, 105, 109, 110, 162, 163, 171, 184, 197, 209, 220, 233, 236, 397, 398, 434, 445], "bbox": [6, 11, 16, 18, 21, 24, 25, 26, 30, 34, 35, 38, 41, 44, 45, 46, 48, 51, 52, 54, 56, 59, 60, 63, 65, 66, 67, 69, 70, 72, 76, 78, 79, 80, 81, 84, 89, 90, 100, 102, 104, 105, 106, 107, 109, 110, 111, 112, 114, 118, 120, 121, 132, 135, 196, 198, 200, 201, 209, 211, 212, 217, 220, 225, 229, 230, 238, 254, 280, 282, 286, 292, 293, 341, 374, 386, 391, 392, 393, 394, 396, 398, 401, 410, 414, 416, 418, 423, 431, 443], "attribut": [6, 11, 16, 21, 24, 25, 26, 30, 31, 32, 33, 36, 37, 38, 40, 41, 43, 44, 45, 46, 48, 49, 50, 53, 54, 55, 57, 59, 60, 63, 64, 65, 66, 69, 70, 72, 73, 74, 76, 80, 81, 82, 84, 89, 109, 110, 114, 116, 118, 119, 121, 135, 187, 188, 196, 197, 198, 200, 201, 209, 210, 211, 212, 217, 218, 227, 229, 230, 252, 253, 254, 279, 282, 292, 324, 368, 374, 386, 391, 392, 393, 394, 397, 398, 400, 401, 408, 410, 418, 419, 424, 427, 433, 444, 445], "score": [6, 16, 21, 25, 41, 54, 63, 69, 108, 111, 113, 114, 115, 117, 386, 387, 396, 397, 400, 406, 408], "return": [6, 16, 18, 25, 70, 84, 88, 101, 102, 103, 104, 109, 110, 113, 115, 119, 135, 162, 163, 171, 184, 187, 188, 193, 194, 196, 197, 198, 200, 201, 203, 207, 208, 209, 210, 211, 212, 215, 217, 218, 220, 221, 222, 223, 224, 227, 228, 229, 230, 232, 233, 234, 236, 237, 244, 245, 247, 248, 249, 250, 253, 254, 273, 282, 285, 287, 288, 292, 307, 308, 318, 325, 341, 345, 358, 363, 368, 374, 377, 378, 382, 384, 387, 391, 392, 393, 397, 398, 400, 401, 402, 406, 407, 408, 418, 419, 422, 423, 431, 433, 434, 435, 437, 445], "get_categori": [6, 188, 384, 391, 392, 393, 400, 401, 402], "provid": [6, 8, 10, 11, 12, 19, 21, 22, 25, 30, 31, 35, 36, 40, 44, 46, 52, 55, 56, 61, 63, 64, 70, 71, 77, 84, 88, 93, 96, 97, 99, 101, 102, 103, 105, 106, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 127, 128, 131, 132, 133, 134, 135, 137, 187, 188, 196, 197, 198, 209, 210, 211, 212, 214, 217, 219, 220, 221, 224, 225, 227, 228, 229, 230, 232, 233, 249, 250, 274, 282, 286, 287, 289, 292, 364, 374, 382, 397, 398, 412, 418, 431, 433, 445, 446], "categori": [6, 14, 25, 30, 35, 39, 40, 41, 54, 55, 58, 62, 67, 69, 70, 73, 81, 84, 90, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 128, 134, 187, 188, 196, 197, 198, 209, 210, 211, 212, 217, 220, 221, 222, 225, 226, 227, 228, 229, 230, 231, 233, 236, 238, 245, 247, 248, 249, 250, 274, 282, 283, 286, 287, 288, 307, 308, 318, 325, 341, 358, 363, 368, 374, 384, 391, 392, 393, 397, 398, 400, 401, 402, 418, 421, 432, 443, 445], "map": [6, 7, 25, 40, 54, 70, 71, 76, 84, 90, 93, 99, 100, 103, 108, 113, 133, 171, 196, 198, 209, 216, 220, 222, 229, 233, 244, 274, 282, 286, 368, 378, 407, 418, 423, 431], "label_categori": [6, 108, 109, 111, 114, 245], "labelcategori": [6, 26, 39, 84, 109, 110, 196, 198, 209, 212, 229, 230, 245, 282, 374, 418, 423, 443], "person": [6, 14, 18, 21, 24, 25, 40, 41, 51, 54, 57, 59, 60, 70, 84, 87, 89, 93, 100, 102, 103, 105, 109, 110, 112, 113, 319, 368, 407, 410, 418], "car": [6, 14, 24, 25, 51, 70, 74, 84, 93, 100, 103, 105, 109, 110, 112, 113, 118, 220, 225, 229, 230, 329, 330, 368, 418], "annotationtyp": [6, 70, 81, 84, 99, 100, 102, 108, 109, 110, 111, 114, 119, 187, 188, 196, 197, 198, 200, 201, 209, 210, 211, 212, 217, 220, 221, 226, 227, 228, 229, 230, 231, 238, 249, 250, 254, 280, 282, 286, 292, 293, 368, 374, 391, 392, 393, 397, 398, 443, 445], "model1": 6, "produc": [6, 10, 16, 21, 25, 41, 72, 77, 83, 84, 116, 117, 134, 196, 197, 198, 209, 217, 218, 220, 221, 230, 253, 274, 282, 286, 292, 386, 396, 397, 398, 400, 418, 433, 444, 446], "store": [6, 11, 19, 26, 30, 33, 36, 37, 38, 39, 41, 45, 46, 50, 69, 70, 75, 84, 88, 113, 114, 115, 119, 196, 197, 209, 220, 233, 394], "auto": [6, 46, 211], "launch": [6, 113, 209, 220, 222, 378, 396, 397, 398, 446], "infer": [6, 11, 25, 84, 86, 89, 101, 106, 114, 126, 197, 198, 209, 217, 220, 222, 233, 236, 292, 378, 380, 381, 382, 385, 389, 396, 397, 398, 405, 406, 408, 431, 446], "mymodel": [6, 11, 16, 90], "updat": [7, 18, 22, 23, 25, 84, 90, 100, 109, 110, 115, 118, 119, 120, 122, 197, 198, 201, 204, 209, 212, 217, 220, 221, 229, 232, 233, 282, 292, 374, 398, 418, 444, 445, 446], "old": [7, 90, 115, 122, 445, 448], "cannot": [7, 34, 45, 46, 72, 107, 127, 187, 188, 209, 214, 220, 223, 225, 230, 382, 445], "inplac": [7, 18, 23, 25, 88], "configur": [7, 15, 84, 114, 115, 116, 117, 220, 225, 229, 380, 381, 382, 385, 396, 397, 398], "fail": [7, 8, 18, 22, 23, 25, 107, 197, 207, 209, 214, 215, 218, 220, 221, 253, 358], "so": [7, 17, 18, 22, 23, 25, 29, 30, 41, 52, 58, 70, 71, 84, 88, 106, 107, 114, 115, 118, 119, 133, 218, 221, 224, 227, 253, 282, 292, 374, 391, 392, 393, 394, 414, 416, 418, 433], "With": [7, 48, 57, 59, 80, 122, 124, 128, 129, 132, 133, 134, 135, 136, 137, 382], "flag": [7, 25, 102, 113, 115, 209, 215, 220, 221, 253, 270, 273, 283, 285, 345, 367, 375, 377], "skip": [7, 34, 44, 100, 101, 103, 105, 109, 110, 112, 113, 118, 126, 207, 209, 215, 221], "its": [7, 8, 9, 40, 41, 52, 54, 61, 70, 81, 83, 84, 85, 88, 93, 106, 114, 119, 126, 187, 188, 196, 197, 198, 201, 209, 210, 211, 212, 217, 220, 221, 224, 227, 228, 229, 230, 238, 244, 271, 282, 287, 288, 292, 302, 304, 366, 374, 391, 392, 393, 394, 397, 398, 419, 431, 433], "ignor": [7, 11, 22, 24, 46, 63, 100, 112, 229, 233, 330, 368, 427, 433, 437], "fals": [7, 18, 34, 35, 39, 40, 41, 44, 45, 46, 48, 49, 50, 54, 55, 57, 59, 62, 63, 64, 67, 69, 70, 73, 75, 76, 80, 81, 89, 90, 102, 105, 106, 115, 116, 135, 148, 160, 162, 163, 164, 171, 181, 184, 188, 196, 197, 200, 201, 203, 204, 209, 215, 217, 218, 220, 221, 222, 224, 229, 233, 236, 249, 251, 253, 258, 266, 270, 279, 282, 283, 287, 289, 297, 300, 302, 304, 305, 307, 316, 318, 319, 324, 326, 327, 328, 329, 330, 341, 343, 352, 358, 361, 363, 367, 372, 374, 378, 379, 381, 382, 385, 386, 395, 396, 397, 398, 418, 422, 427, 431, 433, 434, 437], "v1": [7, 58, 118, 322], "v2": [7, 51, 58, 115, 118, 322], "regist": [7, 88, 113, 160, 162, 163, 164, 171, 209, 220, 234, 437], "locat": [7, 29, 44, 82, 84, 119, 218, 446, 447], "test_proj": 7, "extractor": [7, 84, 113, 197, 207, 209, 210, 212, 213, 215, 217, 220, 221, 228, 233, 236, 249, 251, 252, 253, 258, 262, 266, 267, 270, 273, 279, 282, 283, 285, 287, 289, 297, 300, 302, 303, 304, 305, 311, 316, 318, 319, 324, 327, 328, 329, 330, 337, 341, 345, 346, 348, 352, 358, 361, 363, 367, 372, 374, 375, 377, 386, 387, 396, 397, 398, 407, 408, 414, 415, 416, 418, 445, 446], "ade20k2017": [7, 27, 31], "ade20k2020": [7, 27, 32, 113], "camvid": [7, 34, 40, 41, 42, 44, 45, 46, 51], "cifar": [7, 51, 62, 89, 118], "cityscap": [7, 42, 51, 64, 89, 118, 119, 126, 128, 131, 445], "coco_capt": [7, 41, 101], "coco_image_info": [7, 41], "coco_inst": [7, 8, 10, 41, 63, 64, 81, 100, 101, 103, 104, 105, 109, 110, 112, 114, 116, 118, 134], "coco_label": [7, 41], "coco_panopt": [7, 41, 101, 128], "coco_person_keypoint": [7, 41], "coco_stuff": [7, 41], "cvat": [7, 8, 51, 88, 89, 90, 119, 445], "icdar_text_loc": [7, 48], "icdar_text_segment": [7, 48], "icdar_word_recognit": [7, 48], "image_dir": [7, 8, 10, 21, 83, 118, 258, 297, 305, 329, 330], "image_zip": [7, 49, 83], "imagenet": [7, 15, 35, 51, 57, 67, 69, 70, 89, 108, 115, 118, 133, 445], "imagenet_txt": [7, 15, 33, 38, 50, 122], "kitti": [7, 51, 83, 89, 337], "kitti_detect": [7, 54], "kitti_raw": [7, 55, 73], "kitti_segment": [7, 54], "label_m": [7, 48, 56, 70], "lfw": [7, 51, 89], "market1501": [7, 59], "mnist": [7, 15, 39, 51, 89, 118, 127], "mnist_csv": [7, 62, 118], "mot_seq": 7, "mot": [7, 51, 445], "mots_png": 7, "open_imag": [7, 50, 69, 76, 80, 279], "sly_pointcloud": [7, 55, 73], "tf_detection_api": [7, 8, 90], "vgg_face2": [7, 50, 57, 76], "voc_act": [7, 70, 367, 368], "voc_classif": [7, 57, 70, 367, 368], "voc_detect": [7, 8, 70, 80, 100, 112, 367, 368], "voc_layout": [7, 70, 112, 367, 368], "voc_segment": [7, 70, 90, 367, 368], "wider_fac": [7, 76, 80], "yolo": [7, 8, 10, 11, 21, 22, 51, 71, 76, 84, 89, 104, 106, 107, 111, 114, 116, 118, 119, 445], "yolo_ultralyt": [7, 82, 106, 376, 377], "mot_seq_gt": 7, "url": [7, 8, 13, 15, 26, 69, 77, 83, 85, 88, 233, 302, 303, 343, 364, 374, 382, 434], "pascal": [7, 42, 51, 52, 67, 84, 87, 89, 90, 100, 119, 431, 445], "voc2012": [7, 49, 70, 81, 87, 90], "3eb282cdd7339d05b75bd932a1fd3201": 7, "root": [7, 41, 44, 58, 69, 85, 88, 100, 101, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 148, 162, 205, 218, 221, 233, 253, 269, 304], "type": [7, 11, 18, 19, 23, 24, 25, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 50, 52, 53, 54, 55, 56, 57, 58, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 89, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 132, 134, 187, 188, 196, 197, 198, 200, 201, 202, 209, 210, 211, 212, 214, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 233, 234, 236, 237, 244, 245, 250, 252, 253, 254, 273, 282, 285, 286, 287, 288, 292, 345, 347, 358, 368, 374, 377, 378, 380, 381, 382, 385, 387, 391, 392, 393, 394, 395, 396, 397, 398, 400, 406, 418, 419, 423, 431, 433, 434, 445], "ilsvrc2012_img_v": 7, "train": [7, 8, 10, 11, 16, 17, 18, 25, 30, 35, 39, 40, 41, 45, 47, 50, 53, 54, 58, 61, 62, 64, 67, 69, 71, 74, 76, 78, 79, 81, 82, 84, 87, 89, 90, 99, 100, 102, 103, 105, 109, 110, 112, 113, 118, 119, 122, 124, 131, 132, 133, 134, 137, 196, 220, 225, 229, 230, 265, 275, 304, 368, 374, 375, 376, 387, 407, 408, 410, 418, 427, 434, 449], "e47804a3ec1a54c9b145e5f1007ec72f": 7, "These": [8, 59, 62, 70, 71, 92, 110, 119, 209, 220, 222, 378], "here": [8, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 48, 50, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 87, 89, 92, 95, 96, 97, 98, 100, 103, 109, 112, 113, 118, 119, 120, 121, 124, 126, 128, 131, 133, 134, 136, 209, 218, 220, 221, 253, 447], "download": [8, 19, 20, 35, 39, 40, 41, 48, 50, 52, 53, 55, 57, 58, 59, 60, 62, 63, 64, 67, 68, 69, 70, 73, 80, 88, 90, 105, 113, 122, 128, 130, 131, 133, 233, 445], "reader": 8, "local": [8, 13, 15, 48, 51, 56, 85, 92, 115, 116, 117, 118, 184], "filesystem": [8, 218, 445, 447], "whole": [8, 16, 17, 25, 41, 54, 70, 85, 88, 194, 224, 387, 408], "howev": [8, 25, 41, 44, 52, 82, 83, 88, 102, 104, 106, 107, 111, 114, 116, 117, 119, 126, 131, 221, 386, 415], "mani": [8, 54, 77, 81, 84, 92, 100, 108, 110, 111, 117, 126, 197, 209, 220, 221, 253, 273, 285, 345, 377, 433], "subset": [8, 11, 14, 15, 17, 18, 23, 24, 25, 26, 33, 38, 41, 44, 47, 56, 61, 62, 69, 70, 71, 75, 76, 77, 80, 83, 84, 85, 89, 90, 99, 101, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 122, 124, 127, 128, 134, 135, 138, 147, 148, 149, 187, 188, 193, 194, 196, 197, 209, 210, 211, 212, 214, 216, 220, 221, 225, 227, 228, 229, 230, 233, 236, 238, 244, 249, 250, 252, 253, 254, 258, 261, 262, 264, 265, 266, 267, 269, 270, 271, 273, 275, 276, 278, 282, 283, 285, 287, 288, 289, 292, 297, 302, 303, 304, 305, 307, 315, 319, 326, 327, 328, 329, 330, 333, 334, 340, 341, 343, 344, 345, 346, 347, 351, 358, 360, 364, 366, 370, 371, 372, 374, 377, 379, 387, 391, 392, 393, 397, 398, 407, 408, 410, 418, 434, 444, 445], "val": [8, 25, 30, 40, 41, 46, 47, 64, 70, 81, 82, 84, 89, 99, 100, 103, 106, 108, 111, 112, 113, 114, 115, 131, 171, 214, 265, 275, 304, 375, 410], "test": [8, 16, 17, 25, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 53, 54, 55, 58, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 82, 84, 89, 92, 99, 100, 102, 103, 111, 113, 114, 118, 119, 122, 131, 135, 265, 304, 410, 418, 434, 445], "limit": [8, 15, 25, 41, 70, 92, 115, 380, 381, 382, 385, 396, 397, 398, 433, 445], "r": [8, 23, 25, 30, 31, 32, 35, 41, 70, 77, 92, 106, 107, 113, 115, 124, 193, 198, 233, 368, 431], "non": [8, 16, 18, 30, 31, 32, 33, 38, 39, 40, 41, 54, 62, 70, 74, 81, 82, 90, 115, 117, 162, 209, 220, 396, 397, 400, 423, 433, 434], "standard": [8, 11, 15, 74, 132, 187, 188, 433], "placement": 8, "thing": [8, 102], "config": [8, 58, 84, 88, 115, 205, 209, 233, 368, 382], "each": [8, 10, 11, 13, 16, 17, 21, 23, 25, 27, 30, 31, 32, 34, 36, 37, 39, 40, 41, 44, 46, 47, 50, 51, 52, 53, 57, 59, 60, 62, 63, 69, 70, 75, 77, 80, 84, 85, 88, 102, 105, 109, 111, 114, 115, 118, 119, 122, 131, 133, 187, 194, 196, 197, 198, 200, 201, 209, 210, 211, 212, 217, 218, 220, 221, 222, 225, 227, 229, 230, 233, 236, 238, 249, 250, 253, 273, 282, 285, 292, 345, 358, 377, 378, 396, 397, 398, 400, 401, 407, 408, 410, 414, 416, 418, 433, 444, 445], "assign": [8, 41, 44, 55, 59, 63, 64, 73, 111, 196, 218, 221, 223, 244, 253], "subtask": [8, 233], "try": [8, 12, 34, 85, 88, 107, 115, 197, 209, 220, 221, 232, 433], "differ": [8, 9, 10, 11, 21, 25, 30, 36, 39, 40, 41, 44, 46, 53, 54, 55, 58, 70, 83, 85, 88, 99, 107, 108, 115, 118, 122, 128, 132, 197, 198, 200, 201, 208, 209, 220, 229, 292, 386, 391, 392, 393, 394, 418], "tfrecord": [8, 90, 445], "tf": [8, 15, 51, 81, 89, 115, 127, 389, 446], "api": [8, 25, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 89, 101, 102, 103, 104, 105, 106, 107, 118, 120, 124, 126, 127, 128, 135, 136, 137, 220, 421, 443, 445, 446], "below": [8, 46, 52, 56, 73, 75, 87, 103, 109, 110, 112, 113, 115, 118, 119, 120, 124, 128, 129, 135, 136, 137], "instances_default": 8, "json": [8, 10, 11, 13, 15, 21, 25, 26, 30, 31, 32, 33, 38, 39, 40, 41, 42, 44, 45, 46, 51, 53, 54, 55, 58, 61, 62, 69, 70, 72, 73, 74, 78, 81, 82, 100, 101, 103, 105, 109, 110, 112, 113, 115, 118, 127, 132, 133, 134, 203, 220, 269, 274, 275, 282, 284, 286, 322, 333, 341, 345, 353, 371, 418, 445], "custom_subset_dir": 8, "txt": [8, 11, 23, 31, 33, 38, 40, 46, 48, 50, 51, 54, 55, 57, 62, 63, 64, 70, 76, 80, 81, 82, 90, 104, 106, 107, 111, 112, 114, 116, 118, 132, 148, 262, 264, 265, 266, 267, 290, 305, 307, 312, 317, 319, 329, 330, 345, 363, 368, 372, 445], "unlik": [8, 10, 22, 25, 221, 410], "doe": [8, 9, 13, 15, 17, 25, 41, 46, 51, 54, 55, 69, 70, 74, 81, 82, 88, 119, 127, 162, 171, 184, 197, 200, 201, 209, 218, 220, 221, 229, 253, 374, 382, 391, 392, 393, 394, 407, 425], "defin": [8, 13, 25, 26, 40, 54, 56, 70, 88, 100, 105, 109, 110, 114, 119, 187, 188, 196, 198, 200, 201, 209, 210, 211, 212, 217, 218, 221, 227, 229, 253, 282, 292, 374, 391, 392, 393, 398, 418, 419, 427, 433, 445], "instances_train": 8, "dataset1": [8, 11, 18, 21, 22, 84, 132], "dataset2": [8, 11, 18, 21, 22, 84, 118, 132], "avoid": [8, 41, 88, 89, 90, 100, 209, 212, 217, 218, 220, 221, 236, 253, 418, 431, 445], "we": [8, 16, 17, 21, 23, 30, 45, 46, 52, 61, 70, 82, 88, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 126, 128, 129, 131, 132, 133, 134, 135, 136, 137, 198, 209, 220, 221, 225, 229, 230, 238, 253, 273, 285, 345, 377, 418, 431], "insid": [8, 48, 69, 85, 88, 113, 132, 133, 233], "proj": [8, 10, 87], "dvc": [8, 88, 445], "my_coco": 8, "image1": [8, 17, 25, 70, 81, 82, 84, 90, 418], "coco_annot": 8, "dvcignor": [8, 88, 233], "gitignor": [8, 88, 233], "mv": 8, "move": [8, 63, 74, 108, 111, 112, 113, 122, 196, 229, 233, 374], "do": [8, 14, 15, 21, 34, 45, 46, 51, 60, 76, 84, 88, 93, 102, 114, 119, 135, 160, 162, 163, 164, 171, 200, 201, 209, 217, 218, 220, 221, 229, 238, 253, 287, 288, 289, 427, 433, 437, 446], "dure": [8, 10, 16, 21, 25, 36, 108, 111, 197, 209, 220, 380, 381, 382, 385, 386, 396, 397, 398, 410], "metainfo": [8, 44, 73, 187, 196, 197, 198, 209, 210, 211, 212, 220, 221, 224, 227, 228, 229, 230, 233, 236, 247, 248, 249, 250, 282, 287, 288, 292, 307, 308, 318, 325, 341, 358, 363, 374, 397, 398, 418], "src1": 8, "summari": [9, 21, 26, 106, 109, 110, 119, 220, 237], "possibl": [9, 25, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 46, 51, 54, 55, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 74, 75, 78, 79, 84, 100, 101, 115, 119, 126, 135, 197, 209, 220, 410, 446], "valu": [9, 11, 17, 24, 25, 26, 40, 48, 51, 55, 59, 63, 69, 84, 102, 105, 108, 109, 110, 111, 114, 115, 116, 117, 119, 124, 142, 160, 162, 163, 171, 181, 182, 184, 187, 188, 196, 198, 200, 201, 204, 209, 211, 212, 214, 217, 218, 220, 221, 224, 225, 227, 229, 230, 233, 234, 237, 238, 253, 254, 262, 267, 270, 272, 282, 286, 292, 301, 303, 311, 312, 317, 322, 329, 330, 337, 338, 356, 358, 360, 361, 362, 367, 368, 374, 376, 380, 381, 382, 385, 387, 391, 392, 393, 397, 398, 405, 408, 410, 418, 419, 422, 427, 431, 433, 445], "foreign_modifi": [9, 233], "wai": [9, 12, 15, 21, 25, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 88, 93, 127, 132, 135, 187, 188, 197, 200, 201, 209, 218, 220, 229, 410, 433, 443, 446], "were": [9, 21, 115, 196, 230, 433], "thei": [9, 18, 25, 41, 44, 52, 55, 58, 59, 60, 70, 84, 85, 88, 92, 99, 109, 112, 118, 188, 196, 198, 200, 201, 217, 221, 229, 230, 282, 292, 374, 398, 414, 416, 418, 433, 446], "wa": [9, 13, 41, 59, 88, 100, 101, 103, 105, 109, 110, 112, 115, 116, 117, 196, 200, 201, 218, 221, 229, 233, 253, 394, 433], "won": [9, 84, 88, 197, 209, 217, 224, 227, 254, 282, 292, 374, 391, 392, 393], "report": [9, 11, 13, 15, 25, 26, 120, 127, 132, 133, 134, 197, 203, 207, 209, 214, 215, 218, 220, 221, 232, 237, 418, 419, 433, 445], "just": [9, 12, 21, 61, 69, 88, 92, 197, 209, 220, 292, 293, 374, 433], "In": [9, 15, 21, 23, 25, 30, 39, 40, 41, 44, 45, 46, 61, 69, 70, 83, 84, 85, 88, 92, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 126, 127, 131, 132, 133, 134, 135, 197, 209, 220, 222, 223, 229, 232, 244, 358, 374, 386, 410, 414, 416, 446], "situat": [9, 88, 129, 218, 431], "miss": [9, 21, 25, 26, 74, 84, 88, 96, 110, 115, 119, 120, 233, 386, 418, 423], "still": [9, 109, 118, 188, 221, 374, 433], "reproduc": [9, 10, 17, 18, 25, 83, 88], "make": [10, 16, 21, 34, 35, 40, 41, 42, 43, 44, 45, 46, 54, 55, 63, 64, 67, 68, 69, 70, 71, 72, 73, 81, 84, 88, 99, 103, 108, 111, 113, 119, 128, 131, 135, 194, 209, 210, 212, 220, 221, 229, 236, 374, 391, 392, 393, 394, 397, 398, 431, 433, 445], "direct": [10, 41, 46, 85, 89, 160, 162, 163, 171, 181, 433], "system": [10, 83, 88, 92, 113, 128, 137], "environ": [10, 15, 83, 84, 88, 92, 113, 115, 119, 124, 129, 134, 136, 171, 184, 197, 209, 220, 233, 443], "instead": [10, 11, 15, 16, 41, 51, 54, 62, 69, 70, 80, 103, 115, 118, 124, 126, 135, 218, 433], "stabl": [10, 113], "step": [10, 17, 18, 25, 62, 77, 88, 91, 99, 106, 108, 111, 113, 114, 115, 117, 119, 122, 126, 188, 209, 220, 222, 224, 227, 282, 292, 364, 384, 391, 392, 393, 400, 401, 402], "": [10, 11, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 45, 46, 48, 52, 57, 59, 60, 69, 70, 75, 77, 81, 82, 84, 85, 88, 92, 100, 102, 104, 106, 107, 108, 109, 110, 111, 113, 115, 116, 117, 118, 119, 120, 122, 126, 127, 128, 132, 136, 160, 162, 163, 171, 181, 184, 188, 196, 197, 198, 200, 201, 202, 209, 211, 218, 220, 221, 229, 233, 236, 253, 324, 374, 394, 396, 397, 398, 400, 401, 407, 408, 422, 427, 433, 434, 445, 446], "pattern": [10, 25, 41, 50, 62, 77, 84, 118, 121, 124, 137, 218, 221, 253, 319, 324, 414, 416, 418, 422], "start": [10, 17, 25, 41, 53, 59, 60, 77, 84, 85, 100, 102, 103, 106, 109, 113, 115, 117, 209, 221, 224, 227, 232, 282, 292, 374, 418, 431, 433, 434, 447], "b": [10, 11, 16, 30, 31, 32, 41, 69, 77, 118, 182, 197, 200, 201, 203, 208, 214, 220, 225, 227, 229, 230, 231, 368, 374, 422, 423, 431, 434], "finish": [10, 77, 209, 232, 433], "end": [10, 53, 70, 77, 82, 108, 111, 224, 227, 229, 282, 292, 374, 433, 447], "note": [10, 15, 16, 21, 22, 25, 29, 41, 46, 48, 50, 53, 57, 58, 59, 60, 72, 75, 76, 77, 80, 81, 82, 83, 88, 113, 119, 120, 137, 188, 200, 201, 209, 221, 224, 227, 229, 282, 292, 374, 407, 408, 410, 433], "denot": [10, 198, 218], "close": [10, 21, 25, 77, 106, 218, 221, 224, 227, 229, 233, 253, 270, 282, 292, 410, 437], "interv": [10, 16, 77, 209, 224, 227, 232, 282, 292], "equival": [10, 53, 209, 218, 221, 433], "video_fram": [10, 77, 83, 224, 254, 282, 286, 292], "mp4": [10, 77, 83], "param": [10, 106, 108, 111, 162, 233, 413], "split_video": [10, 83], "src_path": 10, "name_pattern": [10, 364], "start_fram": [10, 77, 224, 227, 282, 292, 364], "end_fram": [10, 77, 224, 227, 282, 292, 364, 445], "image_ext": [10, 34, 39, 40, 41, 44, 48, 49, 50, 54, 55, 57, 59, 62, 63, 64, 69, 70, 73, 76, 80, 81, 209, 215, 220, 249, 251, 258, 262, 266, 272, 280, 282, 283, 284, 287, 289, 290, 297, 300, 301, 302, 304, 305, 312, 318, 319, 324, 327, 328, 329, 330, 338, 341, 358, 363, 368, 372], "06d": [10, 77, 364], "integ": [10, 19, 25, 39, 40, 41, 53, 55, 73, 77, 136, 137, 196, 198, 418, 433], "none": [10, 17, 25, 34, 40, 41, 44, 49, 54, 55, 63, 64, 70, 73, 77, 81, 99, 100, 101, 106, 109, 110, 117, 118, 147, 148, 149, 160, 162, 163, 164, 171, 180, 182, 184, 187, 188, 192, 193, 194, 196, 197, 198, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 244, 245, 247, 248, 249, 250, 251, 253, 254, 256, 258, 260, 261, 262, 264, 265, 266, 267, 270, 273, 274, 275, 276, 278, 282, 283, 285, 286, 287, 288, 289, 291, 292, 293, 295, 296, 297, 299, 300, 302, 303, 304, 305, 307, 308, 311, 312, 315, 318, 319, 324, 325, 326, 327, 328, 329, 330, 333, 334, 337, 340, 341, 343, 344, 345, 346, 347, 349, 351, 358, 360, 363, 364, 366, 367, 368, 370, 371, 372, 374, 377, 378, 379, 380, 381, 382, 385, 386, 387, 389, 391, 392, 393, 395, 396, 397, 398, 400, 407, 408, 410, 412, 413, 418, 419, 422, 423, 427, 430, 431, 433, 434, 437, 441, 445], "30": [10, 75, 77, 103, 106, 115, 118], "rd": 10, "frame_xxxxxx": [10, 77], "frame_": [10, 25, 77, 418], "avi": [10, 53, 83], "two": [11, 21, 44, 48, 50, 53, 58, 59, 60, 64, 65, 66, 98, 99, 100, 102, 103, 114, 118, 119, 188, 200, 203, 209, 220, 221, 222, 225, 229, 230, 374, 386, 433], "consid": [11, 21, 23, 25, 41, 70, 75, 83, 88, 114, 118, 200, 201, 218, 220, 221, 225, 229, 253, 386, 407, 418, 431], "ground": [11, 41, 47, 56, 69, 90, 113, 114, 386], "truth": [11, 41, 56, 69, 90, 113, 114, 386], "mainli": 11, "base": [11, 17, 22, 23, 25, 26, 84, 87, 88, 89, 113, 115, 118, 119, 120, 124, 128, 132, 133, 134, 135, 136, 137, 142, 147, 148, 149, 160, 162, 163, 164, 171, 181, 182, 183, 184, 187, 188, 192, 194, 196, 197, 198, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 244, 245, 247, 248, 249, 251, 252, 253, 254, 255, 256, 258, 260, 261, 262, 264, 265, 266, 267, 270, 271, 272, 273, 274, 275, 276, 279, 280, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 300, 301, 302, 303, 304, 305, 308, 311, 312, 313, 316, 317, 318, 319, 322, 323, 324, 325, 326, 327, 328, 329, 330, 333, 334, 337, 338, 339, 340, 341, 344, 345, 346, 348, 349, 352, 353, 356, 357, 358, 361, 362, 363, 364, 367, 368, 369, 370, 371, 372, 375, 376, 377, 378, 379, 380, 382, 384, 385, 386, 387, 389, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 405, 406, 407, 408, 410, 412, 413, 414, 415, 416, 418, 419, 421, 427, 428, 433, 434, 435, 437, 439], "statist": [11, 16, 26, 84, 88, 89, 96, 109, 110, 115, 196, 220, 237, 245, 419, 445], "metric": [11, 77, 84, 114, 115, 132, 196, 200, 229, 386, 423], "revpath": [11, 14, 16, 17, 18, 21, 22, 23, 24, 25, 26, 85, 171, 184], "iou": [11, 16, 21, 69, 84, 106, 114, 117, 198, 200, 201, 217, 229, 244, 282, 292, 374, 386, 396, 397, 398, 400, 423, 431], "thresh": [11, 16, 21], "iou_thresh": [11, 21, 423], "iia": 11, "ignore_item_attr": 11, "ia": 11, "ignore_attr": 11, "ignore_field": 11, "match": [11, 13, 16, 21, 22, 25, 41, 57, 59, 83, 84, 88, 100, 101, 103, 105, 109, 110, 112, 188, 197, 198, 200, 209, 218, 220, 221, 222, 225, 227, 229, 230, 244, 253, 380, 381, 382, 384, 385, 386, 391, 392, 393, 394, 397, 398, 400, 401, 402, 418, 423], "first_target": 11, "second_target": 11, "comparison": [11, 84, 89, 131, 138, 196, 203, 220, 445], "threshold": [11, 16, 21, 26, 109, 113, 117, 229, 244, 364, 387, 396, 397, 400, 414, 416, 419, 431], "spatial": [11, 21, 25, 84, 114, 118, 200, 201, 229, 386, 423], "simpl": [11, 12, 21, 25, 88, 89, 102, 104, 106, 107, 111, 114, 116, 132, 133, 135, 182, 197, 200, 209, 210, 220, 221, 225, 227, 228, 282, 374, 423], "text": [11, 15, 17, 23, 25, 29, 31, 46, 48, 51, 84, 97, 113, 118, 119, 127, 182, 198, 203, 209, 217, 218, 220, 221, 222, 238, 253, 282, 292, 378, 418], "tensorboard": [11, 90, 115, 182, 220], "tb": 11, "attr": [11, 25, 44, 55, 73, 160, 162, 163, 171, 183, 187, 188, 196, 198, 200, 201, 203, 207, 209, 212, 214, 215, 216, 217, 220, 221, 227, 229, 230, 282, 292, 341, 374, 391, 392, 393, 397, 398, 400, 410, 418], "field": [11, 25, 30, 40, 41, 47, 55, 63, 73, 102, 113, 114, 115, 118, 119, 196, 200, 201, 214, 229, 244, 329, 374, 418, 427], "id": [11, 15, 17, 18, 21, 25, 26, 30, 35, 39, 40, 41, 44, 51, 54, 55, 58, 59, 60, 62, 63, 64, 69, 70, 71, 73, 81, 84, 88, 89, 90, 93, 100, 101, 102, 104, 105, 108, 109, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 127, 136, 187, 188, 196, 197, 198, 200, 201, 209, 210, 211, 212, 214, 217, 220, 221, 225, 227, 228, 229, 230, 233, 238, 252, 253, 254, 282, 292, 364, 374, 391, 392, 393, 397, 398, 400, 401, 410, 418, 423, 433, 444, 445], "group": [11, 21, 25, 29, 30, 39, 41, 44, 55, 69, 84, 106, 115, 116, 118, 119, 187, 188, 196, 198, 200, 201, 209, 214, 217, 220, 225, 227, 229, 282, 292, 346, 348, 374, 391, 392, 393, 397, 398, 400, 401, 410, 418, 423, 433], "pixel": [11, 16, 24, 32, 40, 64, 67, 74, 113, 118, 128, 135, 198, 209, 217, 220], "tabular": [11, 25, 26, 51, 83, 118, 119, 196, 198, 209, 211, 212, 217, 220, 229, 230, 237, 245, 282, 286, 292, 374, 419, 445], "table_compar": [11, 132], "high": [11, 14, 21, 84, 93, 116, 117, 121, 198, 203, 220, 414, 416], "level": [11, 14, 29, 31, 32, 64, 69, 84, 103, 113, 118, 125, 130, 138, 203, 218, 220, 221, 253, 304, 433, 445], "mid": [11, 203, 220], "low": [11, 26, 110, 115, 198, 203, 218, 220, 221, 253], "firstli": [11, 102, 104, 106, 107], "regard": [11, 75, 109, 358], "class": [11, 15, 17, 18, 24, 25, 26, 31, 32, 33, 38, 39, 40, 41, 42, 44, 45, 46, 47, 50, 51, 54, 55, 58, 62, 69, 70, 74, 75, 78, 79, 80, 82, 89, 90, 99, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 134, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 180, 181, 182, 183, 184, 187, 188, 191, 192, 194, 196, 197, 198, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 260, 261, 262, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 307, 308, 310, 311, 312, 313, 315, 316, 317, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 333, 334, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 355, 356, 357, 358, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 389, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 405, 406, 407, 408, 410, 412, 413, 414, 415, 416, 418, 419, 421, 427, 428, 433, 435, 437, 439, 444, 446], "For": [11, 16, 17, 21, 25, 27, 30, 35, 41, 44, 46, 48, 49, 50, 52, 57, 59, 60, 62, 70, 76, 80, 81, 84, 87, 88, 92, 96, 100, 102, 103, 107, 108, 109, 111, 114, 115, 116, 117, 118, 119, 120, 122, 128, 133, 135, 171, 198, 209, 217, 220, 222, 223, 225, 229, 230, 232, 292, 304, 374, 382, 386, 396, 397, 398, 407, 415, 418, 427, 431, 433, 434], "second": [11, 22, 53, 88, 115, 116, 117, 184, 203, 209, 220, 232, 382, 433], "background": [11, 40, 41, 51, 54, 100, 112, 113, 198, 229, 282, 330, 368, 431], "uniqu": [11, 21, 24, 25, 34, 63, 64, 75, 84, 111, 122, 198, 224, 418, 433, 445], "unannot": [11, 24], "secondli": 11, "displai": [11, 16, 27, 34, 35, 40, 41, 42, 43, 44, 45, 46, 54, 55, 63, 64, 67, 68, 70, 72, 73, 84, 113], "mean": [11, 23, 24, 26, 59, 60, 77, 84, 88, 89, 108, 109, 111, 114, 115, 116, 117, 119, 120, 122, 126, 196, 200, 201, 209, 214, 232, 235, 387, 414, 415, 416, 418, 419, 423, 433], "deviat": [11, 109], "distribut": [11, 24, 25, 26, 87, 89, 103, 109, 110, 115, 119, 131, 132, 200, 387, 400, 407, 410, 419, 423], "rgb": [11, 24, 48, 74, 83, 118, 356, 357, 427], "00": [11, 60, 75, 101, 115, 118, 325], "std": [11, 24, 89, 115], "img": [11, 17, 23, 33, 38, 109, 115, 117, 118, 136, 182, 188, 194, 220, 222, 264, 265, 270, 374, 384, 391, 392, 393, 394, 400, 401, 402, 431, 434], "percent": [11, 24], "0000": [11, 60, 115], "5000": [11, 14, 100, 103, 105, 109, 110, 112, 113, 115, 118], "lastli": [11, 103, 116, 117, 122], "shiftanalyz": [11, 235], "show": [11, 13, 16, 25, 27, 46, 95, 99, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 131, 238], "covari": [11, 188, 221, 374, 433, 445], "shift": [11, 84, 113, 117, 244, 396, 397, 400, 445], "nan": [11, 26, 75, 110, 118, 200, 201, 229], "is_crowd": [11, 25, 40, 41, 44, 54, 58, 109, 418], "transform": [11, 20, 39, 40, 41, 54, 62, 69, 70, 80, 81, 85, 88, 89, 93, 106, 108, 110, 111, 113, 115, 117, 122, 131, 137, 162, 188, 197, 209, 212, 213, 217, 220, 222, 223, 233, 379, 384, 387, 391, 392, 393, 396, 397, 398, 400, 401, 402, 407, 408, 410, 414, 415, 416, 443, 445, 448], "ident": [11, 81, 99, 100, 118, 131, 200, 201, 229, 433], "indic": [11, 21, 25, 31, 32, 35, 41, 44, 54, 55, 58, 59, 60, 69, 70, 73, 84, 102, 119, 137, 187, 188, 196, 197, 198, 200, 209, 210, 211, 212, 215, 217, 218, 220, 221, 224, 227, 228, 229, 230, 244, 253, 254, 270, 271, 273, 282, 283, 285, 287, 288, 292, 302, 304, 345, 366, 367, 374, 375, 391, 392, 393, 394, 397, 398, 418, 431, 433], "unmatch": [11, 197, 209, 220], "well": [11, 30, 57, 69, 102, 103, 110, 113, 116, 117, 126, 127, 135, 188, 221, 374, 433], "quantiti": 11, "mismatch": [11, 21, 57, 84, 197, 209, 220], "100": [11, 24, 25, 39, 51, 56, 62, 70, 89, 101, 103, 106, 108, 109, 110, 111, 115, 118, 119, 197, 244, 387, 433, 445], "equality_compar": [11, 132], "review": [11, 109, 118], "pleas": [11, 25, 27, 44, 46, 52, 72, 81, 82, 87, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 117, 118, 119, 121, 122, 126, 127, 220, 225, 229, 244, 396, 397, 398, 418], "exclud": [11, 114, 135, 209, 220, 222, 378, 381, 382, 385, 395], "demonstr": [11, 46, 110, 115, 118, 198], "present": [11, 24, 25, 39, 44, 62, 69, 84, 90, 119, 132, 184, 196, 229, 230, 374, 418, 433], "polygon": [11, 24, 25, 26, 30, 34, 41, 44, 45, 46, 48, 51, 56, 58, 70, 72, 84, 89, 90, 100, 101, 103, 105, 109, 110, 112, 113, 116, 121, 132, 196, 198, 200, 201, 209, 211, 212, 217, 229, 230, 238, 254, 270, 279, 280, 282, 286, 292, 293, 322, 374, 396, 398, 410, 414, 416, 418, 423, 431, 443], "mask": [11, 16, 24, 25, 26, 30, 31, 32, 34, 36, 37, 40, 41, 42, 44, 45, 46, 48, 51, 54, 56, 58, 64, 67, 69, 70, 72, 74, 84, 89, 90, 100, 103, 105, 109, 110, 112, 113, 118, 121, 132, 196, 197, 198, 200, 201, 209, 211, 212, 217, 229, 230, 254, 262, 267, 270, 275, 279, 280, 282, 284, 286, 290, 292, 293, 311, 318, 341, 367, 374, 396, 397, 398, 400, 401, 410, 418, 423, 431, 443, 445, 446], "addition": [11, 30, 108, 111, 114, 116, 119, 122, 124, 127, 196], "confus": 11, "matrix": 11, "annotation_typ": [11, 132], "_confus": [11, 132], "highlight": [11, 113], "box": [11, 16, 25, 26, 33, 35, 38, 47, 51, 52, 54, 56, 63, 65, 66, 67, 69, 70, 72, 76, 78, 79, 89, 103, 106, 109, 110, 111, 112, 113, 114, 118, 120, 121, 135, 188, 197, 198, 200, 201, 209, 217, 220, 222, 229, 244, 279, 280, 282, 292, 374, 384, 391, 392, 393, 396, 397, 398, 400, 401, 402, 407, 414, 416, 418, 423, 445, 446], "usabl": [12, 99, 135], "alia": [12, 198, 200, 201, 218, 229, 264, 265, 274, 283, 285, 286, 287, 289, 291, 368, 389, 427], "simpler": 12, "obtain": [12, 16, 25, 83, 84, 88, 108, 111, 114, 188, 196, 209, 220, 222, 236, 374, 378, 384, 391, 392, 393, 396, 397, 398, 400, 401, 402, 418, 431, 434], "same": [12, 21, 22, 25, 29, 30, 41, 46, 51, 53, 58, 64, 69, 70, 76, 81, 82, 84, 88, 89, 102, 111, 112, 115, 119, 187, 196, 197, 198, 209, 210, 211, 212, 218, 220, 221, 225, 227, 229, 230, 233, 236, 253, 282, 287, 288, 374, 387, 394, 397, 398, 407, 410, 418, 431, 433, 445], "input_format": [12, 445], "output_format": [12, 15, 127, 147, 148, 149, 182, 220], "extra_export_arg": [12, 15], "Will": 12, "subdir": [12, 49, 215], "attempt": [13, 197, 209, 218, 220, 391, 392, 393, 394, 433], "mai": [13, 15, 21, 25, 44, 46, 69, 90, 92, 109, 115, 117, 119, 126, 131, 134, 187, 188, 196, 218, 221, 224, 227, 282, 292, 396, 397, 407, 415, 433, 435], "singl": [13, 16, 17, 21, 25, 26, 34, 41, 55, 62, 64, 69, 75, 83, 84, 85, 88, 98, 99, 100, 110, 113, 128, 197, 198, 209, 210, 217, 218, 220, 221, 222, 228, 236, 253, 282, 292, 374, 382, 396, 397, 398, 400, 408, 418, 445], "being": [13, 46, 84, 218, 221, 253, 445], "doesn": [13, 16, 22, 49, 50, 52, 76, 81, 82, 118, 187, 196, 197, 209, 210, 211, 212, 220, 227, 229, 230, 233, 236, 282, 287, 288, 374, 397, 398], "known": [13, 72, 85, 121, 137, 187, 196, 197, 209, 210, 211, 212, 220, 227, 229, 230, 233, 236, 282, 287, 288, 374, 397, 398], "ambigu": [13, 445], "human": [13, 15, 21, 25, 51, 69, 108, 118, 218, 221, 253, 341, 418], "readabl": [13, 15, 218, 221, 253], "machin": [13, 52, 69, 71, 104, 113, 116, 117, 118], "see": [13, 18, 25, 31, 32, 41, 46, 48, 49, 50, 53, 57, 58, 59, 69, 70, 76, 80, 81, 82, 87, 88, 102, 104, 106, 107, 108, 111, 114, 115, 116, 117, 122, 127, 188, 197, 209, 211, 218, 221, 253, 374, 396, 397, 398, 433], "detected_format": [13, 113, 119, 124, 129, 134, 136], "rejected_format": 13, "reject": [13, 100, 109, 218, 418], "reason": [13, 16, 25, 88, 114, 218, 407], "code": [13, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 52, 54, 55, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 78, 79, 81, 84, 101, 102, 104, 105, 106, 107, 111, 112, 114, 115, 116, 118, 160, 162, 163, 171, 181, 200, 201, 229, 259, 380, 381, 382, 385, 397, 398, 433, 445], "nline": 13, "detection_unsupport": [13, 218], "insufficient_confid": [13, 218], "least": [13, 25, 70, 84, 89, 184, 218, 221, 253, 407, 444], "better": [13, 21, 25, 119, 415, 445], "unmet_requir": [13, 218], "didn": 13, "meet": [13, 218], "futur": [13, 15, 107, 115, 218, 433], "json_report": 13, "depth": [13, 18, 51, 74, 75, 118, 120, 197, 198, 209, 213, 220, 233, 356, 357, 445], "analys": 13, "might": [13, 15, 25, 26, 29, 31, 88, 107, 110, 218], "describ": [13, 22, 25, 31, 32, 35, 40, 42, 48, 52, 54, 61, 83, 88, 98, 119, 124, 127, 128, 134, 136, 147, 148, 149, 198, 209, 218, 221, 229, 253, 282, 410], "why": 13, "wasn": 13, "alwai": [13, 29, 41, 69, 115, 198, 200, 217, 282, 292, 433], "recurs": [13, 83, 197, 209, 220, 221, 374, 427, 433, 434], "search": [13, 25, 83, 197, 209, 220, 235, 450], "given": [13, 41, 47, 63, 69, 71, 72, 74, 89, 97, 102, 103, 109, 118, 120, 124, 128, 131, 132, 133, 134, 135, 136, 184, 197, 198, 209, 218, 220, 221, 223, 224, 229, 253, 273, 274, 282, 285, 286, 345, 374, 377, 386, 396, 397, 400, 431, 433, 434, 445], "dinfo": [14, 122, 126, 134], "join": [14, 17, 21, 22, 23, 25, 83, 85, 88, 89, 104, 106, 107, 111, 114, 116, 198, 418, 433], "fold": [14, 113, 118], "long": [14, 26, 46, 88, 102, 109], "past": [14, 82, 106], "length": [14, 21, 25, 64, 75, 122, 209, 210, 212, 224, 227, 238, 282, 292, 368, 374, 387, 431], "80": [14, 23, 103, 106, 115, 118], "bicycl": [14, 100, 103, 105, 109, 110, 112, 113, 329, 368], "motorcycl": [14, 17, 100, 103, 105, 109, 110, 112, 113, 118], "76": [14, 18, 103, 106, 109, 120], "minival2014": [14, 18, 120], "either": [15, 21, 22, 23, 69, 84, 171, 184, 229, 374, 418, 433], "object": [15, 16, 21, 25, 31, 32, 35, 41, 44, 47, 48, 50, 52, 54, 56, 61, 65, 66, 67, 69, 70, 71, 73, 74, 76, 78, 79, 80, 84, 85, 87, 88, 89, 102, 104, 112, 114, 116, 118, 119, 121, 147, 182, 187, 188, 191, 196, 197, 198, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 227, 229, 230, 232, 233, 235, 236, 237, 238, 244, 245, 247, 248, 250, 252, 253, 254, 255, 256, 258, 260, 261, 262, 265, 266, 267, 269, 270, 272, 274, 275, 276, 279, 280, 282, 283, 284, 286, 287, 288, 290, 292, 293, 294, 295, 296, 297, 301, 303, 304, 305, 312, 317, 318, 319, 322, 324, 325, 327, 328, 329, 330, 333, 338, 341, 347, 353, 356, 362, 363, 368, 370, 371, 372, 374, 376, 379, 381, 382, 384, 389, 391, 392, 393, 394, 397, 398, 400, 401, 402, 405, 410, 413, 414, 416, 418, 419, 421, 422, 423, 427, 428, 431, 433, 435, 437, 439, 445], "document": [15, 49, 51, 61, 70, 84, 89, 99, 137, 218, 221, 253, 427, 445], "schema": [15, 204, 205, 252, 253], "default_output_format": [15, 216], "download_s": [15, 216], "total": [15, 26, 59, 60, 67, 101, 113, 117, 119, 121, 209, 232, 396, 397, 419], "size": [15, 16, 25, 30, 34, 39, 46, 56, 69, 70, 77, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 124, 135, 188, 197, 198, 200, 209, 217, 220, 222, 224, 227, 229, 233, 236, 244, 252, 253, 254, 282, 287, 289, 292, 374, 384, 386, 391, 392, 393, 394, 397, 398, 400, 401, 402, 414, 416, 418, 423, 426, 428, 433, 444], "byte": [15, 46, 107, 187, 188, 197, 208, 209, 211, 212, 217, 220, 221, 224, 227, 249, 251, 252, 253, 254, 255, 256, 282, 287, 288, 289, 292, 293, 294, 295, 296, 374, 391, 392, 393, 422, 427, 433, 445], "home_url": [15, 216], "web": 15, "page": [15, 113, 126, 135, 274, 282, 286, 450], "human_nam": [15, 216], "num_class": [15, 216], "num_item": [15, 216], "null": 15, "suitabl": [15, 30, 46, 209, 220, 236, 397, 398], "involv": [15, 114, 115, 135, 374, 418], "classif": [15, 16, 25, 26, 30, 39, 41, 50, 51, 52, 62, 67, 70, 89, 96, 98, 110, 111, 112, 113, 118, 119, 128, 134, 220, 237, 245, 338, 410, 419, 445], "suppli": [15, 113, 218, 221, 253], "tfd": [15, 99, 122, 127, 133, 445], "come": [15, 39, 84, 88, 109, 188, 222, 384, 391, 392, 393, 402, 445], "those": [15, 17, 23, 52, 74, 115, 126, 188, 222, 384, 391, 392, 393, 400, 401, 402], "determin": [15, 16, 63, 69, 119, 129, 196, 198, 218, 292, 386], "member": [15, 84, 211, 214, 389, 433], "report_fil": [15, 127, 147, 148, 149], "write": [15, 18, 30, 39, 41, 44, 55, 69, 70, 73, 89, 104, 106, 107, 111, 113, 114, 116, 224, 446], "written": [15, 18, 25, 48, 55, 63, 73, 126, 326, 343], "stream": [15, 113, 187, 196, 197, 209, 210, 211, 212, 215, 220, 221, 227, 228, 229, 230, 253, 258, 266, 270, 271, 273, 274, 282, 283, 285, 286, 287, 288, 297, 300, 302, 304, 305, 307, 318, 319, 324, 326, 327, 328, 329, 330, 341, 343, 345, 358, 363, 366, 367, 372, 374, 375, 377, 397, 398, 445], "publicli": 15, "term": [15, 88, 103, 115, 119], "syntax": [15, 85, 184], "similar": [15, 17, 25, 44, 61, 84, 97, 99, 112, 115, 133, 136, 192, 200, 201, 229, 235, 387, 418, 423], "take": [15, 25, 46, 52, 101, 102, 103, 104, 105, 108, 111, 119, 209, 217, 220, 236, 397, 398, 418], "tensorflow": [15, 87, 89, 92, 99, 115, 127, 223, 445, 449], "librari": [15, 92, 115, 447, 448], "therefor": [15, 44, 45, 46, 52, 81, 99, 102, 104, 106, 107, 111, 114, 115, 116, 117, 119, 200, 201, 209, 220, 222, 229, 415, 433], "instal": [15, 56, 84, 87, 91, 106, 118, 223, 445, 446, 447], "pip": [15, 92, 106, 108, 111, 114, 115, 118, 127, 446], "proxi": 15, "convent": [15, 59, 60, 119, 233], "curl": [15, 92, 101, 108, 117], "variabl": [15, 92, 115, 119, 171, 187, 188, 198, 200, 209, 217, 221, 224, 227, 282, 292, 374, 389, 391, 392, 393, 406, 433], "get": [15, 25, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 48, 50, 54, 57, 62, 65, 66, 69, 72, 74, 76, 78, 79, 80, 92, 99, 101, 102, 103, 108, 109, 110, 111, 116, 122, 127, 133, 187, 196, 197, 198, 201, 204, 209, 210, 211, 212, 217, 220, 221, 223, 224, 225, 227, 228, 229, 230, 233, 234, 238, 244, 249, 250, 282, 292, 364, 374, 397, 398, 406, 407, 425, 428, 433, 444, 445], "dataset_id": [15, 127, 147, 148, 149], "due": [15, 63, 72, 92], "even": [15, 17, 25, 30, 44, 70, 88, 116, 126, 128, 198, 200, 217, 218, 221, 253, 282, 292, 433, 445], "ai": [16, 44, 89, 100, 108, 118, 126, 445], "algorithm": [16, 19, 25, 61, 84, 89, 105, 108, 111, 114, 115, 136, 220, 225, 227, 387, 408, 412, 423, 431, 443], "tool": [16, 44, 56, 71, 78, 79, 83, 84, 87, 89, 91, 113, 115, 128, 132, 223, 275, 446, 447, 448], "suppos": [16, 17, 21, 84, 85, 88, 187, 196, 197, 198, 209, 210, 211, 212, 214, 220, 227, 229, 230, 232, 233, 236, 282, 287, 288, 374, 397, 398], "develop": [16, 61, 82, 113, 115, 117, 133, 445], "debug": [16, 29, 89, 90], "basic": [16, 25, 46, 88, 119, 214, 374, 405, 447], "relat": [16, 26, 29, 55, 73, 84, 87, 88, 115, 119, 197, 209, 220, 418, 445], "decis": [16, 135], "boundari": [16, 69, 198, 217, 282, 292, 391, 392, 393, 394, 414, 416], "belief": 16, "classifi": [16, 108, 119], "rise": [16, 89, 443, 445], "articl": [16, 17, 19, 412], "time": [16, 21, 25, 30, 44, 46, 52, 53, 88, 101, 102, 107, 115, 117, 118, 122, 124, 134, 209, 220, 225, 230, 232, 233, 382, 410, 433, 445], "re": [16, 25, 29, 45, 51, 59, 88, 89, 90, 105, 113, 118, 121, 136, 233, 247, 248, 319, 324, 433], "heatmap": 16, "activ": [16, 92, 433], "part": [16, 21, 25, 31, 32, 40, 41, 70, 84, 85, 90, 184, 209, 232, 368, 418, 431], "As": [16, 39, 41, 75, 102, 107, 110, 114, 116, 117, 131, 135, 188, 222, 384, 391, 392, 393, 400, 401, 402, 433, 448], "special": [16, 55, 84, 85, 102, 113, 221, 418], "confid": [16, 21, 25, 41, 54, 63, 69, 114, 218, 221, 229, 253, 329, 341, 408], "scenario": [16, 115], "save_dir": [16, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 49, 54, 55, 56, 62, 63, 64, 65, 66, 67, 69, 70, 72, 73, 74, 78, 79, 81, 82, 84, 106, 107, 182, 197, 209, 215, 220, 233, 249, 251, 258, 262, 266, 267, 270, 279, 283, 287, 289, 297, 300, 302, 303, 304, 305, 311, 316, 318, 319, 324, 327, 328, 329, 330, 337, 341, 346, 348, 352, 358, 361, 363, 367, 372, 375], "rise_arg": 16, "method": [16, 25, 26, 46, 49, 83, 84, 115, 118, 120, 124, 132, 160, 162, 163, 171, 183, 187, 188, 194, 196, 197, 198, 200, 201, 203, 207, 209, 212, 214, 215, 216, 217, 218, 220, 221, 225, 227, 229, 230, 232, 235, 253, 254, 282, 292, 293, 341, 374, 391, 392, 393, 397, 398, 400, 405, 406, 408, 418, 433, 435, 445], "per": [16, 23, 25, 26, 35, 61, 69, 74, 76, 103, 106, 109, 110, 407, 419, 433], "mw": 16, "width": [16, 18, 19, 25, 26, 56, 69, 81, 82, 109, 110, 118, 120, 137, 198, 200, 201, 209, 217, 220, 238, 244, 265, 282, 292, 374, 384, 391, 392, 393, 394, 398, 414, 416, 418, 427, 431], "mh": 16, "height": [16, 18, 19, 25, 26, 56, 69, 75, 81, 82, 109, 110, 118, 120, 137, 198, 200, 201, 209, 217, 220, 244, 265, 282, 292, 374, 384, 391, 392, 393, 394, 398, 414, 416, 418, 427, 431], "prob": [16, 197], "inclus": [16, 119, 198, 282], "probabl": [16, 25, 408], "control": [16, 25, 41, 88, 89, 113, 114, 122, 220, 225, 229, 410, 433], "densiti": 16, "9": [16, 35, 55, 69, 70, 75, 92, 101, 102, 103, 106, 107, 109, 110, 111, 115, 117, 119, 196, 198, 200, 201, 209, 211, 212, 217, 224, 229, 230, 254, 282, 286, 292, 325, 329, 368, 374, 445], "nm": [16, 106, 423], "maxima": [16, 423], "suppress": [16, 117, 396, 397, 400, 423], "batch": [16, 25, 39, 84, 106, 118, 194, 197, 209, 220, 222, 236, 266, 378, 379, 381, 382, 385, 386, 395, 397, 398, 422, 444], "visual": [16, 17, 30, 35, 78, 79, 90, 97, 99, 104, 105, 106, 107, 108, 109, 111, 114, 116, 117, 119, 128, 136, 137, 443, 445], "comput": [16, 17, 23, 24, 30, 44, 52, 56, 71, 84, 88, 113, 118, 119, 121, 198, 200, 201, 217, 220, 229, 233, 237, 244, 245, 282, 292, 398, 414, 416, 419, 423, 445], "50": [16, 17, 24, 46, 103, 105, 106, 109, 111, 114, 115, 118, 119, 128, 135, 208, 209, 217, 220, 245, 430], "onlin": [16, 119], "1000": [16, 34, 39, 40, 103, 115, 118, 249, 251, 330], "amount": [16, 84, 89, 115, 117, 387, 396, 397, 400], "unfilt": 16, "expect": [16, 25, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 48, 50, 62, 65, 66, 69, 72, 74, 76, 78, 79, 81, 82, 107, 209, 214, 229, 232, 410, 418, 431], "test_ris": 16, "process": [16, 21, 25, 34, 69, 71, 83, 84, 113, 114, 115, 117, 118, 129, 132, 135, 197, 209, 220, 221, 236, 253, 273, 285, 287, 288, 289, 345, 377, 380, 381, 382, 385, 386, 396, 397, 398, 418, 431, 433], "would": [16, 17, 25, 46, 72, 82, 88, 102, 136, 188, 209, 222, 232, 384, 391, 392, 393, 400, 401, 402, 410, 433], "annotation_util": 16, "softmax": [16, 423], "logit": 16, "n_class": 16, "enumer": [16, 105, 142, 162, 182, 184, 187, 196, 197, 198, 209, 210, 211, 212, 217, 218, 220, 224, 227, 229, 230, 233, 236, 237, 249, 250, 254, 262, 267, 270, 272, 282, 286, 292, 301, 303, 311, 312, 317, 322, 329, 330, 337, 338, 356, 362, 367, 368, 374, 376, 387, 397, 398, 405, 410, 418, 427, 433], "signific": [16, 54, 70, 115], "correct": [16, 46, 106, 107, 108, 111, 120, 134, 196, 200, 201, 220, 229, 418, 445], "meaning": [16, 135, 200, 201, 229], "queri": [17, 18, 23, 25, 59, 97, 115, 120, 135, 192, 324, 410, 445], "your": [17, 34, 45, 46, 48, 49, 50, 56, 58, 59, 72, 76, 80, 82, 87, 92, 95, 96, 97, 108, 111, 114, 115, 116, 117, 120, 121, 122, 126, 135, 209, 220, 222, 225], "own": [17, 41, 45, 46, 70, 82, 87, 88, 102, 114, 115, 135], "top": [17, 62, 81, 82, 85, 108, 111, 113, 118, 136, 196, 198, 201, 217, 282, 292, 374, 398, 419, 445], "among": [17, 23, 25, 47, 110, 112, 115, 119, 124, 136, 194, 408], "featur": [17, 23, 46, 61, 84, 92, 93, 108, 111, 114, 115, 116, 117, 119, 124, 127, 129, 136, 137, 224, 244, 394, 441], "user": [17, 25, 39, 40, 41, 52, 54, 56, 62, 69, 70, 71, 72, 75, 78, 79, 84, 87, 88, 92, 102, 109, 118, 119, 128, 129, 132, 135, 209, 210, 212, 217, 220, 282, 374, 418, 419, 445], "figur": [17, 109, 113, 115, 116, 117, 119, 136, 196, 238], "out": [17, 81, 88, 102, 109, 118, 136, 386, 433, 445], "properti": [17, 25, 26, 46, 84, 109, 119, 136, 187, 188, 191, 196, 197, 198, 200, 201, 205, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 224, 227, 228, 229, 230, 232, 233, 235, 238, 249, 250, 253, 254, 270, 271, 273, 282, 283, 285, 286, 287, 288, 292, 302, 304, 345, 366, 367, 374, 375, 389, 391, 392, 393, 396, 397, 398, 418, 433, 445, 446], "easier": [17, 71, 108, 111, 128, 135], "basi": [17, 23], "onc": [17, 25, 83, 84, 88, 224, 227, 282, 292, 433, 443], "datasetbas": [17, 209, 210, 212, 220, 221, 223, 228, 236, 247, 248, 249, 250, 253, 273, 282, 285, 307, 308, 318, 324, 325, 341, 345, 358, 363, 364, 374, 377, 443], "calcul": [17, 23, 105, 108, 109, 111, 113, 117, 119, 136, 137, 196, 198, 201, 217, 244, 282, 292, 374, 387, 396, 397, 398, 400, 406, 408, 413], "everi": [17, 113, 198, 209, 217, 218, 221, 232, 253, 282, 292, 433], "datasetitem": [17, 23, 25, 26, 39, 40, 41, 54, 55, 62, 69, 70, 73, 81, 84, 90, 101, 102, 117, 119, 135, 136, 187, 188, 192, 194, 196, 197, 209, 210, 211, 212, 215, 217, 220, 221, 222, 225, 227, 228, 229, 230, 236, 238, 249, 250, 254, 255, 282, 287, 289, 292, 295, 374, 378, 384, 391, 392, 393, 397, 398, 400, 401, 402, 414, 416, 418, 427, 443], "clip": [17, 23, 113], "could": [17, 21, 23, 34, 52, 53, 84, 88, 100, 101, 103, 105, 109, 110, 112, 115, 124, 135, 136, 382], "both": [17, 21, 23, 46, 48, 53, 58, 67, 81, 88, 99, 102, 108, 111, 113, 114, 115, 118, 119, 128, 196, 220, 225, 230, 394, 435, 445], "modal": [17, 23, 209, 220, 222], "ir": [17, 23, 26, 87, 114], "upload": [17, 23, 52, 101], "openvinotoolkit": [17, 23, 92, 103, 117, 380, 382, 396, 397, 398, 446], "storag": [17, 23, 47, 88, 89, 113, 233], "call": [17, 85, 88, 108, 111, 113, 115, 119, 187, 188, 196, 200, 201, 209, 218, 229, 230, 232, 374, 433, 435, 437], "databas": [17, 105, 118], "through": [17, 23, 48, 50, 52, 56, 57, 59, 67, 76, 77, 80, 84, 98, 103, 109, 110, 111, 112, 113, 115, 120, 124, 128, 131, 133, 134, 135, 136, 194, 433, 444, 446, 449], "extract": [17, 18, 23, 35, 69, 77, 90, 103, 104, 106, 107, 111, 114, 116, 118, 120, 124, 135, 196, 198, 238, 374, 406, 408, 434], "binari": [17, 46, 62, 67, 92, 114, 115, 117, 198, 217, 252, 253, 292, 396, 397, 398, 400, 431], "pack": [17, 113], "bit": [17, 40, 64, 113, 387], "hashkei": [17, 198, 217, 378, 394, 445], "henc": [17, 52, 118, 119], "And": [17, 50, 53, 76, 81, 118, 135], "much": [17, 23, 25, 84, 124, 194, 394], "hope": 17, "smaller": [17, 25, 115, 135, 209, 217, 220], "ham": [17, 113, 192, 193], "distanc": [17, 21, 84, 114, 132, 142, 192, 193, 194, 200, 201, 214, 220, 229, 386, 398, 431, 445], "sort": [17, 118, 196, 198, 418, 431, 445], "merg": [17, 20, 24, 25, 39, 40, 41, 54, 62, 69, 70, 88, 89, 98, 103, 121, 128, 138, 160, 163, 181, 187, 197, 198, 200, 209, 213, 220, 221, 253, 270, 273, 285, 345, 377, 415, 418, 431, 445], "context": [17, 18, 22, 23, 25, 29, 84, 88, 160, 162, 163, 164, 171, 197, 200, 201, 209, 210, 212, 214, 218, 220, 221, 229, 247, 248, 249, 253, 258, 260, 261, 262, 265, 266, 267, 273, 275, 276, 278, 282, 285, 287, 291, 297, 299, 302, 304, 305, 308, 313, 315, 318, 319, 325, 326, 329, 333, 334, 340, 341, 345, 346, 349, 363, 364, 370, 371, 372, 374, 377, 427, 433, 437, 445], "turn": [17, 67, 82, 107, 113, 119], "off": [17, 109, 115, 124, 171], "str": [17, 25, 26, 59, 60, 62, 75, 101, 103, 104, 109, 136, 145, 147, 148, 149, 160, 162, 163, 171, 181, 182, 184, 187, 188, 192, 194, 196, 197, 198, 200, 201, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 238, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 260, 261, 262, 264, 265, 266, 267, 269, 270, 271, 273, 274, 275, 276, 278, 282, 283, 285, 286, 287, 288, 289, 290, 292, 294, 295, 296, 297, 299, 300, 302, 303, 304, 305, 307, 308, 313, 315, 318, 319, 323, 324, 325, 326, 327, 328, 329, 330, 333, 334, 339, 340, 341, 343, 344, 345, 346, 347, 349, 351, 355, 358, 360, 363, 364, 366, 368, 370, 371, 372, 374, 375, 377, 378, 379, 380, 381, 382, 384, 385, 387, 389, 391, 392, 393, 396, 397, 398, 400, 401, 402, 405, 406, 407, 408, 412, 418, 422, 423, 425, 426, 427, 429, 431, 433, 434, 435, 437, 441], "text_queri": 17, "topk": [17, 25, 26, 105, 136, 192, 235, 405, 406, 408], "bool": [17, 18, 24, 25, 102, 135, 147, 171, 187, 196, 197, 198, 203, 205, 208, 209, 210, 211, 212, 213, 215, 217, 218, 220, 221, 222, 224, 227, 228, 229, 230, 233, 236, 238, 249, 251, 252, 253, 254, 258, 266, 270, 271, 273, 282, 283, 285, 287, 288, 289, 292, 297, 300, 302, 304, 305, 307, 318, 319, 324, 326, 327, 328, 329, 330, 341, 343, 345, 358, 363, 366, 367, 372, 374, 375, 378, 386, 391, 392, 393, 394, 396, 397, 398, 418, 422, 427, 434, 437, 441], "explore_result": [17, 136], "folder": [17, 54, 74, 83, 113, 118, 119, 136, 358], "action": [17, 18, 25, 51, 53, 70, 90, 112, 118, 160, 162, 163, 164, 171, 209, 220, 289, 368, 418, 437, 445], "true": [17, 18, 24, 25, 31, 34, 35, 39, 40, 41, 42, 44, 45, 46, 49, 50, 54, 55, 56, 62, 63, 64, 67, 69, 70, 72, 73, 76, 80, 81, 82, 84, 93, 99, 102, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 119, 120, 135, 136, 171, 188, 196, 198, 200, 201, 204, 205, 209, 213, 217, 218, 220, 221, 222, 228, 229, 233, 238, 253, 262, 267, 270, 282, 287, 289, 304, 311, 367, 374, 375, 378, 386, 391, 392, 393, 394, 396, 398, 414, 416, 422, 427, 431, 433, 434, 435, 437], "later": [17, 18, 25, 84, 107], "intermedi": [17, 18, 23, 25, 87, 106, 114, 119, 137, 397, 400, 445], "enabl": [17, 18, 25, 30, 41, 46, 82, 93, 106, 111, 115, 132, 287, 289, 418, 437, 445, 447], "top10": 17, "mandatori": 17, "within": [17, 18, 23, 25, 30, 44, 54, 59, 60, 63, 64, 70, 100, 112, 115, 119, 128, 134, 194, 218, 221, 253, 414, 416, 418, 433, 445], "eleph": [17, 25, 40, 70, 100, 103, 105, 109, 110, 112, 113, 115], "top50": 17, "image2": [17, 25, 55, 73, 81, 84, 418], "image3": [17, 55], "bu": [17, 25, 100, 103, 105, 109, 110, 112, 113, 220, 225, 229, 230, 368, 418], "sub": [18, 41, 44, 70, 275], "satisfi": [18, 118, 120], "condit": [18, 75, 109, 113, 119, 120, 135, 200, 201, 229, 433], "place": [18, 22, 23, 25, 69, 88, 113, 120, 197, 209, 218, 220, 221, 238, 253, 433], "prevent": [18, 22, 23, 25, 445], "loss": [18, 22, 23, 25, 45, 96, 106, 115, 118, 196], "sever": [18, 25, 26, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 49, 54, 55, 62, 63, 64, 65, 66, 67, 69, 70, 72, 73, 74, 78, 79, 81, 82, 84, 88, 93, 104, 109, 110, 116, 117, 118, 197, 209, 214, 218, 220, 221, 225, 226, 227, 229, 230, 237, 238, 253, 407, 418, 433, 446], "point": [18, 23, 24, 25, 33, 34, 38, 41, 44, 45, 46, 51, 54, 56, 57, 65, 66, 72, 75, 76, 83, 85, 89, 113, 116, 117, 122, 134, 135, 196, 198, 200, 201, 209, 211, 212, 217, 229, 230, 233, 244, 254, 279, 280, 282, 286, 292, 293, 374, 396, 397, 398, 400, 423, 431, 433, 443], "less": [18, 21, 46, 109, 114, 115, 117, 218, 238, 396, 397, 400, 419], "should": [18, 19, 21, 22, 25, 26, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 50, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 78, 79, 80, 81, 82, 84, 85, 87, 88, 102, 104, 106, 109, 110, 111, 114, 118, 119, 127, 134, 188, 209, 210, 212, 214, 218, 220, 221, 222, 225, 227, 238, 253, 275, 282, 374, 380, 381, 382, 384, 385, 391, 392, 393, 397, 398, 400, 401, 402, 410, 414, 416, 418, 427, 433, 445], "otherwis": [18, 41, 63, 74, 85, 88, 162, 171, 184, 196, 200, 201, 209, 217, 218, 220, 221, 222, 224, 229, 238, 253, 273, 285, 345, 374, 377, 378, 391, 392, 393, 394, 423, 431, 433, 447], "kept": [18, 25, 418], "represent": [18, 25, 64, 74, 87, 102, 103, 106, 108, 109, 110, 111, 114, 196, 198, 201, 203, 217, 220, 282, 292, 374, 398], "dry": [18, 81, 113], "run": [18, 25, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 54, 55, 63, 64, 67, 68, 69, 70, 72, 73, 81, 87, 88, 90, 101, 106, 113, 115, 116, 117, 119, 127, 220, 368, 387, 396, 397, 433, 444], "290768": [18, 120], "612": [18, 103, 106, 118, 120], "80154": [18, 120], "label_id": [18, 30, 109, 120, 182, 187, 196, 198, 200, 217, 220, 226, 227, 229, 230, 238, 282, 292, 311, 337, 367, 398], "39": [18, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120], "264": [18, 103, 106, 115, 118, 120], "59": [18, 103, 106, 109, 110, 115, 118, 120], "150": [18, 56, 103, 118, 120], "25": [18, 21, 75, 100, 101, 103, 106, 115, 118, 120, 220, 225, 229, 290], "11": [18, 34, 55, 75, 103, 106, 115, 117, 118, 119, 120, 122, 138, 196, 198, 209, 211, 212, 217, 229, 230, 282, 286, 292, 293, 368, 374], "19": [18, 73, 75, 103, 105, 106, 109, 112, 115, 118, 119, 120, 200, 201, 229, 368], "42": [18, 103, 106, 109, 115, 118, 120], "31": [18, 101, 103, 106, 115, 118, 120], "area": [18, 24, 25, 26, 89, 109, 120, 135, 198, 200, 201, 217, 282, 292, 374, 398, 414, 416, 418, 431], "473": [18, 103, 120], "87": [18, 75, 103, 106, 118, 120], "669839": [18, 120], "41": [18, 55, 103, 106, 110, 115, 118, 120], "163": [18, 103, 106, 115, 118, 120], "58": [18, 103, 106, 110, 115, 118, 120], "191": [18, 103, 106, 118, 120], "75": [18, 34, 73, 103, 106, 111, 114, 115, 118, 120, 229, 249, 251, 254, 256, 386], "98": [18, 103, 106, 120], "73": [18, 103, 106, 114, 118, 120], "63": [18, 103, 106, 110, 120], "5668": [18, 120], "77": [18, 24, 103, 106, 109, 118, 120], "immedi": [18, 25, 84, 187, 196, 197, 209, 210, 211, 212, 220, 227, 229, 230, 233, 236, 282, 287, 288, 374, 397, 398, 433], "omit": [18, 23, 25, 85, 88, 114], "larg": [18, 23, 26, 47, 110, 113, 115, 117, 118, 132, 133], "cat": [18, 25, 39, 55, 56, 70, 73, 81, 84, 90, 93, 100, 103, 105, 109, 110, 112, 113, 118, 135, 220, 225, 229, 230, 368, 397, 400, 407, 418, 448], "99": [18, 103, 106, 115, 118, 317], "occlud": [18, 25, 31, 32, 54, 55, 63, 69, 70, 73, 80, 84, 89, 90, 102, 135, 280, 317, 329, 341, 367, 372, 418, 431], "s1": 18, "s2": 18, "compos": [18, 67, 112, 224, 244, 358], "sole": 18, "child": [18, 44, 224, 252, 253], "node": [18, 85], "synthet": [19, 118, 137, 198, 219, 412], "fractal": [19, 137], "network": [19, 89, 118, 244], "compress": [19, 49, 303], "channel": [19, 31, 32, 51, 62, 64, 70, 74, 113, 209, 220, 222, 382, 412, 427, 445], "color": [19, 25, 40, 42, 48, 54, 58, 64, 70, 74, 84, 90, 115, 118, 182, 198, 209, 220, 222, 229, 238, 282, 368, 413, 418, 427, 431, 445], "output_dir": [19, 50, 57, 59, 76, 80, 137, 219, 412], "model_path": [19, 412], "dimens": [19, 69, 188, 198, 201, 209, 217, 220, 222, 282, 292, 374, 378, 384, 387, 391, 392, 393, 398, 400, 401, 402, 427], "300": [19, 103, 106, 115, 137, 252, 253, 290], "224": [19, 103, 118], "256": [19, 25, 103, 106, 118, 368, 418, 431], "compar": [20, 21, 46, 77, 84, 88, 90, 108, 111, 115, 128, 196, 198, 200, 201, 217, 220, 229, 230, 233, 282, 292, 374, 398, 445], "explain": [20, 88, 89, 445], "explor": [20, 23, 52, 117, 118, 136, 138, 233, 445], "patch": [20, 21, 84, 88, 197, 209, 212, 215, 218, 220, 249, 251, 262, 266, 267, 270, 279, 283, 316, 341, 352, 361, 367, 375], "prune": [20, 120, 125, 445], "stat": [20, 25, 40, 41, 54, 55, 69, 70, 73, 88, 108, 109, 111, 115, 119, 220, 237, 245, 407, 419, 445], "valid": [20, 25, 30, 35, 46, 58, 69, 71, 80, 81, 82, 89, 105, 106, 113, 119, 120, 131, 138, 198, 200, 201, 209, 213, 217, 220, 223, 224, 227, 229, 245, 282, 292, 374, 376, 389, 398, 418, 443, 445], "task": [21, 25, 26, 30, 34, 35, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 67, 71, 72, 76, 80, 81, 88, 89, 96, 98, 100, 101, 103, 104, 105, 106, 109, 110, 113, 114, 115, 116, 126, 128, 131, 134, 137, 187, 196, 197, 209, 210, 211, 212, 220, 227, 229, 230, 233, 236, 237, 244, 245, 270, 275, 282, 287, 288, 311, 337, 366, 367, 368, 374, 379, 397, 398, 410, 418, 419, 433, 445], "did": [21, 115, 131], "manual": [21, 25, 39, 40, 41, 52, 54, 62, 69, 70, 82, 84, 87, 88, 92, 137, 197, 209, 220, 233, 447], "autom": 21, "now": [21, 88, 99, 100, 102, 103, 106, 107, 109, 112, 113, 116, 117, 119, 122, 124, 128, 133, 134, 136, 200, 201, 229, 387], "few": [21, 25, 26, 48, 50, 54, 57, 69, 70, 76, 77, 80, 88, 110, 134, 209, 232, 418, 446], "precis": [21, 106, 113], "But": [21, 52, 415], "adjust": [21, 77, 117, 209], "intersect": [21, 84, 99, 100, 108, 111, 114, 122, 197, 198, 200, 201, 209, 217, 220, 225, 229, 282, 292, 374, 386, 397, 398, 400, 423, 431], "recommend": [21, 45, 82, 92, 106, 115, 119, 287, 289, 427, 443], "offer": [21, 113, 120, 218, 221, 253], "perform": [21, 23, 25, 44, 46, 76, 80, 93, 100, 103, 115, 119, 124, 126, 131, 137, 209, 210, 212, 374, 445], "ones": [21, 39, 40, 41, 50, 54, 55, 62, 69, 81, 84, 88, 90, 124, 135, 398, 431], "across": [21, 118, 119, 128, 132, 200, 423], "measur": [21, 113, 114, 119, 386], "ok": [21, 84, 200, 423], "pdj": [21, 84, 423], "vote": [21, 84, 113, 118, 201, 214, 229], "rang": [21, 26, 41, 62, 71, 108, 111, 113, 115, 128, 445], "agreement": 21, "estim": [21, 30, 51, 128], "partial": [21, 80, 113, 221], "overlap": [21, 99, 104, 114, 244, 386, 414, 416], "imposs": 21, "appear": [21, 84, 119, 445], "unsuccess": 21, "quorum": [21, 201, 220, 225, 229], "reach": 21, "too": [21, 25, 26, 81, 109, 110, 218, 221, 253, 419, 431, 446], "repres": [21, 23, 25, 32, 35, 40, 41, 47, 54, 55, 59, 60, 62, 63, 64, 67, 69, 70, 73, 84, 85, 88, 114, 116, 117, 119, 120, 122, 124, 137, 194, 197, 198, 200, 201, 203, 209, 214, 217, 218, 220, 221, 253, 282, 292, 368, 374, 394, 397, 398, 400, 418, 433], "bodi": [21, 112, 113, 118, 200, 201, 209, 221, 229, 433], "vehicl": [21, 47, 87, 118], "complet": [21, 69, 81, 88, 99, 106, 119, 137, 197, 209, 220, 224, 227, 282, 292, 433], "g": [21, 22, 25, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 44, 45, 46, 54, 55, 62, 63, 64, 67, 70, 73, 81, 84, 89, 101, 103, 104, 106, 107, 111, 112, 114, 116, 118, 119, 127, 137, 188, 197, 198, 217, 221, 244, 282, 292, 368, 374, 407, 422, 431, 433, 435], "particularli": [21, 22, 116, 117, 119], "keypoint": [21, 41, 51, 54, 55, 63, 64, 67, 70, 73, 84, 112, 200, 229, 423], "necessari": [21, 51, 81, 107, 134, 209, 218, 232, 433, 435], "compon": [21, 36, 37, 84, 92, 99, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 124, 128, 129, 131, 133, 134, 135, 136, 184, 245, 250, 254, 282, 292, 374, 427, 443], "merge_polici": [21, 99, 100, 114, 133, 197, 209, 220, 225], "oconf": 21, "output_conf_thresh": [21, 220, 225, 229], "polici": [21, 25, 133, 197, 209, 220, 225, 229, 230, 387, 418], "union": [21, 84, 99, 114, 133, 197, 198, 201, 209, 217, 220, 225, 229, 230, 282, 292, 374, 380, 382, 385, 386, 397, 398, 400, 427], "exact": [21, 41, 197, 209, 220, 225], "inter": [21, 137], "cluster": [21, 23, 115, 194, 201, 229], "pairwis": 21, "minimum": [21, 25, 26, 114, 229, 386, 419], "comma": [21, 31, 75, 229, 318, 445], "postfix": [21, 229], "success": [21, 35, 50, 54, 55, 57, 59, 63, 64, 67, 70, 73, 76, 77, 81, 82, 88, 104, 106], "than": [21, 25, 26, 34, 41, 52, 69, 102, 109, 110, 114, 117, 118, 119, 135, 200, 209, 217, 218, 220, 238, 374, 387, 396, 397, 400, 407, 408, 419, 433, 444], "hand": [21, 64, 70, 102, 112, 113, 118, 135, 368, 374, 434], "foot": [21, 70, 112, 113, 118, 368], "project1": [21, 22, 133], "project2": [21, 22, 133], "project3": [21, 133], "project4": 21, "dataset3": 21, "regular": [22, 25, 40, 84, 209, 220, 418], "onto": 22, "arbitrari": [22, 31, 32, 39, 41, 44, 55, 69, 70, 73, 81, 83, 84, 88, 106, 198, 209, 211, 217, 282, 292, 415, 435], "outsid": [22, 113, 218, 221, 253, 280], "entri": [22, 83, 84, 85, 113], "export_arg": 22, "new_src2": 22, "my_format": 22, "entir": [23, 113, 115, 118, 120, 433], "effect": [23, 46, 88, 119, 132, 135], "handl": [23, 113, 116, 117, 119, 129, 220, 225, 229, 382, 418, 445], "scale": [23, 65, 66, 106, 113, 118, 119, 132, 182, 198, 200, 220, 244, 282, 292, 394, 423, 427], "redund": [23, 26, 115, 136], "manag": [23, 25, 77, 88, 119, 126, 128, 135, 160, 162, 163, 164, 171, 194, 197, 209, 218, 220, 221, 232, 253, 418, 427, 433, 437, 445], "methodologi": 23, "approach": [23, 25, 84, 88, 137, 433], "fundament": [23, 132], "familiar": 23, "randomli": [23, 25, 75, 108, 111, 114, 115, 194, 387, 407, 408, 410], "cover": [23, 25, 41, 45, 58, 62, 92, 108, 111, 113, 114, 116, 117, 118, 198, 200, 217, 275, 282, 292, 418, 431], "unsupervis": 23, "overwirt": 23, "datasest": 23, "ratio": [23, 25, 26, 63, 103, 109, 110, 115, 124, 194, 244, 391, 392, 393, 394, 410, 418, 419, 423], "hash_typ": [23, 124, 194], "remain": [23, 25, 88, 102, 111, 113, 194, 196, 221, 230, 233, 414, 416], "center": [23, 48, 65, 66, 81, 82, 118, 194, 196, 198], "init": [23, 83, 115, 194, 196, 200, 201, 229, 233], "duplic": [23, 25, 70, 115, 117, 220, 225, 230, 386, 387, 396, 397, 400, 444, 445], "chosen": 23, "8": [23, 24, 34, 39, 40, 46, 69, 70, 73, 81, 99, 101, 102, 103, 106, 107, 108, 109, 110, 111, 115, 116, 117, 118, 119, 196, 198, 209, 211, 212, 217, 224, 229, 230, 238, 245, 254, 282, 286, 292, 293, 303, 329, 367, 368, 374], "accord": [23, 25, 44, 64, 106, 110, 112, 118, 127, 196, 200, 201, 220, 221, 225, 229, 230, 253, 273, 285, 345, 377, 418], "desir": [23, 25, 88, 90, 119, 124, 135, 194, 197, 209, 220, 244, 391, 392, 393, 394, 418, 444], "proport": [23, 115, 119], "Then": [23, 88, 100, 104, 106, 107, 111, 114, 115, 116, 275], "choos": [23, 34, 77, 99, 100, 114, 115, 116, 118, 124, 194, 220, 225, 445], "dev": 24, "balanc": [24, 113, 115], "segment": [24, 25, 26, 30, 31, 32, 34, 36, 37, 40, 41, 44, 45, 46, 48, 51, 52, 54, 56, 61, 67, 69, 71, 74, 89, 90, 95, 103, 110, 112, 118, 121, 128, 131, 134, 198, 200, 217, 220, 229, 237, 245, 275, 282, 292, 312, 338, 341, 368, 396, 397, 398, 399, 410, 418, 419, 423, 431, 445], "image_stat": 24, "ann": [24, 70, 73, 81, 102, 108, 109, 110, 111, 114, 116, 135, 187, 200, 201, 209, 214, 217, 220, 226, 227, 229, 230, 254, 270, 292, 293, 347, 353, 414, 416], "ann_stat": 24, "gender": [24, 118], "358": [24, 103, 106, 118], "femal": [24, 118], "149": [24, 103, 118], "41620111731843573": 24, "male": [24, 33, 38, 118], "209": [24, 103, 118], "5837988826815642": 24, "view": [24, 84, 229, 374], "340": [24, 103, 115], "__undefined__": 24, "011764705882352941": 24, "front": [24, 113], "54": [24, 55, 103, 106, 114, 115, 118], "1588235294117647": 24, "left": [24, 40, 54, 81, 82, 101, 113, 198, 201, 217, 282, 292, 368, 374, 398, 433], "14": [24, 75, 103, 105, 106, 115, 117, 118, 119, 125, 196, 198, 209, 211, 212, 217, 229, 230, 282, 286, 292, 303, 368, 374], "041176470588235294": 24, "rear": [24, 113, 368], "235": [24, 103, 106, 115, 118], "6911764705882353": 24, "right": [24, 70, 113, 198, 217, 282, 292, 368], "33": [24, 25, 103, 106, 110, 115, 118, 418], "09705882352941177": 24, "2038": [24, 118], "16683022571148184": 24, "cyclist": 24, "194": [24, 103, 118], "09519136408243375": 24, "354": [24, 103, 115, 118], "17369970559371933": 24, "04906771344455348": 24, "left_hand": 24, "238": [24, 103, 106, 115, 118], "11678115799803729": 24, "17566241413150147": 24, "right_hand": 24, "037782139352306184": 24, "road_arrow": 24, "326": [24, 103], "15996074582924436": 24, "traffic_sign": 24, "51": [24, 103, 106, 115, 118], "025024533856722278": 24, "1318": [24, 115], "11425": 24, "9627465303140978": 24, "22850": 24, "0007304601899196494": 24, "34275": 24, "45700": 24, "57125": 24, "68550": 24, "79975": 24, "91400": 24, "102825": 24, "90000000001": 24, "114251": 24, "036523009495982466": 24, "avg": 24, "5411": 24, "624543462382": 24, "13655": 24, "0018431496518735067": 24, "939005": 24, "12674674030446592": 24, "5501200": 24, "7425510702956085": 24, "954654": 24, "12885903974805205": 24, "548": [24, 103, 118], "caption": [24, 25, 26, 34, 41, 45, 46, 48, 51, 89, 119, 196, 198, 209, 211, 212, 217, 229, 230, 254, 272, 282, 286, 292, 293, 374, 418, 443], "669": [24, 103, 115], "821": [24, 103, 106, 115, 118], "polylin": [24, 25, 34, 44, 45, 46, 51, 196, 198, 209, 211, 212, 217, 229, 230, 238, 254, 279, 280, 282, 286, 292, 293, 374, 443], "img00051": 24, "img00052": 24, "img00053": 24, "img00054": 24, "img00055": 24, "97": [24, 75, 103, 106], "img00057": 24, "img00058": 24, "img00059": 24, "img00060": 24, "img00061": 24, "img00062": 24, "107": [24, 103, 118], "06903686941979": 24, "79": [24, 103, 106, 118], "12831698580979": 24, "52": [24, 103, 106, 115], "95829558185416": 24, "49": [24, 75, 101, 103, 106, 110, 115, 118], "40237673503467": 24, "43": [24, 75, 103, 106, 115], "29600731496902": 24, "35": [24, 103, 106, 114, 115, 118], "47373007603151": 24, "often": [25, 135], "prepar": [25, 71, 88, 92, 103, 105, 109, 110, 118], "experi": [25, 46, 92, 445], "trivial": 25, "complex": [25, 83, 126, 135, 445], "modif": [25, 85, 88, 103, 197, 209, 220, 387], "effort": [25, 82], "distract": [25, 60], "real": [25, 34, 69, 118, 171, 233, 254, 256, 292, 296, 445], "design": [25, 84, 110, 117, 119, 126], "solut": [25, 88, 113], "regex": [25, 418], "frame_xxx": 25, "xxx": [25, 113], "doubl": [25, 31, 69, 113], "quot": [25, 31, 69, 374, 418, 427], "manipul": [25, 88, 119, 130], "filenam": [25, 39, 53, 56, 118, 182, 220, 221, 374, 427, 445], "leav": [25, 53, 84, 113, 200, 201, 229, 233], "label_random_sampl": [25, 407, 444], "identif": [25, 51, 57, 59, 60, 89, 433], "request": [25, 88, 92, 116, 117, 118, 382, 407, 408], "sequenc": [25, 51, 63, 64, 84, 187, 191, 192, 196, 197, 200, 209, 210, 212, 213, 218, 220, 221, 222, 223, 226, 227, 228, 229, 230, 232, 253, 271, 374, 378, 415, 423, 431], "replac": [25, 52, 111, 115, 200, 201, 211, 229, 418, 445], "bound": [25, 26, 33, 35, 38, 47, 51, 54, 56, 59, 63, 65, 66, 67, 69, 70, 76, 78, 79, 89, 103, 109, 110, 111, 112, 114, 115, 118, 120, 121, 135, 188, 198, 200, 201, 209, 217, 220, 221, 222, 244, 254, 282, 292, 293, 374, 384, 386, 391, 392, 393, 396, 398, 400, 401, 402, 407, 414, 416, 418, 423, 433, 445], "instanc": [25, 31, 32, 35, 40, 41, 46, 51, 52, 54, 58, 61, 63, 64, 67, 70, 83, 84, 89, 90, 103, 106, 112, 118, 120, 121, 124, 133, 188, 196, 197, 198, 200, 201, 209, 210, 211, 217, 218, 220, 221, 224, 229, 238, 253, 272, 282, 292, 312, 322, 330, 374, 380, 381, 382, 385, 396, 397, 398, 418, 419, 427, 431, 433], "subtract": [25, 418], "coordin": [25, 47, 48, 52, 65, 66, 118, 198, 200, 201, 217, 244, 282, 292, 374, 398, 418, 423], "charact": [25, 118, 162, 418, 434], "delimit": [25, 27, 224, 418], "sep": [25, 162, 163, 171, 184, 224, 434], "prefix": [25, 42, 46, 81, 162, 171, 184, 249, 251, 374], "collect": [25, 40, 47, 85, 128, 133, 163, 197, 198, 209, 218, 220, 221, 253, 418, 434], "_": [25, 40, 41, 84, 107, 111, 319, 324], "without": [25, 29, 44, 48, 55, 67, 69, 70, 80, 82, 88, 89, 92, 101, 107, 115, 119, 124, 128, 132, 133, 135, 136, 137, 196, 209, 217, 218, 220, 221, 230, 253, 387, 418, 433, 445], "sequenti": [25, 418, 433], "kei": [25, 26, 34, 46, 51, 101, 102, 103, 105, 107, 109, 110, 113, 114, 115, 119, 196, 198, 204, 208, 214, 227, 229, 230, 234, 282, 287, 288, 289, 347, 374, 381, 382, 387, 397, 398, 400, 401, 418], "callabl": [25, 102, 197, 198, 200, 201, 209, 213, 217, 218, 220, 224, 227, 229, 231, 249, 251, 254, 256, 282, 292, 374, 379, 391, 392, 393, 398, 423, 427, 433, 437], "lambda": [25, 75, 84, 93, 200, 229, 422], "num_cut": [25, 387], "oversampl": [25, 387], "random": [25, 89, 99, 103, 107, 108, 111, 114, 115, 124, 137, 187, 194, 196, 197, 198, 209, 210, 211, 212, 220, 221, 224, 227, 228, 229, 230, 233, 238, 249, 250, 282, 287, 289, 364, 374, 387, 397, 398, 406, 408, 413, 445], "ascend": [25, 198, 387], "undersampl": [25, 387], "u": [25, 73, 111, 112, 115, 118, 119, 122, 124, 387], "uniform": [25, 85, 117, 387, 396, 397], "invers": [25, 387, 415], "reciproc": [25, 387], "working_subset": [25, 387], "duplicated_subset": [25, 387], "gradient": [25, 106, 244, 387], "seed": [25, 106, 108, 111, 113, 114, 115, 387, 407, 410, 418], "over_sampl": [25, 387], "bigger": 25, "under_sampl": [25, 387], "sampler": [25, 115, 444], "analyz": [25, 88, 89, 110, 119, 196, 218, 405, 408, 445], "pick": [25, 113, 114, 408], "relev": [25, 51, 135, 408], "hardest": [25, 408], "unsampl": [25, 408], "five": [25, 408], "highest": [25, 26, 163, 406, 408, 434], "uncertainti": [25, 406, 408], "lowk": [25, 405, 406, 408], "lowest": [25, 115, 406, 408], "randk": [25, 405, 408], "mixk": [25, 405, 408], "half": [25, 106, 113, 408], "randtopk": [25, 405, 406, 408], "larger": [25, 109, 133, 135, 209, 217, 220, 387, 407, 408], "entropi": [25, 89, 115, 194, 405, 408], "input_subset": [25, 408], "sampled_subset": [25, 408], "unsampled_subset": [25, 408], "output_fil": [25, 408], "rest": [25, 113, 200, 201, 229, 408], "sampling_method": [25, 408], "csv": [25, 35, 51, 53, 62, 69, 75, 83, 118, 119, 224, 258, 341, 345, 358, 370, 408, 445], "dump": [25, 113, 204, 233], "20": [25, 36, 39, 41, 70, 75, 81, 101, 102, 103, 105, 106, 109, 113, 115, 118, 122, 136, 200, 201, 218, 221, 229, 253, 313, 324, 328, 339, 368, 407, 408], "certainti": [25, 408], "subset_nam": [25, 26, 41, 61, 70, 84, 134, 209, 212, 262, 367, 374, 376, 408], "sample_nam": [25, 408], "unsampled_nam": [25, 408], "uniformli": [25, 200, 400, 407, 423], "initi": [25, 84, 89, 111, 114, 115, 122, 196, 198, 201, 209, 217, 224, 232, 233, 244, 282, 292, 374, 398, 410, 433, 445], "vari": [25, 115, 407], "sum": [25, 88, 407, 418], "enough": [25, 84, 92, 117, 209, 210, 212, 374, 407, 410], "what": [25, 88, 407], "abov": [25, 34, 45, 46, 64, 69, 72, 83, 88, 109, 110, 118, 119, 126, 386, 407, 418], "label_count": [25, 109, 115, 407], "overrid": [25, 84, 106, 389, 433, 435], "label_nam": [25, 39, 102, 109, 115, 214], "dog": [25, 39, 55, 73, 84, 90, 93, 100, 103, 105, 109, 110, 112, 113, 118, 220, 225, 229, 230, 368, 418, 448], "unment": 25, "upscal": [25, 418], "downscal": [25, 418], "mix": [25, 106, 113, 418], "variant": [25, 62, 92, 118, 418], "dw": [25, 418], "dh": [25, 418], "destin": [25, 99, 423], "256x256": [25, 418], "pair": [25, 50, 57, 81, 82, 118, 200, 209, 220, 222, 225, 227, 229, 230, 233, 319, 374, 382, 422, 431], "clean": [25, 88, 108, 110, 111, 115, 119, 196, 233, 418, 445], "broken": [25, 109, 119, 418, 445], "unnecessari": [25, 88, 135, 418], "attribute_nam": 25, "2010_001705": [25, 418], "individu": [25, 40, 418], "categor": [25, 31, 75, 119, 120, 418], "titl": [25, 118, 119, 238, 341, 418, 445], "rate": [25, 118, 244], "up": [25, 46, 53, 69, 75, 77, 84, 88, 92, 115, 137, 418, 433, 445], "67": [25, 103, 106, 109, 418], "wise": [25, 51, 113, 209, 220, 222, 378, 410], "manner": [25, 209, 215, 220, 244, 270, 274, 282, 283, 286, 367, 375, 410], "sinc": [25, 36, 46, 52, 88, 99, 100, 111, 114, 118, 119, 122, 137, 200, 201, 209, 220, 225, 229, 230, 386, 410, 433], "shouldn": [25, 410], "exactli": [25, 81, 85, 410], "reidentif": [25, 121, 410], "unseen": [25, 410], "peopl": [25, 57, 113, 118, 319, 410], "phase": [25, 410], "galleri": [25, 101, 108, 111, 118, 238, 410], "final": [25, 30, 95, 99, 106, 115, 128, 133, 134, 209, 221, 410, 433], "unlabel": [25, 41, 83, 410], "multi": [25, 30, 34, 36, 37, 209, 220, 222, 287, 288, 289, 304, 410, 445], "guarante": [25, 224, 227, 282, 292, 410], "reid": [25, 410], "attr_for_id": [25, 410], "person_id": [25, 59, 60, 324, 410], "src": [25, 84, 118, 423, 427, 434], "dst": [25, 84, 93, 423, 427, 434], "old_nam": [25, 418], "new_nam": [25, 418], "delet": [25, 81, 84, 93, 126, 200, 201, 209, 229, 233, 418], "mention": [25, 418], "associ": [25, 44, 69, 84, 85, 102, 119, 401, 418], "unchang": [25, 418, 427], "unspecifi": [25, 218, 221, 253, 368], "pedestrian": [25, 59, 60, 74, 329, 330, 418], "had": [25, 88, 115, 433], "under": [25, 44, 103, 117, 396, 397, 400, 445], "order": [25, 30, 34, 52, 70, 84, 114, 115, 118, 196, 197, 198, 200, 201, 209, 217, 218, 220, 221, 229, 253, 282, 292, 374, 387, 418, 431, 444], "depend": [25, 34, 39, 41, 84, 91, 119, 218, 221, 223, 253, 418, 445, 446, 447], "parent": [25, 30, 187, 196, 198, 209, 211, 212, 229, 230, 282, 374, 418, 445], "whose": [25, 135, 218, 220, 221, 225, 229, 230, 253, 418, 433], "align": [25, 51, 55, 100, 418, 445], "dst_label": [25, 418, 423], "enclos": 25, "largest": [25, 118, 119, 418], "z_order": [25, 30, 116, 198, 200, 217, 282, 292, 398, 401, 418], "crop": [25, 41, 63, 118, 414, 416, 418, 431], "underli": [25, 418, 433], "independ": [25, 55, 88, 209, 232, 418], "bbox_values_decr": 25, "report_path": [25, 220], "cli": [25, 27, 31, 32, 33, 34, 36, 37, 38, 39, 40, 42, 44, 45, 46, 53, 65, 66, 72, 74, 75, 78, 79, 80, 82, 84, 85, 89, 92, 99, 102, 106, 108, 111, 114, 115, 118, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 414, 416, 444, 445], "validation_report": [25, 26, 109, 110, 418], "inspect": [26, 119], "respect": [26, 33, 38, 52, 60, 61, 69, 131, 414, 416, 433], "undefin": [26, 109, 110, 120, 224, 227, 282, 292, 418, 445], "imbalanc": [26, 109], "small": [26, 47, 89, 104, 110, 113, 115, 118, 121, 414, 416, 419, 431, 433], "thr": 26, "give": [26, 46, 95, 101, 103, 106, 107, 119, 358, 433, 445], "warn": [26, 29, 44, 100, 101, 103, 105, 110, 112, 115, 118, 120, 134, 237, 245, 419, 445], "imbal": [26, 109, 110, 119, 134], "far": [26, 30, 106, 109, 120], "dr": 26, "domin": [26, 419], "bin": [26, 87, 90, 92, 109, 113, 114, 115, 126, 419], "histogram": [26, 109, 119], "over": [26, 55, 84, 85, 88, 89, 93, 114, 134, 198, 201, 209, 217, 232, 238, 282, 292, 374, 386, 396, 397, 398, 400, 419, 433], "40": [26, 41, 103, 106, 115, 118, 233], "anomali": [26, 120, 445], "missinglabelcategori": [26, 110, 214, 245], "ex": [26, 110, 224], "missingannot": [26, 109, 110, 214, 245], "No": [26, 45, 46, 110, 137, 209, 217, 220], "missingattribut": [26, 110, 214, 245], "multilabelannot": [26, 110, 214, 245], "undefinedlabel": [26, 110, 214, 245], "undefinedattribut": [26, 109, 110, 214, 245], "labeldefinedbutnotfound": [26, 110, 214, 245], "actual": [26, 110, 127, 214, 433], "attributedefinedbutnotfound": [26, 110, 214, 245], "onlyonelabel": [26, 110, 214, 245], "onlyoneattributevalu": [26, 109, 110, 214, 245], "fewsamplesinlabel": [26, 109, 110, 214, 245], "fewsamplesinattribut": [26, 109, 110, 214, 245], "imbalancedlabel": [26, 109, 110, 214, 245], "imbalancedattribut": [26, 109, 110, 214, 245], "imbalanceddistinlabel": [26, 109, 110, 214, 245], "evenli": [26, 110, 419], "imbalanceddistinattribut": [26, 109, 110, 214, 245], "negativelength": [26, 109, 110, 214, 245], "neg": [26, 60, 110, 119, 244, 433], "invalidvalu": [26, 110, 214, 245], "invalid": [26, 34, 80, 110, 372, 382, 445], "inf": [26, 110, 232], "farfromlabelmean": [26, 109, 110, 214, 245], "averag": [26, 101, 108, 109, 110, 111, 196], "farfromattrmean": [26, 109, 110, 214, 245], "brokenannot": [26, 214], "emptylabel": [26, 214], "column": [26, 31, 52, 75, 113, 118, 119, 198, 209, 224, 307, 358], "emptycapt": [26, 214], "fewsamplesincapt": [26, 214], "redundanciesincapt": [26, 214], "imbalancedcapt": [26, 214], "imbalanceddistincapt": [26, 214], "farfromcaptionmean": [26, 214], "outlierincapt": [26, 214], "outlier": [26, 110, 119, 120, 418], "interquartil": 26, "label_distribut": [26, 109, 115, 119], "defined_label": [26, 109, 115, 119], "dict": [26, 148, 162, 187, 188, 194, 196, 197, 198, 200, 201, 203, 209, 210, 211, 212, 217, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 235, 237, 245, 249, 250, 253, 254, 255, 256, 266, 270, 274, 282, 283, 285, 286, 292, 293, 294, 295, 296, 297, 307, 341, 343, 345, 346, 347, 349, 358, 368, 374, 377, 380, 381, 382, 384, 385, 389, 391, 392, 393, 397, 398, 400, 401, 402, 418, 419, 422, 423, 427, 431, 437], "undefined_label": [26, 245], "items_with_undefined_label": 26, "item_kei": [26, 271, 274, 282, 286], "attribute_distribut": 26, "defined_attribut": 26, "attr_valu": [26, 214], "items_missing_attribut": 26, "undefined_attribut": [26, 245], "items_with_undefined_attr": 26, "total_ann_count": [26, 119, 419], "items_missing_annot": [26, 119, 419], "items_with_multiple_label": 26, "items_with_invalid_valu": 26, "ann_id": [26, 111, 196, 214, 229, 238], "wxh": 26, "items_with_negative_length": 26, "bbox_distribution_in_label": 26, "bbox_templ": 26, "bbox_distribution_in_attribut": 26, "bbox_distribution_in_dataset_item": 26, "mask_distribution_in_label": 26, "mask_templ": 26, "mask_distribution_in_attribut": 26, "mask_distribution_in_dataset_item": 26, "items_broken_annot": [26, 119], "empty_label": [26, 119, 245], "items_with_empty_label": 26, "caption_distribut": [26, 119], "defined_capt": [26, 119], "empty_capt": [26, 119, 245], "stopword": 26, "items_with_redund": 26, "validation_error_format": 26, "anomaly_typ": [26, 109, 110], "item_id": [26, 109, 110, 111, 116, 117, 201, 207, 209, 212, 214, 215, 221, 227, 229, 238, 249, 250, 341, 418, 428], "numerical_stat_templ": 26, "items_far_from_mean": 26, "stddev": [26, 109, 419], "median": [26, 418], "quick": 27, "guid": [27, 108, 111, 114, 115, 116, 117, 119, 396, 397, 398, 446], "visit": [27, 113], "our": [27, 32, 51, 80, 88, 102, 106, 107, 108, 111, 119, 122, 135, 220, 225, 229, 446], "li": 27, "le": 27, "seper": [27, 46, 445], "align_celeba": [27, 33, 445], "split": [29, 40, 70, 83, 89, 99, 104, 107, 108, 109, 111, 114, 119, 122, 131, 184, 209, 232, 275, 408, 410, 418, 444], "three": [29, 46, 48, 60, 74, 82, 99, 111, 114, 198, 200, 217, 282, 292], "free": [29, 35, 39, 40, 41, 62, 67, 68, 69, 70, 113, 119, 128, 131, 433], "helper": [29, 187, 188, 198, 217, 282, 292, 398], "almost": [29, 431], "mostli": [29, 84], "somewher": [29, 90], "els": [29, 85, 93, 109, 110, 188, 221, 229, 374, 433], "behavior": [29, 84, 88, 114, 200, 201, 220, 225, 229, 445, 446], "subject": 29, "outdat": [29, 88, 118], "prior": [29, 198], "posit": [29, 55, 73, 89, 109, 118, 119, 196, 198, 209, 212, 229, 230, 244, 282, 292, 374], "loglevel": [29, 90], "critic": [29, 115, 132], "vision": [30, 44, 52, 56, 71, 113, 118, 119, 121, 137, 414, 416], "pose": [30, 51, 55, 80, 128, 367, 372], "track": [30, 35, 44, 47, 55, 59, 60, 84, 111, 113, 119, 128, 279], "public": [30, 52, 87, 89, 95, 118, 119, 127, 128, 131, 135], "while": [30, 44, 46, 61, 107, 108, 111, 115, 118, 135, 391, 392, 393, 394, 427], "ensur": [30, 76, 109, 111, 119, 135, 198, 217, 282, 292, 398, 445], "compat": [30, 84, 104, 106, 107, 111, 114, 115, 116], "novel": 30, "datumarobinari": [30, 107, 287, 288, 445], "varieti": [30, 88], "dm_format_vers": [30, 282, 286, 421], "backward": [30, 36, 254, 255, 256, 292, 293, 294, 295, 296], "trace": [30, 445, 447], "creation": [30, 84, 122, 128, 196, 445], "colormap": [30, 40, 54, 70, 89, 90, 198, 217, 229, 262, 267, 282, 292, 311, 367, 398, 431], "respond": 30, "hierarch": 30, "label_group": [30, 196, 198, 209, 212, 229, 230, 282, 374, 445], "whether": [30, 31, 32, 69, 74, 81, 102, 104, 187, 196, 197, 209, 210, 211, 212, 215, 218, 220, 221, 227, 228, 229, 230, 236, 253, 270, 271, 273, 282, 283, 285, 287, 288, 302, 304, 345, 366, 367, 374, 375, 397, 398, 433], "anomaly_detect": 30, "2023": [30, 99, 102, 104, 106, 107, 111, 114, 115, 116, 117, 118, 121], "normal": [30, 77, 80, 92, 115, 118, 162, 187, 188, 209, 220, 222, 433, 434], "anomal": 30, "group_typ": [30, 196, 198, 209, 212, 229, 230, 282, 374], "exclus": [30, 34, 100, 196, 198, 209, 212, 229, 230, 282, 374, 445], "255": [30, 40, 51, 54, 70, 90, 103, 109, 118, 198, 217, 224, 229, 254, 282, 292, 327, 368, 374, 398, 427, 431], "good_001": 30, "900": [30, 103], "broken_small_001": 30, "350": [30, 103], "8999938964844": 30, "151": [30, 103, 106, 118], "3899993896484": 30, "275": [30, 103, 106, 118], "1399841308594": 30, "126": [30, 103, 106, 115, 118], "4900054931640": 30, "dataset_meta": [30, 31, 32, 33, 38, 39, 40, 41, 42, 44, 45, 46, 51, 54, 55, 58, 62, 69, 70, 74, 78, 79, 81, 82, 275], "img001": 30, "img002": 30, "video": [30, 35, 44, 45, 46, 51, 52, 53, 83, 84, 85, 113, 118, 224, 227, 254, 282, 284, 286, 290, 292, 296, 443, 445], "boolean": [31, 32, 33, 38, 40, 41, 44, 54, 55, 58, 63, 69, 70, 74, 102, 171, 187, 196, 197, 209, 210, 211, 212, 217, 220, 221, 227, 228, 229, 230, 271, 282, 287, 288, 302, 304, 366, 374, 397, 398, 433], "image_nam": [31, 32, 50, 73, 118, 374], "_atr": 31, "python": [31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 91, 92, 101, 102, 104, 105, 106, 107, 118, 124, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 200, 201, 209, 211, 217, 220, 224, 225, 229, 380, 381, 382, 385, 397, 398, 433, 445, 446], "ade20k_dataset": [31, 32, 113], "import_from": [31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 93, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 124, 128, 129, 131, 133, 134, 135, 136, 197, 209, 220, 448], "subset1": [31, 32, 56, 80], "super_label_1": [31, 32], "img1": [31, 32, 35, 36, 37, 42, 43, 47, 56, 63, 67, 70, 82, 275, 304, 329], "img1_atr": 31, "img1_parts_1": [31, 32], "img1_seg": [31, 32], "img2": [31, 32, 35, 36, 37, 42, 43, 47, 56, 67, 70, 82, 275, 304], "img2_atr": 31, "subset2": [31, 32, 56], "img3": [31, 32, 36, 47, 304], "img3_atr": 31, "img3_parts_1": [31, 32], "img3_parts_2": 31, "img4": [31, 32, 36, 47], "img4_atr": 31, "img4_seg": [31, 32], "_seg": [31, 32, 247, 248], "encod": [31, 32, 40, 46, 48, 54, 64, 116, 117, 119, 198, 217, 224, 254, 256, 282, 292, 435], "_parts_n": [31, 32], "hierarchi": [31, 32, 69, 84], "content": [31, 32, 34, 55, 62, 70, 81, 82, 88, 119, 197, 209, 218, 220, 221, 253, 418, 445], "raw": [31, 51, 54, 89, 113, 117, 118, 135], "pars": [31, 84, 87, 118, 162, 171, 184, 196, 204, 214, 274, 282, 286, 326, 343, 368, 374, 382], "wordnet": 31, "Or": [31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 53, 54, 55, 56, 59, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 78, 79, 81, 82, 134], "ade202017": 31, "2020": [32, 115, 118], "instance_001_img1": 32, "instance_002_img1": 32, "instance_001_img2": 32, "instance_002_img2": 32, "instance_001_img3": 32, "instance_002_img3": 32, "img3_seg": 32, "instance_001_img4": 32, "instance_002_img4": 32, "affin": [32, 188, 222, 384, 391, 392, 393, 400, 401, 402], "asset": [32, 58, 80, 102], "toolkit": [32, 446], "landmark": [33, 38, 51, 57, 76, 89, 319], "5_o_clock_shadow": [33, 38], "arched_eyebrow": [33, 38], "attract": [33, 38, 113], "bags_under_ey": [33, 38], "bald": [33, 38], "bang": [33, 38], "big_lip": [33, 38], "big_nos": [33, 38], "black_hair": [33, 38], "blond_hair": [33, 38], "blurri": [33, 38], "brown_hair": [33, 38], "bushy_eyebrow": [33, 38], "chubbi": [33, 38], "double_chin": [33, 38], "eyeglass": [33, 38, 113], "goate": [33, 38], "gray_hair": [33, 38], "heavy_makeup": [33, 38], "high_cheekbon": [33, 38], "mouth_slightly_open": [33, 38], "mustach": [33, 38, 113], "narrow_ey": [33, 38], "no_beard": [33, 38], "oval_fac": [33, 38], "pale_skin": [33, 38], "pointy_nos": [33, 38], "receding_hairlin": [33, 38], "rosy_cheek": [33, 38], "sideburn": [33, 38], "smile": [33, 38], "straight_hair": [33, 38], "wavy_hair": [33, 38], "wearing_ear": [33, 38], "wearing_hat": [33, 38], "wearing_lipstick": [33, 38], "wearing_necklac": [33, 38], "wearing_neckti": [33, 38], "young": [33, 38], "align_celeba_dataset": 33, "anno": [33, 38, 90, 264, 265], "identity_celeba": [33, 38, 265], "list_attr_celeba": [33, 38, 265], "list_landmarks_align_celeba": [33, 264], "eval": [33, 38, 200, 229, 265, 423], "list_eval_partit": [33, 38, 265], "img_align_celeba": [33, 264], "000001": [33, 38, 74], "000002": [33, 38], "7z": [33, 38], "archiv": [33, 38, 69], "unpack": [33, 38], "befor": [33, 38, 59, 92, 100, 115, 116, 117, 119, 198, 209, 220, 222, 433], "apach": [34, 445], "memori": [34, 84, 115, 117, 396, 397, 431, 445], "columnar": 34, "languag": [34, 44, 118, 418], "shard": [34, 46], "entiti": [34, 220], "tupl": [34, 39, 137, 149, 162, 171, 184, 188, 194, 196, 197, 198, 200, 201, 203, 207, 209, 212, 214, 215, 217, 218, 220, 221, 222, 224, 227, 229, 230, 232, 233, 234, 238, 244, 245, 254, 282, 292, 293, 294, 295, 296, 343, 347, 364, 368, 374, 379, 384, 387, 391, 392, 393, 398, 400, 401, 402, 412, 414, 416, 417, 418, 422, 423, 427, 431, 433], "belong": [34, 39, 114, 218, 221, 253], "pointcloud": [34, 45, 46, 51, 73, 224, 227, 254, 256, 282, 292, 296, 353, 445], "NOT": [34, 254, 256, 292, 296], "littl": 34, "endian": 34, "cuboid3d": [34, 37, 45, 46, 55, 73, 198, 282, 292, 293, 443], "ellips": [34, 45, 46, 51, 72, 196, 198, 209, 211, 212, 217, 229, 230, 254, 282, 286, 292, 293, 374, 418, 443, 445], "subset_name_1": [34, 45, 46, 48], "subset_name_2": [34, 45, 46, 48], "properli": [34, 45, 46, 72, 107, 116, 117, 119], "sure": [34, 35, 40, 41, 42, 43, 44, 45, 46, 54, 55, 63, 64, 67, 68, 70, 72, 73, 128, 433], "been": [34, 35, 40, 41, 42, 43, 44, 45, 46, 54, 55, 63, 64, 67, 68, 70, 71, 72, 73, 102, 106, 109, 115, 119, 122, 126, 433], "pinfo": [34, 72], "panopt": [34, 44, 45, 46, 51, 58, 89, 112, 272, 322], "save_media": [34, 35, 39, 40, 41, 42, 44, 45, 46, 49, 50, 54, 55, 56, 62, 63, 64, 67, 69, 70, 72, 73, 76, 80, 81, 82, 93, 99, 104, 106, 107, 108, 111, 112, 113, 114, 115, 116, 119, 209, 215, 220, 249, 251, 258, 266, 283, 287, 289, 297, 300, 302, 304, 305, 318, 319, 324, 327, 328, 329, 330, 341, 358, 363, 372, 414, 416], "AS": [34, 249, 251, 254, 256], "num_work": [34, 46, 116, 117, 197, 209, 220, 236, 249, 251, 287, 288, 289, 396, 397, 398], "scheme": [34, 254, 256], "tiff": [34, 83, 118, 249, 251, 254, 256], "jpeg": [34, 83, 249, 251, 254, 256, 362], "95": [34, 103, 106, 118, 249, 251, 254, 256, 396, 397], "preserv": [34, 41, 113, 391, 392, 393, 394, 445], "fall": 34, "back": [34, 102, 113, 118, 122, 126], "qualiti": [34, 84, 89, 109, 117, 119, 135, 396, 397, 400], "max_shard_s": [34, 249, 251], "num": [34, 46], "num_shard": [34, 249, 251], "mutual": 34, "worker": [34, 46, 106, 197, 209, 220, 236, 287, 288, 289, 396, 397, 398], "multiprocess": [34, 46, 287, 288, 289, 445], "recogn": [35, 53, 70, 84], "frame": [35, 36, 37, 40, 44, 55, 59, 60, 73, 77, 83, 84, 85, 113, 182, 220, 224, 227, 258, 282, 292, 353, 364, 413], "cooridn": 35, "ava_action_list_v2": [35, 258], "pbtxt": [35, 71, 258, 362], "eas": [35, 61], "propos": [35, 244], "faster": [35, 117, 200, 201, 229, 396, 397, 445], "cnn": 35, "video0": 35, "video1": 35, "ava_train_v2": 35, "ava_val_v2": 35, "ava_dense_proposals_train": 35, "fair": [35, 52, 72], "recall_93": 35, "pkl": [35, 258], "region": [35, 56, 198], "ava_dense_proposals_v": 35, "Such": [35, 54, 55, 63, 64, 67, 70, 73, 84], "17": [36, 75, 103, 105, 106, 115, 118, 119, 200, 201, 229, 368], "significantli": [36, 46, 109, 115], "challeng": [36, 63, 64, 118, 133], "2016": [36, 75], "brats_dataset": [36, 37], "imagestr": 36, "nii": [36, 260], "gz": [36, 39, 62, 260, 327], "imagest": 36, "labelstr": 36, "2d": [36, 37, 83, 117, 198, 200, 217, 244, 292, 396, 397, 398, 400, 423, 431], "image_id": [36, 37, 47, 118, 265, 319], "brats_numpi": 37, "_data_crop": [37, 261], "npy": [37, 66, 333], "_label_crop": [37, 261], "val_brain_bbox": [37, 261], "val_id": [37, 261], "cuboid": [37, 51, 198, 282, 292], "celeba_dataset": 38, "list_bbox_celeba": [38, 265], "list_landmarks_celeba": [38, 265], "img_celeba": [38, 265], "meta": [39, 40, 41, 44, 50, 54, 62, 63, 64, 69, 70, 71, 73, 76, 84, 113, 187, 196, 197, 209, 210, 211, 212, 220, 221, 227, 228, 229, 230, 233, 236, 249, 250, 266, 279, 282, 287, 288, 353, 374, 397, 398, 418], "superclass": 39, "fine": [39, 113, 128], "coars": [39, 113, 128], "32": [39, 103, 106, 115, 117, 118, 233, 266, 396, 397], "tar": [39, 90, 108], "subset_name1": [39, 59], "subset_name2": [39, 59], "pickl": [39, 62, 75, 113, 188, 221, 374, 433], "num_cases_per_batch": 39, "airplan": [39, 99, 100, 102, 103, 105, 109, 110, 112, 113, 115, 122], "automobil": 39, "bird": [39, 100, 103, 105, 109, 110, 112, 113, 118, 368], "num_vi": 39, "3072": [39, 118], "fine_label_nam": 39, "appl": [39, 100, 103, 105, 109, 110, 112, 113], "aquarium_fish": 39, "coarse_label_nam": 39, "aquatic_mamm": 39, "fish": [39, 113, 118], "batch_label": 39, "numpi": [39, 40, 41, 51, 54, 55, 62, 69, 81, 90, 102, 109, 194, 198, 200, 224, 254, 267, 311, 374, 394, 397, 400, 423, 427, 445], "ndarrai": [39, 188, 194, 197, 198, 200, 209, 217, 220, 222, 224, 227, 235, 254, 256, 282, 292, 374, 380, 382, 384, 385, 389, 391, 392, 393, 394, 397, 398, 400, 401, 402, 413, 423, 427, 431, 435], "uint8": [39, 102, 109, 198, 217, 224, 252, 253, 254, 267, 292, 311, 374, 398, 427, 431, 445], "layout": [39, 51, 70, 109, 112, 200, 368, 423], "32x32": 39, "image_s": [39, 135, 197, 209, 217, 220, 266, 327, 328], "fine_label": 39, "coarse_label": 39, "pascalvoc": [39, 40, 62], "presenc": [39, 119], "particular": [39, 40, 41, 48, 50, 54, 57, 59, 60, 62, 69, 70, 76, 80, 122], "solv": [39, 40, 41, 54, 62, 69, 70, 244], "problem": [39, 40, 41, 54, 62, 69, 70, 84, 107, 171, 183, 207, 209, 210, 212, 214, 215, 217, 220, 221, 236, 244, 374, 418, 445], "np": [39, 40, 41, 54, 55, 62, 69, 81, 90, 102, 109, 198, 209, 217, 220, 222, 254, 292, 398, 427, 431, 445], "from_iter": [39, 40, 41, 54, 55, 62, 69, 70, 73, 81, 84, 90, 102, 117, 196, 197, 198, 209, 212, 220, 229, 230, 282, 374], "deer": [39, 113], "frog": 39, "hors": [39, 100, 103, 105, 109, 110, 112, 113, 118, 368], "ship": [39, 47, 113, 118], "truck": [39, 84, 93, 100, 103, 105, 108, 109, 110, 112, 113, 220, 225, 229, 230], "http": [39, 62, 73, 75, 90, 92, 101, 106, 108, 115, 117, 119, 197, 200, 229, 326, 343, 380, 381, 382, 385, 397, 398, 412, 423, 446], "www": [39, 75, 118], "toronto": 39, "edu": 39, "kriz": 39, "overview": [40, 119], "distinguish": [40, 218, 221, 253], "label_color": [40, 54, 262, 267, 312], "leftimg8bit": [40, 113, 267], "city1": 40, "seq": [40, 228], "_leftimg8bit": [40, 267], "city2": 40, "gtfine": [40, 113, 267], "_gtfine_color": 40, "_gtfine_instanceid": [40, 267], "_gtfine_labelid": 40, "ldr": 40, "_color": [40, 267], "_labelid": [40, 267], "index": [40, 41, 48, 55, 58, 70, 75, 81, 90, 113, 118, 163, 198, 205, 209, 214, 217, 224, 233, 282, 292, 374, 398, 431, 434, 450], "_instanceid": [40, 267], "divis": [40, 113], "remaind": 40, "certain": [40, 89, 109, 115], "color_rgb": [40, 70, 90, 427], "124": [40, 70, 103, 118], "134": [40, 70, 103, 106, 115, 118], "label_map": [40, 51, 54, 70, 71, 262, 267, 275, 311, 312, 322, 355, 362, 367, 368], "mycolormap": [40, 54, 70, 90], "sky": [40, 54, 70, 113], "colomap": [40, 54, 70], "ordereddict": [40, 229, 374], "cityscapes_format": 40, "label_1": [40, 50, 54, 80, 304], "label_2": [40, 54, 312], "make_cityscapes_categori": [40, 267], "stuff": [41, 51, 89, 272], "category_id": [41, 51], "descriptor": [41, 187, 188], "image_info": [41, 89, 272, 343, 374], "person_keypoint": [41, 89, 272], "dummi": [41, 58, 70, 102, 113, 187, 211, 212, 227, 229, 230], "image_name1": [41, 44, 45, 46, 58, 61, 69, 83], "image_name2": [41, 45, 46, 58, 61, 69], "panoptic_train": 41, "panoptic_v": 41, "task_nam": 41, "year": 41, "treat": [41, 44, 196, 197, 209, 220, 230], "plain": [41, 113, 188, 221, 374, 433], "relpath": 41, "contradict": 41, "guess": [41, 270], "hint": 41, "prefer": [41, 433], "accur": [41, 72], "allow_attribut": [41, 54, 70, 270, 311, 367], "reindex": [41, 44, 55, 73, 90, 108, 121, 270, 279, 316, 352, 418], "panoptic_val2017": [41, 101, 103, 105, 109, 110], "000000000001": 41, "_annot": [41, 71, 345], "coco_roboflow": 41, "roboflow_coco": [41, 71, 345], "css": 42, "common_semantic_segment": 42, "image_prefix": [42, 275], "mask_prefix": [42, 275], "csr": 43, "superresolutionannot": [43, 198], "upsampl": [43, 106, 276], "common_super_resolut": 43, "hr": [43, 276], "lr": [43, 106, 115, 276], "dedic": [44, 116, 117, 221, 253, 273, 285, 345, 377, 380, 381, 382, 385, 397, 398], "markup": 44, "purpos": [44, 107, 112, 122, 134, 135, 220, 225, 433], "atom": 44, "unit": [44, 113, 445], "maintain": [44, 89, 115, 119, 391, 392, 393, 394], "deriv": [44, 187, 188, 198, 200, 209, 211, 217, 227, 292, 374, 391, 392, 393], "commonli": [44, 56], "directli": [44, 45, 46, 83, 84, 88, 92, 115, 118, 119, 218, 221, 253], "undeclar": [44, 73], "encount": [44, 107], "bypass": [44, 445], "proce": [44, 129], "aim": [45, 71, 119, 124], "videofram": [45, 46, 224, 227, 282, 292, 296, 443], "restrict": [45, 46, 92, 118, 198, 282, 435], "video_name1": 45, "video_name2": 45, "advantag": [46, 198], "easili": [46, 75, 81, 107, 108, 119, 128, 129], "viewabl": 46, "viewer": 46, "schemaless": 46, "conduct": 46, "tabl": [46, 75, 99, 100, 103, 105, 109, 110, 112, 113, 132, 142, 203, 220, 224, 254, 255, 256, 418], "468mb": 46, "1046mb": 46, "301mb": 46, "reduc": [46, 84, 115, 124, 233, 445], "64": [46, 103, 106, 110, 115, 118, 364], "28": [46, 62, 70, 103, 106, 115, 118, 327, 328], "2017": [46, 75, 105, 118], "instances_train2017": [46, 101], "instances_val2017": [46, 101], "hijack": 46, "potenti": [46, 109, 115], "attack": 46, "concern": [46, 137], "intellectu": 46, "damag": [46, 118], "protect": [46, 95, 113], "secret": [46, 107, 287, 288, 289], "care": 46, "lose": [46, 107], "blob": [46, 115, 287, 289], "easi": [46, 119], "acceler": [46, 92, 106], "core": [46, 92, 115], "datumaro_binari": [46, 107, 111, 114, 254], "base64": 46, "secret_kei": [46, 107, 290], "encryption_kei": [46, 107, 287, 288, 289], "incorrect": [46, 224, 227, 282, 292], "whenev": [46, 433, 435], "respons": [46, 55, 73, 84, 92, 116, 117, 209, 220, 236, 382, 397, 398, 431], "perman": 46, "access": [46, 84, 187, 196, 197, 209, 210, 211, 212, 220, 221, 224, 227, 228, 229, 230, 233, 249, 250, 282, 364, 374, 397, 398, 445], "2k": 47, "aerial": [47, 99, 113, 133], "rotat": [47, 109, 115, 198, 282, 292, 341], "orient": [47, 89, 113, 445], "15": [47, 51, 67, 75, 81, 103, 105, 106, 113, 115, 118, 119, 196, 198, 200, 201, 209, 211, 212, 217, 229, 230, 282, 286, 292, 368, 374], "basebal": [47, 100, 103, 105, 109, 110, 112, 113], "diamond": 47, "basketbal": [47, 113], "court": [47, 113], "bridg": [47, 81, 113], "harbor": [47, 99, 113, 122], "helicopt": [47, 70, 113, 115], "plane": [47, 113], "roundabout": [47, 113], "soccer": [47, 113], "ball": [47, 100, 103, 105, 108, 109, 110, 112, 113], "tank": [47, 113], "swim": [47, 113], "pool": [47, 113, 115, 116, 117], "tenni": [47, 100, 103, 105, 109, 110, 112, 113], "difficulti": 47, "labeltxt": [47, 71, 297, 345], "recognit": [48, 51, 53, 76, 118, 121, 414, 416], "popular": [48, 50, 52, 61, 95, 112, 113, 133], "icdar13": [48, 51], "icdar15": 48, "subformat": [48, 58], "word": [48, 51, 105], "transcript": 48, "identifi": [48, 69, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 111, 114, 115, 116, 117, 119, 132, 135, 196, 386, 418, 433], "coincid": 48, "text_localization_dataset": 48, "text_segmentation_dataset": 48, "word_recognition_dataset": 48, "data1": 48, "text_localization_path": 48, "data2": 48, "text_segmentation_path": 48, "data3": 48, "word_recognition_path": 48, "dataset_path": [48, 135], "gt": [48, 63, 74, 99, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 329, 356, 357], "word_1": 48, "word_2": 48, "gt_img_1": 48, "gt_img_2": 48, "img_1": 48, "img_2": 48, "image_1_gt": 48, "bmp": [48, 83, 301], "image_1": [48, 49], "image_2_gt": 48, "image_2": [48, 49, 54, 312], "doc": [48, 50, 57, 59, 76, 80, 92, 115, 233, 445], "source_dataset": 48, "export_dir": 48, "labelm": [48, 51, 89, 445], "foo": 49, "archive1": 49, "image_3": 49, "archive2": 49, "image_101": 49, "image_102": 49, "new_dir": 49, "voc_imag": 49, "zipfil": 49, "zip_stor": [49, 303], "zip_defl": [49, 303], "zip_bzip2": [49, 303], "zip_lzma": [49, 303], "2m": 50, "assum": [50, 69, 184, 197, 209, 220], "path_to_dataset": [50, 53, 59, 76, 87], "imagenet_dataset": 50, "label_0": [50, 80, 304], "image_name_0": 50, "image_name_1": 50, "image_name_2": 50, "imagenet_txt_dataset": 50, "synset": [50, 305], "path_to_imagenet": 50, "imagetnet": 50, "path_to_oid": 50, "ade20k": 51, "v2017": 51, "v2020": 51, "celeba": [51, 118, 445], "brat": 51, "semant": [51, 54, 67, 70, 84, 95, 99, 118, 198, 275, 312, 433], "super": [51, 84, 187, 188], "resolut": [51, 121, 198, 414, 416], "dota": [51, 445], "detection_rot": 51, "kaggl": [51, 75, 104, 106, 107, 111, 114, 115, 116, 445], "3d": [51, 54, 73, 85, 89, 198, 282, 292], "tracklet": 51, "velodyn": [51, 54, 89], "kinet": [51, 445], "400": [51, 53, 103, 118, 384], "600": [51, 53, 103, 384], "700": [51, 53, 103], "mapillari": [51, 445], "vista": [51, 445], "market": [51, 113], "1501": [51, 118], "mar": [51, 59, 115], "mmdet": [51, 272], "mpii": 51, "roboflow": [51, 119, 272, 326, 362, 368, 445], "nyu": 51, "openimag": [51, 133], "anyth": [51, 88, 121, 188, 221, 374, 396, 397, 398, 399, 433, 445], "sa": 51, "1b": [51, 88], "supervis": 51, "synthia": [51, 445], "regress": 51, "vggface2": [51, 57], "vott": 51, "widerfac": 51, "ultralyt": [51, 119, 445], "segmentation_color": 51, "background_label": 51, "dictionari": [51, 187, 188, 196, 197, 198, 200, 203, 209, 217, 220, 224, 227, 229, 274, 282, 286, 292, 368, 374, 382, 391, 392, 393, 400, 401, 433, 445], "2800": [52, 115], "good": [52, 67, 113, 115], "competit": [52, 118], "enforc": 52, "commun": [52, 61, 118, 380, 381, 382, 385, 396, 397, 398], "rule": [52, 88, 113, 118, 220, 225, 229, 238], "natur": [52, 72, 118, 134, 137, 418], "directoi": 52, "eventu": 52, "abil": 52, "inde": 52, "aid": [52, 118], "kaggle_image_csv": [52, 118], "image_directori": 52, "shown": [52, 75, 102, 110, 115, 128, 134], "annotation_fil": [52, 333], "name_of_image_1": 52, "name_of_image_2": 52, "media_name_in_image_directori": 52, "category_1": 52, "category_2": 52, "path_to_image_directori": 52, "ann_fil": [52, 118, 307], "path_to_csv_fil": 52, "column_name_of_media": 52, "column_name_of_label": 52, "At": [52, 88, 106, 122, 184, 188, 220, 221, 225, 230, 374, 433], "essenti": [52, 92, 124, 135, 188, 221, 374, 406, 433], "kaggle_image_txt": [52, 118], "path_to_txt_fil": 52, "kaggle_image_mask": [52, 118], "mask_path": [52, 118, 307, 341], "path_to_mask_directori": 52, "sometim": [52, 128, 131, 134], "thank": [52, 118], "violat": 52, "sturctur": 52, "kaggle_voc": [52, 118], "kaggle_yolo": [52, 118], "ann_path": [52, 118, 307], "path_to_annotation_directori": 52, "practic": [52, 100, 115], "time_start": 53, "time_end": 53, "name_of_video_1_with_yt_id": 53, "name_of_video_2_with_yt_id": 53, "name_of_video_100_with_yt_id": 53, "name_of_video_101_with_yt_id": 53, "youtube_id": 53, "speed": [53, 69, 101, 106, 115], "full": [53, 54, 57, 70, 75, 115, 118, 196, 433], "readm": [54, 80, 445], "md": [54, 115, 445], "truncat": [54, 55, 69, 70, 233, 317, 341, 367], "extent": [54, 70], "portion": [54, 70], "name_1": [54, 63, 64], "img_ext": [54, 63, 64], "name_2": [54, 63, 64], "camera": [54, 55, 59, 60, 113, 115], "semantic_rgb": [54, 312], "apply_colormap": [54, 70, 262, 267, 311, 367], "kitti_format": 54, "make_kitti_categori": [54, 312], "homepag": [55, 58], "truncation_unset": [55, 317], "in_imag": [55, 317], "out_imag": [55, 317], "behind_imag": [55, 317], "occlus": [55, 63, 80, 102, 317], "occlusion_unset": [55, 317], "visibl": [55, 63, 198, 200, 217, 282, 292, 317, 329, 431, 445], "partli": [55, 317], "fulli": [55, 317, 431, 445], "prioriti": [55, 445], "keyfram": [55, 77, 280], "occlusion_kf": 55, "track_id": [55, 59, 60, 63, 64, 73, 280, 317, 324, 329, 353], "image_00": 55, "name1": [55, 57, 72], "name2": [55, 72], "image_01": 55, "velodyne_point": [55, 317], "cloud": [55, 83, 85, 113], "pcd": [55, 73], "tracklet_label": [55, 317], "frame_list": [55, 317], "12345": 55, "46": [55, 75, 103, 106, 115, 118], "sly_pcd": [55, 73], "my_kitti": [55, 73], "qq": 55, "13": [55, 103, 105, 106, 115, 118, 119, 125, 196, 198, 209, 211, 212, 217, 229, 230, 282, 286, 292, 368, 374], "24": [55, 75, 100, 101, 103, 105, 106, 110, 115, 118, 200, 201, 229], "pcd1": [55, 73], "related_imag": [55, 73, 353], "open": [56, 78, 79, 87, 89, 104, 106, 107, 111, 113, 114, 115, 116, 118, 119, 218, 221, 253], "mit": [56, 99, 100, 101, 102, 103, 104, 105, 106, 107, 111, 114, 116, 117], "draw": [56, 69, 101, 109, 113, 118, 238, 413, 445], "scribbl": 56, "interest": [56, 198], "github": [56, 69, 92, 108, 115, 445, 446], "img1_mask_0": 56, "img1_mask_1": 56, "img2_mask_0": 56, "img1_scribble_0": 56, "img1_scribble_1": 56, "img2_scribble_0": 56, "example_imag": 56, "640": [56, 103, 106, 118], "480": [56, 103, 115], "pt": [56, 106], "face": [57, 76, 87, 113, 115, 118, 372], "wild": 57, "home": [57, 106, 110, 113, 115, 118, 119, 233, 412, 425, 447], "negative_pair": 57, "positive_pair": 57, "path_to_lfw_dataset": 57, "lfw_dataset": 57, "subset_1": 57, "name0": 57, "name0_0001": 57, "name0_0002": 57, "name1_0001": 57, "name1_0002": 57, "subset_2": 57, "pai": [57, 80], "attent": [57, 80, 134], "output_dir2": 57, "vgg": 57, "face2": 57, "voc_dataset": [57, 100, 102, 112], "dataaset": [57, 59], "vgg_dataset": 57, "registr": 58, "atttibut": 58, "mapillary_vista": 58, "opportun": 58, "mapillary_vistas_inst": 58, "mapillary_vistas_panopt": 58, "config_": 58, "config_v1": [58, 322], "config_v2": [58, 322], "panoptic_2018": [58, 322], "panoptic_2020": [58, 322], "four": [59, 60, 118, 198], "digit": [59, 60, 62, 113, 118], "camera_id": [59, 60, 324], "took": [59, 60], "sequence_id": 59, "frame_id": [59, 60, 324, 329], "six": [59, 118], "accumul": [59, 60], "0001": [59, 60], "bbox_id": [59, 324], "decod": [59, 75, 107, 113, 116, 117, 254, 256, 397, 400, 401, 427, 431], "0000_c1s1_000000_00": 59, "s1_": 59, "last": [59, 75, 85, 106, 108, 111, 162, 171, 184, 196, 229, 358, 374, 448], "path_to_market1501": 59, "market1501_dataset": 59, "0001_c1s1_001051_00": 59, "0002_c1s1_001051_00": 59, "bounding_box_": [59, 324], "0003_c1s1_001051_00": 59, "0003_c2s1_001054_01": 59, "0004_c1s1_001051_00": 59, "0005_c1s1_001051_00": 59, "0006_c1s1_001051_00": 59, "mars_dataset": [59, 60], "increment": [59, 103], "collis": 59, "motion": [60, 113], "analysi": [60, 108, 111, 115, 118, 135], "bbox_subset_name1": 60, "0001c1t0001f001": 60, "0001c1t0001f002": 60, "0002": 60, "0002c1t0001f001": 60, "distractor": [60, 329], "retriev": [60, 433], "accuraci": [60, 92, 108, 109, 111, 115, 124, 137, 275], "0000c1t0001f001": 60, "junk": [60, 113], "1c1t0001f001": 60, "bbox_subset_name2": 60, "strict": [60, 81, 115, 118, 435], "xxxxcxtxxxxfxxx": 60, "unwant": 60, "modular": 61, "flexibl": [61, 84, 117], "architectur": [61, 115, 118], "art": [61, 113, 118], "techniqu": [61, 418, 433], "gain": [61, 119], "research": [61, 118], "comprehens": [61, 132], "benchmark": [61, 80, 113, 118], "instances_": 61, "mmdet_coco": [61, 118], "fashion": [62, 118, 433], "idx3": [62, 327], "ubyt": [62, 327], "idx1": [62, 327], "t10k": [62, 327], "mnist_train": 62, "mnist_test": 62, "mnist_": 62, "shirt": [62, 113], "trouser": [62, 113], "pullov": 62, "dress": [62, 113], "coat": [62, 113], "sandal": [62, 113, 118], "sneaker": [62, 113], "bag": [62, 113, 118], "ankl": 62, "boot": [62, 113, 118], "ossci": 62, "s3": [62, 108], "amazonaw": [62, 108], "com": [62, 73, 75, 92, 108, 115, 117, 446], "trajectori": [63, 64], "static": [63, 162, 184, 188, 197, 198, 203, 204, 209, 212, 217, 220, 221, 226, 227, 229, 230, 233, 236, 254, 255, 269, 278, 292, 293, 294, 295, 319, 330, 346, 348, 374, 379, 413, 418, 428, 433], "border": 63, "occlusion_threshold": [63, 329], "zero": [63, 77, 102, 108, 198, 200, 217, 218, 221, 253, 282, 292, 391, 392, 393, 394, 398, 431, 433, 445], "challang": [63, 64], "seqinfo": [63, 329], "ini": [63, 329], "imdir": 63, "16": [64, 75, 101, 103, 105, 106, 108, 109, 111, 114, 115, 117, 118, 119, 200, 201, 229, 368], "On": [64, 88, 102, 115, 118, 135, 218, 221, 253, 374, 434], "rle": [64, 198, 282, 292, 431], "mpii_dataset": [65, 66], "mpii_human_pose_v1_u12_1": 65, "mat": [65, 113], "000000001": [65, 66], "000000002": [65, 66], "000000003": [65, 66], "mpii_json": 66, "jnt_visibl": [66, 333], "mpii_annot": [66, 333], "mpii_headbox": [66, 333], "mpii_pos_gt": [66, 333], "abnorm": [67, 110], "defect": [67, 118], "kind": [67, 77, 128], "textur": 67, "mvtec_classif": 67, "mvtec_detect": 67, "mvtec_segment": 67, "defective1": 67, "defective2": 67, "ground_truth": [67, 338], "img1_mask": 67, "img2_mask": 67, "depthannot": [68, 198], "nyu_depth_v2": 68, "h5": 68, "verifi": 69, "equal": [69, 70, 84, 113, 132, 142, 196, 198, 217, 220, 230, 282, 292, 398, 434], "beyond": 69, "is_group_of": [69, 341], "is_depict": [69, 341], "depict": 69, "rather": [69, 102, 119], "is_insid": [69, 341], "seen": 69, "box_id": [69, 341], "predicted_i": [69, 72], "predict": [69, 106, 114, 117, 119, 188, 222, 382, 384, 386, 391, 392, 393, 396, 397, 400, 401, 402], "repositori": [69, 76, 92, 102, 108], "except": [69, 74, 81, 82, 107, 160, 162, 163, 164, 171, 183, 196, 200, 201, 207, 209, 212, 214, 215, 218, 220, 221, 227, 229, 233, 253, 254, 282, 292, 341, 374, 382, 385, 433, 447], "vice": [69, 75, 89], "versa": [69, 75, 89], "bbox_labels_600_hierarchi": [69, 341], "image_ids_and_rot": [69, 341], "oidv6": 69, "imagelabel": [69, 341], "mask_name1": 69, "mask_name2": 69, "slow": [69, 92, 113], "aforement": 69, "advanc": [69, 92, 119, 133, 134, 135], "themselv": 69, "imagemagick": 69, "exec": 69, "basenam": [69, 107, 162, 163, 171, 184, 374, 434], "isn": 69, "0000000000000001": 69, "difficult": [70, 131, 135, 367], "jump": [70, 368], "labelmap": [70, 112, 368, 445], "ann1": 70, "ann2": 70, "jpegimag": [70, 112, 118, 368], "segmentationclass": [70, 112, 368], "segmentationobject": [70, 112, 368], "imageset": [70, 112, 368], "ear": [70, 113, 118], "grayscal": [70, 90, 254, 427], "gap": [70, 113], "fill": [70, 84, 197, 198, 209, 217, 220, 292, 398, 418, 431], "128": [70, 103, 106, 115, 118, 396, 397], "aeroplan": [70, 100, 112, 368], "_dummy2": 70, "filler": [70, 113], "_dummy3": 70, "boat": [70, 100, 103, 105, 109, 110, 112, 113, 118, 368], "108": [70, 103, 106], "_dummy198": 70, "198": [70, 103, 106, 118], "_dummy199": 70, "199": [70, 103, 106, 115, 118], "the_last_label": 70, "12": [70, 75, 101, 103, 105, 106, 108, 109, 110, 111, 113, 114, 115, 118, 119, 125, 196, 198, 209, 211, 212, 217, 229, 230, 282, 286, 292, 303, 329, 368, 374], "200": [70, 103, 115, 118], "keep_empti": [70, 367], "trainval": [70, 100, 112], "statisct": 70, "ndr": [70, 115, 194, 444], "2500": [70, 115, 117], "random_split": [70, 99, 100, 103, 106, 111, 114, 122, 418], "from_fil": [70, 117, 197, 209, 217, 224, 227, 254, 282, 292, 374, 391, 392, 393], "water": [70, 113, 118], "lion": [70, 113], "polygons_to_mask": [70, 84], "mydataset": 70, "my_labelmap": 70, "train_dataset": 70, "get_subset": [70, 103, 113, 187, 196, 197, 209, 210, 211, 212, 220, 227, 229, 230, 233, 236, 249, 250, 374, 397, 398, 410], "as_dataset": [70, 113, 209, 212], "only_jump": 70, "jumping_label_m": 70, "has_mask": 70, "len": [70, 84, 93, 100, 108, 109, 111, 113, 114, 115, 119, 188, 221, 238, 374, 433], "5826": 70, "offici": [70, 75, 81], "servic": [71, 113], "assist": [71, 118, 128], "aspect": [71, 110, 135, 391, 392, 393, 394], "simplifi": [71, 93, 106, 209, 212, 217, 220, 221, 236, 418], "enjoi": [71, 118, 119], "train_img1": 71, "train_img2": 71, "valid_img1": 71, "test_img1": 71, "tap": [71, 113], "yaml": [71, 82, 106, 115, 233, 374, 376], "obb": 71, "_class": [71, 345], "billion": 72, "sam": [72, 396, 397, 400, 401, 445], "reliabl": [72, 433], "prompt": [72, 396, 397, 400], "sentenc": [72, 105], "stability_scor": 72, "crop_box": 72, "point_coord": 72, "segment_anyth": 72, "drop": [72, 114, 115, 414, 416, 433, 445], "segement": 72, "cuboid_3d": [73, 196, 198, 209, 211, 212, 217, 229, 230, 254, 282, 286, 292, 293, 374], "createdat": [73, 353], "updatedat": [73, 353], "labelerlogin": [73, 353], "drive": [73, 113, 118, 135], "googl": 73, "uc": [73, 133], "1btzyffwtwnr": 73, "mk_phnpmnggslakkqpbl": 73, "ds0": [73, 353], "pcdname1": 73, "pcdname2": 73, "pcdname1_pcd": 73, "key_id_map": [73, 353], "sly_dataset": 73, "frame_1": 73, "206": [73, 103, 118], "320": [73, 103, 108, 115], "86": [73, 103, 106, 109, 118], "979": [73, 103, 116, 118], "18": [73, 75, 103, 105, 106, 109, 115, 118, 119, 200, 201, 229, 368], "04": [73, 101, 106, 115, 118], "207": [73, 103, 106, 118], "318": [73, 103, 112], "974": [73, 103, 116, 118], "65": [73, 103, 106, 110, 118], "29": [73, 75, 103, 106, 109, 115, 118], "zzz": [73, 75], "frm2": 73, "208": [73, 103, 118], "23": [73, 100, 103, 106, 109, 115, 118, 445], "78": [73, 103, 106, 118], "pcd2": 73, "allow_undeclared_attr": [73, 279, 352], "al": [74, 121, 137], "dynamic_object": 74, "synthia_dataset": 74, "stereo_left": 74, "omni_b": 74, "000000": 74, "stereo_right": 74, "red": [74, 75, 113], "green": [74, 113], "dynam": [74, 96, 106, 196], "row": [75, 101, 113, 209, 220, 224], "openml": 75, "arff": 75, "header": [75, 270], "scipi": 75, "io": [75, 187, 204, 209, 211, 212, 224, 227, 254, 282, 292, 374], "loadarff": 75, "panda": [75, 115, 119, 196, 224, 445], "pd": [75, 119, 406], "df": [75, 118], "datafram": [75, 119, 196, 224, 406], "col": [75, 224], "dtype": [75, 102, 118, 198, 209, 217, 224, 244, 254, 267, 292, 311, 358, 374, 398, 400, 401, 427, 431, 435, 445], "categorical_column": 75, "utf8": [75, 209, 220], "to_csv": 75, "parquet": 75, "feather": [75, 113], "hdf5": 75, "read_parquet": 75, "read_feath": 75, "read_hdf": 75, "read_pickl": 75, "jai": 75, "datat": 75, "dt": 75, "fread": 75, "aaa": 75, "tablerow": [75, 119, 224], "buddi": 75, "breed_categori": 75, "pet_categori": 75, "electr": [75, 113], "supprot": 75, "datset": 75, "org": [75, 90, 101, 197, 200, 229, 326, 343, 412, 423], "44156": 75, "date": [75, 118], "dai": 75, "period": [75, 209, 232], "nswprice": 75, "nswdemand": 75, "vicpric": 75, "vicdemand": 75, "transfer": [75, 106], "425556": 75, "340426": 75, "076108": 75, "392889": 75, "003467": 75, "422915": 75, "414912": 75, "425512": 75, "617021": 75, "060376": 75, "483041": 75, "down": [75, 433], "013982": 75, "042553": 75, "061967": 75, "521125": 75, "907349": 75, "06383": 75, "080581": 75, "331003": 75, "00538": 75, "47566": 75, "441228": 75, "889341": 75, "361702": 75, "027141": 75, "379649": 75, "001624": 75, "248317": 75, "69386": 75, "akash14": 75, "adopt": [75, 103], "pet_id": 75, "issue_d": 75, "listing_d": 75, "color_typ": 75, "cm": [75, 160, 162, 163, 164, 171, 437], "x1": [75, 109, 118, 198, 200, 217, 282, 292, 398, 417, 423, 431], "x2": [75, 109, 118, 198, 217, 282, 292, 398, 417, 431], "ansl_59957": 75, "2015": [75, 118], "21": [75, 100, 101, 103, 105, 106, 110, 111, 112, 115, 118, 122, 171, 200, 201, 229], "09": [75, 106, 115, 118, 138], "lynx": 75, "53": [75, 103, 106, 115], "ansl_57687": 75, "08": [75, 101, 106, 115, 118, 138], "ansl_62277": 75, "2014": 75, "01": [75, 101, 106, 115, 118, 200, 201, 229], "47": [75, 103, 106, 115], "brown": 75, "81": [75, 103, 106, 118], "72": [75, 103, 106, 109, 115, 118], "ansl_72624": 75, "02": [75, 106, 115, 118], "57": [75, 103, 106, 110, 115], "tabbi": 75, "36": [75, 103, 106, 115, 118, 137, 233], "ansl_51838": 75, "48": [75, 103, 106, 109, 110, 115, 118], "vgg_face2_dataset": 76, "bb_landmark": [76, 363], "loose_bb_test": 76, "loose_bb_train": 76, "loose_bb_": [76, 363], "any_other_subset_nam": 76, "loose_landmark_test": 76, "loose_landmark_train": 76, "loose_landmark_": [76, 363], "n000001": 76, "0001_01": 76, "0001_02": 76, "n000002": 76, "0002_01": 76, "0003_01": 76, "n000004": 76, "0004_01": 76, "0004_02": 76, "path_to_vgg_face2": 76, "path_to_wid": 76, "furthermor": [77, 103, 119], "video_keyfram": 77, "cross": [77, 103, 113, 118], "correl": 77, "zncc": 77, "plu": [77, 119], "effici": [77, 115, 135], "path_to_video": 77, "rpath": [77, 233], "30th": 77, "releas": [78, 79, 106, 115, 209, 232, 433], "microsoft": [78, 79, 118], "vott_csv": 78, "vott_csv_dataset": 78, "img0001": [78, 79], "img0002": [78, 79], "img0003": [78, 79], "img0004": [78, 79], "vott_json": 79, "vott_json_dataset": 79, "blur": [80, 118, 372], "heavi": 80, "typic": [80, 84, 85, 88, 114, 119, 198, 209, 218, 221, 229, 253, 282, 386, 431, 433], "exagger": 80, "illumin": [80, 372], "extrem": [80, 110, 118, 119], "atyp": 80, "path_to_wider_fac": 80, "wider_face_split": [80, 372], "wider_face_subset1_bbx_gt": 80, "wider_face_subset2_bbx_gt": 80, "wider_subset1": 80, "label_": 80, "0_label_0_image_01": 80, "0_label_0_image_02": 80, "1_label_1_image_01": 80, "1_label_1_image_02": 80, "wider_subset2": 80, "succs": 80, "path_to_voc": 80, "yolo_dataset": 81, "obj": [81, 88, 104, 106, 107, 111, 114, 116, 217, 254, 255, 256, 292, 294, 295, 296, 374, 376, 422], "obj_train_data": 81, "obj_valid_data": 81, "image101": 81, "image102": 81, "label1": 81, "label2": 81, "label3": 81, "label_index": [81, 82], "x_center": [81, 82], "y_center": [81, 82], "250000": [81, 82], "400000": [81, 82], "300000": [81, 82], "600000": [81, 82], "266667": [81, 82], "rectangl": [81, 82, 109, 198, 217, 282, 292], "corner": [81, 82, 113, 198, 201, 217, 282, 292, 374, 398], "freeli": [81, 418], "stand": [81, 113, 368], "map_subset": [81, 103], "remap_label": [81, 84, 93, 99, 100, 103, 108, 122, 418, 444], "yolo_without_cat": 81, "image_001": 81, "image_002": 81, "hous": [81, 113], "crosswalk": [81, 113], "traffic_light": 81, "yolov8": [82, 96, 445], "share": [82, 88, 198, 220, 225, 227, 433], "trainer": [82, 96], "Its": [82, 84, 198, 433], "label_name_1": 82, "jupyt": [82, 445], "notebook": [82, 101, 102, 103, 104, 105, 106, 109, 110, 112, 113, 115, 118, 134, 135, 445], "appropri": [82, 115, 119, 129, 211, 220, 225, 244, 418], "cd": [83, 87, 90, 113, 122, 126], "import_sourc": [83, 84, 233], "working_tre": [83, 84, 233], "make_dataset": [83, 84, 233], "subdir1": 83, "subsubdir1": 83, "opencv": [83, 92, 115, 427], "jpe": 83, "jp2": 83, "dib": [83, 118], "tif": 83, "tga": 83, "webp": 83, "pfm": 83, "sr": 83, "ra": 83, "exr": 83, "hdr": 83, "pic": 83, "pbm": 83, "pgm": 83, "ppm": 83, "pxm": 83, "pnm": 83, "renam": [83, 84, 85, 89, 93, 103, 115, 233, 418, 444, 445], "ffmpeg": 83, "altern": [83, 84, 92, 116, 117, 218, 221, 253], "3gp": 83, "3g2": 83, "asf": 83, "wmv": 83, "divx": 83, "evo": 83, "f4v": 83, "flv": 83, "mkv": 83, "mk3d": 83, "mpg": 83, "mpeg": 83, "m2p": 83, "m2t": 83, "mxf": 83, "ogg": 83, "ogv": 83, "ogx": 83, "mov": 83, "qt": 83, "rmvb": 83, "vob": 83, "webm": 83, "daturamo": 83, "central": [84, 113, 119], "iter": [84, 89, 93, 116, 117, 160, 163, 181, 187, 196, 197, 198, 200, 201, 209, 210, 211, 212, 218, 220, 221, 224, 227, 228, 229, 230, 232, 233, 234, 236, 238, 244, 253, 271, 274, 282, 286, 287, 288, 292, 302, 304, 305, 366, 374, 397, 398, 413, 418, 422, 423, 427, 433, 434], "audio": 84, "flow": 84, "filtrat": [84, 85, 119, 120], "criteria": [84, 89], "modul": [84, 91, 106, 115, 139, 140, 141, 146, 158, 159, 165, 174, 179, 181, 185, 186, 189, 190, 195, 198, 199, 206, 209, 211, 218, 225, 233, 241, 242, 243, 246, 249, 254, 257, 263, 268, 277, 281, 287, 292, 298, 306, 309, 314, 320, 331, 335, 342, 346, 350, 354, 359, 365, 368, 373, 380, 383, 388, 390, 396, 399, 403, 404, 411, 414, 422, 427, 429, 433, 435, 445, 446, 450], "correctli": [84, 107], "connect": [84, 198, 217, 282, 292, 382], "maskcategori": [84, 198, 229, 282, 443], "itself": [84, 187, 196, 197, 209, 210, 211, 212, 214, 220, 227, 229, 230, 233, 236, 249, 250, 397, 398, 410], "scratch": [84, 113, 118], "constructor": [84, 196, 230, 406, 433], "define_categori": [84, 197, 209, 212, 220], "from_extractor": [84, 197, 209, 220, 221, 253, 273, 285, 345, 377], "intersectmerg": [84, 98, 220, 225, 229], "remap": [84, 85, 108, 121, 122, 197, 209, 220], "lazili": [84, 197, 209, 220], "defer": 84, "init_cach": [84, 197, 209, 212, 220], "wrap": [84, 113, 187, 188, 197, 198, 200, 201, 209, 210, 211, 212, 214, 217, 220, 221, 227, 229, 230, 236, 254, 282, 292, 374, 391, 392, 393, 397, 398, 418], "eager_mod": [84, 114, 116, 117, 197, 209, 220], "quickli": 84, "wast": [84, 118], "is_cache_initi": [84, 197, 209, 212, 220], "get_patch": [84, 197, 209, 212, 220], "flush": [84, 113], "flush_chang": [84, 197, 209, 212, 220], "lead": [84, 88, 197, 209, 212, 217, 220, 224, 227, 236, 254, 282, 292, 374, 391, 392, 393, 418], "sophist": 84, "deduc": 84, "complement": 84, "next": [84, 104, 107, 114, 119, 127, 128, 162, 163, 171, 184, 434], "explicitli": 84, "intend": 84, "persist": 84, "built": [84, 88, 115, 129, 197, 209, 210, 212, 220, 374, 445], "env": [84, 115, 118, 124, 129, 134, 136, 184, 197, 209, 213, 220, 233], "sourceextractor": 84, "logic": 84, "implement": [84, 87, 92, 102, 114, 188, 197, 209, 210, 212, 218, 220, 222, 374, 380, 381, 382, 384, 385, 391, 392, 393, 397, 398, 400, 401, 402, 433, 446], "alter": [84, 446], "datumaro_dir": [84, 446], "global": [84, 188, 221, 374, 427, 433, 446], "yolo_format": 84, "yoloconvert": 84, "src_dir": [84, 233], "custom_format": 84, "symbol": [84, 88, 113, 233], "inherit": [84, 187, 188, 200, 201, 229, 406, 433], "mycomponent1": 84, "mycomponent2": 84, "myplugin": 84, "optional_custom_plugin_nam": 84, "build_cmdline_pars": [84, 202, 209, 215, 220, 221, 245, 249, 251, 262, 267, 270, 273, 275, 279, 287, 289, 291, 302, 303, 304, 305, 307, 311, 316, 323, 337, 352, 358, 361, 364, 367, 375, 387, 397, 398, 407, 408, 410, 414, 415, 416, 418], "self": [84, 108, 110, 111, 113, 187, 188, 196, 197, 198, 209, 217, 220, 238, 292, 398], "kwarg": [84, 118, 147, 160, 162, 163, 171, 181, 187, 188, 196, 197, 198, 200, 201, 202, 204, 209, 210, 211, 212, 213, 215, 217, 218, 220, 221, 224, 225, 227, 229, 230, 233, 236, 245, 249, 251, 254, 262, 266, 267, 269, 270, 273, 275, 279, 282, 283, 287, 289, 291, 292, 299, 302, 303, 304, 305, 307, 310, 311, 316, 321, 323, 336, 337, 343, 346, 348, 352, 355, 358, 361, 364, 366, 367, 374, 375, 379, 387, 391, 392, 393, 397, 398, 407, 408, 410, 414, 415, 416, 418, 427, 433, 437, 439], "parser": [84, 274, 282, 286], "argpars": [84, 142, 143, 144, 145, 150, 151, 152, 153, 154, 155, 156, 157, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 180], "argumentpars": [84, 142, 143, 144, 145, 150, 151, 152, 153, 154, 155, 156, 157, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 180], "invoc": [84, 433], "my_plugin1": 84, "file1": 84, "file2": [84, 88], "my_plugin2": 84, "someth": [84, 85, 220, 225, 227], "mytransform": 84, "custom_nam": 84, "classmethod": [84, 147, 148, 149, 162, 182, 184, 196, 197, 198, 200, 201, 202, 204, 208, 209, 212, 213, 215, 217, 219, 220, 221, 223, 224, 227, 229, 230, 233, 245, 247, 248, 249, 251, 252, 253, 254, 256, 258, 260, 261, 262, 265, 266, 267, 270, 273, 275, 276, 278, 279, 282, 283, 285, 287, 289, 290, 291, 292, 293, 294, 296, 297, 299, 302, 303, 304, 305, 307, 308, 311, 313, 315, 316, 318, 319, 323, 324, 325, 326, 327, 328, 329, 330, 333, 334, 337, 339, 340, 341, 344, 345, 346, 348, 349, 351, 352, 356, 358, 360, 361, 363, 364, 367, 370, 371, 372, 374, 375, 377, 387, 389, 391, 392, 393, 397, 398, 400, 407, 408, 410, 414, 415, 416, 418, 419, 437], "cl": [84, 106, 111, 196, 347], "add_argu": 84, "q": [84, 101], "veri": [84, 108, 111, 134], "__init__": [84, 88, 115, 196, 198, 201, 217, 233, 282, 292, 374, 398, 433], "transform_item": [84, 209, 212, 217, 220, 236, 397, 398, 414, 416, 418], "myformat": 84, "_myformatconvert": 84, "myformatextractor": 84, "explicit": [84, 445], "declar": [84, 115, 124, 132, 133, 135, 136, 187, 188, 221, 374, 433], "interfac": [84, 93, 108, 111, 196, 405, 433, 445], "divid": [84, 109, 111, 113, 114, 119, 131, 414, 416], "handi": 84, "shorter": 84, "hard": [84, 113, 118], "docker": [84, 92, 116, 117, 445], "viewmodel": 84, "mvvm": 84, "ui": [84, 88, 90], "climodelguimodelclidomainguiapitest": 84, "referenc": 85, "impli": [85, 194, 197, 209, 220, 233], "pipelin": [85, 113, 162, 233], "subgraph": 85, "ancestor": 85, "flip": [85, 113], "openvino_plugin": [87, 114], "ssd": 87, "intel": [87, 99, 100, 101, 102, 103, 104, 105, 106, 107, 111, 114, 115, 116, 117, 118, 447], "pre": [87, 110, 114, 131, 137, 380, 381, 382, 385, 397, 398], "0200": 87, "0202": 87, "0204": 87, "0201": 87, "bike": [87, 113, 118], "2000": [87, 113, 115], "2001": [87, 115, 118], "2002": [87, 115], "omz": 87, "ssd_mobilenet_v1_coco": 87, "caff": [87, 89, 92, 446], "mxnet": [87, 89, 92, 446], "kaldi": 87, "onnx": [87, 106], "prerequisit": [87, 92], "2012": [87, 90, 118], "go": [87, 90, 101, 103, 104, 105, 109, 110, 112, 113, 118, 122, 200, 201, 229], "zoo": [87, 449], "openvino_dir": 87, "deployment_tool": 87, "open_model_zoo": [87, 446], "opt": [87, 115, 116, 117, 382], "setupvar": 87, "sh": [87, 92], "proj_dir": 87, "layer": [87, 106, 115], "do_expanddims_conf": 87, "sigmoid": 87, "ssd_mobilenet_coco_detection_interp": 87, "vocdevkit": [87, 100, 112], "mobilenet_v2_pytorch_interp": 87, "navig": 88, "act": 88, "composit": [88, 89, 119], "interact": 88, "cmake": 88, "let": [88, 102, 104, 107, 110, 116, 117, 119, 128, 445], "roughli": 88, "simplic": 88, "plugin1": 88, "plugin2": 88, "tmp": [88, 115, 205], "temp": 88, "yml": [88, 205], "wide": [88, 128, 198], "incomplet": 88, "lightweight": 88, "behind": 88, "scene": [88, 118, 128], "irrelev": [88, 135, 418], "snapshot": 88, "abl": [88, 102, 106, 118, 126, 218, 221, 253], "unmodifi": 88, "until": [88, 433], "readi": [88, 119], "stage3": [88, 115], "imagin": [88, 116], "happen": [88, 433], "stage2": [88, 115], "mark": [88, 113], "rev1": 88, "rev2": 88, "3a": [88, 118], "quit": [88, 137], "expens": [88, 137], "side": [88, 113, 117, 396, 397], "3b": 88, "clear": [88, 229, 374, 428], "again": [88, 102, 104, 110, 116, 117, 131], "against": 88, "contradictori": 88, "sensit": [89, 447], "edit": 89, "preprocess": [89, 106, 119, 188, 209, 220, 222, 384, 391, 392, 393, 400, 401, 402, 418], "further": [89, 110, 119, 120], "action_classif": [89, 445], "person_layout": [89, 445], "vertic": [89, 102, 109, 115], "best": [89, 106, 115, 118, 408], "suit": [89, 113, 119, 211], "integr": [89, 93, 119, 233, 389, 433], "pytorch": [89, 92, 106, 115, 119, 445, 446], "host": [90, 115, 116, 117, 118, 380, 381, 382, 385, 396, 397, 398], "robot": [90, 113], "ox": 90, "ac": 90, "uk": 90, "voctrainval_11": 90, "cocodataset": [90, 101, 200, 229, 326, 343, 423], "mkdir": [90, 101, 122], "my_project": 90, "images_i_dont_lik": 90, "parse_result": 90, "mymodel_infer": 90, "from_numpi": [90, 102, 197, 209, 217, 224, 227, 254, 282, 292, 374, 391, 392, 393], "test_dataset": [90, 103], "standalon": [91, 448], "checker": [92, 113, 188, 221, 275, 374, 433], "virtual": [92, 115], "virtualenv": 92, "venv": 92, "pypi": 92, "zsh": 92, "rust": [92, 421, 445], "workload": 92, "overcom": 92, "innat": 92, "unix": 92, "sudo": 92, "apt": 92, "proto": 92, "tlsv1": 92, "ssf": 92, "rustup": 92, "platform": [92, 113, 115, 445], "graphic": [92, 113], "server": [92, 113, 118, 380, 381, 382, 385, 396, 397, 398, 445], "headless": 92, "datumaro_headless": 92, "packag": [92, 113, 114, 115, 118, 233, 444], "branch_nam": 92, "reinstal": 92, "unreleas": 92, "pull": 92, "datuaro": 93, "codebas": 93, "capabl": [93, 115], "everyth": 93, "encrypt": [95, 208, 215, 287, 288, 289], "e2": 96, "noisi": [96, 110, 114, 196, 445], "heterogen": [98, 103], "eurosat": [99, 133, 445], "ucmerc": [99, 122], "domain": [99, 118], "although": [99, 109], "uc_merc": [99, 122, 133, 445], "copyright": [99, 100, 101, 102, 103, 104, 105, 106, 107, 111, 114, 116, 117], "corpor": [99, 100, 101, 102, 103, 104, 105, 106, 107, 111, 114, 116, 117, 447], "spdx": [99, 100, 101, 102, 103, 104, 105, 106, 107, 111, 114, 116, 117], "licens": [99, 100, 101, 102, 103, 104, 105, 106, 107, 111, 113, 114, 116, 117, 118, 341, 421], "viz": [99, 108, 111, 114, 116, 117], "figsiz": [99, 101, 105, 108, 109, 110, 111, 114, 115, 116, 117, 119, 196, 238], "get_random_item": [99, 238], "fig": [99, 101, 104, 105, 107, 108, 109, 110, 111, 114, 116, 117], "vis_galleri": [99, 101, 104, 105, 108, 110, 111, 114, 238], "27000": 99, "source_path": [99, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 215], "media_typ": [99, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 187, 196, 197, 209, 210, 211, 212, 216, 220, 227, 229, 230, 233, 236, 250, 254, 256, 282, 286, 287, 288, 292, 296, 374, 397, 398, 421, 445], "lt": [99, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119], "annotated_items_count": [99, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119], "annotations_count": [99, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119], "annualcrop": 99, "forest": [99, 113, 118, 122], "herbaceousveget": 99, "highwai": [99, 113], "industri": [99, 113, 118], "pastur": 99, "permanentcrop": 99, "residenti": 99, "river": [99, 113, 122], "sealak": 99, "2100": [99, 118, 122], "agricultur": [99, 118, 122], "baseballdiamond": [99, 122], "beach": [99, 113, 122], "chaparr": [99, 122], "denseresidenti": [99, 122], "freewai": [99, 122], "golfcours": [99, 122], "mediumresidenti": [99, 122], "mobilehomepark": [99, 122], "overpass": [99, 113, 122], "parkinglot": [99, 122], "runwai": [99, 113, 122], "sparseresidenti": [99, 122], "storagetank": [99, 122], "tenniscourt": [99, 122], "eurosat_label_nam": 99, "label_cat": [99, 102], "uc_merced_label_nam": 99, "liter": [99, 198, 200, 201, 217, 282, 292, 374, 398, 423], "sea": [99, 113, 118], "airport": [99, 113, 118, 122], "hlop": [99, 100, 114, 131, 133, 220, 443], "29100": 99, "8730": [99, 115], "14550": 99, "5820": 99, "imagenet_with_subset_dir": [99, 108, 118, 304], "unifi": [100, 114, 128, 133, 209, 445], "2021": [100, 101, 108, 111, 118, 196, 200, 201, 229], "coco_path": [100, 112], "coco_dataset": [100, 101, 103, 104, 105, 109, 110, 112], "voc_path": [100, 112], "voc2007": [100, 112], "image_info_test": [100, 112], "dev2017": [100, 112], "image_info_test2017": [100, 112], "image_info_unlabeled2017": [100, 112], "person_keypoints_val2017": [100, 101, 103, 105, 109, 110, 112], "captions_val2017": [100, 101, 103, 105, 109, 110, 112], "person_keypoints_train2017": [100, 103, 112], "captions_train2017": [100, 103, 112], "123287": [100, 103, 112], "122218": [100, 103, 112], "1915643": [100, 112], "train2017": [100, 101, 103, 112], "118287": [100, 103, 112], "117266": [100, 103, 112], "1836996": [100, 112], "val2017": [100, 101, 103, 105, 109, 110, 112], "4952": [100, 103, 105, 109, 110, 112], "78647": [100, 105, 109, 110, 112], "traffic": [100, 103, 105, 109, 110, 112, 113, 118], "light": [100, 103, 105, 109, 110, 112, 113, 115], "fire": [100, 103, 105, 109, 110, 112, 113, 118], "hydrant": [100, 103, 105, 109, 110, 112, 113], "sign": [100, 103, 105, 109, 110, 112, 113, 118], "park": [100, 103, 105, 109, 110, 112, 113], "meter": [100, 103, 105, 109, 110, 112, 113, 118], "bench": [100, 103, 105, 109, 110, 112, 113], "sheep": [100, 103, 105, 109, 110, 112, 113, 368], "cow": [100, 103, 105, 109, 110, 112, 113, 368], "bear": [100, 103, 105, 109, 110, 112, 113], "zebra": [100, 103, 105, 109, 110, 112, 113], "giraff": [100, 103, 105, 109, 110, 112], "backpack": [100, 103, 105, 109, 110, 112, 113], "umbrella": [100, 103, 105, 109, 110, 112, 113, 115], "handbag": [100, 103, 105, 109, 110, 112, 113], "tie": [100, 103, 105, 109, 110, 112, 113], "suitcas": [100, 103, 105, 109, 110, 112, 113], "frisbe": [100, 103, 105, 109, 110, 112], "ski": [100, 103, 105, 109, 110, 112, 113], "snowboard": [100, 103, 105, 109, 110, 112, 113], "sport": [100, 103, 105, 109, 110, 112, 113, 118], "kite": [100, 103, 105, 109, 110, 112, 113], "bat": [100, 103, 105, 109, 110, 112, 113], "glove": [100, 103, 105, 109, 110, 112, 113], "skateboard": [100, 103, 105, 109, 110, 112, 113], "surfboard": [100, 103, 105, 109, 110, 112, 113], "racket": [100, 103, 105, 109, 110, 112, 113], "bottl": [100, 103, 105, 109, 110, 112, 113, 118, 368], "wine": [100, 103, 105, 109, 110, 112, 113], "glass": [100, 103, 105, 109, 110, 112, 113, 118], "cup": [100, 103, 105, 109, 110, 112, 113, 115], "fork": [100, 103, 105, 109, 110, 112, 113], "knife": [100, 103, 105, 109, 110, 112, 113], "spoon": [100, 103, 105, 109, 110, 112, 113], "bowl": [100, 103, 105, 109, 110, 112, 113], "banana": [100, 103, 105, 109, 110, 112, 113], "sandwich": [100, 103, 105, 109, 110, 112, 113], "orang": [100, 103, 105, 109, 110, 112, 113], "broccoli": [100, 103, 105, 109, 110, 112], "carrot": [100, 103, 105, 109, 110, 112], "hot": [100, 103, 105, 109, 110, 112, 113], "pizza": [100, 103, 105, 109, 110, 112, 115, 118], "donut": [100, 103, 105, 109, 110, 112], "cake": [100, 103, 105, 109, 110, 112, 113], "chair": [100, 103, 105, 109, 110, 112, 113, 115, 368], "couch": [100, 103, 105, 109, 110, 112], "pot": [100, 103, 105, 109, 110, 112, 113], "plant": [100, 103, 105, 109, 110, 112, 113, 118], "bed": [100, 103, 105, 109, 110, 112, 113], "dine": [100, 103, 105, 109, 110, 112], "toilet": [100, 103, 105, 109, 110, 112, 113], "tv": [100, 103, 105, 109, 110, 112], "laptop": [100, 103, 105, 109, 110, 112, 113, 115], "mous": [100, 103, 105, 109, 110, 112, 113], "remot": [100, 103, 105, 109, 110, 112, 113], "keyboard": [100, 103, 105, 109, 110, 112, 113], "cell": [100, 101, 103, 105, 107, 109, 110, 112, 113, 118], "phone": [100, 103, 105, 109, 110, 112, 113, 118, 368], "microwav": [100, 103, 105, 109, 110, 112, 113], "oven": [100, 103, 105, 109, 110, 112, 113], "toaster": [100, 103, 105, 109, 110, 112, 113], "sink": [100, 103, 105, 109, 110, 112, 113], "refriger": [100, 103, 105, 109, 110, 112, 113], "book": [100, 103, 105, 109, 110, 112, 113, 118], "clock": [100, 103, 105, 109, 110, 112, 113], "vase": [100, 103, 105, 109, 110, 112, 113], "scissor": [100, 103, 105, 109, 110, 112, 113, 115, 118], "teddi": [100, 103, 105, 109, 110, 112, 113], "hair": [100, 103, 105, 109, 110, 112, 113], "drier": [100, 103, 105, 109, 110, 112], "toothbrush": [100, 103, 105, 109, 110, 112, 113], "10022": [100, 112], "31324": [100, 112], "2501": [100, 112], "7844": [100, 112, 118], "5011": [100, 112, 118], "15662": [100, 112], "2510": [100, 112], "7818": [100, 112, 118], "diningt": [100, 112, 368], "motorbik": [100, 112, 113, 115, 329, 368], "pottedpl": [100, 112, 368], "sofa": [100, 112, 113, 368], "tvmonitor": [100, 112, 368], "caues": 100, "22": [100, 103, 105, 106, 112, 113, 115, 118, 120, 121, 200, 201, 229], "meanwhil": [100, 107, 109], "61": [100, 103, 106, 110, 118], "roadsid": 100, "anim": [100, 113, 118], "household": 100, "food": [100, 113, 118], "accessori": [100, 447], "kitchen": [100, 113], "utensil": [100, 113], "homogen": 100, "128298": 100, "127229": 100, "1931305": 100, "reorgan": [100, 131], "26": [100, 103, 106, 115], "38490": 100, "38173": 100, "580468": 100, "64149": 100, "63600": 100, "967532": 100, "25659": 100, "25456": 100, "383305": 100, "ll": [101, 102, 104, 105, 119], "silent": 101, "annotations_trainval2017": 101, "panoptic_annotations_trainval2017": 101, "receiv": [101, 113, 218, 406, 433], "xferd": 101, "dload": 101, "spent": 101, "777m": 101, "2997k": 101, "7251k0": 101, "913k": 101, "241m": 101, "3601k": 101, "4707k": 101, "820m": 101, "3661k": 101, "03": [101, 115, 118], "4215k": 101, "unzip": [101, 118], "_train2017": 101, "xarg": 101, "rm": [101, 116, 117], "candid": [101, 103, 108, 111, 114, 196, 386, 396, 397], "dict_kei": 101, "get_id": [101, 103, 104, 433], "000000397133": [101, 103], "000000037777": [101, 103], "000000252219": [101, 103], "000000087038": [101, 103], "alpha": [101, 104, 105, 110, 116, 117, 162, 196, 238, 427, 434], "grid": [101, 113, 117, 244, 396, 397, 400, 414, 416], "grid_siz": [101, 104, 238, 414, 416], "thu": [101, 116, 117, 137, 418], "vis_one_sampl": [101, 104, 105, 107, 116, 117, 238], "000000403385": [101, 103], "000000006818": [101, 103], "000000480985": [101, 103], "000000458054": [101, 103], "000000143931": [101, 103], "000000303818": [101, 103], "000000463730": [101, 103], "000000460347": [101, 103], "selector": 102, "lesson": 102, "runtim": [102, 115, 188, 221, 374, 433], "session": [102, 382, 447], "voc_dataset1": 102, "clone": [102, 197, 209, 220, 233, 292, 293], "retain_train_subset": 102, "horizont": [102, 113], "horizontally_long": 102, "vertically_long": 102, "34": [102, 103, 106, 115, 118], "retain_horizontally_long": 102, "2007_000001": 102, "find_item_with_given_label_nam": 102, "filter_annot": [102, 120, 135, 197, 209, 220], "remove_airplan": 102, "One": [102, 118, 188, 222, 384, 391, 392, 393, 400, 401, 402], "item_with_occlus": 102, "item_without_occlus": 102, "retain": [102, 124, 200, 201, 209, 217, 220, 229], "remove_empti": [102, 120, 197, 209, 217, 220], "remove_occluded_ann": 102, "redefin": [103, 445], "reidentifi": 103, "2022": [103, 105, 106, 115, 118, 137], "panoptic_train2017": 103, "1018861": 103, "976995": 103, "41866": 103, "media_id": 103, "000000174482": 103, "000000331352": 103, "000000296649": 103, "000000386912": 103, "000000502136": 103, "000000491497": 103, "000000184791": 103, "000000348881": 103, "000000289393": 103, "000000522713": 103, "000000181666": 103, "000000017627": 103, "000000322864": 103, "000000226111": 103, "000000153299": 103, "000000308394": 103, "000000456496": 103, "000000058636": 103, "000000041888": 103, "000000184321": 103, "000000565778": 103, "000000297343": 103, "000000336587": 103, "000000122745": 103, "000000219578": 103, "000000555705": 103, "000000443303": 103, "000000500663": 103, "000000418281": 103, "000000025560": 103, "000000403817": 103, "000000085329": 103, "000000329323": 103, "000000239274": 103, "000000286994": 103, "000000511321": 103, "000000314294": 103, "000000233771": 103, "000000475779": 103, "000000301867": 103, "000000312421": 103, "000000185250": 103, "000000356427": 103, "000000572517": 103, "000000270244": 103, "000000516316": 103, "000000125211": 103, "000000562121": 103, "000000360661": 103, "000000016228": 103, "000000382088": 103, "000000266409": 103, "000000430961": 103, "000000080671": 103, "000000577539": 103, "000000104612": 103, "000000476258": 103, "000000448365": 103, "000000035197": 103, "000000349860": 103, "000000180135": 103, "000000486438": 103, "000000400573": 103, "000000109798": 103, "000000370677": 103, "000000238866": 103, "000000369370": 103, "000000502737": 103, "000000515579": 103, "000000515445": 103, "000000173383": 103, "000000438862": 103, "000000180560": 103, "000000347693": 103, "000000039956": 103, "000000321214": 103, "000000474028": 103, "000000066523": 103, "000000355257": 103, "000000142092": 103, "000000063154": 103, "000000199551": 103, "000000239347": 103, "000000514508": 103, "000000473237": 103, "000000228144": 103, "000000206027": 103, "000000078915": 103, "000000551215": 103, "000000544519": 103, "000000096493": 103, "000000023899": 103, "000000340175": 103, "000000578500": 103, "000000366141": 103, "000000057597": 103, "000000559842": 103, "000000434230": 103, "000000428454": 103, "000000399462": 103, "000000261061": 103, "000000168330": 103, "000000383384": 103, "000000342006": 103, "000000217285": 103, "000000236412": 103, "000000524456": 103, "000000153343": 103, "000000095786": 103, "000000326541": 103, "000000213086": 103, "000000231339": 103, "000000508730": 103, "000000550426": 103, "000000368294": 103, "000000171190": 103, "000000301135": 103, "000000580294": 103, "000000494869": 103, "000000033638": 103, "000000329219": 103, "000000034873": 103, "000000186980": 103, "000000127182": 103, "000000356387": 103, "000000367680": 103, "000000263796": 103, "000000117425": 103, "000000365387": 103, "000000487583": 103, "000000504711": 103, "000000363840": 103, "000000214720": 103, "000000379453": 103, "000000311295": 103, "000000029393": 103, "000000278848": 103, "000000166391": 103, "000000048153": 103, "000000459153": 103, "000000295713": 103, "000000223130": 103, "000000273132": 103, "000000198960": 103, "000000344059": 103, "000000410428": 103, "000000087875": 103, "000000450758": 103, "000000458790": 103, "000000460160": 103, "000000458109": 103, "000000030675": 103, "000000566524": 103, "000000338428": 103, "000000545826": 103, "000000166277": 103, "000000269314": 103, "000000476415": 103, "000000292082": 103, "000000360137": 103, "000000122046": 103, "000000352684": 103, "000000512836": 103, "000000008021": 103, "000000107226": 103, "000000084477": 103, "000000562243": 103, "000000181859": 103, "000000177015": 103, "000000292236": 103, "000000121506": 103, "000000288042": 103, "000000453860": 103, "000000500257": 103, "000000113403": 103, "000000125062": 103, "000000375015": 103, "000000334719": 103, "000000134112": 103, "000000283520": 103, "000000031269": 103, "000000319721": 103, "000000165351": 103, "000000347265": 103, "000000414170": 103, "000000231508": 103, "000000389381": 103, "000000118921": 103, "000000021503": 103, "000000000785": 103, "000000300842": 103, "000000105014": 103, "000000261982": 103, "000000034205": 103, "000000099242": 103, "000000314709": 103, "000000460494": 103, "000000339442": 103, "000000541055": 103, "000000409475": 103, "000000464786": 103, "000000378605": 103, "000000331817": 103, "000000218091": 103, "000000578545": 103, "000000363207": 103, "000000372577": 103, "000000212166": 103, "000000172571": 103, "000000294831": 103, "000000084431": 103, "000000323355": 103, "000000355325": 103, "000000100582": 103, "000000555412": 103, "000000004495": 103, "000000009483": 103, "000000326082": 103, "000000398237": 103, "000000507223": 103, "000000031050": 103, "000000239537": 103, "000000340930": 103, "000000011813": 103, "000000281414": 103, "000000537991": 103, "000000284282": 103, "000000321333": 103, "000000521282": 103, "000000108026": 103, "000000243204": 103, "000000177935": 103, "000000038829": 103, "000000397327": 103, "000000501523": 103, "000000555050": 103, "000000376442": 103, "000000187243": 103, "000000356347": 103, "000000293044": 103, "000000560279": 103, "000000042276": 103, "000000534827": 103, "000000190756": 103, "000000482917": 103, "000000300659": 103, "000000199977": 103, "000000442480": 103, "000000384350": 103, "000000383621": 103, "000000189828": 103, "000000412894": 103, "000000537153": 103, "000000361103": 103, "000000392722": 103, "000000338560": 103, "000000264535": 103, "000000295231": 103, "000000154947": 103, "000000212559": 103, "000000458755": 103, "000000104782": 103, "000000315257": 103, "000000130599": 103, "000000227187": 103, "000000151662": 103, "000000461275": 103, "000000523811": 103, "000000456559": 103, "000000101068": 103, "000000140640": 103, "000000516708": 103, "000000544605": 103, "000000385190": 103, "000000338986": 103, "000000053994": 103, "000000061171": 103, "000000314034": 103, "000000291490": 103, "000000152740": 103, "000000024919": 103, "000000079837": 103, "000000021903": 103, "000000564133": 103, "000000337055": 103, "000000110638": 103, "000000034139": 103, "000000080340": 103, "000000083113": 103, "000000173033": 103, "000000255664": 103, "000000072813": 103, "000000545129": 103, "000000546011": 103, "000000121031": 103, "000000172547": 103, "000000369081": 103, "000000509131": 103, "000000578922": 103, "000000464089": 103, "000000453708": 103, "000000177714": 103, "000000459887": 103, "000000155179": 103, "000000261116": 103, "000000396274": 103, "000000029640": 103, "000000141328": 103, "000000308430": 103, "000000043314": 103, "000000273715": 103, "000000456303": 103, "000000406611": 103, "000000475064": 103, "000000466567": 103, "000000137246": 103, "000000015079": 103, "000000296284": 103, "000000226147": 103, "000000226903": 103, "000000127517": 103, "000000162092": 103, "000000131379": 103, "000000366611": 103, "000000263969": 103, "000000551439": 103, "000000474167": 103, "000000159458": 103, "000000554735": 103, "000000099428": 103, "000000386352": 103, "000000173004": 103, "000000311394": 103, "000000578489": 103, "000000189310": 103, "000000491366": 103, "000000448076": 103, "000000293804": 103, "000000312237": 103, "000000221291": 103, "000000141821": 103, "000000410650": 103, "000000199310": 103, "000000323151": 103, "000000089648": 103, "000000219283": 103, "000000471869": 103, "000000520264": 103, "000000111179": 103, "000000151000": 103, "000000100624": 103, "000000332570": 103, "000000057238": 103, "000000502732": 103, "000000135561": 103, "000000008277": 103, "000000173044": 103, "000000168458": 103, "000000512194": 103, "000000370042": 103, "000000189436": 103, "000000533958": 103, "000000117645": 103, "000000221708": 103, "000000202228": 103, "000000403565": 103, "000000211042": 103, "000000492878": 103, "000000441586": 103, "000000547816": 103, "000000306733": 103, "000000530099": 103, "000000312278": 103, "000000097679": 103, "000000564127": 103, "000000251065": 103, "000000003845": 103, "000000138819": 103, "000000205834": 103, "000000348708": 103, "000000166521": 103, "000000485802": 103, "000000099054": 103, "000000022969": 103, "000000570539": 103, "000000278353": 103, "000000158548": 103, "000000461405": 103, "000000176606": 103, "000000044699": 103, "000000559956": 103, "000000268996": 103, "000000011197": 103, "000000483667": 103, "000000448810": 103, "000000000724": 103, "000000051961": 103, "000000375278": 103, "000000302165": 103, "000000131131": 103, "000000098839": 103, "000000402992": 103, "000000465675": 103, "000000240754": 103, "000000021167": 103, "000000148730": 103, "000000384468": 103, "000000253742": 103, "000000186873": 103, "000000082180": 103, "000000446522": 103, "000000552902": 103, "000000125405": 103, "000000110211": 103, "000000016010": 103, "000000064462": 103, "000000314182": 103, "000000248980": 103, "000000068387": 103, "000000429281": 103, "000000345466": 103, "000000352900": 103, "000000118367": 103, "000000113235": 103, "000000311303": 103, "000000163640": 103, "000000370999": 103, "000000001490": 103, "000000329456": 103, "000000570471": 103, "000000088269": 103, "000000260470": 103, "000000193494": 103, "000000252776": 103, "000000201072": 103, "000000018150": 103, "000000337498": 103, "000000521405": 103, "000000518770": 103, "000000201646": 103, "000000036936": 103, "000000059044": 103, "000000172946": 103, "000000234607": 103, "000000532690": 103, "000000323895": 103, "000000384670": 103, "000000050326": 103, "000000205542": 103, "000000217957": 103, "000000162035": 103, "000000415727": 103, "000000046252": 103, "000000182021": 103, "000000231747": 103, "000000090284": 103, "000000286553": 103, "000000488736": 103, "000000063602": 103, "000000383386": 103, "000000450686": 103, "000000005060": 103, "000000286523": 103, "000000120420": 103, "000000579655": 103, "000000117908": 103, "000000550322": 103, "000000322844": 103, "000000218362": 103, "000000213224": 103, "000000223747": 103, "000000297578": 103, "000000458992": 103, "000000078266": 103, "000000164602": 103, "000000440475": 103, "000000101762": 103, "000000557501": 103, "000000203317": 103, "000000368940": 103, "000000569917": 103, "000000144798": 103, "000000284623": 103, "000000520301": 103, "000000127987": 103, "000000063740": 103, "000000036494": 103, "000000210032": 103, "000000488270": 103, "000000067180": 103, "000000281179": 103, "000000064359": 103, "000000126226": 103, "000000190923": 103, "000000150265": 103, "000000216739": 103, "000000038048": 103, "000000354829": 103, "000000525155": 103, "000000163314": 103, "000000259571": 103, "000000561679": 103, "000000236166": 103, "000000153529": 103, "000000473015": 103, "000000379800": 103, "000000253835": 103, "000000034071": 103, "000000036861": 103, "000000569565": 103, "000000219271": 103, "000000205647": 103, "000000460841": 103, "000000123131": 103, "000000334006": 103, "000000511599": 103, "000000229858": 103, "000000174004": 103, "000000519764": 103, "000000137576": 103, "000000087470": 103, "000000009769": 103, "000000558114": 103, "000000205776": 103, "000000163257": 103, "000000475678": 103, "000000085478": 103, "000000318080": 103, "000000361551": 103, "000000236784": 103, "000000092839": 103, "000000042296": 103, "000000560266": 103, "000000486479": 103, "000000127955": 103, "000000307658": 103, "000000417465": 103, "000000342971": 103, "000000011760": 103, "000000069106": 103, "000000070158": 103, "000000176634": 103, "000000281447": 103, "000000552371": 103, "000000361919": 103, "000000560256": 103, "000000138115": 103, "000000114871": 103, "000000374369": 103, "000000123213": 103, "000000123321": 103, "000000015278": 103, "000000357742": 103, "000000439854": 103, "000000465836": 103, "000000414385": 103, "000000131556": 103, "000000322724": 103, "000000320664": 103, "000000481390": 103, "000000109916": 103, "000000276434": 103, "000000579635": 103, "000000295316": 103, "000000571313": 103, "000000183127": 103, "000000115898": 103, "000000146358": 103, "000000329542": 103, "000000189752": 103, "000000290163": 103, "000000091406": 103, "000000322352": 103, "000000223959": 103, "000000326248": 103, "000000218439": 103, "000000453722": 103, "000000293625": 103, "000000411817": 103, "000000546964": 103, "000000215259": 103, "000000573094": 103, "000000560011": 103, "000000038576": 103, "000000147729": 103, "000000579307": 103, "000000154425": 103, "000000432898": 103, "000000404923": 103, "000000130586": 103, "000000163057": 103, "000000007511": 103, "000000067406": 103, "000000290179": 103, "000000248752": 103, "000000054593": 103, "000000116208": 103, "000000340697": 103, "000000450303": 103, "000000494427": 103, "000000137294": 103, "000000410880": 103, "000000311180": 103, "000000091654": 103, "000000181796": 103, "000000002431": 103, "000000349184": 103, "000000298396": 103, "000000472046": 103, "000000074058": 103, "000000058029": 103, "000000134096": 103, "000000111951": 103, "000000103585": 103, "000000210273": 103, "000000352584": 103, "000000446651": 103, "000000194875": 103, "000000052017": 103, "000000336309": 103, "000000227478": 103, "000000339870": 103, "000000080666": 103, "000000033707": 103, "000000327601": 103, "000000255749": 103, "000000008762": 103, "000000526392": 103, "000000535578": 103, "000000580757": 103, "000000165039": 103, "000000148719": 103, "000000108440": 103, "000000489842": 103, "000000579818": 103, "000000423229": 103, "000000323828": 103, "000000166287": 103, "000000101420": 103, "000000334555": 103, "000000196759": 103, "000000411665": 103, "000000061418": 103, "000000526751": 103, "000000024021": 103, "000000277020": 103, "000000047828": 103, "000000183716": 103, "000000271997": 103, "000000008532": 103, "000000094336": 103, "000000390555": 103, "000000250282": 103, "000000068409": 103, "000000002299": 103, "000000011051": 103, "000000066038": 103, "000000360960": 103, "000000360097": 103, "000000421455": 103, "000000504589": 103, "000000464522": 103, "000000454750": 103, "000000509735": 103, "000000023034": 103, "000000141671": 103, "000000506656": 103, "000000272566": 103, "000000045728": 103, "000000424551": 103, "000000341719": 103, "000000072795": 103, "000000078959": 103, "000000417285": 103, "000000002157": 103, "000000043816": 103, "000000455555": 103, "000000535306": 103, "000000030504": 103, "000000093353": 103, "000000530052": 103, "000000473118": 103, "000000091779": 103, "000000283113": 103, "000000226130": 103, "000000097278": 103, "000000567640": 103, "000000532493": 103, "000000045550": 103, "000000156643": 103, "000000430056": 103, "000000410456": 103, "000000441286": 103, "000000279541": 103, "000000000885": 103, "000000378284": 103, "000000156076": 103, "000000143572": 103, "000000229849": 103, "000000039551": 103, "000000056344": 103, "000000193348": 103, "000000016958": 103, "000000572678": 103, "000000106235": 103, "000000341681": 103, "000000083172": 103, "000000343524": 103, "000000395801": 103, "000000388056": 103, "000000259690": 103, "000000235836": 103, "000000343218": 103, "000000205105": 103, "000000513283": 103, "000000176446": 103, "000000371677": 103, "000000308531": 103, "000000497599": 103, "000000455352": 103, "000000236914": 103, "000000232684": 103, "000000415238": 103, "000000290843": 103, "000000519522": 103, "000000144784": 103, "000000167486": 103, "000000392228": 103, "000000488673": 103, "000000191013": 103, "000000080057": 103, "000000570169": 103, "000000224807": 103, "000000163562": 103, "000000136355": 103, "000000492362": 103, "000000102707": 103, "000000232563": 103, "000000010977": 103, "000000051598": 103, "000000032285": 103, "000000520910": 103, "000000131273": 103, "000000206411": 103, "000000472375": 103, "000000481404": 103, "000000471991": 103, "000000017436": 103, "000000177934": 103, "000000165518": 103, "000000571718": 103, "000000459467": 103, "000000135673": 103, "000000134886": 103, "000000485895": 103, "000000287545": 103, "000000577182": 103, "000000289222": 103, "000000372819": 103, "000000310072": 103, "000000087144": 103, "000000430875": 103, "000000060347": 103, "000000042070": 103, "000000420916": 103, "000000453584": 103, "000000296224": 103, "000000122606": 103, "000000311909": 103, "000000579893": 103, "000000284296": 103, "000000221017": 103, "000000315001": 103, "000000439715": 103, "000000284991": 103, "000000389566": 103, "000000078843": 103, "000000122927": 103, "000000225532": 103, "000000013659": 103, "000000153568": 103, "000000395633": 103, "000000419096": 103, "000000203488": 103, "000000361268": 103, "000000466125": 103, "000000414795": 103, "000000508101": 103, "000000253386": 103, "000000222991": 103, "000000530854": 103, "000000351810": 103, "000000338624": 103, "000000138492": 103, "000000263463": 103, "000000226592": 103, "000000378454": 103, "000000020059": 103, "000000227686": 103, "000000476215": 103, "000000297698": 103, "000000247917": 103, "000000439522": 103, "000000479448": 103, "000000424721": 103, "000000026690": 103, "000000558854": 103, "000000176901": 103, "000000334767": 103, "000000301563": 103, "000000086755": 103, "000000194471": 103, "000000420281": 103, "000000533206": 103, "000000099810": 103, "000000334483": 103, "000000089670": 103, "000000482275": 103, "000000404805": 103, "000000002261": 103, "000000425702": 103, "000000036844": 103, "000000012576": 103, "000000361238": 103, "000000108253": 103, "000000319935": 103, "000000003934": 103, "000000029596": 103, "000000047740": 103, "000000077460": 103, "000000014439": 103, "000000571893": 103, "000000447314": 103, "000000181303": 103, "000000058350": 103, "000000026465": 103, "000000246968": 103, "000000536947": 103, "000000076731": 103, "000000286182": 103, "000000433980": 103, "000000561366": 103, "000000380913": 103, "000000032887": 103, "000000517687": 103, "000000213035": 103, "000000399205": 103, "000000349837": 103, "000000350002": 103, "000000131431": 103, "000000356248": 103, "000000334399": 103, "000000057150": 103, "000000363666": 103, "000000507235": 103, "000000169996": 103, "000000226417": 103, "000000481573": 103, "000000056127": 103, "000000123480": 103, "000000274687": 103, "000000164637": 103, "000000178028": 103, "000000493286": 103, "000000348216": 103, "000000345027": 103, "000000571804": 103, "000000140658": 103, "000000102644": 103, "000000581615": 103, "000000279887": 103, "000000230008": 103, "000000284698": 103, "000000102356": 103, "000000456394": 103, "000000323709": 103, "000000452122": 103, "000000579158": 103, "000000525322": 103, "000000033114": 103, "000000008690": 103, "000000381639": 103, "000000217614": 103, "000000284445": 103, "000000468124": 103, "000000187144": 103, "000000273198": 103, "000000095843": 103, "000000417779": 103, "000000447342": 103, "000000166563": 103, "000000490125": 103, "000000561009": 103, "000000183675": 103, "000000290248": 103, "000000532058": 103, "000000214200": 103, "000000578093": 103, "000000369751": 103, "000000429011": 103, "000000301061": 103, "000000105264": 103, "000000267434": 103, "000000370711": 103, "000000025393": 103, "000000471087": 103, "000000106757": 103, "000000183648": 103, "000000358525": 103, "000000049269": 103, "000000079144": 103, "000000519688": 103, "000000431727": 103, "000000130699": 103, "000000215245": 103, "000000091921": 103, "000000218424": 103, "000000473974": 103, "000000405249": 103, "000000235784": 103, "000000521540": 103, "000000537506": 103, "000000119445": 103, "000000507015": 103, "000000173830": 103, "000000356498": 103, "000000435081": 103, "000000018575": 103, "000000373315": 103, "000000227765": 103, "000000013546": 103, "000000067310": 103, "000000125936": 103, "000000389109": 103, "000000322211": 103, "000000184384": 103, "000000426329": 103, "000000128476": 103, "000000414034": 103, "000000450488": 103, "000000099182": 103, "000000051738": 103, "000000099039": 103, "000000075456": 103, "000000134882": 103, "000000442323": 103, "000000232489": 103, "000000351823": 103, "000000065736": 103, "000000001000": 103, "000000379842": 103, "000000013923": 103, "000000559543": 103, "000000185890": 103, "000000357978": 103, "000000129492": 103, "000000261097": 103, "000000410510": 103, "000000039951": 103, "000000306700": 103, "000000146457": 103, "000000214224": 103, "000000332845": 103, "000000255483": 103, "000000222455": 103, "000000187271": 103, "000000462629": 103, "000000544565": 103, "000000369771": 103, "000000035963": 103, "000000289516": 103, "000000334309": 103, "000000452084": 103, "000000301718": 103, "000000429598": 103, "000000165257": 103, "000000093437": 103, "000000413552": 103, "000000062025": 103, "000000017379": 103, "000000176778": 103, "000000104572": 103, "000000090108": 103, "000000157124": 103, "000000089556": 103, "000000266206": 103, "000000086220": 103, "000000508602": 103, "reindexing_dataset": 103, "27": [103, 106, 115, 118], "37": [103, 106, 115, 118], "38": [103, 106, 109, 115, 118], "44": [103, 106, 115, 118], "45": [103, 106, 109, 110, 115, 118], "55": [103, 106, 114, 115, 118], "56": [103, 106, 114, 115, 118], "60": [103, 106, 110, 116, 117, 118], "62": [103, 106, 110, 118], "66": [103, 106, 114, 118], "68": [103, 106], "69": [103, 106, 110, 118], "70": [103, 106, 114, 118], "71": [103, 106, 115, 118], "74": [103, 106, 114, 115], "82": [103, 106], "83": [103, 106, 108, 118], "84": [103, 106], "85": [103, 106, 118, 135], "88": [103, 106, 396, 397], "89": [103, 106, 118], "90": [103, 106, 115, 118], "91": [103, 106, 118], "92": [103, 106, 110], "93": [103, 106, 109, 118], "94": [103, 106, 110], "96": [103, 106, 115], "101": [103, 106], "102": [103, 106, 115], "103": [103, 106, 118], "104": [103, 106, 115], "105": [103, 106, 110, 118], "106": [103, 106, 115, 118], "109": [103, 106, 115, 118], "110": [103, 106, 118], "111": [103, 106], "112": [103, 106, 115, 118], "113": [103, 106, 115], "114": [103, 106], "115": [103, 106, 115, 118], "116": [103, 115, 118], "117": [103, 106], "118": [103, 106], "119": [103, 106], "120": [103, 106], "121": [103, 106], "122": [103, 106, 109, 115, 118], "123": [103, 106, 118], "125": [103, 106, 111, 114, 118], "127": [103, 106, 115, 118], "129": [103, 106, 115, 118], "130": [103, 115, 118], "131": [103, 106, 115, 118], "132": [103, 106, 115, 118], "133": [103, 106, 115, 118], "135": [103, 115, 118], "136": [103, 115, 118], "137": [103, 106, 115, 118], "138": [103, 106, 115, 118], "139": [103, 106, 115, 118], "140": [103, 106, 118], "141": [103, 118], "142": [103, 106, 115, 118], "143": [103, 106, 115, 118], "144": [103, 106, 115, 118], "145": [103, 115, 118], "146": [103, 106, 118], "147": [103, 106, 115, 118], "148": [103, 106, 115, 118], "152": [103, 106, 118], "153": [103, 106, 115, 118], "154": [103, 118], "155": [103, 106, 118], "156": [103, 106, 112, 118], "157": [103, 106, 118], "158": [103, 106, 118], "159": [103, 106, 115, 118], "160": [103, 118], "161": [103, 106, 118], "162": [103, 106, 115, 118], "164": [103, 106, 118], "165": [103, 118], "166": [103, 112, 118], "167": [103, 106, 118], "168": [103, 106, 118], "169": [103, 106, 118], "170": [103, 106, 118], "171": [103, 118], "172": [103, 118], "173": [103, 118], "174": [103, 106, 118], "175": [103, 118], "176": [103, 106, 115, 118], "177": [103, 106, 118], "178": [103, 106, 118], "179": [103, 118], "180": [103, 118, 137], "181": [103, 118], "182": [103, 115, 118], "183": [103, 106, 118], "184": [103, 106, 118], "185": [103, 106, 118], "186": [103, 106, 118], "187": [103, 106, 115, 118], "188": [103, 106, 118], "189": [103, 115, 118], "190": [103, 118], "192": [103, 106, 115, 118], "193": [103, 106, 118], "195": [103, 106, 118], "196": [103, 118], "197": [103, 118], "201": [103, 118], "202": [103, 118], "203": [103, 118], "204": [103, 106, 118], "205": [103, 118], "210": 103, "211": [103, 106, 118], "212": [103, 118], "213": [103, 106, 118], "214": [103, 115, 118], "215": [103, 115, 118], "216": [103, 115, 118], "217": 103, "218": 103, "219": [103, 118], "220": [103, 118], "221": [103, 106, 115, 118], "222": [103, 118], "223": [103, 106, 118], "225": [103, 106, 115, 118], "226": [103, 106, 118], "227": [103, 106, 115, 118], "228": [103, 118], "229": [103, 106, 118], "230": [103, 118], "231": [103, 106, 118], "232": [103, 118], "233": [103, 106, 115, 118], "234": [103, 115, 118], "236": [103, 106, 115, 118], "237": [103, 115, 118], "239": [103, 115, 118], "240": [103, 115, 118, 137], "241": [103, 106, 115, 118], "242": [103, 115, 118], "243": [103, 106, 118], "244": [103, 118], "245": 103, "246": [103, 118], "247": [103, 118], "248": [103, 106, 115, 118], "249": [103, 106, 118], "250": [103, 104, 106, 107, 111, 114, 118], "251": [103, 106, 118], "252": [103, 118], "253": [103, 118], "254": [103, 118], "257": [103, 118], "258": [103, 115, 118], "259": [103, 115, 118], "260": [103, 115, 118], "261": [103, 106, 118], "262": [103, 106, 115, 118], "263": [103, 118], "265": [103, 115, 118], "266": [103, 115, 118], "267": [103, 115], "268": [103, 115, 118], "269": [103, 118], "270": [103, 118], "271": 103, "272": [103, 106, 115, 118], "273": [103, 106, 115, 118], "274": [103, 106, 115], "276": [103, 110, 118], "277": [103, 106, 118], "278": [103, 115, 118], "279": [103, 106], "280": 103, "281": [103, 110], "282": 103, "283": [103, 118], "284": [103, 118], "285": [103, 115], "286": [103, 115, 118], "287": [103, 115, 118], "288": [103, 106, 115, 118], "289": [103, 106], "290": 103, "291": [103, 106, 115], "292": [103, 106, 115], "293": [103, 106], "294": [103, 106], "295": 103, "296": [103, 115, 118], "297": [103, 106, 115, 118], "298": 103, "299": [103, 115], "301": [103, 106], "302": [103, 115], "303": [103, 106, 115], "304": 103, "305": [103, 106, 115], "306": 103, "307": [103, 115], "308": 103, "309": [103, 106, 115], "310": 103, "311": [103, 118], "312": 103, "313": 103, "314": [103, 115, 118], "315": 103, "316": 103, "317": 103, "319": [103, 106], "321": [103, 106, 115], "322": [103, 106, 112, 115], "323": 103, "324": [103, 118], "325": 103, "327": [103, 106, 118], "328": [103, 112, 118], "329": 103, "330": [103, 115, 118], "331": [103, 118], "332": [103, 106], "333": 103, "334": [103, 106, 115], "335": [103, 115], "336": [103, 111], "337": 103, "338": [103, 106], "339": [103, 106, 115, 118], "341": [103, 106], "342": [103, 115, 118], "343": [103, 106, 118], "344": [103, 115], "345": 103, "346": [103, 106, 115, 118], "347": [103, 106, 109], "348": [103, 106, 115, 118], "349": [103, 114], "351": 103, "352": 103, "353": [103, 115], "355": [103, 106, 118], "356": [103, 106, 115], "357": [103, 115], "359": [103, 106, 115, 118], "360": [103, 115, 118, 198, 217, 282, 292], "361": [103, 118], "362": [103, 115], "363": [103, 115, 118], "364": [103, 106, 115], "365": [103, 106], "366": [103, 118], "367": [103, 118], "368": [103, 106, 118], "369": [103, 106], "370": 103, "371": [103, 106, 115], "372": [103, 115], "373": [103, 115, 118], "374": 103, "375": [103, 106, 115], "376": [103, 115, 118], "377": [103, 106], "378": 103, "379": [103, 106], "380": 103, "381": [103, 106, 115, 118], "382": 103, "383": 103, "384": [103, 106, 118], "385": [103, 115], "386": 103, "387": [103, 106, 115], "388": 103, "389": [103, 106], "390": [103, 115], "391": 103, "392": [103, 118], "393": [103, 118], "394": 103, "395": [103, 106], "396": 103, "397": 103, "398": [103, 106], "399": 103, "401": [103, 118], "402": [103, 106, 115, 118], "403": [103, 115, 118], "404": [103, 106], "405": 103, "406": 103, "407": [103, 115], "408": [103, 118], "409": 103, "410": [103, 115, 118], "411": [103, 106, 118], "412": [103, 118], "413": 103, "414": [103, 106, 115], "415": [103, 118], "416": [103, 110, 115, 393], "417": [103, 106, 118], "418": [103, 106], "419": [103, 106, 115], "420": [103, 115], "421": [103, 106], "422": [103, 106, 118], "423": [103, 118], "424": [103, 118], "425": [103, 106, 115], "426": [103, 118], "427": [103, 106, 118], "428": [103, 115], "429": [103, 106, 115, 118], "430": [103, 115], "431": [103, 106, 115], "432": [103, 115, 118], "433": 103, "434": [103, 118], "435": 103, "436": 103, "437": [103, 106, 115], "438": [103, 106], "439": 103, "440": 103, "441": 103, "442": 103, "443": [103, 115], "444": 103, "445": [103, 118], "446": 103, "447": [103, 106, 118], "448": [103, 118], "449": [103, 115], "450": [103, 107, 118], "451": [103, 118], "452": 103, "453": [103, 106, 118], "454": [103, 115], "455": [103, 115], "456": 103, "457": 103, "458": [103, 115, 118], "459": [103, 115, 118], "460": [103, 115, 118], "461": [103, 118], "462": [103, 115, 118], "463": [103, 115], "464": [103, 106, 115], "465": 103, "466": 103, "467": 103, "468": [103, 115], "469": [103, 106, 115, 118], "470": [103, 118], "471": [103, 118], "472": [103, 118], "474": [103, 118], "475": 103, "476": [103, 106, 115], "477": 103, "478": [103, 106, 118], "479": [103, 115], "481": 103, "482": [103, 106, 115], "483": [103, 118], "484": [103, 115, 188, 221, 374, 433], "485": 103, "486": [103, 118], "487": 103, "488": [103, 106, 115, 118], "489": 103, "490": [103, 115, 118], "491": 103, "492": [103, 106], "493": 103, "494": [103, 106, 118], "495": [103, 106, 115], "496": [103, 106, 115, 118], "497": [103, 118], "498": 103, "499": [103, 106, 118], "500": [103, 113, 115, 131], "501": [103, 106, 115, 118], "502": 103, "503": [103, 115], "504": [103, 115], "505": [103, 115], "506": [103, 118], "507": [103, 106, 111], "508": [103, 118], "509": 103, "510": [103, 115], "511": 103, "512": [103, 106, 115, 118], "513": 103, "514": 103, "515": [103, 115, 118], "516": 103, "517": [103, 106], "518": [103, 118], "519": [103, 106], "520": 103, "521": [103, 118], "522": [103, 118], "523": 103, "524": [103, 118], "525": [103, 118], "526": [103, 118, 196], "527": [103, 115, 118], "528": [103, 115], "529": [103, 106, 118], "530": 103, "531": [103, 106, 118], "532": 103, "533": [103, 106, 115], "534": [103, 106, 115], "535": 103, "536": [103, 106], "537": [103, 118], "538": 103, "539": [103, 106, 115], "540": 103, "541": [103, 106], "542": 103, "543": [103, 118], "544": [103, 106], "545": [103, 118], "546": [103, 106, 118], "547": [103, 106, 115], "549": [103, 114], "550": 103, "551": [103, 115], "552": [103, 118], "553": 103, "554": [103, 118], "555": [103, 106], "556": 103, "557": [103, 115], "558": [103, 106, 115], "559": [103, 106], "560": 103, "561": [103, 118], "562": [103, 115], "563": [103, 106], "564": [103, 106], "565": [103, 106], "566": [103, 106], "567": [103, 106, 118], "568": [103, 106], "569": 103, "570": 103, "571": [103, 106, 115], "572": [103, 115, 118], "573": [103, 118], "574": 103, "575": [103, 106, 115], "576": [103, 115, 118], "577": [103, 106], "578": [103, 106, 118], "579": [103, 106], "580": 103, "581": [103, 106], "582": [103, 106, 118], "583": [103, 115], "584": [103, 106], "585": [103, 118], "586": 103, "587": [103, 106], "588": [103, 115], "589": 103, "590": 103, "591": [103, 106, 115, 118], "592": [103, 106, 118], "593": [103, 106, 118], "594": [103, 106], "595": [103, 106, 118], "596": [103, 106, 118], "597": [103, 118], "598": [103, 106], "599": 103, "601": [103, 106, 115, 118], "602": [103, 106], "603": [103, 106, 115], "604": [103, 106, 115], "605": [103, 106, 115, 118], "606": [103, 106], "607": [103, 106, 118], "608": [103, 106, 118], "609": [103, 106, 115], "610": [103, 115], "611": [103, 106, 115], "613": [103, 106], "614": [103, 118], "615": [103, 106, 118], "616": [103, 106], "617": [103, 106], "618": [103, 118], "619": [103, 106, 118], "620": [103, 118], "621": [103, 106], "622": 103, "623": [103, 115], "624": [103, 115], "625": [103, 115, 118], "626": [103, 106, 115, 118], "627": 103, "628": 103, "629": [103, 106], "630": 103, "631": 103, "632": [103, 106, 115, 118], "633": 103, "634": 103, "635": [103, 118], "636": [103, 106, 115, 118], "637": [103, 106, 118], "638": [103, 106], "639": [103, 106], "641": [103, 115], "642": [103, 106, 115, 118], "643": 103, "644": [103, 106, 112, 118], "645": 103, "646": [103, 112], "647": [103, 106, 115, 118], "648": [103, 106, 115], "649": [103, 106, 115, 118], "650": [103, 118], "651": [103, 106, 118], "652": 103, "653": 103, "654": [103, 115, 118], "655": [103, 106], "656": [103, 115, 118], "657": [103, 115, 118], "658": [103, 115, 118], "659": [103, 118], "660": [103, 115], "661": 103, "662": [103, 106], "663": [103, 115], "664": [103, 118], "665": [103, 106, 115], "666": 103, "667": 103, "668": 103, "670": 103, "671": [103, 106, 115], "672": [103, 115], "673": [103, 106, 118], "674": [103, 106, 118], "675": [103, 118], "676": 103, "677": 103, "678": [103, 115], "679": [103, 118], "680": [103, 118], "681": [103, 115, 200, 201, 229], "682": [103, 106], "683": [103, 115, 118], "684": [103, 115, 118], "685": 103, "686": 103, "687": [103, 106], "688": [103, 118], "689": 103, "690": [103, 118], "691": [103, 106], "692": 103, "693": [103, 115, 122], "694": [103, 118], "695": 103, "696": 103, "697": [103, 106], "698": [103, 118], "699": [103, 106], "701": [103, 106], "702": [103, 118], "703": [103, 115], "704": 103, "705": 103, "706": 103, "707": 103, "708": 103, "709": 103, "710": [103, 118], "711": [103, 116, 118], "712": [103, 115, 116], "713": [103, 116], "714": [103, 115, 116, 118], "715": [103, 115, 116, 118], "716": 103, "717": [103, 116], "718": [103, 116], "719": [103, 115, 116], "720": [103, 115, 116, 198, 217, 282, 292], "721": [103, 116], "722": [103, 116], "723": [103, 115, 116, 118], "724": [103, 115, 116], "725": [103, 115, 116, 118], "726": [103, 116], "727": [103, 106], "728": [103, 116], "729": [103, 115], "730": [103, 115, 116], "731": [103, 116], "732": [103, 116], "733": [103, 118], "734": [103, 116], "735": [103, 118], "736": [103, 106, 116, 391], "737": [103, 118], "738": 103, "739": [103, 116, 118], "740": 103, "741": [103, 106, 116], "742": [103, 118], "743": [103, 106, 115], "744": 103, "745": [103, 106, 115], "746": [103, 115, 118], "747": [103, 115, 116, 118], "748": 103, "749": 103, "750": [103, 116], "751": [103, 106, 118], "752": [103, 118], "753": [103, 116], "754": [103, 106], "755": 103, "756": [103, 106], "757": [103, 118], "758": [103, 106], "759": [103, 106, 115, 118], "760": [103, 118], "761": [103, 116], "762": [103, 106], "763": [103, 118], "764": [103, 116], "765": [103, 106, 115, 118], "766": [103, 115], "767": [103, 115, 118], "768": [103, 106, 116, 118], "769": [103, 115, 118], "770": [103, 116], "771": [103, 115, 118], "772": [103, 106], "773": [103, 106, 116], "774": [103, 106, 115, 116], "775": [103, 106, 118], "776": 103, "777": [103, 106], "778": [103, 115, 116], "779": [103, 116], "780": 103, "781": [103, 106], "782": [103, 106, 115, 116], "783": [103, 115, 118], "784": [103, 106, 118], "785": [103, 118], "786": [103, 106, 116], "787": [103, 106, 118], "788": 103, "789": 103, "790": [103, 115, 118], "791": [103, 115], "792": [103, 106, 115], "793": [103, 115, 116, 118], "794": [103, 115], "795": 103, "796": 103, "797": 103, "798": [103, 106, 116], "799": [103, 118], "800": 103, "801": 103, "802": [103, 106, 116], "803": [103, 106], "804": [103, 106], "805": [103, 106, 115, 116], "806": [103, 115], "807": [103, 106, 115, 118], "808": [103, 115], "809": [103, 116, 118], "810": 103, "811": [103, 106], "812": [103, 106, 115, 116, 118], "813": [103, 106, 115], "814": [103, 115], "815": [103, 106, 115], "816": 103, "817": [103, 116], "818": [103, 106, 118], "819": 103, "820": [103, 118], "822": [103, 106, 115, 118], "823": [103, 115], "824": [103, 106, 115, 116, 118], "825": [103, 106], "826": [103, 115, 116, 118], "827": [103, 116, 118], "828": 103, "829": [103, 116], "830": 103, "831": [103, 106], "832": [103, 106, 116], "833": [103, 115], "834": [103, 106, 115, 118], "835": [103, 106, 116, 118], "836": [103, 106, 116, 118], "837": [103, 106, 116, 118], "838": 103, "839": [103, 106], "840": [103, 115, 116, 118], "841": [103, 106], "842": [103, 106], "843": [103, 106, 116], "844": 103, "845": [103, 106], "846": [103, 106, 118], "847": [103, 106, 115, 116], "848": [103, 106, 116, 118], "849": [103, 118], "850": [103, 116, 118], "851": [103, 106], "852": [103, 106, 115, 118], "853": [103, 116, 118], "854": [103, 106, 116, 118], "855": 103, "856": 103, "857": [103, 115, 116], "858": [103, 106, 115, 116], "859": [103, 106], "860": [103, 116], "861": [103, 116, 118], "862": [103, 116], "863": [103, 115, 116], "864": [103, 115, 116, 392], "865": [103, 115, 116], "866": [103, 106, 118], "867": [103, 118], "868": [103, 106, 118], "869": 103, "870": 103, "871": [103, 106], "872": [103, 106, 115, 118], "873": 103, "874": [103, 106], "875": [103, 106, 118], "876": [103, 106, 116, 118], "877": [103, 115, 116], "878": [103, 106, 115, 116, 118], "879": [103, 106, 116], "880": [103, 115, 116], "881": 103, "882": [103, 106, 116, 118], "883": [103, 115], "884": [103, 106, 116, 118], "885": [103, 106, 116], "886": [103, 106, 116], "887": [103, 106, 115, 116], "888": [103, 116], "889": [103, 115, 116], "890": [103, 116], "891": [103, 115, 116, 118], "892": [103, 116], "893": [103, 106, 116], "894": [103, 106, 116], "895": [103, 106, 116], "896": [103, 106, 116], "897": [103, 106, 114, 116], "898": [103, 106, 116], "899": [103, 106, 116, 118], "901": [103, 106, 116], "902": [103, 106, 116], "903": [103, 106, 115, 116, 118], "904": [103, 106, 115, 116], "905": [103, 106, 115], "906": [103, 106, 116], "907": [103, 116], "908": [103, 115, 118], "909": [103, 106, 115, 116, 118], "910": [103, 115, 118], "911": [103, 106, 115, 118], "912": [103, 116, 118], "913": [103, 106, 116, 118], "914": [103, 106, 118], "915": [103, 106, 116, 118], "916": [103, 106, 116, 118], "917": [103, 106, 115, 118], "918": [103, 106, 115, 118], "919": [103, 106, 115, 116], "920": [103, 115, 116, 118], "921": [103, 106, 115, 118], "922": [103, 106, 115, 116, 118], "923": [103, 115, 118], "924": [103, 106, 115, 118], "925": [103, 106, 115, 116, 118], "926": [103, 115, 116, 118], "927": [103, 106, 115, 118], "928": [103, 116, 118], "929": [103, 118], "930": [103, 116, 118], "931": [103, 106, 116, 118], "932": [103, 106, 118], "933": [103, 106, 118], "934": [103, 106, 116, 118], "935": [103, 106, 115, 116, 118], "936": [103, 115, 118], "937": [103, 106, 118], "938": [103, 106, 118], "939": [103, 118], "940": [103, 118], "941": [103, 115, 116, 118], "942": [103, 118], "943": [103, 106, 115, 116, 118], "944": [103, 106, 118], "945": [103, 115, 118], "946": [103, 115, 118], "947": [103, 106, 118], "948": [103, 106, 115, 116, 118], "949": [103, 106, 115, 118], "950": [103, 118], "951": [103, 106, 115, 118], "952": [103, 106, 111, 115, 118], "953": [103, 106, 116, 118], "954": [103, 106, 115, 118], "955": [103, 106, 116, 118], "956": [103, 106, 116, 118], "957": [103, 106, 115, 118], "958": [103, 106, 118], "959": [103, 106, 118], "960": [103, 118], "961": [103, 106, 116, 118], "962": [103, 106, 115, 118], "963": [103, 106, 116, 118], "964": [103, 106, 115, 118], "965": [103, 106, 116, 118], "966": [103, 106, 116, 118], "967": [103, 116, 118], "968": [103, 106, 116, 118], "969": [103, 106, 115, 118], "970": [103, 115, 116, 118], "971": [103, 115, 116, 118], "972": [103, 106, 116, 118], "973": [103, 106, 116, 118], "975": [103, 106, 116, 118], "976": [103, 106, 116, 118], "977": [103, 106, 116, 118], "978": [103, 116, 118], "980": [103, 116], "981": [103, 106, 115, 116], "982": [103, 116, 118], "983": [103, 106, 118], "984": [103, 116, 118], "985": [103, 106, 115], "986": [103, 106, 116, 118], "987": [103, 106, 115, 116], "988": [103, 116, 118], "989": [103, 106, 115, 116], "990": [103, 116, 118], "991": 103, "992": [103, 112, 116, 391], "993": [103, 116], "994": [103, 118], "995": [103, 106, 115, 118], "996": [103, 106, 116, 118], "997": [103, 106, 116, 118], "998": 103, "999": [103, 115], "id_from_image_nam": 103, "rollback": 103, "rollback_dataset": 103, "chanin": 103, "definit": [103, 188, 209, 220, 221, 223, 374, 433], "redefinit": [103, 121], "remap_label_dataset": 103, "splitter": [103, 131, 444], "consider": 103, "val_dataset": 103, "val1": 103, "val2": 103, "val3": 103, "val4": [103, 106], "val5": 103, "crossval_dataset": 103, "8344": [103, 118], "7646": [103, 118], "8625": 103, "8752": [103, 118], "8499": [103, 118], "viewpoint": [103, 113], "splittask": [103, 131, 410], "crossval_per_ann_dataset": 103, "8368": [103, 118], "8374": [103, 118], "1032": [103, 118], "8376": 103, "1014": 103, "2999": [103, 118], "2951": 103, "25116": 103, "tiletransform": [104, 415], "enhanc": [104, 110, 117, 119], "workspac": [104, 106, 107, 111, 114, 115, 116, 122], "d6": [104, 106, 107, 111, 114, 116], "img_20191208_111228": [104, 106, 107, 111, 114, 116], "img_20191208_111246": [104, 106, 107, 111, 114, 116], "filepath": [104, 106, 107, 111, 114, 116, 118], "dice1": [104, 106, 107, 111, 114, 116], "dice6": [104, 106, 107, 111, 114, 116], "loos": [104, 106, 107, 111, 114, 116, 218, 221, 253, 445], "root_dir": [104, 106, 107, 111, 114, 116, 221], "dice2": [104, 106, 107, 111, 114, 116], "dice3": [104, 106, 107, 111, 114, 116], "dice4": [104, 106, 107, 111, 114, 116], "dice5": [104, 106, 107, 111, 114, 116], "fpath": [104, 106, 107, 111, 114, 116], "fp": [104, 106, 107, 111, 114, 116, 187, 209, 211, 212, 224, 227, 254, 282, 292, 374], "1795": [104, 106, 107, 111, 114, 118], "closer": [104, 108, 111], "target_id": 104, "vizual": 104, "2x2": 104, "slice": [104, 113, 118], "tiled_dataset": 104, "threshold_drop_ann": [104, 414, 416], "tiled_id": 104, "img_20191209_100155_tile_0": 104, "img_20191209_100155_tile_1": 104, "img_20191209_100155_tile_2": 104, "img_20191209_100155_tile_3": 104, "tight_layout": 104, "pad": [104, 113, 391, 392, 393, 394], "workflow": [104, 109, 115], "hash_key_infer": [105, 115, 136], "save_hashkey_meta": [105, 136, 209, 215, 220, 258, 266, 283, 297, 300, 302, 304, 305, 318, 319, 324, 327, 328, 329, 330, 341, 358, 363, 372], "topk_list": 105, "explore_topk": [105, 136, 192], "subset_list": 105, "id_list": 105, "splited_dataset": 106, "splite": 106, "osp": 106, "absolut": 106, "data_fpath": 106, "abspath": [106, 233], "model_fpath": 106, "epoch": [106, 115], "imgsz": 106, "torch": [106, 113, 115, 244, 449], "cu117": [106, 115], "cuda": [106, 115], "nvidia": [106, 116, 117, 396, 397, 398], "geforc": [106, 115], "rtx": [106, 115], "3090": [106, 115, 118], "24268mib": 106, "engin": [106, 113], "vinnamki": 106, "patienc": 106, "save_period": 106, "devic": [106, 113, 244, 378, 389, 395], "exist_ok": 106, "pretrain": 106, "optim": [106, 115, 244, 445], "sgd": 106, "verbos": [106, 247, 248], "determinist": [106, 115], "single_cl": 106, "image_weight": 106, "rect": 106, "cos_lr": 106, "close_mosa": 106, "resum": [106, 433], "overlap_mask": 106, "mask_ratio": 106, "dropout": 106, "save_json": 106, "save_hybrid": 106, "dnn": [106, 115], "plot": [106, 108, 111, 196, 238, 445], "save_txt": 106, "save_conf": 106, "save_crop": 106, "hide_label": 106, "hide_conf": 106, "vid_strid": 106, "line_thick": 106, "augment": [106, 118, 413], "agnostic_nm": 106, "retina_mask": 106, "torchscript": 106, "kera": 106, "int8": 106, "opset": 106, "lr0": 106, "lrf": 106, "momentum": 106, "weight_decai": 106, "0005": 106, "warmup_epoch": 106, "warmup_momentum": 106, "warmup_bias_lr": 106, "dfl": 106, "fl_gamma": 106, "label_smooth": 106, "nb": 106, "hsv_h": 106, "015": 106, "hsv_": 106, "hsv_v": 106, "degre": [106, 113, 198, 217, 282, 292], "translat": 106, "shear": [106, 113], "perspect": 106, "flipud": 106, "fliplr": 106, "mosaic": [106, 113], "mixup": 106, "copy_past": 106, "cfg": [106, 115], "v5loader": 106, "tracker": [106, 229], "botsort": 106, "train2": 106, "nc": 106, "nn": 106, "conv": [106, 115, 424], "4672": [106, 118], "7360": [106, 118], "c2f": 106, "18560": 106, "49664": 106, "73984": 106, "197632": 106, "295424": 106, "460288": 106, "164608": 106, "sppf": 106, "nearest": 106, "concat": 106, "148224": 106, "37248": 106, "36992": 106, "123648": 106, "147712": 106, "493056": 106, "752482": 106, "3012018": 106, "3012002": 106, "gflop": 106, "amp": 106, "decai": 106, "bia": [106, 115], "scan": 106, "tra": 106, "dataload": 106, "gpu_mem": 106, "box_loss": 106, "cls_loss": 106, "dfl_loss": 106, "14g": 106, "map50": 106, "068": [106, 115], "016": 106, "00656": 106, "0101": 106, "00435": 106, "049": [106, 115], "00288": 106, "00556": 106, "00287": 106, "051": 106, "0162": 106, "0893": 106, "043": 106, "052": [106, 115], "0529": 106, "063": [106, 115], "0211": [106, 115], "0995": 106, "05": [106, 115, 118, 138, 423], "0228": 106, "0225": 106, "084": 106, "06": [106, 115, 118, 138, 200, 201, 229], "0231": 106, "062": [106, 115], "072": [106, 115], "0233": 106, "0229": 106, "0243": 106, "004": [106, 115], "064": 106, "07": [106, 115, 118, 138], "26g": 106, "042": 106, "023": [106, 115], "026": 106, "056": [106, 115], "022": 106, "013": 106, "019": 106, "009": [106, 115], "044": 106, "032": [106, 115], "9998": [106, 115], "008": [106, 115], "037": 106, "9861": 106, "9938": [106, 118], "007": 106, "031": 106, "034": 106, "038": [106, 115], "9852": [106, 118], "029": [106, 115], "018": 106, "069": 106, "9923": [106, 115], "9833": [106, 118], "9741": [106, 118], "4g": 106, "014": [106, 115], "9943": 106, "086": 106, "9789": 106, "082": [106, 115], "9843": [106, 115, 118], "046": [106, 115], "098": 106, "027": [106, 115], "001": [106, 196, 431], "9675": [106, 118], "9798": 106, "9884": [106, 115], "011": [106, 115], "9878": [106, 115], "9831": [106, 115], "9531": [106, 118], "9996": [106, 115], "025": 106, "039": 106, "9157": 106, "9866": [106, 118], "9381": 106, "9686": [106, 118], "035": [106, 115], "9351": [106, 118], "9714": [106, 115, 118], "9196": [106, 118], "9839": [106, 115], "059": 106, "9575": [106, 118], "9794": 106, "9213": [106, 118], "9548": [106, 118], "9594": [106, 118], "9242": [106, 115], "8704": 106, "9674": 106, "003": [106, 115], "9545": [106, 115, 118], "061": [106, 115], "8796": 106, "9544": [106, 118], "9033": [106, 118], "9926": 106, "8343": [106, 118], "8555": 106, "9712": 106, "8231": [106, 118], "9747": [106, 118], "9811": [106, 115], "8461": 106, "9502": [106, 118], "9937": [106, 115, 118], "006": 106, "7829": [106, 118], "7947": [106, 118], "9838": [106, 115], "7514": [106, 118], "7637": [106, 118], "9728": [106, 118], "7337": [106, 118], "9786": 106, "7598": [106, 118], "9967": [106, 115, 118], "9658": 106, "7412": [106, 118], "9697": [106, 115], "7439": [106, 118], "9898": [106, 115], "hour": 106, "strip": [106, 113], "2mb": [106, 118], "fuse": 106, "3006818": 106, "8m": 106, "0m": 106, "postprocess": [106, 117, 188, 209, 220, 222, 384, 391, 392, 393, 396, 397, 400, 401, 402], "5m": 106, "3m": 106, "successfulli": [106, 114, 122, 218, 221, 253], "cpu": [106, 113, 115, 244], "bchw": 106, "8400": [106, 115], "mb": 106, "9052": 106, "9752fafe8eb": 106, "best_openvino_model": 106, "netron": 106, "app": 106, "never": [107, 200, 201, 218, 221, 229, 253], "listdir": 107, "ae86ci4bm2c88roifoo": 107, "8apzl8przu4sswfniikfsao": 107, "earlier": 107, "wrong_kei": 107, "crypter": [107, 187, 197, 209, 211, 212, 215, 217, 224, 227, 254, 282, 292, 374, 391, 392, 393, 427], "gen_kei": [107, 208], "wrong": [107, 382, 445], "h_ulpjgwgu": 107, "16k5t1orahsfrxoo23vy8_h1jupq0ob": 107, "handshak": [107, 208], "pil": [107, 427], "img_root": 107, "img_nam": 107, "img_path": [107, 297], "break": [107, 160, 162, 163, 171, 181], "resiz": [107, 118, 188, 209, 220, 222, 364, 384, 391, 392, 393, 394, 400, 401, 402, 418, 444], "img_20191208_112605": 107, "decrypt": [107, 208], "img_id": [107, 421], "splitext": 107, "tutori": [108, 111, 114, 116, 117, 131, 132, 133, 135, 445], "simultan": [108, 111, 114, 117, 119, 197, 209, 220, 232, 396, 397], "imagenett": 108, "tench": 108, "english": [108, 118], "springer": 108, "cassett": [108, 113], "player": [108, 113, 118], "chain": [108, 113], "saw": [108, 113], "church": [108, 113], "french": 108, "horn": [108, 113], "garbag": [108, 113, 118], "ga": [108, 113], "pump": [108, 113], "golf": [108, 113], "parachut": [108, 113], "fastai": 108, "fast": [108, 118], "imagecla": 108, "tgz": 108, "zxf": 108, "otx": [108, 111, 114, 115, 196, 445], "friendli": [108, 445], "n01440764": 108, "n02102040": 108, "english_spring": 108, "n02979186": 108, "cassette_play": 108, "n03000684": 108, "chain_saw": 108, "n03028079": 108, "n03394916": 108, "french_horn": 108, "n03417042": 108, "garbage_truck": 108, "n03425413": 108, "gas_pump": 108, "n03445777": 108, "golf_bal": 108, "n03888257": 108, "13394": 108, "9469": [108, 118], "3925": 108, "3003": [108, 111, 114, 115], "noise_r": 108, "002": [108, 115], "true_noisy_id": 108, "new_label_id": [108, 111], "choic": [108, 111], "algo_backend": [108, 111], "enable_noisy_label_detect": [108, 111], "custom_image_classification_efficinetnet": [108, 115], "b0": [108, 115], "noisy_label_detect": [108, 111, 443], "lossdynamicsanalyz": [108, 111, 196, 443, 445], "exponenti": [108, 111, 196], "ema": [108, 111, 196], "curv": [108, 111, 196], "strong": [108, 111], "criterion": [108, 111], "zhou": [108, 111, 196], "tianyi": [108, 111, 196], "shengji": [108, 111, 196], "wang": [108, 111, 196], "jeff": [108, 111, 196], "bilm": [108, 111, 196], "robust": [108, 111, 196, 387], "curriculum": [108, 111, 196], "confer": [108, 111, 121, 137, 196, 414, 416], "cand": [108, 111], "get_top_k_cand": [108, 111, 196], "plot_ema_loss_dynam": [108, 111, 196], "previous": [108, 111, 114, 415], "quantit": [108, 111], "recal": [108, 111], "detect_noisy_id": [108, 111], "1f": [108, 111], "inapplic": 109, "dl": 109, "moreov": [109, 118, 119], "rare": 109, "togeth": 109, "few_sample_thr": 109, "imbalance_ratio_thr": [109, 110, 119, 245, 419], "major": [109, 419], "minor": [109, 134, 419], "far_from_mean_thr": [109, 110, 119, 245, 419], "exce": 109, "pm": 109, "detectionvalid": [109, 110, 134, 419], "few_samples_thr": [109, 110, 119, 245, 419], "error_cnt": [109, 110], "warning_cnt": [109, 110], "36782": [109, 110], "36781": [109, 110], "underfinedattribut": 109, "cv2": [109, 427], "matplotlib": [109, 115, 119], "pyplot": [109, 115, 119, 238], "plt": [109, 115, 119], "visualize_label_id": 109, "astyp": 109, "cvtcolor": 109, "color_bgr2rgb": 109, "get_bbox": [109, 198, 200, 201, 217, 282, 292, 374, 398], "y1": [109, 118, 198, 200, 217, 282, 292, 398, 417, 423, 431], "y2": [109, 118, 198, 217, 282, 292, 398, 417, 431], "puttext": 109, "font_hershey_simplex": 109, "imshow": 109, "axi": [109, 238], "isdigit": 109, "neg_len_ann": 109, "2202383": 109, "got": [109, 119], "address": [109, 110, 116, 117, 119, 131, 380, 381, 382, 385, 396, 397, 398], "crucial": [109, 111, 119, 133], "label_stat": [109, 115], "v": [109, 115, 118, 229, 374], "hist": [109, 115], "xtick": [109, 115], "missing_annot": [109, 245], "900100474028": 109, "900100325031": 109, "900100332351": 109, "1330416": 109, "900300121242": 109, "bottle_bbox_dist": 109, "point_distribution_in_label": 109, "ax": [109, 113, 238], "subplot": 109, "constrain": 109, "prop": [109, 214], "flat": 109, "set_titl": 109, "fontsiz": 109, "rectifi": 110, "leverag": 110, "issu": [110, 119, 131, 137, 382, 445], "resolv": 110, "info_cnt": 110, "seriou": 110, "far_from_mean_id": 110, "far_from_mean_subset": 110, "ignored_typ": [110, 238], "accuracy_check": [110, 446], "wonju": 110, "userwarn": [110, 115, 118, 445], "msg": [110, 171, 208, 212, 214, 227, 229], "refined_dataset": 110, "reduct": [110, 115], "invalidevalu": 110, "overal": [110, 115, 126, 196], "yield": [110, 209, 221, 433], "refin": [110, 119, 188, 222, 384, 391, 392, 393, 400, 401, 402, 418], "cycl": [110, 238], "second_refined_dataset": 110, "subsequ": [111, 114, 433], "emploi": [111, 418], "reindex_annot": 111, "monitor": [111, 113], "distinct": 111, "ey": [111, 113, 118, 431], "n_noisy_ann": 111, "training_item": [111, 114], "shuffl": [111, 114], "syn_noisy_id": 111, "custom_object_detection_gen3_atss": [111, 114], "tracking_loss_typ": [111, 196], "lower": [111, 113, 118], "120k": 112, "reus": 112, "feed": [112, 113, 118, 418], "block": [112, 113, 160, 162, 163, 171, 181, 218, 221, 253, 387, 433], "deploy": [112, 115], "reformat": 112, "save_path": [112, 113, 119], "coco_dataset_with_voc_format": 112, "reformul": [112, 113], "voc_layout_dataset": 112, "1292": [112, 118], "3986": [112, 118], "1001": [112, 115], "1993": 112, "grain": [113, 128], "default_environ": [113, 119], "cityscapes_path": 113, "detect_dataset": [113, 119, 124, 129, 134, 136, 197, 209, 213, 220, 330], "cityscapes_dataset": 113, "45729": 113, "1525": [113, 118, 131], "2975": [113, 131], "37698": 113, "6506": 113, "road": [113, 118, 128], "sidewalk": 113, "wall": [113, 115], "fenc": 113, "pole": 113, "trafficlight": 113, "trafficsign": 113, "veget": [113, 118], "terrain": 113, "rider": 113, "click": [113, 341], "ade20k_path": 113, "ade20k_2021_17_01": 113, "27574": 113, "1752558": 113, "25574": 113, "1576969": 113, "175589": 113, "window": [113, 209, 447], "podium": 113, "altar": 113, "ceil": 113, "vault": 113, "floor": 113, "seat": 113, "capit": 113, "shaft": 113, "staircas": 113, "rail": 113, "pendant": 113, "lamp": [113, 115], "mezzanin": 113, "door": 113, "candl": 113, "sculptur": [113, 118], "pulpit": 113, "candelabra": 113, "aquarium": 113, "mouth": 113, "arm": 113, "leg": 113, "rock": [113, 118], "gate": 113, "consol": 113, "gaze": 113, "neck": [113, 118], "shark": 113, "shoal": 113, "jellyfish": 113, "cabinet": 113, "paper": [113, 118, 418], "jacket": 113, "street": 113, "penguin": 113, "alga": 113, "arcad": 113, "fluoresc": 113, "tube": 113, "semi": 113, "mount": 113, "van": 113, "trash": 113, "shop": [113, 119], "brand": 113, "air": [113, 118], "awn": 113, "bulletin": 113, "board": 113, "muntin": 113, "pane": 113, "handrail": 113, "purs": 113, "scarf": 113, "bookcas": 113, "binder": 113, "shelv": 113, "card": [113, 118], "pictur": [113, 118], "troffer": 113, "torso": 113, "shelf": 113, "hole": [113, 431], "puncher": 113, "stile": 113, "sash": 113, "interior": [113, 198, 217, 282, 292], "ladder": 113, "desk": 113, "screen": 113, "drawer": 113, "spotlight": 113, "swivel": 113, "armrest": 113, "showcas": 113, "rack": 113, "briefcas": 113, "rifl": 113, "haversack": 113, "chest": [113, 118], "bomb": 113, "gun": 113, "recess": 113, "vent": 113, "outlet": 113, "hing": 113, "knob": 113, "lock": [113, 433], "grill": 113, "switch": 113, "paint": [113, 118, 198, 217, 292, 398], "poster": 113, "armchair": 113, "wheel": 113, "pedest": 113, "counter": 113, "brochur": 113, "easel": 113, "fan": 113, "canopi": 113, "motor": 113, "blade": 113, "televis": 113, "skylight": 113, "wheelchair": [113, 115], "sconc": 113, "bulb": 113, "extinguish": 113, "pipe": 113, "flower": [113, 118], "radiat": 113, "holder": 113, "stone": 113, "chandeli": [113, 115], "carpet": 113, "beam": 113, "upper": [113, 118, 238], "sprinkler": 113, "ottoman": 113, "stool": 113, "blind": [113, 118], "microphon": 113, "pen": 113, "faucet": 113, "mirror": [113, 200, 201, 229], "papr": 113, "pitcher": 113, "ballon": 113, "grass": 113, "curtain": 113, "flowerpot": 113, "shell": [113, 118, 221, 374, 427], "canva": 113, "basket": 113, "mug": 113, "brush": 113, "coffe": 113, "stem": 113, "cap": 113, "towel": 113, "stretcher": 113, "paintbrush": 113, "jar": 113, "sketch": 113, "calendar": 113, "palett": 113, "goggl": 113, "toothpick": 113, "craft": 113, "glue": 113, "gliue": 113, "plug": 113, "plier": 113, "welder": 113, "diploma": 113, "basin": 113, "exhibitor": 113, "nose": 113, "piston": 113, "roll": 113, "bucket": 113, "scaffold": 113, "tin": 113, "potter": 113, "plate": [113, 118], "cooker": 113, "bass": [113, 115], "drum": 113, "lithograph": 113, "backplat": 113, "wardrob": 113, "pencil": 113, "white": 113, "canist": 113, "oil": 113, "sprai": 113, "trestl": 113, "loft": 113, "hat": [113, 118], "speaker": 113, "music": 113, "apron": 113, "cutter": 113, "cushion": 113, "loom": 113, "textil": 113, "trai": 113, "rug": 113, "hood": 113, "lid": 113, "shade": 113, "diffusor": 113, "shoe": [113, 118], "guitar": 113, "notic": [113, 445], "apertur": 113, "scotch": 113, "tape": 113, "trollei": 113, "cloth": [113, 118], "spindl": 113, "blanket": 113, "dvd": 113, "stall": 113, "chines": 113, "lantern": 113, "photo": 113, "blackboard": 113, "metal": [113, 118], "shutter": 113, "hose": 113, "stove": 113, "lectern": 113, "pillow": [113, 445], "workbench": 113, "canvas": 113, "lath": 113, "toi": 113, "planer": 113, "circular": 113, "projector": 113, "plank": 113, "shave": 113, "drill": 113, "diffus": 113, "magazin": 113, "post": [113, 114, 117, 119, 380, 381, 382, 385, 396, 397, 398], "telephon": 113, "botijo": 113, "ceram": 113, "figurin": 113, "thermostat": 113, "ribbon": 113, "clai": 113, "bell": 113, "ic": 113, "cream": 113, "plastic": [113, 118], "heater": 113, "hanger": 113, "dresser": 113, "fireplac": 113, "mattress": 113, "bar": [113, 119, 209, 232], "tread": 113, "riser": 113, "panel": 113, "maker": 113, "button": 113, "dial": 113, "stuf": 113, "slide": 113, "rod": 113, "carper": 113, "billiard": 113, "teni": 113, "dartboard": 113, "sideboard": 113, "puff": 113, "piano": 113, "fax": 113, "grand": 113, "pit": 113, "baptism": 113, "font": [113, 182, 220], "baptistri": 113, "balustrad": 113, "balconi": 113, "dome": 113, "gear": 113, "cylind": 113, "berth": 113, "pyramid": [113, 115, 244], "tomb": 113, "nich": 113, "headston": 113, "hut": 113, "embank": 113, "tapestri": 113, "ruin": 113, "dustpan": 113, "scraper": 113, "embrasur": 113, "altarpiec": 113, "organ": [113, 119], "rose": [113, 118], "catwalk": 113, "banner": 113, "lighter": 113, "tissu": 113, "closet": 113, "garland": 113, "globe": 113, "mobil": [113, 118], "locker": 113, "bidon": 113, "surfac": [113, 118], "offic": 113, "printer": 113, "school": 113, "sckool": 113, "scool": 113, "sscool": 113, "clothespin": 113, "rope": 113, "schoo": 113, "trophi": 113, "compter": 113, "watermelon": 113, "mechan": [113, 187, 188], "skirt": 113, "pillar": 113, "napkin": 113, "confession": 113, "booth": 113, "thermo": 113, "wit": 113, "secur": [113, 380, 381, 382, 385, 396, 397, 398], "babi": 113, "cradl": 113, "coffin": 113, "torchier": 113, "earmuff": 113, "broom": 113, "cannon": [113, 115], "barrel": [113, 115], "plaqu": 113, "stick": 113, "juri": 113, "fruit": [113, 118], "rocker": 113, "teapot": 113, "rudder": 113, "anchor": [113, 115, 244, 445], "heart": 113, "abacu": 113, "casserol": 113, "dropper": 113, "centrifug": 113, "teeth": 113, "sweater": 113, "flask": 113, "microscop": 113, "wallet": 113, "tile": [113, 121, 445], "ashtrai": 113, "notebokk": 113, "elev": 113, "chess": [113, 118], "christma": 113, "puzzl": 113, "autopsi": 113, "cold": 113, "decor": [113, 160, 162, 163, 164, 171, 187, 188, 200, 201, 209, 220, 221, 223, 229, 433, 437, 445], "mosqu": 113, "arch": [113, 115], "grandfath": 113, "entranc": 113, "skeleton": 113, "colour": 113, "tower": 113, "stair": 113, "modern": 113, "saxophon": [113, 115], "compact": 113, "disc": 113, "mousepad": 113, "synthes": 113, "tripod": 113, "headphon": [113, 115], "wire": 113, "loudspeak": 113, "power": [113, 121, 414, 416], "clarinet": 113, "cumput": 113, "keyboaard": 113, "miner": 113, "bone": [113, 118], "antler": 113, "skull": 113, "planetarium": 113, "idol": 113, "pantheon": 113, "dinosaur": 113, "shrine": 113, "crane": 113, "violin": 113, "materi": [113, 431], "microph": 113, "ramp": 113, "amphitheat": 113, "throne": 113, "ticket": 113, "mountain": 113, "shanti": 113, "pylon": 113, "ring": 113, "ballot": 113, "judg": 113, "secretari": 113, "night": [113, 118], "manchett": 113, "headboard": 113, "sill": 113, "bathtub": 113, "firewood": 113, "sheve": 113, "tub": 113, "packet": 113, "brick": [113, 118], "kettl": 113, "wood": 113, "footboard": 113, "mould": 113, "pullei": 113, "sugar": [113, 200, 201, 229], "radio": 113, "iron": 113, "dryer": 113, "safe": [113, 433], "flop": 113, "cardboard": 113, "duvet": 113, "portabl": 113, "fridg": 113, "sheet": 113, "boiler": 113, "wash": 113, "tumbl": 113, "shower": 113, "footbal": [113, 118], "pocket": 113, "tele": 113, "piprlinrd": 113, "vapor": 113, "countertop": 113, "watercraft": 113, "cistern": 113, "soap": 113, "dispens": 113, "dish": 113, "spong": 113, "bathrob": 113, "slipper": 113, "flusher": 113, "rop": 113, "bidet": 113, "socket": 113, "bath": 113, "trunk": [113, 118], "vaniti": 113, "wrench": [113, 115], "overflot": 113, "drain": 113, "lever": 113, "bow": 113, "toothpast": 113, "hairbrush": 113, "razor": 113, "star": 113, "bouquet": 113, "deodor": 113, "slate": 113, "exercis": [113, 118], "nail": 113, "foam": 113, "trap": [113, 115], "newspap": 113, "shampoo": 113, "mold": 113, "coaster": 113, "valv": 113, "saucepan": 113, "powder": 113, "kit": 113, "partit": 113, "comb": 113, "bathroom": 113, "floot": 113, "matchbox": 113, "widow": 113, "room": 113, "clamp": [113, 360], "flyscreen": 113, "teacup": 113, "cord": 113, "gutter": 113, "leaf": [113, 118], "hung": 113, "helmet": [113, 118], "slat": 113, "strawberri": [113, 115], "binocular": [113, 115], "doll": 113, "canlendar": 113, "flashlight": 113, "alarm": 113, "bedspread": 113, "stereo": 113, "necklac": 113, "bracelet": 113, "casket": 113, "jamb": 113, "throw": [113, 220, 225, 227], "oar": 113, "chimnei": 113, "shovel": 113, "poker": 113, "cool": 113, "comfort": 113, "wireless": 113, "hook": [113, 115, 200, 201, 229], "tallboi": 113, "closur": 113, "quilt": 113, "deck": 113, "palm": 113, "bedpost": 113, "potteri": 113, "wicker": 113, "cane": 113, "spread": 113, "welcom": 113, "land": 113, "truckl": 113, "moon": 113, "net": [113, 413], "spring": 113, "fring": 113, "chais": 113, "loung": 113, "smoke": [113, 118], "detector": [113, 218, 221, 253, 445], "electron": 113, "menu": 113, "showerhead": 113, "caca": 113, "herb": 113, "placard": 113, "distaff": 113, "tablecloth": 113, "lampshad": 113, "pinecon": 113, "applianc": 113, "ornament": 113, "notepad": 113, "sleep": 113, "robe": 113, "skate": 113, "baseboard": 113, "charger": 113, "watch": [113, 115], "wooden": 113, "overhang": 113, "fur": 113, "sticker": 113, "asdf": 113, "webcam": 113, "envelop": 113, "sock": 113, "joist": 113, "ttabl": 113, "windwo": 113, "transluc": 113, "harpoon": 113, "puf": 113, "travers": [113, 209, 232], "tureen": 113, "potti": 113, "sand": 113, "dlooe": 113, "sutter": 113, "nordic": 113, "chai": 113, "cage": 113, "runner": [113, 115, 233, 412, 425], "bunk": 113, "hammock": 113, "dishwash": 113, "processor": 113, "botll": 113, "dishcloth": 113, "maraca": 113, "tricycl": 113, "hammer": 113, "steer": 113, "carousel": 113, "safeti": 113, "club": 113, "cube": 113, "mural": 113, "laundri": 113, "cockpot": 113, "belt": 113, "ti": 113, "blous": 113, "sweatshirt": 113, "heel": 113, "sokc": 113, "snow": 113, "pepper": 113, "pet": [113, 118], "tassl": 113, "decant": 113, "valanc": 113, "centerpiec": 113, "cello": 113, "birdcag": 113, "salt": 113, "doili": 113, "saucer": 113, "island": 113, "barbecu": 113, "bread": 113, "cutleri": 113, "mortar": 113, "mitten": 113, "chopstick": 113, "mantl": 113, "butter": 113, "gravi": 113, "andiron": 113, "flame": 113, "gourd": 113, "jug": 113, "cruet": 113, "cove": 113, "goblet": 113, "urn": 113, "platter": 113, "pine": 113, "fabric": 113, "saltcellar": 113, "bascket": 113, "cereal": 113, "vass": 113, "shaker": 113, "pitur": 113, "hob": 113, "colum": [113, 224], "grape": 113, "plat": 113, "knige": 113, "flowr": 113, "postcard": 113, "sauceboat": 113, "coral": 113, "pear": 113, "album": 113, "peak": [113, 445], "bedspr": 113, "contact": 113, "padlock": 113, "buttock": 113, "blender": 113, "seal": 113, "otlet": 113, "swatshirt": 113, "jack": 113, "hang": 113, "choth": 113, "vend": 113, "cue": 113, "pinbal": 113, "slot": [113, 196, 200, 201, 229, 433], "paddl": 113, "amphora": 113, "ping": 113, "pong": 113, "scoreboard": 113, "game": [113, 118], "footrest": 113, "chalk": 113, "juke": 113, "puppet": 113, "chip": 113, "wheelbarrow": 113, "garag": 113, "rim": 113, "toolbox": 113, "windshield": 113, "headlight": 113, "taper": 113, "tractor": 113, "pigeonhol": 113, "treadmil": 113, "vacuum": 113, "cleaner": 113, "hedg": 113, "pile": 113, "porexpan": 113, "rake": 113, "taillight": 113, "bumper": 113, "mower": 113, "screwdriv": 113, "secateur": 113, "logo": [113, 118], "cabl": 113, "chainsaw": 113, "vest": 113, "tulipa": 113, "scanner": 113, "screem": 113, "stack": [113, 209, 220, 222, 378, 437, 445, 447], "filer": 113, "miniatur": 113, "typewrit": 113, "vessel": [113, 118], "compa": 113, "extern": 113, "driver": 113, "telescop": 113, "stapler": [113, 115], "joystick": 113, "guillotin": 113, "photocopi": 113, "butterfli": [113, 115, 118], "blinder": 113, "sound": 113, "equip": [113, 118, 198], "duster": 113, "creamer": 113, "hotel": 113, "carriag": 113, "shoulder": 113, "dri": 113, "telepho": 113, "burner": 113, "fry": 113, "pan": 113, "gripper": 113, "skimmer": 113, "hotplat": 113, "cut": [113, 387], "squeezer": 113, "spout": 113, "crock": 113, "spice": 113, "grater": 113, "grinder": 113, "lift": 113, "ladl": 113, "wreath": 113, "whisk": 113, "nut": 113, "spatula": 113, "egg": 113, "magnet": 113, "latch": 113, "cooler": 113, "mop": 113, "breadbasket": 113, "stopper": 113, "wok": 113, "dispos": 113, "cellar": 113, "strainer": 113, "tomato": [113, 118], "pumpkin": 113, "straw": 113, "garlic": 113, "mixer": 113, "push": [113, 428], "deterg": 113, "lemon": 113, "avocado": 113, "funnel": 113, "mill": 113, "pressur": 113, "pastri": 113, "drainer": 113, "heat": 113, "cracker": 113, "vinegar": 113, "drape": 113, "mitt": 113, "swiss": 113, "chard": 113, "bellow": 113, "intercom": 113, "fryer": 113, "letter": [113, 118], "mail": 113, "dipper": 113, "ipod": 113, "peach": 113, "rabbit": 113, "bib": 113, "corkscrew": 113, "onion": 113, "washer": 113, "sunflow": [113, 115, 118], "pitchfork": 113, "wheat": [113, 118], "twizzler": 113, "fern": 113, "champagn": 113, "chees": 113, "turtl": 113, "pineappl": 113, "pestl": 113, "sauc": 113, "npkin": 113, "cabinet\u00e7": 113, "outet": 113, "griddl": 113, "lobster": [113, 115], "cock": 113, "pin": 113, "plaat": 113, "berbiqui": 113, "oytlet": 113, "winddow": 113, "cabomet": 113, "caabinet": 113, "worctop": 113, "cabubet": 113, "cceil": 113, "plae": 113, "cass": 113, "bottlr": 113, "feeder": 113, "hotlp": 113, "doo": 113, "stoo": 113, "abinet": 113, "lettuc": 113, "freshen": 113, "cabin": 113, "mushroom": [113, 118], "copper": 113, "po": 113, "bun": 113, "scoop": 113, "scourer": 113, "screw": 113, "cigarett": [113, 118], "grate": 113, "hourglass": 113, "tilt": 113, "wand": 113, "spiral": [113, 118], "stringer": 113, "bookend": 113, "pediment": 113, "tea": 113, "vcr": 113, "zipper": 113, "silver": 113, "cart": 113, "pedal": 113, "woodcarv": 113, "instrument": 113, "coconut": 113, "piec": [113, 118], "seltzer": 113, "bull": 113, "shrub": 113, "gramophon": [113, 115], "cano": 113, "sew": 113, "troller": 113, "notecard": 113, "swing": 113, "painit": 113, "stain": 113, "starfish": [113, 115], "stock": 113, "turntabl": 113, "mailbox": 113, "dumbbel": 113, "flute": 113, "sw": 113, "sade": 113, "backplaet": 113, "picnic": 113, "spot": 113, "pant": 113, "caffe": 113, "dve": 113, "soundbar": 113, "cobbl": 113, "leather": 113, "microw": 113, "siphon": 113, "ourlet": 113, "walker": 113, "bassinet": 113, "balloon": 113, "crib": 113, "visor": 113, "pantri": 113, "roller": 113, "coland": 113, "potato": 113, "cork": 113, "tupper": 113, "scratcher": 113, "dollhous": 113, "tent": 113, "carp": 113, "dppr": 113, "hockei": 113, "ellipt": 113, "triangl": 113, "waall": 113, "router": 113, "che": 113, "trowel": 113, "reloj": 113, "platr": 113, "televisio": 113, "hill": 113, "gravel": 113, "factori": [113, 196, 200, 201, 221, 229, 230, 234, 419], "freight": 113, "advertis": 113, "steam": 113, "roadrol": 113, "toe": 113, "brace": 113, "roof": 113, "digger": 113, "steamrol": 113, "bulldoz": 113, "footpath": 113, "bush": 113, "tarpaulin": 113, "sledgehamm": 113, "showel": 113, "excav": 113, "ciment": 113, "dock": 113, "shipyard": 113, "dirt": 113, "trench": 113, "earth": 113, "winch": 113, "pallet": 113, "hoe": 113, "cone": 113, "dust": 113, "demolit": 113, "debri": 113, "conveyor": 113, "barrier": 113, "curb": 113, "reserv": [113, 433], "manufactur": 113, "fume": 113, "footbridg": 113, "blast": 113, "furnac": 113, "rubbish": 113, "gaswork": 113, "pilon": 113, "paath": 113, "trailer": 113, "pond": 113, "lgiht": 113, "manhol": 113, "mesh": [113, 244], "scrap": 113, "scrape": 113, "tire": 113, "landfil": 113, "lumber": 113, "warehous": 113, "steel": 113, "rung": 113, "cave": 113, "eras": 113, "pavilion": 113, "nuclear": 113, "reactor": 113, "tarmac": 113, "refineri": 113, "substat": 113, "quonset": 113, "station": 113, "railwai": 113, "wreck": 113, "rubbl": 113, "breakwat": 113, "dam": 113, "spillwai": 113, "wagon": 113, "windmil": 113, "caar": 113, "lagoon": 113, "cliff": 113, "badland": 113, "mound": 113, "lot": 113, "canyon": 113, "barren": 113, "woman": 113, "bamboo": 113, "sun": 113, "seagul": 113, "wave": 113, "rainbow": 113, "cloudi": 113, "surf": 113, "sit": 113, "pier": 113, "tortois": 113, "planat": 113, "bog": 113, "bonsai": [113, 115], "blueberri": 113, "grassland": 113, "plateau": 113, "spire": 113, "gull": 113, "duck": 113, "bollard": 113, "platn": 113, "waterfal": 113, "rocki": 113, "stalactit": 113, "stalagmit": 113, "cavern": 113, "vallei": 113, "ledg": 113, "sailboat": 113, "lighthous": 113, "tunnel": 113, "villag": [113, 118], "quai": 113, "lake": 113, "dune": 113, "silo": 113, "flock": 113, "chicken": 113, "barn": 113, "foal": 113, "raft": 113, "pebbl": [113, 118], "soil": 113, "moss": 113, "foliag": 113, "jground": 113, "crevass": 113, "weed": 113, "semidesert": 113, "desert": 113, "lump": 113, "cactu": 113, "beard": 113, "escarp": 113, "vineyard": 113, "vine": 113, "bale": 113, "harvest": 113, "pplant": 113, "puddl": 113, "slope": 113, "greenhous": 113, "bee": [113, 118], "pert": 113, "farm": 113, "lili": 113, "oilcloth": 113, "spade": 113, "mileston": 113, "nukestib": 113, "seaplan": 113, "undergrowth": 113, "scrubland": 113, "stump": 113, "topiari": 113, "tinb": 113, "bakk": 113, "riad": 113, "iceberg": 113, "snowi": 113, "grot": 113, "grotto": 113, "hai": 113, "seedb": 113, "wind": 113, "chime": 113, "hillsid": 113, "killer": 113, "whale": 113, "floe": 113, "walru": 113, "drift": 113, "sean": 113, "glacier": 113, "sleigh": 113, "expedit": 113, "rubber": 113, "islet": 113, "dive": 113, "swmming": 113, "bandstand": 113, "pagoda": [113, 115], "shelter": 113, "fog": 113, "riversid": 113, "whitewat": 113, "lava": 113, "marsh": 113, "tableland": 113, "bank": 113, "refug": 113, "boulder": 113, "cafe": 113, "sled": 113, "pimtaom": 113, "sail": 113, "buoi": 113, "splash": 113, "dolphin": [113, 115], "goos": 113, "monolith": 113, "pig": 113, "sty": 113, "moos": 113, "goat": 113, "shack": 113, "camel": 113, "livestock": 113, "pork": 113, "donkei": 113, "reaper": 113, "observatori": 113, "\u00f1bench": 113, "nest": [113, 198, 200, 201, 217, 218, 221, 229, 253, 282, 292, 445], "sack": 113, "quicksand": 113, "urban": 113, "skywalk": 113, "suspens": 113, "telegraph": 113, "sandbar": 113, "savanna": 113, "scrub": 113, "sinkhol": 113, "airpl": 113, "sly": 113, "rok": 113, "swan": 113, "pave": [113, 132], "steet": 113, "ree": 113, "hen": 113, "tundra": 113, "wreckag": 113, "creek": 113, "diver": 113, "seawe": 113, "rai": [113, 118], "clabe": 113, "crater": 113, "mist": 113, "gatewai": 113, "ravin": 113, "sstone": 113, "rioe": 113, "planta": 113, "frozen": [113, 196, 200, 201, 229], "tail": 113, "spike": 113, "boiller": 113, "furrow": 113, "fit": [113, 118, 188, 222, 384, 391, 392, 393, 394, 400, 401, 402, 414, 416], "fender": 113, "trumpet": 113, "roast": 113, "candi": 113, "cooki": 113, "price": 113, "cash": 113, "meat": 113, "pie": 113, "loav": 113, "tart": 113, "snuff": 113, "biscuit": 113, "sausag": 113, "oliv": 113, "napk": 113, "ingot": 113, "strongroom": 113, "strongbox": 113, "beer": 113, "billboard": 113, "armor": 113, "cocktail": 113, "till": 113, "hairdress": 113, "souk": 113, "foodstuff": 113, "blusher": 113, "auxiliari": 113, "washbasin": 113, "cubicl": 113, "fountain": 113, "cape": 113, "exhi": 113, "\u00e0\u00e8r": 113, "bood": 113, "freezer": 113, "girder": 113, "tongu": 113, "butcheri": 113, "chocol": 113, "polythen": 113, "monei": 113, "trelli": 113, "rotisseri": 113, "termin": [113, 218, 433], "dice": 113, "shawl": 113, "pyjama": 113, "juic": 113, "tong": 113, "sweet": 113, "veil": 113, "weigh": 113, "escal": 113, "thread": [113, 116, 117, 197, 209, 220, 236, 396, 397, 398, 433, 445], "cook": 113, "privat": [113, 115], "merchandis": 113, "flavor": 113, "shellfish": 113, "mussel": 113, "clam": 113, "wig": 113, "hairpiec": 113, "goldfish": 113, "cocoon": 113, "propel": 113, "cowbel": 113, "magnifi": 113, "forklift": 113, "wafer": 113, "cauldron": 113, "oni": 113, "accordion": [113, 115], "pendulum": 113, "kiosk": 113, "jewelri": 113, "sop": 113, "contrabass": 113, "banjo": 113, "harp": 113, "showc": 113, "medicin": 113, "backdrop": 113, "bagpip": 113, "whistl": 113, "flyer": 113, "badg": 113, "clove": 113, "earthenwar": 113, "shoelac": [113, 198, 217, 282, 292, 398], "cabbag": 113, "revolv": [113, 115], "margarin": 113, "milk": 113, "cigar": 113, "costum": 113, "crockeri": 113, "squar": 113, "camcord": 113, "hoop": 113, "stave": 113, "wedg": 113, "merri": 113, "round": 113, "ride": [113, 118], "fairground": 113, "big": [113, 200, 201, 229, 419], "funfair": 113, "ferri": [113, 115], "boardwalk": 113, "planter": 113, "walkwai": 113, "rocket": 113, "castl": 113, "tarp": 113, "squash": 113, "tinsel": 113, "grandstand": 113, "rink": 113, "goal": [113, 119], "tablet": 113, "indoor": 113, "obstacl": 113, "arena": 113, "plai": 113, "pitch": 113, "hurdl": 113, "medal": 113, "caravan": 113, "inflat": 113, "bottom": [113, 198, 217, 282, 292], "bleacher": 113, "skittl": 113, "allei": 113, "punch": 113, "bullr": 113, "cloak": 113, "terrac": 113, "bullfight": 113, "bonfir": 113, "truk": 113, "shield": 113, "hobbi": 113, "circu": 113, "plinth": 113, "crap": 113, "roulett": 113, "skyscrap": 113, "earphon": 113, "shoot": 113, "floodlight": 113, "gazebo": 113, "baloon": 113, "pergola": 113, "cymbal": 113, "slab": 113, "marker": 113, "golfer": 113, "banker": 113, "golg": 113, "stationari": 113, "asymmetr": 113, "barbel": 113, "gym": 113, "pelota": 113, "maze": 113, "lawn": 113, "eyebrow": 113, "forecourt": 113, "petal": 113, "drink": 113, "labyrinth": 113, "reel": 113, "buildig": 113, "wsall": 113, "graund": 113, "trampolin": 113, "poncho": 113, "sword": 113, "tiger": 113, "artifici": [113, 137], "monkei": [113, 118], "hippopotamu": 113, "playground": 113, "bounc": 113, "squirrel": 113, "satellit": [113, 118], "cement": 113, "patio": 113, "fag": 113, "monument": 113, "leash": 113, "cub": 113, "seesaw": 113, "sandbox": 113, "cutout": 113, "climb": 113, "childish": 113, "porch": 113, "muffin": [113, 118], "coastlin": 113, "dormer": 113, "litter": 113, "creeper": 113, "whip": 113, "racetrack": 113, "race": [113, 433], "speedwai": 113, "circuit": 113, "equestrian": 113, "sandpit": 113, "thermomet": 113, "sauna": 113, "schoolyard": 113, "trail": 113, "doort": 113, "massag": 113, "stagelight": 113, "stadium": 113, "mast": 113, "handr": 113, "tyre": 113, "trtee": 113, "racquet": 113, "barb": 113, "velodrom": 113, "crank": 113, "volleybal": 113, "chute": 113, "pala": 113, "airlock": 113, "luggag": 113, "buttress": 113, "baggag": 113, "buse": 113, "wiper": 113, "dash": 113, "clipper": 113, "dashboard": [113, 115], "brake": [113, 118], "clutch": 113, "gearshift": 113, "compart": 113, "odomet": 113, "carport": 113, "flight": 113, "radar": 113, "camouflag": 113, "cockpit": 113, "switchboard": 113, "hardwar": 113, "har": [113, 118], "swimsuit": 113, "cordon": 113, "hoist": 113, "dishrack": 113, "fuselag": 113, "wing": 113, "stabil": [113, 117, 396, 397, 400], "turbin": 113, "hatch": 113, "clipboard": 113, "headrest": 113, "wheelhous": 113, "checkpoint": [113, 115], "railroad": 113, "subwai": [113, 118], "platf": 113, "cinch": 113, "jam": 113, "bough": 113, "ventil": 113, "recycl": [113, 433], "icicl": 113, "torrent": 113, "hoof": 113, "reed": 113, "stripe": 113, "eav": 113, "paperweight": 113, "drivewai": 113, "guard": 113, "ware": 113, "handlebar": 113, "hip": 113, "site": [113, 115, 118, 233, 368], "silverwar": 113, "gangwai": 113, "citi": [113, 128], "parterr": 113, "pilot": 113, "megaphon": 113, "sunglass": 113, "hull": 113, "busi": 113, "saddl": 113, "doorbel": 113, "placecard": 113, "copier": 113, "funicular": 113, "port": [113, 116, 117, 380, 381, 382, 385, 396, 397, 398], "spinach": 113, "finger": 113, "crumb": 113, "steepl": 113, "sensor": 113, "kayak": 113, "escap": [113, 422], "shore": 113, "canal": 113, "sping": 113, "breaker": 113, "mausoleum": 113, "columbarium": 113, "scarecrow": 113, "wipe": [113, 233], "obelisk": 113, "antenna": 113, "spurt": 113, "bud": 113, "ridg": 113, "doorwai": 113, "storm": 113, "sewer": 113, "floatat": 113, "catch": [113, 445], "soften": 113, "petrol": 113, "rig": 113, "shed": [113, 115], "tombston": 113, "swamp": 113, "machineri": 113, "ditch": 113, "watchtow": 113, "crate": 113, "aqueduct": 113, "bookstal": 113, "veranda": 113, "aircraft": 113, "carrier": 113, "runnel": 113, "toll": 113, "pea": 113, "sulfur": 113, "mine": 113, "chorizo": 113, "jetti": 113, "garden": 113, "barrack": 113, "mallet": 113, "orchestra": 113, "weighbridg": 113, "cargo": 113, "lile": 113, "stake": 113, "lodg": 113, "viaduct": 113, "sepulch": 113, "incens": 113, "estuari": 113, "bakeri": 113, "walnut": 113, "coast": 113, "cheetah": 113, "climber": 113, "oilfield": 113, "freez": 113, "rhinocero": 113, "inciner": 113, "acropoli": 113, "ember": 113, "barricad": 113, "buffet": 113, "trough": 113, "hollow": 113, "howdah": 113, "winglet": 113, "oxygen": 113, "laboratori": 113, "pipett": 113, "spaceship": 113, "millrac": 113, "quagmir": 113, "lab": 113, "popcorn": 113, "snack": 113, "sanck": 113, "pelt": 113, "dye": 113, "grapevin": 113, "bunch": [113, 221, 253, 273, 285, 345, 377], "vineri": 113, "urin": 113, "waterscap": 113, "waterwai": 113, "wetland": 113, "tornado": 113, "fluorescet": 113, "pum": 113, "gradstand": 113, "fend": 113, "pon": 113, "gabl": 113, "_\u00f1amt": 113, "p_lant": 113, "pollard": 113, "siev": 113, "backp": 113, "loader": [113, 427], "lader": 113, "atm": 113, "por": 113, "umbrela": 113, "sailbo": 113, "houseboat": 113, "house": 113, "firework": 113, "supermarket": 113, "gondola": 113, "sodewa\u00f1l": 113, "fuel": 113, "camp": 113, "raukubg": 113, "wa\u00f1\u00f1": 113, "umbr": 113, "solar": [113, 118], "graveston": 113, "finial": 113, "rainshield": 113, "henhous": 113, "chick": 113, "vane": 113, "battlement": 113, "lattic": 113, "sawhors": 113, "flagston": 113, "grpimd": 113, "orchard": 113, "amplifi": 113, "life": [113, 118, 445], "streetlight": 113, "fort": 113, "palisad": 113, "guardhous": 113, "missil": 113, "hangar": 113, "motorboat": 113, "catamaran": 113, "boar": 113, "moor": 113, "gar": 113, "skid": 113, "heliport": 113, "drom": 113, "helic": 113, "tanker": 113, "mitra": 113, "persoon": 113, "igloo": 113, "snowsho": 113, "roadd": 113, "ranch": 113, "stonea": 113, "kasbah": 113, "kennel": 113, "hutch": 113, "violoncello": 113, "buiuld": 113, "concret": [113, 118], "twig": 113, "lightn": 113, "skjy": 113, "exhaust": 113, "bild": 113, "lockgat": 113, "paht": 113, "grait": 113, "weel": 113, "hjous": 113, "santa": 113, "clau": 113, "crutch": 113, "gatehous": 113, "minaret": [113, 115], "minar": 113, "sedewalk": 113, "person1": 113, "warship": 113, "submarin": 113, "observ": [113, 115, 119], "plan": [113, 126], "outhous": 113, "wc": 113, "oyster": 113, "bulstrad": 113, "paslm": 113, "walk": [113, 368, 434], "piller": 113, "scooter": 113, "groundd": 113, "yard": 113, "sugb": 113, "siver": 113, "restroom": 113, "arc": 113, "energi": 113, "greehous": 113, "ubrella": 113, "bmw": 113, "yellow": 113, "premad": 113, "hall": 113, "weathervan": 113, "scyscrap": 113, "shantytown": 113, "slum": 113, "dolmen": 113, "eat": 113, "movi": 113, "curbston": 113, "bracket": 113, "knocker": 113, "cornic": 113, "stilt": 113, "construct": [113, 187, 196, 197, 209, 210, 211, 212, 218, 220, 227, 229, 230, 233, 236, 274, 282, 286, 287, 288, 374, 397, 398, 433], "piper": 113, "rain": 113, "hoard": 113, "mannequin": 113, "turnbuckl": 113, "sweep": 113, "creme": 113, "pub": 113, "trolli": 113, "underground": 113, "butan": 113, "postbox": 113, "buzzer": 113, "sphere": 113, "bycicl": 113, "bitch": 113, "neckti": 113, "rescu": 113, "matter": 113, "knive": 113, "ssign": 113, "tramwai": 113, "buggi": 113, "japanes": 113, "templ": 113, "plaza": 113, "locomot": 113, "underpass": 113, "aviari": 113, "caterpillar": 113, "ziggurat": 113, "product": [113, 115, 118], "spanner": 113, "breweri": 113, "vintag": 113, "microbreweri": 113, "coop": 113, "mace": 113, "award": 113, "vhsit": 113, "chairr": 113, "spoo": 113, "raidat": 113, "shoji": 113, "sosurc": 113, "boaard": 113, "reclin": 113, "dental": 113, "articul": 113, "tooth": 113, "profession": 113, "alemb": 113, "makeup": 113, "counterweight": 113, "gaug": 113, "forg": 113, "anvil": 113, "manomet": 113, "hosepip": 113, "hatcheri": 113, "hearth": 113, "medic": [113, 118], "clotheslin": 113, "rec": 113, "fireplaac": 113, "plam": 113, "ceukubg": 113, "sisd": 113, "profil": 113, "incub": 113, "iv": 113, "paperpil": 113, "spectacl": 113, "sharpen": 113, "postal": 113, "sticki": 113, "garment": 113, "comic": 113, "workstat": 113, "certif": [113, 381, 382, 397, 398], "pingeonhol": 113, "devis": 113, "tensiomet": 113, "phonend": 113, "cyclotron": 113, "pigsti": 113, "bolt": 113, "yoke": 113, "handrair": 113, "fernc": 113, "compuet": 113, "radiographi": [113, 118], "stethoscop": 113, "syring": 113, "cotton": 113, "press": 113, "weapon": 113, "musician": 113, "dobl": 113, "tuner": 113, "boomerang": 113, "bonnet": 113, "suspend": 113, "minc": 113, "slicer": 113, "solt": 113, "pector": 113, "lanc": 113, "nunchaku": 113, "lamin": 113, "linen": 113, "autoclav": 113, "outboard": 113, "walki": 113, "talki": 113, "pigeon": [113, 115], "verandah": 113, "salin": 113, "portfolio": 113, "ade20k_val_dataset": 113, "ade20k_with_cityscapes_format": 113, "cultur": 113, "home_or_hotel": 113, "nature_landscap": 113, "shopping_and_din": 113, "sports_and_leisur": 113, "transport": 113, "unclassifi": 113, "work_plac": 113, "benefit": [114, 115, 188, 221, 374, 433], "n_missing_ann": 114, "missing_anns_item_id": 114, "pth": [114, 115], "openvinolaunch": [114, 378, 389, 395], "otx_custom_object_detection_gen3_atss": 114, "pairwise_dist": [114, 200, 201, 220, 225, 229, 386], "greater": [114, 135, 209, 217, 220], "score_threshold": [114, 386], "usual": [114, 115, 188, 198, 209, 220, 221, 222, 253, 273, 285, 345, 377, 384, 391, 392, 393, 400, 401, 402], "missing_annotation_detect": 114, "succe": [114, 218], "achiev": [114, 115, 119, 128, 132, 133, 200, 201, 229], "strategi": [114, 387, 418], "src_dataset": 114, "yet": 115, "converg": [115, 124], "valuabl": 115, "insight": [115, 119, 135], "relationship": 115, "understand": [115, 119, 132], "scalabl": 115, "assess": [115, 132], "impact": [115, 124], "guidanc": 115, "resourc": [115, 209, 232], "alloc": 115, "caltech101": 115, "image_0001": 115, "image_0002": 115, "yin_yang": 115, "dataumaro": 115, "166610": 115, "cpu_feature_guard": 115, "cc": 115, "avx2": 115, "fma": 115, "rebuild": 115, "compil": [115, 198, 247, 248, 319, 324], "725001": 115, "tf2tensorrt": 115, "py_util": 115, "trt": 115, "tensorrt": 115, "9144": 115, "background_googl": 115, "faces_easi": 115, "leopard": 115, "ant": 115, "beaver": 115, "brain": [115, 118], "brontosauru": 115, "buddha": 115, "car_sid": 115, "ceiling_fan": 115, "cellphon": 115, "cougar_bodi": 115, "cougar_fac": 115, "crab": 115, "crayfish": 115, "crocodil": 115, "crocodile_head": 115, "dalmatian": 115, "dollar_bil": 115, "dragonfli": 115, "electric_guitar": 115, "emu": 115, "euphonium": 115, "ewer": 115, "flamingo": 115, "flamingo_head": 115, "garfield": 115, "gerenuk": 115, "grand_piano": 115, "hawksbil": 115, "hedgehog": 115, "ibi": 115, "inline_sk": 115, "joshua_tre": 115, "kangaroo": 115, "ketch": 115, "llama": 115, "lotu": 115, "mandolin": 115, "mayfli": 115, "menorah": 115, "metronom": 115, "nautilu": 115, "octopu": 115, "okapi": 115, "platypu": 115, "rhino": 115, "rooster": 115, "schooner": 115, "scorpion": 115, "sea_hors": 115, "snoopi": 115, "soccer_bal": 115, "stegosauru": 115, "stop_sign": 115, "tick": 115, "trilobit": 115, "water_lilli": 115, "wild_cat": 115, "windsor_chair": 115, "confirm": [115, 119], "classificationvalid": [115, 134, 419, 445], "examin": [115, 118, 124, 196], "cluster_method": [115, 124, 194], "random_result": 115, "get_prun": [115, 124, 194], "random_report": 115, "random_stat": 115, "cluster_random": 115, "cluster_random_result": 115, "cluster_random_report": 115, "cluster_random_stat": 115, "query_clust": 115, "query_clust_result": 115, "clust": 115, "tendenc": [115, 119], "increas": [115, 116, 117, 118, 135, 137, 414, 416], "query_clust_report": 115, "query_clust_stat": 115, "centroid": [115, 194], "centroid_result": 115, "decreas": 115, "illustr": 115, "trend": [115, 133], "contribut": [115, 445, 446], "centroid_report": 115, "centroid_stat": 115, "entropy_result": 115, "entropy_report": 115, "entropy_stat": 115, "ndr_result": 115, "ndr_report": 115, "ndr_stat": 115, "efficientnet": 115, "templat": [115, 214, 221], "dwekr": 115, "miniconda3": 115, "lib": [115, 118, 233], "python3": [115, 118, 233], "mmcv": 115, "januari": 115, "lite": 115, "mmlab": 115, "master": [115, 118], "en": 115, "model_multilabel": 115, "data_pipelin": 115, "hpo_config": 115, "model_hierarch": 115, "compression_config": 115, "679934": 115, "257037": 115, "pyopenvino": 115, "futurewarn": 115, "namespac": [115, 160, 163, 180, 181, 341], "091": 115, "multiclass": [115, 118, 343, 445], "osmr": 115, "imgclsmob": 115, "v0": 115, "efficientnet_b0": 115, "0752": 115, "0e386130": 115, "in_channel": 115, "1280": [115, 118], "configure_data": 115, "gpu_id": 115, "sy": [115, 198, 282, 292], "linux": [115, 447], "gcc": 115, "gpu": [115, 117, 396, 397, 446], "cuda_hom": 115, "usr": 115, "nvcc": 115, "v11": 115, "ubuntu": 115, "3ubuntu1": 115, "201402": 115, "math": [115, 200, 201, 229], "kernel": [115, 433], "20191122": 115, "mkl": 115, "52b5f107dd9cf10910aaa19cb47f3abf9b349815": 115, "openmp": 115, "201511": 115, "lapack": 115, "nnpack": 115, "gencod": 115, "compute_37": 115, "sm_37": 115, "compute_50": 115, "sm_50": 115, "compute_60": 115, "sm_60": 115, "compute_70": 115, "sm_70": 115, "compute_75": 115, "sm_75": 115, "compute_80": 115, "sm_80": 115, "compute_86": 115, "sm_86": 115, "cudnn": 115, "magma": 115, "blas_info": 115, "build_typ": 115, "cuda_vers": 115, "cudnn_vers": 115, "cxx_compil": 115, "rh": 115, "devtoolset": 115, "cxx_flag": 115, "fabi": 115, "wno": 115, "deprec": [115, 200, 201, 229, 433, 445], "fvisibl": 115, "inlin": 115, "hidden": [115, 198, 200, 217, 282, 292], "duse_pthreadpool": 115, "fopenmp": 115, "dndebug": 115, "duse_kineto": 115, "duse_fbgemm": 115, "duse_qnnpack": 115, "duse_pytorch_qnnpack": 115, "duse_xnnpack": 115, "dsymbolicate_mobile_debug_handl": 115, "dedge_profiler_use_kineto": 115, "o2": 115, "fpic": 115, "narrow": [115, 218, 221, 253], "wextra": 115, "werror": 115, "dtor": 115, "pragma": 115, "wunus": 115, "typedef": 115, "unus": 115, "overflow": 115, "alias": 115, "stringop": 115, "psabi": 115, "pedant": 115, "decl": 115, "style": [115, 118, 221], "cast": [115, 118, 422], "fdiagnost": 115, "falign": 115, "mayb": 115, "uniniti": 115, "fno": 115, "errno": 115, "lapack_info": 115, "perf_with_avx": 115, "perf_with_avx2": 115, "perf_with_avx512": 115, "torch_vers": 115, "use_cuda": 115, "ON": 115, "use_cudnn": 115, "use_exception_ptr": 115, "use_gflag": 115, "use_glog": 115, "use_mkl": 115, "use_mkldnn": 115, "use_mpi": 115, "use_nccl": 115, "use_nnpack": 115, "use_openmp": 115, "use_rocm": 115, "torchvis": 115, "mmclassif": 115, "c5ac764": 115, "customlinearclshead": 115, "init_cfg": 115, "linear": 115, "backbon": 115, "init_block": 115, "init_weight": 115, "samimageclassifi": 115, "bn": 115, "stage1": 115, "unit1": 115, "dw_conv": 115, "se": 115, "conv1": 115, "conv2": 115, "pw_conv": 115, "conv3": 115, "unit2": 115, "stage4": 115, "unit3": 115, "unit4": 115, "unit5": 115, "unit6": 115, "stage5": 115, "1152": 115, "final_block": 115, "fc": 115, "normalinit": 115, "adapt": 115, "mmcl": 115, "sooah": [115, 119], "desktop": 115, "work_dir": 115, "before_run": 115, "very_high": 115, "cosineannealinglrupdaterhook": 115, "above_norm": 115, "fp16samoptimizerhook": 115, "customevalhook": 115, "checkpointhookwithvalresult": 115, "cancelinterfacehook": 115, "adaptivetrainschedulinghook": 115, "loggerreplacehook": 115, "otxprogresshook": 115, "lazyearlystoppinghook": 115, "very_low": 115, "textloggerhook": 115, "tensorboardloggerhook": 115, "otxloggerhook": 115, "before_train_epoch": 115, "taskadapthook": 115, "itertimerhook": 115, "memcachehook": 115, "forcetrainmodehook": 115, "before_train_it": 115, "after_train_it": 115, "after_train_epoch": 115, "before_val_epoch": 115, "before_val_it": 115, "after_val_it": 115, "after_val_epoch": 115, "after_run": 115, "cancel": 115, "logger": [115, 430], "mpa": 115, "deprecationwarn": [115, 200, 201, 229], "distutil": 115, "hasattr": 115, "__version__": 115, "loosevers": 115, "1170": [115, 118], "elaps": 115, "eta": 115, "900e": 115, "data_tim": 115, "3668": 115, "current_it": 115, "8926": 115, "sharp": 115, "2329": 115, "max_loss": 115, "1255": [115, 118], "progress": [115, 197, 209, 220, 232, 445], "exp": 115, "000": [115, 118], "8262": 115, "2382": [115, 118], "0639": 115, "1378": [115, 118], "accuracy_top": 115, "9555": [115, 118], "9953": 115, "8651": 115, "9954": 115, "9908": 115, "8571": 115, "7381": [115, 118], "9574": [115, 118], "8889": [115, 118], "9348": 115, "9922": [115, 118], "7674": [115, 118], "9800": 115, "9302": 115, "9149": [115, 118], "8710": 115, "9720": [115, 118], "9420": 115, "9863": 115, "9000": [115, 380, 381, 382, 385, 396, 397, 398], "9400": [115, 118], "4510": 115, "9851": 115, "9200": [115, 118], "9219": 115, "9623": [115, 118], "9844": [115, 118], "9882": 115, "9778": 115, "9118": 115, "7941": [115, 118], "9899": 115, "9524": 115, "9815": 115, "9886": 115, "9875": 115, "9615": [115, 118], "5854": [115, 118], "8939": 115, "8140": 115, "8750": 115, "9885": 115, "9455": [115, 118], "2857": 115, "9744": 115, "8529": [115, 118], "9756": [115, 118], "9661": [115, 118], "9388": 115, "2381": [115, 118], "9286": 115, "9474": [115, 118], "6571": 115, "9333": 115, "9429": [115, 118], "9796": 115, "9867": [115, 118], "9958": 115, "5946": [115, 118], "8235": 115, "8974": [115, 118], "9500": [115, 118], "9293": 115, "memcachehandlerbas": 115, "899e": 115, "2356": [115, 118], "1889": [115, 118], "4245": 115, "2175": [115, 118], "1879": [115, 118], "4054": [115, 118], "1342": [115, 118], "9422": [115, 118], "9762": [115, 118], "9783": [115, 118], "9070": [115, 118], "9535": [115, 118], "9787": 115, "9813": [115, 118], "9710": [115, 118], "9589": [115, 118], "9412": [115, 118], "8824": 115, "9706": [115, 118], "9688": [115, 118], "8947": [115, 118], "7805": [115, 118], "9750": 115, "8857": 115, "9825": 115, "5135": [115, 118], "9821": [115, 118], "9764": 115, "894e": 115, "1279": [115, 118], "1522": [115, 118], "2801": [115, 118], "1352": [115, 118], "1578": [115, 116, 118], "2931": [115, 118], "1350": 115, "9892": [115, 118], "9893": 115, "9630": [115, 118], "9194": [115, 118], "9608": [115, 118], "8667": 115, "8772": [115, 118], "9872": [115, 118], "7561": [115, 118], "9841": [115, 118], "4324": [115, 118], "9827": [115, 118], "887e": 115, "0870": 115, "1324": 115, "2194": [115, 118], "0855": 115, "1296": [115, 118], "2151": [115, 118], "1329": [115, 118], "9929": 115, "9999": [115, 118], "9767": 115, "7600": [115, 118], "9211": [115, 118], "9883": [115, 118], "876e": 115, "0630": 115, "1146": [115, 118], "1776": [115, 118], "0684": 115, "1209": 115, "1893": [115, 118], "1331": 115, "9942": 115, "9936": [115, 118], "9977": 115, "9931": 115, "9855": [115, 118], "8860": [115, 118], "7879": [115, 118], "9459": [115, 118], "863e": 115, "0465": 115, "1021": 115, "1486": [115, 118], "0486": 115, "1058": [115, 118], "1545": [115, 118], "1336": 115, "9960": [115, 118], "9979": 115, "9600": [115, 118], "9912": 115, "8293": [115, 118], "8485": 115, "9730": [115, 118], "846e": 115, "0439": 115, "0961": 115, "1400": [115, 118], "0388": 115, "0918": 115, "1306": 115, "1314": 115, "9968": [115, 118], "9561": [115, 118], "6216": [115, 118], "9948": 115, "827e": 115, "1100": [115, 118], "0333": 115, "0873": 115, "1206": 115, "1143": 115, "0879": 115, "1212": 115, "1311": [115, 118], "9981": 115, "9737": 115, "9434": [115, 118], "9978": [115, 118], "1144": [115, 118], "805e": 115, "1243": 115, "0331": 115, "0866": 115, "1196": [115, 118], "1286": [115, 118], "0321": 115, "0835": 115, "1156": 115, "1320": 115, "9986": 115, "9394": [115, 118], "9985": [115, 118], "1287": [115, 118], "780e": 115, "1386": 115, "0246": 115, "0816": 115, "1062": [115, 118], "1429": 115, "0256": 115, "0801": 115, "1056": 115, "9988": [115, 118], "1430": 115, "752e": 115, "1529": [115, 118], "0742": 115, "0953": 115, "1572": [115, 116, 118], "0230": 115, "0762": 115, "0992": 115, "9991": 115, "9994": 115, "1573": [115, 116, 118], "722e": 115, "1672": [115, 116, 118], "0193": 115, "0685": 115, "0878": 115, "1715": [115, 118], "0197": 115, "0717": 115, "0915": 115, "9992": [115, 118], "1716": [115, 116, 118], "688e": 115, "1815": [115, 118], "0182": 115, "0729": 115, "0911": 115, "1858": [115, 118], "0175": 115, "0714": 115, "0890": 115, "1291": 115, "1859": [115, 118], "652e": 115, "1958": 115, "0161": 115, "0669": 115, "0830": 115, "0157": 115, "0655": 115, "0813": 115, "613e": 115, "2101": [115, 118], "0148": 115, "0600": 115, "0748": 115, "2144": [115, 118], "0143": 115, "0609": 115, "0753": 115, "1302": [115, 118], "9995": [115, 118], "2145": 115, "572e": 115, "2244": [115, 118], "0135": 115, "0594": 115, "0730": 115, "2287": 115, "0139": 115, "0622": 115, "0761": 115, "1285": 115, "2288": [115, 118], "528e": 115, "2387": 115, "0123": 115, "0587": 115, "0710": 115, "2430": [115, 118], "0127": 115, "0581": 115, "0708": 115, "1304": [115, 118], "2431": 115, "481e": 115, "2530": 115, "0110": 115, "0569": 115, "0680": 115, "053": 115, "054": 115, "2573": 115, "0121": 115, "0599": 115, "0719": 115, "1295": [115, 118], "2574": 115, "432e": 115, "2673": [115, 118], "0125": 115, "0554": 115, "0679": 115, "2716": 115, "0126": 115, "0696": 115, "9993": [115, 118], "2717": 115, "381e": 115, "2816": 115, "0096": 115, "0592": 115, "0688": 115, "2859": 115, "0099": 115, "0539": 115, "2860": 115, "020": 115, "327e": 115, "2959": [115, 118], "0098": 115, "0531": 115, "0629": 115, "3002": [115, 118], "0119": 115, "0657": 115, "076": 115, "271e": 115, "3102": 115, "0088": 115, "0485": 115, "0572": 115, "3145": 115, "0083": 115, "0470": 115, "0553": 115, "1277": 115, "earli": [115, 218, 221, 253], "9995625305175782": 115, "3146": [115, 118], "save_model": 115, "762842": 115, "cli_report": 115, "tempfil": 115, "resourcewarn": 115, "implicitli": [115, 244], "temporarydirectori": 115, "iqz52wv7": 115, "_warn": 115, "warn_messag": 115, "minut": 115, "outputs_random": 115, "770452": 115, "073": 115, "074": 115, "075": 115, "077": 115, "078": 115, "079": 115, "080": 115, "081": 115, "4572": 115, "1036": 115, "005": 115, "3541": [115, 118], "5822": [115, 118], "1374": [115, 118], "8633": 115, "9748": [115, 118], "9352": [115, 118], "9952": 115, "9167": 115, "9130": [115, 118], "7917": [115, 118], "8000": [115, 118], "9672": 115, "8958": [115, 118], "5789": [115, 118], "5862": [115, 118], "1818": [115, 118], "8108": 115, "8810": 115, "3333": 115, "6957": 115, "9375": [115, 118], "3529": 115, "5588": 115, "0500": 115, "0435": 115, "9048": 115, "3125": [115, 118], "9231": 115, "6818": [115, 118], "7037": 115, "6111": 115, "4074": [115, 118], "5185": 115, "7222": [115, 118], "6522": 115, "1923": [115, 118], "7692": [115, 118], "6316": [115, 118], "9919": 115, "9032": [115, 118], "3000": 115, "7371": [115, 118], "4784": [115, 118], "2138": 115, "6899": 115, "9685": [115, 118], "9987": 115, "9636": 115, "9583": [115, 118], "7000": 115, "7241": [115, 118], "5455": 115, "8919": 115, "3810": [115, 118], "8800": 115, "9643": [115, 118], "9792": [115, 118], "9655": 115, "9362": 115, "7500": [115, 118], "7353": [115, 118], "6000": 115, "9565": [115, 118], "2353": [115, 118], "3929": 115, "7778": [115, 118], "9444": [115, 118], "9451": [115, 118], "1965": 115, "1831": [115, 118], "3798": [115, 118, 119], "1372": 115, "7619": [115, 118], "6176": 115, "7647": [115, 118], "9812": 115, "1137": 115, "1440": [115, 118], "2576": 115, "1371": 115, "8214": 115, "9910": 115, "0832": 115, "1344": [115, 118], "2180": [115, 118], "1373": 115, "9956": 115, "7059": [115, 118], "9940": [115, 118], "0578": 115, "1157": [115, 118], "1733": [115, 118], "1362": 115, "9976": 115, "8776": [115, 118], "9974": [115, 118], "0431": 115, "1033": 115, "1471": [115, 118], "1363": [115, 118], "0410": 115, "1120": [115, 118], "1532": [115, 118], "067": 115, "0328": 115, "0913": 115, "1241": [115, 118], "1334": 115, "071": 115, "0297": 115, "0828": 115, "1124": 115, "1345": 115, "9997": 115, "0259": 115, "0823": 115, "1085": 115, "1308": 115, "9989": 115, "9184": [115, 118], "0219": 115, "0751": 115, "0971": 115, "0174": 115, "0894": 115, "1340": [115, 118], "1007": [115, 118], "0168": 115, "0707": 115, "0875": 115, "1316": 115, "1008": 115, "1079": 115, "0672": 115, "0815": 115, "1322": [115, 118], "040": 115, "1080": 115, "1151": [115, 118], "0682": 115, "0817": 115, "1339": 115, "1223": [115, 118], "0133": 115, "0634": 115, "0767": 115, "1224": [115, 118], "0124": 115, "0689": 115, "1326": 115, "1367": [115, 118], "0618": 115, "1310": [115, 118], "1368": 115, "1439": 115, "0645": 115, "0757": 115, "1303": 115, "1511": [115, 118], "0109": 115, "0560": 115, "0670": 115, "1312": 115, "083": 115, "1512": [115, 118], "089": 115, "1583": [115, 118, 292, 296], "0085": 115, "0544": 115, "1584": [115, 118], "212e": 115, "1655": [115, 118], "0080": 115, "0496": 115, "0576": 115, "9997812652587891": 115, "1656": [115, 118], "034499": 115, "on7bagrf": 115, "output_centroid": 115, "048": 115, "894798": 115, "041": 115, "2499": [115, 118], "2340": 115, "4720": [115, 118], "8497": [115, 118], "9538": [115, 118], "8674": 115, "9930": 115, "9701": [115, 118], "9962": 115, "1667": [115, 118], "6786": 115, "3750": [115, 118], "7333": [115, 118], "5882": 115, "3158": [115, 118], "8222": [115, 118], "0909": 115, "8261": [115, 118], "8333": 115, "9259": [115, 118], "9492": [115, 118], "3636": 115, "8621": 115, "9722": [115, 118], "4000": 115, "8393": 115, "1579": [115, 118], "0526": 115, "0588": 115, "7931": 115, "9487": [115, 118], "6350": [115, 118], "5256": 115, "7429": [115, 118], "9626": [115, 118], "9432": [115, 118], "9773": [115, 118], "8421": 115, "9853": 115, "9111": [115, 118], "7727": [115, 118], "4286": 115, "2727": 115, "8182": [115, 118], "8642": 115, "0769": 115, "3846": [115, 118], "9677": [115, 118], "9906": 115, "6364": 115, "9139": [115, 118], "2172": 115, "1805": [115, 118], "3978": [115, 118], "1328": 115, "024": 115, "9880": 115, "9984": 115, "9091": [115, 118], "8765": 115, "5652": 115, "9771": [115, 118], "1482": [115, 118], "2723": 115, "9776": [115, 118], "9877": [115, 118], "8929": [115, 118], "6154": [115, 118], "0850": 115, "1300": [115, 118], "2150": 115, "1323": [115, 118], "9925": [115, 118], "9961": [115, 118], "0607": 115, "1179": [115, 118], "1790": [115, 118], "1307": [115, 118], "9963": 115, "9927": 115, "0472": 115, "1066": 115, "1538": [115, 118], "057": 115, "9383": 115, "8462": 115, "0408": 115, "9964": 115, "0395": 115, "0994": 115, "1389": 115, "1293": [115, 118], "9983": 115, "0317": 115, "0884": 115, "1215": [115, 118], "1275": [115, 118], "9753": [115, 118], "0247": 115, "0786": 115, "1035": 115, "1284": 115, "058": 115, "0198": 115, "0739": 115, "0936": 115, "0776": 115, "0986": 115, "1288": 115, "017": 115, "0185": 115, "0872": 115, "0160": 115, "0755": 115, "0914": 115, "1297": [115, 118], "0141": 115, "0826": 115, "1270": 115, "021": 115, "0151": 115, "0687": 115, "0837": 115, "1251": 115, "0603": 115, "0727": 115, "1260": [115, 118], "0105": 115, "0659": 115, "300252": 115, "yla9hve1": 115, "suffici": [115, 218], "vit_b": [116, 117], "deploi": [116, 117, 396, 397, 398], "ovm": [116, 117, 380, 381, 396, 397, 398, 445], "preper": [116, 117], "vit_l": [116, 117], "vit_h": [116, 117], "avaialb": [116, 117], "serv": [116, 117, 119, 132, 188, 221, 374, 433], "triton": [116, 117, 380, 381, 396, 397, 398, 445], "expos": [116, 117], "grpc": [116, 117, 380, 381, 382, 385, 396, 397, 398], "endpoint": [116, 117], "localhost": [116, 117, 380, 381, 382, 385, 396, 397, 398], "8001": [116, 117, 118], "ovms_sam": [116, 117], "img_20191209_095915": 116, "sambboxtoinstancemask": [116, 396, 398, 445], "inference_server_typ": [116, 117, 396, 397, 398], "inferenceservertyp": [116, 117, 380, 381, 396, 397, 398], "protocol_typ": [116, 117, 380, 381, 382, 385, 396, 397, 398], "protocoltyp": [116, 117, 380, 381, 382, 385, 396, 397, 398], "timeout": [116, 117, 380, 381, 382, 385, 396, 397, 398, 433], "wait": [116, 117, 382, 433], "to_polygon": [116, 396, 398], "ve": [116, 117, 119], "synchron": [116, 117], "send": [116, 117, 382], "concurr": [116, 117], "deal": [116, 117, 119], "throughput": [116, 117], "sam_transform": [116, 117], "inference_server_plugin": [116, 117], "maskstopolygon": [116, 418], "masktopolygon": 116, "object_id": [116, 119, 187, 188, 198, 200, 201, 209, 217, 227, 282, 292, 374, 391, 392, 393, 397, 398, 400, 401], "_imag": 116, "1606": [116, 118], "1603": [116, 118], "1601": [116, 118], "1599": [116, 118], "1595": [116, 118], "1593": [116, 118], "1592": [116, 118], "1591": [116, 118], "1590": [116, 118], "1588": [116, 118], "1587": [116, 118], "1585": [116, 118], "1581": [116, 118], "1580": [116, 118], "1575": [116, 118], "1574": [116, 118], "1569": [116, 118], "1568": [116, 118], "1567": [116, 118], "1577": [116, 118], "1586": [116, 118], "1605": [116, 118], "1608": [116, 118], "1618": [116, 118], "1625": [116, 118], "1634": [116, 118], "1639": [116, 118], "1642": [116, 118], "1646": [116, 118], "1650": [116, 118], "1659": [116, 118], "1671": [116, 118], "1677": [116, 118], "1681": [116, 118], "1683": [116, 118], "1688": [116, 118], "1690": [116, 118], "1693": [116, 118], "1695": [116, 118], "1696": [116, 118], "1699": [116, 118], "1701": [116, 118], "1702": [116, 118], "1703": [116, 118], "1706": [116, 118], "1707": [116, 118], "1709": [116, 118], "1713": [116, 118], "1714": [116, 118], "1717": [116, 118], "1708": [116, 118], "1705": [116, 118], "1700": [116, 118], "1680": [116, 118], "1669": [116, 118], "1666": [116, 118], "1663": [116, 118], "1636": [116, 118], "1621": [116, 118], "consequ": 116, "inst": [116, 424], "mak": [117, 121], "githubusercont": 117, "intel_rnb": 117, "default_subset_nam": [117, 374, 376, 387, 434], "samautomaticmaskgener": [117, 396, 397], "points_per_sid": [117, 396, 397], "points_per_batch": [117, 396, 397], "higher": [117, 196, 238, 396, 397], "pred_iou_thresh": [117, 396, 397, 400], "stability_score_thresh": [117, 396, 397, 400], "cutoff": [117, 396, 397, 400], "binar": [117, 396, 397, 400], "stability_score_offset": [117, 396, 397, 400], "box_nms_thresh": [117, 396, 397, 400], "maxim": [117, 396, 397, 400], "min_mask_region_area": [117, 396, 397, 400], "dens": 117, "publish": 118, "focus": 118, "compris": 118, "investig": 118, "wonjule": 118, "anaconda3": 118, "dateutil": 118, "bleach": 118, "certifi": 118, "tqdm": 118, "slugifi": 118, "urllib3": 118, "webencod": 118, "unidecod": 118, "idna": 118, "charset": 118, "client": [118, 380, 381, 382, 385, 396, 397, 398], "ref": [118, 214, 233], "lastupd": 118, "downloadcount": 118, "votecount": 118, "usabilityr": 118, "paultimothymoonei": 118, "xrai": 118, "pneumonia": 118, "2gb": 118, "2018": 118, "267348": 118, "6141": 118, "moltean": 118, "1gb": 118, "135209": 118, "2833": 118, "zalando": 118, "fashionmnist": 118, "69mb": 118, "177934": 118, "2646": 118, "85294116": 118, "muratkokludataset": 118, "408kb": 118, "21425": 118, "alxmamaev": 118, "225mb": 118, "99262": 118, "1829": 118, "rice": 118, "219mb": 118, "15254": 118, "1770": 118, "kmader": 118, "skin": 118, "cancer": 118, "ham10000": 118, "5gb": 118, "106934": 118, "1720": 118, "7058824": 118, "andrewmvd": 118, "398mb": 118, "74593": 118, "pistachio": 118, "27mb": 118, "5018": 118, "jessicali9530": 118, "celebfac": 118, "119390": 118, "7647059": 118, "2832": 118, "durum": 118, "983mb": 118, "1460": 118, "puneet6060": 118, "346mb": 118, "2019": [118, 121, 414, 416], "95676": 118, "1413": 118, "gpiosenka": 118, "speci": 118, "56160": 118, "9411765": 118, "meowmeowmeowmeowmeow": 118, "gtsrb": 118, "german": 118, "612mb": 118, "99852": 118, "8235294": 118, "ikarus777": 118, "artwork": 118, "31255": 118, "stanford": 118, "750mb": 118, "44168": 118, "breast": 118, "histopathologi": 118, "3gb": 118, "58527": 118, "crowww": 118, "21024": 118, "tawsifurrahman": 118, "covid19": 118, "covid": [118, 119], "778mb": 118, "77755": 118, "223m": 118, "225m": 118, "9mb": 118, "5mb": 118, "dataset_dir": 118, "4317": 118, "daisi": 118, "dandelion": 118, "tulip": 118, "introduc": [118, 126, 128, 160, 162, 163, 171, 181, 275, 445], "loosen": 118, "pasal": 118, "397m": 118, "398m": 118, "0mb": 118, "4072": 118, "with_mask": 118, "without_mask": 118, "mask_weared_incorrect": 118, "cope": [118, 121], "th": 118, "106k": 118, "20g": 118, "3mb": 118, "ham10000_images_part_1": 118, "ham10000_images_part_2": 118, "ham10000_metadata": 118, "hmnist_28_28_l": 118, "hmnist_28_28_rgb": 118, "hmnist_8_8_l": 118, "hmnist_8_8_rgb": 118, "lesion_id": 118, "dx": 118, "dx_type": 118, "ag": 118, "sex": 118, "ham_0000118": 118, "isic_0027419": 118, "bkl": 118, "histo": 118, "scalp": 118, "isic_0025030": 118, "ham_0002730": 118, "isic_0026769": 118, "isic_0025661": 118, "ham_0001466": 118, "isic_0031633": 118, "isic_0027850": 118, "ham_0002761": 118, "isic_0029176": 118, "isic_0029068": 118, "ham_0005132": 118, "isic_0025837": 118, "fed": 118, "data_format": [118, 128], "isic_0029396": 118, "ham_0004234": 118, "isic_0032417": 118, "ham_0001949": 118, "isic_0031326": 118, "ham_0007207": 118, "isic_0031029": 118, "ham_0001601": 118, "isic_0029836": 118, "ham_0007571": 118, "isic_0032129": 118, "isic_0032343": 118, "ham_0006071": 118, "isic_0032128": 118, "ham_0004884": 118, "isic_0030698": 118, "ham_0006574": 118, "isic_0031753": 118, "ham_0001480": 118, "abdomen": 118, "isic_0031159": 118, "ham_0005772": 118, "isic_0031017": 118, "isic_0029559": 118, "ham_0000351": 118, "isic_0030661": 118, "ham_0003847": 118, "isic_0031650": 118, "isic_0029687": 118, "ham_0007409": 118, "isic_0032013": 118, "ham_0002299": 118, "isic_0031691": 118, "ham_0007010": 118, "isic_0030105": 118, "ham_0003670": 118, "isic_0030377": 118, "ham_0001983": 118, "isic_0031468": 118, "ham_0003021": 118, "isic_0030926": 118, "isic_0031008": 118, "ham_0000959": 118, "isic_0031495": 118, "ham_0004569": 118, "isic_0031485": 118, "ham_0004641": 118, "isic_0029413": 118, "ham_0005801": 118, "isic_0029576": 118, "isic_0031967": 118, "ham_0004341": 118, "isic_0031584": 118, "isic_0029912": 118, "ham_0001469": 118, "isic_0033539": 118, "ham_0001728": 118, "isic_0032283": 118, "isic_0030005": 118, "isic_0030189": 118, "isic_0030768": 118, "ham_0002127": 118, "isic_0029837": 118, "isic_0031624": 118, "ham_0002092": 118, "isic_0030607": 118, "ham_0005075": 118, "isic_0029308": 118, "ham_0002921": 118, "isic_0029425": 118, "ham_0003410": 118, "isic_0030565": 118, "ham_0004852": 118, "isic_0032463": 118, "ham_0003326": 118, "isic_0032306": 118, "ham_0001853": 118, "isic_0032304": 118, "ham_0006558": 118, "genit": 118, "isic_0031639": 118, "isic_0031212": 118, "ham_0001665": 118, "isic_0032382": 118, "ham_0001417": 118, "isic_0029674": 118, "ham_0000114": 118, "isic_0029613": 118, "ham_0003458": 118, "isic_0029418": 118, "ham_0004673": 118, "isic_0034318": 118, "ham_0000344": 118, "isic_0032972": 118, "isic_0032534": 118, "ham_0004332": 118, "isic_0033785": 118, "isic_0033184": 118, "isic_0032929": 118, "ham_0003321": 118, "isic_0032963": 118, "isic_0032949": 118, "ham_0006085": 118, "isic_0033322": 118, "isic_0033127": 118, "isic_0033041": 118, "ham_0002040": 118, "isic_0033900": 118, "isic_0033361": 118, "isic_0032732": 118, "ham_0005299": 118, "isic_0032778": 118, "isic_0033466": 118, "isic_0030276": 118, "ham_0004075": 118, "isic_0033583": 118, "ham_0000112": 118, "isic_0033465": 118, "isic_0029683": 118, "ham_0002774": 118, "isic_0033482": 118, "ham_0006663": 118, "isic_0033201": 118, "isic_0032514": 118, "ham_0003001": 118, "isic_0033691": 118, "ham_0006654": 118, "isic_0033910": 118, "isic_0032556": 118, "isic_0033646": 118, "ham_0003743": 118, "isic_0033592": 118, "isic_0033899": 118, "isic_0032842": 118, "ham_0007101": 118, "isic_0032618": 118, "isic_0032513": 118, "isic_0033716": 118, "ham_0006938": 118, "isic_0034011": 118, "isic_0033613": 118, "isic_0032877": 118, "ham_0003770": 118, "isic_0034175": 118, "isic_0033523": 118, "isic_0029929": 118, "ham_0003768": 118, "isic_0032978": 118, "ham_0000779": 118, "isic_0033973": 118, "ham_0005386": 118, "isic_0033761": 118, "isic_0033505": 118, "isic_0033280": 118, "ham_0001385": 118, "isic_0033212": 118, "isic_0033770": 118, "isic_0032829": 118, "ham_0003845": 118, "isic_0033601": 118, "isic_0033284": 118, "ham_0003978": 118, "isic_0033908": 118, "isic_0033400": 118, "ham_0005258": 118, "isic_0033677": 118, "isic_0033262": 118, "isic_0033437": 118, "ham_0000802": 118, "isic_0032688": 118, "ham_0006801": 118, "isic_0033195": 118, "isic_0032553": 118, "isic_0033252": 118, "isic_0032570": 118, "isic_0033736": 118, "ham_0007625": 118, "isic_0033378": 118, "isic_0033379": 118, "ham_0002008": 118, "isic_0033438": 118, "isic_0032983": 118, "isic_0034024": 118, "isic_0033778": 118, "ham_0004975": 118, "isic_0032863": 118, "isic_0034168": 118, "isic_0033582": 118, "ham_0004442": 118, "isic_0033576": 118, "isic_0033410": 118, "ham_0007384": 118, "isic_0032725": 118, "isic_0033952": 118, "ham_0000516": 118, "isic_0033264": 118, "ham_0004255": 118, "isic_0033606": 118, "ham_0002327": 118, "isic_0034103": 118, "isic_0032883": 118, "isic_0032665": 118, "ham_0002928": 118, "isic_0033130": 118, "isic_0033321": 118, "ham_0001354": 118, "isic_0034189": 118, "ham_0000805": 118, "isic_0033306": 118, "isic_0032757": 118, "ham_0000527": 118, "isic_0032508": 118, "isic_0034201": 118, "isic_0032776": 118, "ham_0001954": 118, "isic_0033828": 118, "isic_0033235": 118, "ham_0001858": 118, "isic_0034070": 118, "ham_0000087": 118, "isic_0033709": 118, "isic_0032826": 118, "ham_0000581": 118, "isic_0034115": 118, "isic_0033776": 118, "ham_0002894": 118, "isic_0033056": 118, "isic_0033853": 118, "ham_0004458": 118, "isic_0033453": 118, "isic_0034126": 118, "isic_0033744": 118, "ham_0003050": 118, "isic_0033659": 118, "isic_0032567": 118, "ham_0003927": 118, "isic_0033088": 118, "isic_0032756": 118, "isic_0032654": 118, "ham_0000790": 118, "isic_0032576": 118, "isic_0033587": 118, "ham_0004091": 118, "isic_0032675": 118, "isic_0032997": 118, "ham_0003162": 118, "isic_0033529": 118, "isic_0033581": 118, "ham_0001855": 118, "isic_0033913": 118, "isic_0034235": 118, "ham_0005131": 118, "isic_0034007": 118, "isic_0034303": 118, "ham_0002372": 118, "isic_0034031": 118, "isic_0033124": 118, "isic_0033449": 118, "ham_0003659": 118, "isic_0033676": 118, "isic_0032898": 118, "ham_0007341": 118, "isic_0033488": 118, "isic_0033758": 118, "isic_0033397": 118, "ham_0001384": 118, "isic_0033414": 118, "isic_0034113": 118, "isic_0033507": 118, "ham_0006281": 118, "isic_0033791": 118, "isic_0034259": 118, "ham_0004555": 118, "isic_0033446": 118, "isic_0033200": 118, "isic_0029472": 118, "ham_0004029": 118, "isic_0029682": 118, "isic_0033642": 118, "ham_0006018": 118, "isic_0033486": 118, "isic_0034003": 118, "ham_0007402": 118, "isic_0033079": 118, "isic_0033629": 118, "ham_0001309": 118, "isic_0034037": 118, "isic_0032876": 118, "isic_0033635": 118, "ham_0001837": 118, "isic_0033868": 118, "isic_0034125": 118, "ham_0004406": 118, "isic_0033060": 118, "isic_0032099": 118, "ham_0002455": 118, "isic_0032215": 118, "ham_0002050": 118, "isic_0030124": 118, "ham_0004807": 118, "isic_0029600": 118, "ham_0001927": 118, "isic_0031376": 118, "ham_0005862": 118, "isic_0031876": 118, "ham_0002810": 118, "isic_0031620": 118, "ham_0007431": 118, "isic_0030542": 118, "isic_0029548": 118, "ham_0000113": 118, "isic_0030705": 118, "ham_0004141": 118, "isic_0030272": 118, "ham_0006697": 118, "isic_0031345": 118, "ham_0002691": 118, "isic_0032063": 118, "ham_0006630": 118, "isic_0032325": 118, "ham_0002184": 118, "isic_0031989": 118, "ham_0007100": 118, "isic_0029394": 118, "ham_0004566": 118, "isic_0032280": 118, "ham_0002839": 118, "isic_0032335": 118, "ham_0005498": 118, "isic_0030118": 118, "ham_0003613": 118, "isic_0030721": 118, "ham_0006769": 118, "isic_0031556": 118, "ham_0006122": 118, "isic_0032168": 118, "ham_0006143": 118, "isic_0031130": 118, "ham_0006350": 118, "isic_0031321": 118, "ham_0007621": 118, "isic_0032486": 118, "ham_0002121": 118, "isic_0029340": 118, "ham_0005157": 118, "isic_0030731": 118, "ham_0005865": 118, "isic_0031542": 118, "ham_0003014": 118, "isic_0031812": 118, "ham_0002335": 118, "isic_0030465": 118, "isic_0030706": 118, "ham_0003089": 118, "isic_0029522": 118, "ham_0002199": 118, "isic_0031424": 118, "ham_0004928": 118, "isic_0029770": 118, "isic_0030227": 118, "ham_0004917": 118, "isic_0030095": 118, "ham_0000050": 118, "isic_0031394": 118, "isic_0031060": 118, "ham_0005674": 118, "isic_0031593": 118, "ham_0002169": 118, "isic_0032348": 118, "ham_0006294": 118, "isic_0032200": 118, "isic_0030744": 118, "ham_0000847": 118, "isic_0032156": 118, "ham_0007521": 118, "isic_0030783": 118, "ham_0006513": 118, "isic_0029358": 118, "ham_0004945": 118, "isic_0031766": 118, "isic_0030258": 118, "isic_0030203": 118, "ham_0001896": 118, "isic_0032051": 118, "ham_0001947": 118, "isic_0032481": 118, "ham_0002769": 118, "isic_0030459": 118, "ham_0003140": 118, "isic_0029776": 118, "isic_0029519": 118, "ham_0005546": 118, "isic_0030522": 118, "ham_0001325": 118, "isic_0031686": 118, "ham_0007261": 118, "isic_0030208": 118, "ham_0003152": 118, "isic_0032006": 118, "ham_0003452": 118, "isic_0030723": 118, "ham_0000782": 118, "isic_0032373": 118, "ham_0001493": 118, "isic_0029568": 118, "ham_0002301": 118, "isic_0030561": 118, "ham_0004377": 118, "isic_0031591": 118, "ham_0004249": 118, "isic_0030007": 118, "ham_0004105": 118, "isic_0030812": 118, "ham_0005558": 118, "isic_0029802": 118, "isic_0031770": 118, "ham_0006128": 118, "isic_0029557": 118, "ham_0006170": 118, "isic_0032123": 118, "isic_0029789": 118, "ham_0001562": 118, "isic_0030026": 118, "ham_0004400": 118, "isic_0031851": 118, "ham_0004883": 118, "isic_0030436": 118, "isic_0031819": 118, "ham_0005527": 118, "isic_0029420": 118, "ham_0007573": 118, "isic_0032230": 118, "ham_0000744": 118, "isic_0029525": 118, "isic_0029474": 118, "isic_0032045": 118, "ham_0001057": 118, "isic_0031016": 118, "ham_0001603": 118, "isic_0030346": 118, "ham_0005146": 118, "isic_0029991": 118, "ham_0003899": 118, "isic_0029603": 118, "ham_0003476": 118, "isic_0031449": 118, "ham_0001536": 118, "isic_0030649": 118, "ham_0005420": 118, "isic_0032043": 118, "isic_0030806": 118, "ham_0005672": 118, "isic_0029791": 118, "ham_0005708": 118, "isic_0031168": 118, "ham_0001245": 118, "isic_0030822": 118, "ham_0005869": 118, "isic_0030636": 118, "ham_0001226": 118, "isic_0029897": 118, "ham_0001809": 118, "isic_0029596": 118, "ham_0007018": 118, "isic_0029580": 118, "ham_0001958": 118, "isic_0031078": 118, "ham_0003943": 118, "isic_0031464": 118, "isic_0032116": 118, "ham_0003275": 118, "isic_0030329": 118, "ham_0003279": 118, "isic_0029311": 118, "ham_0002592": 118, "isic_0030396": 118, "ham_0004570": 118, "isic_0031702": 118, "ham_0006827": 118, "isic_0031061": 118, "ham_0004010": 118, "isic_0029878": 118, "ham_0000299": 118, "isic_0031289": 118, "ham_0002722": 118, "isic_0030172": 118, "isic_0031580": 118, "ham_0005335": 118, "isic_0030758": 118, "ham_0000519": 118, "isic_0030365": 118, "ham_0004801": 118, "isic_0030188": 118, "ham_0006240": 118, "isic_0029810": 118, "ham_0001944": 118, "isic_0029678": 118, "ham_0000383": 118, "isic_0031937": 118, "ham_0000833": 118, "isic_0030683": 118, "ham_0001024": 118, "isic_0029585": 118, "ham_0006327": 118, "isic_0031050": 118, "ham_0006868": 118, "isic_0030876": 118, "ham_0005199": 118, "isic_0029841": 118, "ham_0003605": 118, "isic_0030319": 118, "ham_0003508": 118, "isic_0030965": 118, "ham_0006475": 118, "isic_0029617": 118, "ham_0005082": 118, "isic_0031783": 118, "ham_0002357": 118, "isic_0030137": 118, "isic_0031808": 118, "ham_0005275": 118, "isic_0030458": 118, "ham_0004494": 118, "isic_0031522": 118, "isic_0031352": 118, "ham_0004379": 118, "isic_0031150": 118, "ham_0001094": 118, "isic_0032024": 118, "ham_0002303": 118, "isic_0032235": 118, "ham_0002268": 118, "isic_0031961": 118, "ham_0006173": 118, "isic_0030533": 118, "ham_0003664": 118, "isic_0032456": 118, "ham_0003015": 118, "isic_0031716": 118, "ham_0002686": 118, "isic_0031138": 118, "ham_0004908": 118, "isic_0031903": 118, "ham_0003281": 118, "isic_0029384": 118, "ham_0001486": 118, "isic_0031630": 118, "ham_0003682": 118, "isic_0030318": 118, "ham_0004423": 118, "isic_0031459": 118, "isic_0032445": 118, "isic_0030849": 118, "ham_0006181": 118, "isic_0030801": 118, "ham_0006201": 118, "isic_0032358": 118, "ham_0006267": 118, "isic_0031200": 118, "isic_0031707": 118, "isic_0031537": 118, "ham_0003877": 118, "isic_0030231": 118, "ham_0003938": 118, "isic_0030081": 118, "ham_0004327": 118, "isic_0031334": 118, "ham_0006310": 118, "isic_0030988": 118, "ham_0006723": 118, "isic_0031951": 118, "ham_0001292": 118, "isic_0030310": 118, "ham_0006993": 118, "isic_0030608": 118, "ham_0007029": 118, "isic_0029588": 118, "ham_0001721": 118, "isic_0031181": 118, "isic_0031287": 118, "ham_0003205": 118, "isic_0032365": 118, "ham_0003206": 118, "isic_0030935": 118, "ham_0000237": 118, "isic_0032040": 118, "isic_0030372": 118, "ham_0000881": 118, "isic_0029849": 118, "isic_0030976": 118, "ham_0001722": 118, "isic_0032303": 118, "ham_0000893": 118, "isic_0032103": 118, "isic_0029406": 118, "ham_0001608": 118, "isic_0031980": 118, "isic_0029764": 118, "ham_0004696": 118, "isic_0030240": 118, "ham_0003392": 118, "isic_0029329": 118, "ham_0002844": 118, "isic_0031519": 118, "ham_0000149": 118, "isic_0031261": 118, "ham_0004383": 118, "isic_0029612": 118, "ham_0004396": 118, "isic_0029443": 118, "isic_0030700": 118, "ham_0004422": 118, "isic_0031496": 118, "ham_0001733": 118, "isic_0031465": 118, "ham_0000821": 118, "isic_0031831": 118, "ham_0004448": 118, "isic_0030241": 118, "ham_0001294": 118, "isic_0030605": 118, "ham_0001820": 118, "isic_0031000": 118, "ham_0002193": 118, "isic_0030130": 118, "ham_0001743": 118, "isic_0031037": 118, "isic_0029627": 118, "ham_0004531": 118, "isic_0031825": 118, "ham_0004453": 118, "confoc": 118, "isic_0030677": 118, "isic_0029927": 118, "ham_0000999": 118, "isic_0030383": 118, "ham_0003996": 118, "isic_0032395": 118, "ham_0005967": 118, "isic_0032031": 118, "isic_0031888": 118, "ham_0003398": 118, "isic_0031872": 118, "ham_0000083": 118, "isic_0031349": 118, "ham_0002042": 118, "isic_0030835": 118, "ham_0003574": 118, "isic_0031218": 118, "ham_0007315": 118, "isic_0029505": 118, "ham_0003789": 118, "isic_0030394": 118, "ham_0000835": 118, "isic_0031677": 118, "ham_0002683": 118, "isic_0031277": 118, "isic_0031853": 118, "isic_0031329": 118, "isic_0031528": 118, "ham_0007590": 118, "isic_0030369": 118, "ham_0003514": 118, "isic_0031600": 118, "ham_0004912": 118, "isic_0032159": 118, "ham_0004632": 118, "isic_0029527": 118, "ham_0003030": 118, "consensu": 118, "isic_0032111": 118, "ham_0006064": 118, "isic_0031132": 118, "isic_0031987": 118, "ham_0001781": 118, "isic_0029823": 118, "isic_0029455": 118, "ham_0005404": 118, "isic_0030123": 118, "ham_0006652": 118, "isic_0031945": 118, "isic_0029931": 118, "ham_0005324": 118, "isic_0029872": 118, "ham_0004004": 118, "isic_0029947": 118, "ham_0007043": 118, "isic_0030998": 118, "ham_0001053": 118, "isic_0029320": 118, "ham_0006186": 118, "isic_0029427": 118, "isic_0029464": 118, "isic_0029924": 118, "ham_0003010": 118, "isic_0031893": 118, "ham_0003881": 118, "isic_0032498": 118, "ham_0001011": 118, "isic_0029778": 118, "ham_0007381": 118, "isic_0029555": 118, "ham_0007090": 118, "isic_0029518": 118, "ham_0002096": 118, "isic_0030173": 118, "ham_0001982": 118, "isic_0032170": 118, "ham_0004543": 118, "isic_0033460": 118, "ham_0005847": 118, "isic_0033722": 118, "ham_0006438": 118, "isic_0034315": 118, "ham_0000754": 118, "isic_0032967": 118, "isic_0033199": 118, "ham_0006673": 118, "isic_0032719": 118, "isic_0030630": 118, "ham_0003787": 118, "isic_0033305": 118, "ham_0003218": 118, "isic_0032179": 118, "ham_0005903": 118, "isic_0031428": 118, "ham_0006277": 118, "isic_0032315": 118, "ham_0005463": 118, "isic_0032681": 118, "ham_0000208": 118, "isic_0033509": 118, "isic_0032694": 118, "isic_0034197": 118, "ham_0005442": 118, "isic_0034057": 118, "isic_0033260": 118, "ham_0004142": 118, "isic_0032643": 118, "isic_0033732": 118, "isic_0032827": 118, "ham_0006003": 118, "isic_0033022": 118, "isic_0032835": 118, "ham_0004788": 118, "isic_0033480": 118, "isic_0034165": 118, "ham_0004113": 118, "isic_0033185": 118, "isic_0033783": 118, "ham_0004258": 118, "isic_0033693": 118, "isic_0032804": 118, "ham_0006026": 118, "isic_0033924": 118, "isic_0033531": 118, "isic_0032636": 118, "ham_0001772": 118, "isic_0033270": 118, "isic_0033246": 118, "ham_0005749": 118, "isic_0032843": 118, "isic_0033528": 118, "ham_0000080": 118, "isic_0033865": 118, "isic_0034296": 118, "ham_0006528": 118, "isic_0032763": 118, "isic_0034291": 118, "isic_0034167": 118, "ham_0003728": 118, "isic_0033949": 118, "isic_0032773": 118, "ham_0000571": 118, "isic_0033156": 118, "isic_0033701": 118, "ham_0004245": 118, "isic_0033854": 118, "ham_0004246": 118, "isic_0033884": 118, "isic_0034142": 118, "ham_0000309": 118, "isic_0033784": 118, "ham_0000332": 118, "isic_0033307": 118, "isic_0033987": 118, "ham_0006148": 118, "isic_0033553": 118, "ham_0005898": 118, "isic_0033401": 118, "isic_0033169": 118, "ham_0002792": 118, "isic_0033855": 118, "ham_0006157": 118, "isic_0033660": 118, "ham_0007427": 118, "isic_0034221": 118, "isic_0033945": 118, "isic_0033491": 118, "isic_0034280": 118, "isic_0034151": 118, "ham_0006238": 118, "isic_0033391": 118, "ham_0001186": 118, "isic_0033750": 118, "ham_0002660": 118, "isic_0033685": 118, "ham_0000372": 118, "isic_0033631": 118, "ham_0000948": 118, "isic_0033490": 118, "ham_0000983": 118, "isic_0034283": 118, "ham_0007281": 118, "isic_0032740": 118, "ham_0001561": 118, "isic_0034186": 118, "ham_0000825": 118, "isic_0031601": 118, "ham_0001487": 118, "isic_0034252": 118, "ham_0006074": 118, "isic_0033829": 118, "isic_0030323": 118, "ham_0004232": 118, "isic_0032113": 118, "ham_0003393": 118, "isic_0032330": 118, "ham_0000090": 118, "isic_0032271": 118, "ham_0002371": 118, "isic_0031897": 118, "ham_0000382": 118, "isic_0031253": 118, "ham_0000613": 118, "isic_0031619": 118, "ham_0005626": 118, "isic_0031396": 118, "ham_0004466": 118, "isic_0031196": 118, "ham_0000734": 118, "isic_0032249": 118, "ham_0005834": 118, "isic_0029801": 118, "ham_0000716": 118, "1003": 118, "isic_0032124": 118, "ham_0002536": 118, "1004": 118, "isic_0029793": 118, "ham_0007151": 118, "1005": 118, "isic_0031133": 118, "ham_0007395": 118, "1006": 118, "isic_0030959": 118, "ham_0003011": 118, "isic_0031511": 118, "ham_0006601": 118, "1012": 118, "isic_0030316": 118, "ham_0000441": 118, "1016": 118, "isic_0029345": 118, "ham_0003260": 118, "1018": 118, "isic_0031226": 118, "ham_0002209": 118, "1026": 118, "isic_0032460": 118, "ham_0006876": 118, "1027": 118, "isic_0030067": 118, "ham_0001589": 118, "1029": 118, "isic_0031436": 118, "ham_0006243": 118, "1030": 118, "isic_0030088": 118, "ham_0000659": 118, "isic_0031088": 118, "ham_0001430": 118, "1038": 118, "isic_0030160": 118, "ham_0002043": 118, "1042": 118, "isic_0029731": 118, "ham_0000643": 118, "1045": 118, "isic_0031558": 118, "ham_0001402": 118, "1047": 118, "isic_0031577": 118, "ham_0005338": 118, "1049": 118, "isic_0031024": 118, "ham_0002677": 118, "1053": 118, "isic_0030056": 118, "ham_0003982": 118, "1054": 118, "isic_0030207": 118, "ham_0001399": 118, "isic_0031223": 118, "ham_0002456": 118, "1061": 118, "isic_0030226": 118, "ham_0000069": 118, "isic_0031125": 118, "ham_0004713": 118, "1064": 118, "isic_0029676": 118, "ham_0002503": 118, "1069": 118, "isic_0032359": 118, "ham_0002419": 118, "1070": 118, "isic_0029741": 118, "ham_0005096": 118, "1078": 118, "isic_0031362": 118, "ham_0000105": 118, "1081": 118, "isic_0029880": 118, "ham_0002366": 118, "1087": 118, "isic_0030488": 118, "ham_0005262": 118, "1089": 118, "isic_0031761": 118, "ham_0000296": 118, "1090": 118, "isic_0030583": 118, "ham_0000465": 118, "1091": 118, "isic_0030789": 118, "ham_0001223": 118, "1095": 118, "isic_0031309": 118, "ham_0004103": 118, "1099": 118, "isic_0030021": 118, "ham_0001164": 118, "isic_0032468": 118, "ham_0005684": 118, "1103": 118, "isic_0029760": 118, "ham_0004330": 118, "1104": 118, "isic_0030555": 118, "1105": 118, "isic_0030244": 118, "ham_0007526": 118, "1106": 118, "isic_0031827": 118, "1107": 118, "isic_0031002": 118, "ham_0007051": 118, "1108": 118, "isic_0032410": 118, "ham_0005518": 118, "1110": 118, "isic_0030579": 118, "ham_0002546": 118, "1111": 118, "isic_0034169": 118, "ham_0001785": 118, "1112": 118, "isic_0032941": 118, "1113": 118, "isic_0032642": 118, "ham_0002909": 118, "1114": 118, "isic_0033790": 118, "1115": 118, "isic_0033675": 118, "1116": 118, "isic_0030442": 118, "ham_0004756": 118, "1118": 118, "isic_0032247": 118, "ham_0007225": 118, "1119": 118, "isic_0031429": 118, "isic_0030321": 118, "ham_0003555": 118, "1121": 118, "isic_0029967": 118, "ham_0004960": 118, "1128": 118, "isic_0032138": 118, "ham_0005492": 118, "1130": 118, "isic_0029783": 118, "ham_0002706": 118, "1133": 118, "isic_0029578": 118, "ham_0002895": 118, "1134": 118, "isic_0030011": 118, "ham_0004371": 118, "1135": 118, "isic_0030427": 118, "1136": 118, "isic_0029891": 118, "ham_0007227": 118, "1139": 118, "isic_0030757": 118, "ham_0003290": 118, "1140": 118, "isic_0031358": 118, "1141": 118, "isic_0031735": 118, "1142": 118, "isic_0032114": 118, "ham_0003110": 118, "isic_0031344": 118, "ham_0005861": 118, "isic_0029962": 118, "ham_0007410": 118, "1149": 118, "isic_0031457": 118, "1150": 118, "isic_0029824": 118, "ham_0005362": 118, "isic_0031372": 118, "ham_0007418": 118, "1153": 118, "isic_0031443": 118, "ham_0000827": 118, "isic_0030015": 118, "ham_0006542": 118, "1159": 118, "isic_0031123": 118, "ham_0003487": 118, "1164": 118, "isic_0032613": 118, "ham_0005584": 118, "1166": 118, "isic_0033256": 118, "1167": 118, "isic_0034135": 118, "ham_0006371": 118, "1168": 118, "isic_0033626": 118, "1169": 118, "isic_0033780": 118, "isic_0033891": 118, "ham_0007396": 118, "1171": 118, "isic_0033554": 118, "1172": 118, "isic_0033810": 118, "1173": 118, "isic_0033695": 118, "ham_0000349": 118, "1174": 118, "isic_0033005": 118, "1175": 118, "isic_0033422": 118, "ham_0003597": 118, "1176": 118, "isic_0033808": 118, "ham_0003081": 118, "1178": 118, "isic_0033847": 118, "isic_0033860": 118, "1180": 118, "isic_0030830": 118, "ham_0006794": 118, "1182": 118, "isic_0031271": 118, "ham_0004090": 118, "1191": 118, "isic_0030665": 118, "ham_0005359": 118, "1194": 118, "isic_0031257": 118, "ham_0003023": 118, "isic_0029973": 118, "ham_0002045": 118, "1199": 118, "isic_0031799": 118, "ham_0003348": 118, "1201": 118, "isic_0030870": 118, "ham_0006707": 118, "1208": 118, "isic_0030623": 118, "ham_0000871": 118, "mel": 118, "1213": 118, "isic_0031023": 118, "ham_0005678": 118, "isic_0031177": 118, "ham_0005191": 118, "1217": 118, "isic_0030417": 118, "ham_0004476": 118, "1221": 118, "isic_0032396": 118, "ham_0000876": 118, "isic_0030443": 118, "ham_0006722": 118, "isic_0031499": 118, "1225": 118, "isic_0032248": 118, "ham_0002119": 118, "1229": 118, "isic_0029512": 118, "ham_0004784": 118, "1232": 118, "isic_0030486": 118, "ham_0001150": 118, "1234": 118, "isic_0029575": 118, "ham_0001747": 118, "1237": 118, "isic_0030119": 118, "ham_0005557": 118, "isic_0030129": 118, "ham_0003558": 118, "1244": 118, "isic_0032214": 118, "ham_0007454": 118, "1245": 118, "isic_0030281": 118, "ham_0003315": 118, "1250": 118, "isic_0031118": 118, "ham_0006900": 118, "1252": 118, "isic_0030080": 118, "1253": 118, "isic_0031953": 118, "ham_0000060": 118, "1254": 118, "isic_0031406": 118, "isic_0032079": 118, "ham_0005555": 118, "isic_0031642": 118, "ham_0004607": 118, "1262": 118, "isic_0031711": 118, "ham_0002011": 118, "1267": 118, "isic_0032331": 118, "ham_0004813": 118, "1274": 118, "isic_0032400": 118, "ham_0006803": 118, "isic_0033186": 118, "ham_0000095": 118, "1278": 118, "isic_0030060": 118, "ham_0004126": 118, "isic_0030211": 118, "isic_0030171": 118, "ham_0006253": 118, "1283": 118, "isic_0029538": 118, "ham_0002534": 118, "isic_0032313": 118, "ham_0000099": 118, "isic_0029913": 118, "ham_0007171": 118, "1289": 118, "isic_0032265": 118, "ham_0002714": 118, "isic_0032308": 118, "ham_0003802": 118, "isic_0030134": 118, "ham_0001203": 118, "isic_0030445": 118, "ham_0003031": 118, "isic_0030798": 118, "ham_0001913": 118, "isic_0032019": 118, "ham_0003194": 118, "isic_0031557": 118, "ham_0006521": 118, "isic_0030898": 118, "ham_0001847": 118, "isic_0032244": 118, "ham_0000152": 118, "1305": 118, "isic_0032098": 118, "ham_0006739": 118, "isic_0029651": 118, "ham_0004643": 118, "1309": 118, "isic_0032044": 118, "isic_0030759": 118, "ham_0001353": 118, "isic_0032450": 118, "ham_0006908": 118, "1315": 118, "isic_0032046": 118, "ham_0005697": 118, "1317": 118, "isic_0029630": 118, "ham_0006692": 118, "1319": 118, "isic_0031369": 118, "ham_0000531": 118, "isic_0029547": 118, "ham_0007165": 118, "isic_0031941": 118, "ham_0007538": 118, "1327": 118, "isic_0030818": 118, "ham_0002838": 118, "isic_0030106": 118, "ham_0001531": 118, "1335": 118, "isic_0031779": 118, "ham_0001284": 118, "1338": 118, "isic_0031745": 118, "ham_0001671": 118, "isic_0031586": 118, "1341": 118, "isic_0031972": 118, "ham_0002182": 118, "isic_0030539": 118, "1343": 118, "isic_0031977": 118, "ham_0006828": 118, "isic_0031517": 118, "ham_0001202": 118, "1349": 118, "isic_0029370": 118, "ham_0006433": 118, "isic_0031958": 118, "1353": 118, "isic_0030521": 118, "ham_0006522": 118, "1355": 118, "isic_0030089": 118, "ham_0007620": 118, "1358": 118, "isic_0031598": 118, "ham_0005381": 118, "isic_0029473": 118, "ham_0001796": 118, "1365": 118, "isic_0030014": 118, "ham_0005742": 118, "isic_0029571": 118, "ham_0006152": 118, "1369": 118, "isic_0032220": 118, "ham_0003521": 118, "isic_0030165": 118, "ham_0005911": 118, "1376": 118, "isic_0031189": 118, "ham_0006214": 118, "isic_0032190": 118, "1379": 118, "isic_0029558": 118, "ham_0003683": 118, "1383": 118, "isic_0031890": 118, "ham_0007420": 118, "1384": 118, "isic_0031545": 118, "ham_0007229": 118, "1385": 118, "isic_0033312": 118, "ham_0007117": 118, "isic_0029884": 118, "ham_0006635": 118, "1402": 118, "isic_0030223": 118, "ham_0005642": 118, "1407": [118, 122], "isic_0032182": 118, "ham_0006651": 118, "1408": 118, "isic_0030760": 118, "ham_0005624": 118, "1411": 118, "isic_0034006": 118, "ham_0000709": 118, "isic_0029660": 118, "ham_0001703": 118, "1416": 118, "isic_0029343": 118, "ham_0003330": 118, "1421": 118, "isic_0030552": 118, "ham_0002897": 118, "1422": 118, "isic_0029726": 118, "ham_0004102": 118, "1423": 118, "isic_0029513": 118, "ham_0000645": 118, "1424": 118, "isic_0030824": 118, "ham_0000330": 118, "1428": 118, "isic_0031310": 118, "ham_0003497": 118, "1431": 118, "isic_0032408": 118, "ham_0002115": 118, "1432": 118, "isic_0030440": 118, "ham_0002509": 118, "1433": 118, "isic_0031013": 118, "ham_0005752": 118, "isic_0032441": 118, "ham_0005328": 118, "1442": 118, "isic_0030324": 118, "ham_0005095": 118, "1443": 118, "isic_0029434": 118, "ham_0002391": 118, "1447": 118, "isic_0033496": 118, "ham_0001734": 118, "1453": 118, "isic_0032927": 118, "1454": 118, "isic_0030681": 118, "ham_0004397": 118, "1458": 118, "isic_0029562": 118, "ham_0005719": 118, "1462": 118, "isic_0029453": 118, "1463": 118, "isic_0034071": 118, "ham_0006435": 118, "1464": 118, "isic_0033573": 118, "1465": 118, "isic_0030828": 118, "ham_0001456": 118, "1470": 118, "isic_0032847": 118, "ham_0002004": 118, "isic_0033654": 118, "1472": 118, "isic_0030575": 118, "ham_0002032": 118, "1473": 118, "isic_0033931": 118, "ham_0005490": 118, "1474": 118, "isic_0033268": 118, "ham_0007163": 118, "1475": 118, "isic_0032750": 118, "1476": 118, "isic_0032888": 118, "ham_0002939": 118, "1477": 118, "isic_0033968": 118, "1478": 118, "isic_0033333": 118, "ham_0006445": 118, "1479": 118, "isic_0033717": 118, "1480": 118, "isic_0034120": 118, "1481": 118, "isic_0032532": 118, "ham_0004405": 118, "isic_0033500": 118, "1483": 118, "isic_0033834": 118, "ham_0001412": 118, "1484": 118, "isic_0033678": 118, "1485": 118, "isic_0034046": 118, "ham_0000179": 118, "isic_0032550": 118, "1487": 118, "isic_0033700": 118, "1488": 118, "isic_0032604": 118, "ham_0003083": 118, "1490": 118, "isic_0033428": 118, "1491": 118, "isic_0033975": 118, "ham_0003983": 118, "1493": 118, "isic_0033278": 118, "1494": 118, "isic_0033679": 118, "1495": 118, "isic_0034141": 118, "ham_0000483": 118, "1496": 118, "isic_0033643": 118, "1497": 118, "isic_0032629": 118, "1498": 118, "isic_0033152": 118, "ham_0001135": 118, "1499": 118, "isic_0033636": 118, "ham_0005500": 118, "1500": 118, "isic_0029909": 118, "ham_0001266": 118, "isic_0033432": 118, "ham_0005893": 118, "1502": 118, "isic_0032833": 118, "1503": 118, "isic_0034236": 118, "1504": 118, "isic_0033027": 118, "ham_0001174": 118, "1505": 118, "isic_0034118": 118, "ham_0002824": 118, "1506": 118, "isic_0033476": 118, "1507": 118, "isic_0033047": 118, "1508": 118, "isic_0032017": 118, "ham_0007368": 118, "1510": 118, "isic_0033946": 118, "ham_0007343": 118, "isic_0033369": 118, "isic_0032447": 118, "1513": 118, "isic_0033655": 118, "1514": 118, "isic_0033831": 118, "1515": 118, "isic_0032583": 118, "ham_0000006": 118, "1516": 118, "isic_0034162": 118, "1517": 118, "isic_0032187": 118, "1518": 118, "isic_0032976": 118, "ham_0006330": 118, "1519": 118, "isic_0033274": 118, "1520": 118, "isic_0033034": 118, "ham_0007032": 118, "isic_0034294": 118, "1523": 118, "isic_0034202": 118, "1524": 118, "isic_0033416": 118, "ham_0003386": 118, "isic_0032662": 118, "1526": 118, "isic_0033452": 118, "1527": 118, "isic_0033074": 118, "ham_0005368": 118, "1528": 118, "isic_0034087": 118, "isic_0032722": 118, "1530": 118, "isic_0033204": 118, "ham_0006886": 118, "1531": 118, "isic_0033953": 118, "isic_0032823": 118, "1533": 118, "isic_0032733": 118, "ham_0000321": 118, "1534": 118, "isic_0033183": 118, "1535": 118, "isic_0032564": 118, "1536": 118, "isic_0034140": 118, "ham_0005636": 118, "1537": 118, "isic_0034256": 118, "isic_0032984": 118, "1539": 118, "isic_0033362": 118, "ham_0007234": 118, "1540": 118, "isic_0033947": 118, "ham_0005545": 118, "1541": 118, "isic_0033881": 118, "1542": 118, "isic_0029363": 118, "ham_0005400": 118, "1543": 118, "isic_0033820": 118, "ham_0002086": 118, "1544": 118, "isic_0033814": 118, "isic_0032875": 118, "ham_0003625": 118, "1546": 118, "isic_0033802": 118, "1547": 118, "isic_0033429": 118, "1548": 118, "isic_0032685": 118, "ham_0005608": 118, "1549": 118, "isic_0032903": 118, "1550": 118, "isic_0033323": 118, "1551": 118, "isic_0032637": 118, "ham_0002956": 118, "1552": 118, "isic_0032993": 118, "1553": 118, "isic_0033804": 118, "ham_0000611": 118, "1554": 118, "isic_0033801": 118, "1555": 118, "isic_0033216": 118, "1556": 118, "isic_0033154": 118, "ham_0005336": 118, "1557": 118, "isic_0033192": 118, "1558": 118, "isic_0034222": 118, "ham_0002235": 118, "1560": 118, "isic_0032569": 118, "1561": 118, "isic_0034064": 118, "1562": 118, "isic_0033902": 118, "ham_0000048": 118, "1563": 118, "isic_0032774": 118, "1564": 118, "isic_0032840": 118, "ham_0003679": 118, "1565": 118, "isic_0034313": 118, "1566": 118, "isic_0033570": 118, "isic_0032602": 118, "ham_0004811": 118, "isic_0032724": 118, "isic_0033129": 118, "1570": 118, "isic_0033180": 118, "ham_0005010": 118, "1571": 118, "isic_0033962": 118, "isic_0033603": 118, "isic_0033325": 118, "ham_0005777": 118, "isic_0034208": 118, "isic_0033068": 118, "ham_0002671": 118, "1576": 118, "isic_0034218": 118, "isic_0034263": 118, "isic_0034262": 118, "ham_0000097": 118, "isic_0033103": 118, "isic_0034106": 118, "isic_0033725": 118, "ham_0001928": 118, "1582": 118, "isic_0032537": 118, "isic_0033287": 118, "isic_0033286": 118, "ham_0005758": 118, "isic_0032586": 118, "isic_0029632": 118, "ham_0005535": 118, "isic_0033485": 118, "ham_0003556": 118, "isic_0033175": 118, "1589": 118, "isic_0033886": 118, "isic_0032892": 118, "ham_0003354": 118, "isic_0033942": 118, "ham_0000322": 118, "isic_0033473": 118, "isic_0030564": 118, "ham_0005613": 118, "1594": 118, "isic_0033337": 118, "ham_0005581": 118, "isic_0033594": 118, "1596": 118, "isic_0033275": 118, "ham_0003280": 118, "isic_0033938": 118, "1600": 118, "isic_0032841": 118, "isic_0033819": 118, "ham_0000388": 118, "1602": 118, "isic_0032544": 118, "isic_0032844": 118, "1604": 118, "isic_0032921": 118, "ham_0004927": 118, "isic_0034117": 118, "isic_0033415": 118, "1607": 118, "isic_0033240": 118, "ham_0005303": 118, "isic_0032782": 118, "1609": 118, "isic_0032522": 118, "1610": 118, "isic_0033595": 118, "ham_0005280": 118, "1611": 118, "isic_0034059": 118, "1612": 118, "isic_0033063": 118, "1613": 118, "isic_0033174": 118, "ham_0006321": 118, "1614": 118, "isic_0033239": 118, "1615": 118, "isic_0033985": 118, "1616": 118, "isic_0032726": 118, "ham_0007180": 118, "1617": 118, "isic_0033272": 118, "isic_0032718": 118, "ham_0003202": 118, "1619": 118, "isic_0032736": 118, "1620": 118, "isic_0033317": 118, "ham_0000662": 118, "isic_0034269": 118, "1622": 118, "isic_0033956": 118, "1623": 118, "isic_0033241": 118, "ham_0006545": 118, "1624": 118, "isic_0032598": 118, "isic_0034289": 118, "1626": 118, "isic_0033980": 118, "ham_0003602": 118, "1627": 118, "isic_0032533": 118, "1628": 118, "isic_0033986": 118, "1629": 118, "isic_0033004": 118, "1630": 118, "isic_0032072": 118, "ham_0004593": 118, "1632": 118, "isic_0033578": 118, "ham_0004571": 118, "1633": 118, "isic_0034100": 118, "isic_0032940": 118, "ham_0005628": 118, "1635": 118, "isic_0032511": 118, "ham_0003620": 118, "isic_0033687": 118, "1637": 118, "isic_0034085": 118, "1638": 118, "isic_0033299": 118, "ham_0000107": 118, "isic_0033479": 118, "ham_0004321": 118, "1640": 118, "isic_0033522": 118, "1641": 118, "isic_0033911": 118, "ham_0005711": 118, "isic_0033779": 118, "1643": 118, "isic_0032638": 118, "1644": 118, "isic_0032603": 118, "ham_0000064": 118, "1645": 118, "isic_0033871": 118, "isic_0032955": 118, "1647": 118, "isic_0032812": 118, "ham_0005748": 118, "1648": 118, "isic_0033619": 118, "1649": 118, "isic_0034065": 118, "isic_0034132": 118, "ham_0003466": 118, "1651": 118, "isic_0033038": 118, "1652": 118, "isic_0033630": 118, "ham_0004984": 118, "1653": 118, "isic_0032879": 118, "1654": 118, "isic_0034012": 118, "ham_0006011": 118, "isic_0034150": 118, "isic_0033209": 118, "ham_0001465": 118, "1658": 118, "isic_0034074": 118, "isic_0032699": 118, "1660": 118, "isic_0033848": 118, "ham_0000002": 118, "1661": 118, "isic_0032622": 118, "1662": 118, "isic_0034246": 118, "isic_0032915": 118, "ham_0001524": 118, "1664": 118, "isic_0033883": 118, "ham_0004949": 118, "isic_0034145": 118, "isic_0032981": 118, "1668": 118, "isic_0033470": 118, "ham_0003421": 118, "isic_0034094": 118, "1670": 118, "isic_0033560": 118, "isic_0034061": 118, "ham_0000553": 118, "isic_0032716": 118, "1673": 118, "isic_0034159": 118, "1674": 118, "isic_0033477": 118, "ham_0007021": 118, "1676": 118, "isic_0034092": 118, "isic_0033863": 118, "ham_0007086": 118, "1678": 118, "isic_0034180": 118, "1679": 118, "isic_0033267": 118, "isic_0034005": 118, "ham_0006763": 118, "isic_0033872": 118, "ham_0006101": 118, "1682": 118, "isic_0032617": 118, "isic_0032965": 118, "ham_0005483": 118, "1684": 118, "isic_0034242": 118, "1685": 118, "isic_0033117": 118, "1686": 118, "isic_0034104": 118, "ham_0002993": 118, "1687": 118, "isic_0032547": 118, "isic_0033644": 118, "1689": 118, "isic_0033806": 118, "ham_0004881": 118, "isic_0032913": 118, "1691": 118, "isic_0033651": 118, "ham_0004998": 118, "1692": 118, "isic_0033304": 118, "isic_0032806": 118, "ham_0005970": 118, "1694": 118, "isic_0033624": 118, "ham_0007574": 118, "isic_0033238": 118, "isic_0034089": 118, "1697": 118, "isic_0034048": 118, "ham_0000042": 118, "1698": 118, "isic_0033905": 118, "isic_0033981": 118, "isic_0033336": 118, "ham_0003506": 118, "isic_0033405": 118, "isic_0034188": 118, "isic_0033269": 118, "ham_0006189": 118, "1704": 118, "isic_0033569": 118, "ham_0006566": 118, "isic_0032535": 118, "isic_0033042": 118, "ham_0002149": 118, "isic_0032081": 118, "ham_0005078": 118, "isic_0034034": 118, "ham_0005141": 118, "isic_0033217": 118, "1710": 118, "isic_0033728": 118, "ham_0005256": 118, "1711": 118, "isic_0033901": 118, "ham_0002342": 118, "1712": 118, "isic_0032917": 118, "isic_0032925": 118, "isic_0032797": 118, "ham_0001863": 118, "isic_0032596": 118, "isic_0032856": 118, "isic_0033193": 118, "1718": 118, "isic_0033125": 118, "1719": 118, "isic_0032810": 118, "isic_0033324": 118, "ham_0004304": 118, "1721": 118, "isic_0034316": 118, "1722": 118, "isic_0033710": 118, "1723": 118, "isic_0033469": 118, "ham_0006437": 118, "1724": 118, "isic_0033663": 118, "ham_0004240": 118, "1725": 118, "isic_0034284": 118, "1726": 118, "isic_0031709": 118, "ham_0000282": 118, "1727": 118, "isic_0032517": 118, "1728": 118, "isic_0032684": 118, "ham_0003566": 118, "1729": 118, "isic_0034052": 118, "1730": 118, "isic_0033171": 118, "1731": 118, "isic_0034022": 118, "ham_0002732": 118, "1732": 118, "isic_0033017": 118, "isic_0033874": 118, "1734": 118, "isic_0033754": 118, "ham_0004687": 118, "1735": 118, "isic_0032938": 118, "1736": 118, "isic_0032610": 118, "ham_0006802": 118, "1738": 118, "isic_0032958": 118, "ham_0006824": 118, "1739": 118, "isic_0033538": 118, "1740": 118, "isic_0032836": 118, "ham_0003073": 118, "1741": 118, "isic_0033444": 118, "1742": 118, "isic_0034183": 118, "1743": 118, "isic_0033426": 118, "ham_0001143": 118, "1744": 118, "isic_0033546": 118, "ham_0000055": 118, "1745": 118, "isic_0032869": 118, "ham_0003495": 118, "1746": 118, "isic_0033524": 118, "1747": 118, "isic_0034101": 118, "ham_0004853": 118, "1748": 118, "isic_0030333": 118, "1749": 118, "isic_0032695": 118, "1750": 118, "isic_0033310": 118, "ham_0000119": 118, "1751": 118, "isic_0034253": 118, "ham_0006097": 118, "1753": 118, "isic_0033120": 118, "ham_0007558": 118, "1754": 118, "isic_0033081": 118, "ham_0007583": 118, "1755": 118, "isic_0034211": 118, "1756": 118, "isic_0033545": 118, "1758": 118, "isic_0033141": 118, "ham_0005274": 118, "1760": 118, "isic_0033261": 118, "1761": 118, "isic_0032766": 118, "1762": 118, "isic_0030031": 118, "ham_0007102": 118, "1763": 118, "isic_0032531": 118, "ham_0005409": 118, "1765": 118, "isic_0032970": 118, "1766": 118, "isic_0030391": 118, "ham_0000337": 118, "1768": 118, "isic_0032845": 118, "ham_0006376": 118, "1769": 118, "isic_0034036": 118, "ham_0003843": 118, "isic_0030238": 118, "ham_0000375": 118, "1771": 118, "isic_0032968": 118, "ham_0001272": 118, "1772": 118, "isic_0032462": 118, "ham_0001274": 118, "1774": 118, "isic_0033704": 118, "ham_0001280": 118, "1775": 118, "isic_0034239": 118, "ham_0004578": 118, "isic_0034287": 118, "1777": 118, "isic_0031479": 118, "ham_0000274": 118, "1778": 118, "isic_0033166": 118, "ham_0005249": 118, "1779": 118, "isic_0033320": 118, "1780": 118, "isic_0032526": 118, "1781": 118, "isic_0033813": 118, "ham_0000423": 118, "1782": 118, "isic_0032624": 118, "ham_0004129": 118, "1783": 118, "isic_0033977": 118, "1784": 118, "isic_0034002": 118, "1785": 118, "isic_0033387": 118, "ham_0001105": 118, "1786": 118, "isic_0032552": 118, "1788": 118, "isic_0033279": 118, "1789": 118, "isic_0032887": 118, "isic_0034205": 118, "1791": 118, "isic_0033612": 118, "1792": 118, "isic_0034049": 118, "ham_0007589": 118, "1793": 118, "isic_0033300": 118, "ham_0003700": 118, "1794": 118, "isic_0033616": 118, "isic_0029606": 118, "1796": 118, "isic_0033099": 118, "1797": 118, "isic_0032723": 118, "ham_0005992": 118, "1798": 118, "isic_0032751": 118, "1799": 118, "isic_0032597": 118, "1800": 118, "isic_0032982": 118, "ham_0002841": 118, "1801": 118, "isic_0033196": 118, "1802": 118, "isic_0032653": 118, "1803": 118, "isic_0032730": 118, "ham_0004284": 118, "1804": 118, "isic_0032709": 118, "isic_0033206": 118, "1806": [118, 197], "isic_0033518": 118, "ham_0002952": 118, "1807": 118, "isic_0033843": 118, "1808": 118, "isic_0033344": 118, "ham_0006540": 118, "1809": 118, "isic_0032988": 118, "1810": 118, "isic_0033812": 118, "ham_0004859": 118, "1811": 118, "isic_0033653": 118, "1812": 118, "isic_0032698": 118, "ham_0001686": 118, "1813": 118, "isic_0033611": 118, "ham_0000799": 118, "1814": 118, "isic_0033586": 118, "isic_0033226": 118, "1816": 118, "isic_0033198": 118, "ham_0004754": 118, "1817": 118, "isic_0032790": 118, "isic_0033245": 118, "1819": 118, "isic_0033029": 118, "ham_0004302": 118, "1820": 118, "isic_0030883": 118, "ham_0004326": 118, "1821": 118, "isic_0033670": 118, "ham_0003225": 118, "1823": 118, "isic_0029740": 118, "1824": 118, "isic_0033593": 118, "1825": 118, "isic_0032509": 118, "ham_0003335": 118, "1826": 118, "isic_0034068": 118, "1827": 118, "isic_0033392": 118, "ham_0003174": 118, "1828": 118, "isic_0032873": 118, "isic_0034107": 118, "ham_0005809": 118, "1830": 118, "isic_0033368": 118, "isic_0032630": 118, "ham_0003759": 118, "1832": 118, "isic_0033399": 118, "1833": 118, "isic_0032656": 118, "ham_0006923": 118, "1834": 118, "isic_0032592": 118, "1835": 118, "isic_0033024": 118, "ham_0006184": 118, "1836": 118, "isic_0034134": 118, "1837": 118, "isic_0033878": 118, "ham_0003351": 118, "1838": 118, "isic_0032687": 118, "ham_0001344": 118, "1839": 118, "isic_0033055": 118, "1840": 118, "isic_0033559": 118, "ham_0006426": 118, "1841": 118, "isic_0032922": 118, "1842": 118, "isic_0032672": 118, "ham_0006517": 118, "1843": 118, "isic_0034076": 118, "1844": 118, "isic_0033520": 118, "ham_0006462": 118, "1845": 118, "isic_0034028": 118, "1846": 118, "isic_0033487": 118, "ham_0005673": 118, "1847": 118, "isic_0033607": 118, "ham_0005627": 118, "1848": 118, "isic_0033568": 118, "1849": 118, "isic_0034051": 118, "ham_0004056": 118, "1850": 118, "isic_0033377": 118, "1851": 118, "isic_0033957": 118, "ham_0002617": 118, "1852": 118, "isic_0034172": 118, "1853": 118, "isic_0033393": 118, "1854": 118, "isic_0033534": 118, "ham_0005953": 118, "1855": 118, "isic_0032626": 118, "1856": 118, "isic_0034062": 118, "ham_0004914": 118, "1857": 118, "isic_0034170": 118, "isic_0033061": 118, "ham_0001506": 118, "isic_0033967": 118, "1860": 118, "isic_0033051": 118, "1861": 118, "isic_0033050": 118, "ham_0003439": 118, "1862": 118, "isic_0033526": 118, "1863": 118, "isic_0032862": 118, "ham_0000176": 118, "1864": 118, "isic_0033073": 118, "1865": 118, "isic_0033696": 118, "1866": 118, "isic_0033995": 118, "1868": 118, "isic_0033668": 118, "ham_0000706": 118, "1870": 118, "isic_0032690": 118, "1871": 118, "isic_0032918": 118, "1872": 118, "isic_0034000": 118, "ham_0001793": 118, "1874": 118, "isic_0032807": 118, "ham_0002488": 118, "1875": 118, "isic_0032645": 118, "1876": 118, "isic_0033498": 118, "ham_0002051": 118, "1877": 118, "isic_0031784": 118, "1878": 118, "isic_0034275": 118, "ham_0000392": 118, "isic_0033440": 118, "1880": 118, "isic_0033807": 118, "ham_0001974": 118, "1881": 118, "isic_0033533": 118, "1882": 118, "isic_0034173": 118, "ham_0005021": 118, "1883": 118, "isic_0033454": 118, "1884": 118, "isic_0033893": 118, "1885": 118, "isic_0032960": 118, "ham_0000169": 118, "1887": 118, "isic_0033708": 118, "1888": 118, "isic_0034317": 118, "isic_0031741": 118, "ham_0006400": 118, "1890": 118, "isic_0033662": 118, "1891": 118, "isic_0033037": 118, "ham_0004109": 118, "1892": 118, "isic_0033773": 118, "isic_0033752": 118, "ham_0000079": 118, "1894": 118, "isic_0033424": 118, "1895": 118, "isic_0034216": 118, "1896": 118, "isic_0032152": 118, "ham_0003869": 118, "1897": 118, "isic_0033730": 118, "ham_0001647": 118, "1898": 118, "isic_0032975": 118, "1899": 118, "isic_0034243": 118, "ham_0002723": 118, "1900": 118, "isic_0034050": 118, "1901": 118, "isic_0033114": 118, "1902": 118, "isic_0032559": 118, "1903": 118, "isic_0030150": 118, "ham_0005124": 118, "1904": 118, "isic_0033394": 118, "ham_0004844": 118, "1905": 118, "isic_0034233": 118, "1906": 118, "isic_0033122": 118, "ham_0004620": 118, "1907": 118, "isic_0033713": 118, "1908": 118, "isic_0033638": 118, "ham_0005040": 118, "1910": 118, "isic_0033805": 118, "1911": 118, "isic_0033302": 118, "1912": 118, "isic_0033925": 118, "ham_0000206": 118, "1913": 118, "isic_0033431": 118, "1914": 118, "isic_0033089": 118, "ham_0000880": 118, "1915": 118, "isic_0033562": 118, "1916": 118, "isic_0031233": 118, "1917": 118, "isic_0033885": 118, "ham_0005737": 118, "1918": 118, "isic_0032987": 118, "ham_0001155": 118, "1920": 118, "isic_0032872": 118, "ham_0001570": 118, "1921": 118, "isic_0033178": 118, "1922": 118, "isic_0033023": 118, "ham_0004011": 118, "isic_0031186": 118, "ham_0000988": 118, "1924": 118, "isic_0033258": 118, "1925": 118, "isic_0032870": 118, "ham_0007245": 118, "1926": 118, "isic_0033999": 118, "ham_0002377": 118, "1927": 118, "isic_0033856": 118, "1928": 118, "isic_0029502": 118, "ham_0003617": 118, "1932": 118, "isic_0029933": 118, "ham_0007305": 118, "1934": 118, "isic_0031208": 118, "ham_0001299": 118, "1935": 118, "isic_0032424": 118, "ham_0001819": 118, "1942": 118, "isic_0031554": 118, "ham_0000433": 118, "1945": 118, "isic_0032466": 118, "ham_0005061": 118, "1949": 118, "isic_0029914": 118, "ham_0006626": 118, "1956": 118, "isic_0032110": 118, "ham_0002834": 118, "1960": 118, "isic_0031795": 118, "ham_0002711": 118, "1971": 118, "isic_0031408": 118, "ham_0000201": 118, "1972": 118, "isic_0031034": 118, "ham_0000888": 118, "1977": 118, "isic_0031666": 118, "ham_0000775": 118, "1979": 118, "isic_0029819": 118, "ham_0007586": 118, "1980": 118, "isic_0032197": 118, "ham_0003400": 118, "1983": 118, "isic_0032134": 118, "ham_0002430": 118, "1987": 118, "isic_0030390": 118, "ham_0000917": 118, "1991": 118, "isic_0030756": 118, "ham_0003176": 118, "1992": 118, "isic_0030187": 118, "ham_0002622": 118, "1995": 118, "isic_0030970": 118, "1996": 118, "isic_0030754": 118, "ham_0007502": 118, "1997": 118, "isic_0030034": 118, "ham_0006207": 118, "1998": 118, "isic_0029397": 118, "ham_0006538": 118, "1999": 118, "isic_0029316": 118, "ham_0006978": 118, "isic_0030356": 118, "ham_0005481": 118, "2007": 118, "isic_0030192": 118, "ham_0006453": 118, "isic_0029859": 118, "ham_0000492": 118, "2013": 118, "isic_0031077": 118, "ham_0005826": 118, "isic_0031999": 118, "ham_0003531": 118, "isic_0030366": 118, "ham_0002764": 118, "isic_0032245": 118, "ham_0004979": 118, "isic_0031386": 118, "ham_0000417": 118, "2024": 118, "isic_0031565": 118, "ham_0000442": 118, "2025": 118, "isic_0030512": 118, "ham_0006833": 118, "2029": 118, "isic_0031718": 118, "ham_0000863": 118, "2030": 118, "isic_0029591": 118, "ham_0005121": 118, "2031": 118, "isic_0030932": 118, "ham_0000241": 118, "2032": 118, "isic_0032036": 118, "ham_0004637": 118, "2034": 118, "isic_0031543": 118, "ham_0007188": 118, "2036": 118, "isic_0030107": 118, "ham_0004888": 118, "2039": 118, "isic_0029698": 118, "ham_0005425": 118, "2042": 118, "isic_0029937": 118, "ham_0000766": 118, "2043": 118, "isic_0030360": 118, "ham_0000220": 118, "2049": 118, "isic_0029843": 118, "ham_0006257": 118, "2050": 118, "isic_0029454": 118, "ham_0007019": 118, "2054": 118, "isic_0030501": 118, "ham_0000887": 118, "2060": 118, "isic_0030382": 118, "ham_0005640": 118, "2063": 118, "isic_0030689": 118, "ham_0000952": 118, "2071": 118, "isic_0032420": 118, "ham_0003055": 118, "2073": 118, "isic_0029744": 118, "ham_0003782": 118, "2078": 118, "isic_0032425": 118, "ham_0001349": 118, "2080": 118, "isic_0030110": 118, "ham_0001655": 118, "2084": 118, "isic_0031494": 118, "ham_0007238": 118, "2086": 118, "isic_0029319": 118, "ham_0005315": 118, "2093": 118, "isic_0032219": 118, "2094": 118, "isic_0029318": 118, "ham_0002609": 118, "2096": 118, "isic_0032070": 118, "2097": 118, "isic_0029839": 118, "ham_0002113": 118, "isic_0030747": 118, "ham_0006380": 118, "isic_0030784": 118, "2106": 118, "isic_0031146": 118, "ham_0005006": 118, "2107": 118, "isic_0031239": 118, "ham_0000767": 118, "2112": 118, "isic_0031529": 118, "ham_0001657": 118, "2117": 118, "isic_0030843": 118, "ham_0001069": 118, "2119": 118, "isic_0029780": 118, "ham_0001596": 118, "2122": 118, "isic_0030616": 118, "ham_0005623": 118, "2123": 118, "isic_0032192": 118, "ham_0007070": 118, "2126": 118, "isic_0032372": 118, "ham_0000125": 118, "2129": 118, "isic_0031915": 118, "ham_0000136": 118, "2132": 118, "isic_0030047": 118, "ham_0007242": 118, "2136": 118, "isic_0030910": 118, "ham_0001598": 118, "2137": 118, "isic_0031670": 118, "ham_0006130": 118, "2143": 118, "isic_0031339": 118, "ham_0001744": 118, "isic_0032430": 118, "ham_0006942": 118, "2146": 118, "isic_0029958": 118, "ham_0004507": 118, "isic_0032476": 118, "2152": 118, "isic_0031170": 118, "ham_0003428": 118, "2153": 118, "isic_0030423": 118, "2154": 118, "isic_0029353": 118, "2156": 118, "isic_0032504": 118, "ham_0001791": 118, "2157": 118, "isic_0029995": 118, "ham_0001835": 118, "2160": 118, "isic_0031908": 118, "ham_0002772": 118, "2161": 118, "isic_0030653": 118, "ham_0003957": 118, "2163": 118, "isic_0030950": 118, "ham_0006160": 118, "2167": 118, "isic_0029885": 118, "ham_0000856": 118, "2170": 118, "isic_0031550": 118, "ham_0002693": 118, "isic_0029642": 118, "ham_0006964": 118, "2178": 118, "isic_0029893": 118, "ham_0006699": 118, "2179": 118, "isic_0031417": 118, "isic_0030695": 118, "ham_0004164": 118, "2184": 118, "isic_0031203": 118, "2186": 118, "isic_0030183": 118, "ham_0005532": 118, "2187": 118, "isic_0031401": 118, "ham_0000593": 118, "2190": 118, "isic_0030255": 118, "ham_0002817": 118, "2193": 118, "isic_0029495": 118, "isic_0032269": 118, "ham_0003256": 118, "2195": 118, "isic_0031350": 118, "ham_0003435": 118, "2196": 118, "isic_0029574": 118, "ham_0005986": 118, "2199": 118, "isic_0030246": 118, "ham_0003149": 118, "2202": 118, "isic_0030032": 118, "ham_0005724": 118, "2206": 118, "isic_0031561": 118, "ham_0006744": 118, "2214": 118, "isic_0031410": 118, "2216": 118, "isic_0029705": 118, "ham_0004936": 118, "2219": 118, "isic_0032207": 118, "ham_0000513": 118, "2220": 118, "isic_0032149": 118, "ham_0001964": 118, "2221": 118, "isic_0032433": 118, "ham_0005504": 118, "2223": 118, "isic_0031931": 118, "ham_0005692": 118, "2225": 118, "isic_0030083": 118, "ham_0005746": 118, "2228": 118, "isic_0030002": 118, "2229": 118, "isic_0032204": 118, "ham_0005789": 118, "2232": 118, "isic_0032095": 118, "2233": 118, "isic_0031821": 118, "2235": 118, "isic_0030795": 118, "ham_0003601": 118, "2236": 118, "isic_0029480": 118, "ham_0004898": 118, "isic_0032232": 118, "ham_0004878": 118, "2245": 118, "isic_0031005": 118, "ham_0000517": 118, "2246": 118, "isic_0030507": 118, "2248": 118, "isic_0031498": 118, "ham_0001953": 118, "2256": 118, "isic_0032287": 118, "ham_0006223": 118, "2260": 118, "isic_0030901": 118, "ham_0002131": 118, "2262": 118, "isic_0030995": 118, "2263": 118, "isic_0031368": 118, "ham_0002576": 118, "2264": 118, "isic_0031900": 118, "ham_0001113": 118, "2265": 118, "isic_0029570": 118, "ham_0002130": 118, "2268": 118, "isic_0031389": 118, "ham_0002591": 118, "2274": 118, "isic_0030925": 118, "ham_0002613": 118, "2275": 118, "isic_0030122": 118, "ham_0003171": 118, "2276": 118, "isic_0031778": 118, "ham_0003509": 118, "2278": 118, "isic_0031377": 118, "ham_0000022": 118, "2279": 118, "isic_0030604": 118, "2281": 118, "isic_0031025": 118, "ham_0002911": 118, "2283": 118, "isic_0030951": 118, "ham_0000590": 118, "2284": 118, "isic_0031957": 118, "ham_0004081": 118, "2285": 118, "isic_0031303": 118, "ham_0004547": 118, "2286": 118, "isic_0031087": 118, "ham_0004596": 118, "isic_0029652": 118, "ham_0006832": 118, "2294": 118, "isic_0031295": 118, "2295": 118, "isic_0030929": 118, "ham_0003530": 118, "2305": 118, "isic_0032389": 118, "ham_0003102": 118, "2311": 118, "isic_0031746": 118, "ham_0003534": 118, "2313": 118, "isic_0030277": 118, "ham_0004047": 118, "2315": 118, "isic_0031844": 118, "ham_0000536": 118, "2318": 118, "isic_0031197": 118, "ham_0006889": 118, "vasc": 118, "2321": 118, "isic_0031270": 118, "2322": 118, "isic_0029486": 118, "ham_0001920": 118, "2323": 118, "isic_0031901": 118, "2324": 118, "isic_0032076": 118, "ham_0005155": 118, "2325": 118, "isic_0029404": 118, "ham_0002692": 118, "2327": 118, "isic_0030275": 118, "2328": 118, "isic_0031217": 118, "ham_0004765": 118, "2333": 118, "isic_0029448": 118, "ham_0002218": 118, "2336": 118, "isic_0030956": 118, "ham_0005713": 118, "2338": 118, "isic_0030770": 118, "ham_0002538": 118, "2341": 118, "isic_0032240": 118, "2342": 118, "isic_0031759": 118, "ham_0003925": 118, "2343": 118, "isic_0029889": 118, "ham_0006324": 118, "2344": 118, "isic_0030882": 118, "ham_0004455": 118, "2346": 118, "isic_0029514": 118, "ham_0007614": 118, "2347": 118, "isic_0032745": 118, "ham_0000494": 118, "2351": 118, "isic_0032557": 118, "2352": 118, "isic_0033092": 118, "isic_0033450": 118, "ham_0005878": 118, "isic_0033254": 118, "2357": 118, "isic_0033158": 118, "ham_0004776": 118, "2358": 118, "isic_0032867": 118, "2359": 118, "isic_0032545": 118, "2360": 118, "isic_0032692": 118, "ham_0000940": 118, "2361": 118, "isic_0033608": 118, "2362": 118, "isic_0033969": 118, "2363": 118, "isic_0033031": 118, "ham_0003862": 118, "2364": 118, "isic_0032775": 118, "2365": 118, "isic_0033458": 118, "2366": 118, "isic_0032614": 118, "ham_0006946": 118, "2367": 118, "isic_0033349": 118, "2368": 118, "isic_0032919": 118, "2369": 118, "isic_0032866": 118, "2370": 118, "isic_0033135": 118, "ham_0004791": 118, "2371": 118, "isic_0032538": 118, "2372": 118, "isic_0033591": 118, "2373": 118, "isic_0031648": 118, "ham_0005989": 118, "2374": 118, "isic_0033565": 118, "2375": 118, "isic_0033123": 118, "2376": 118, "isic_0033230": 118, "ham_0007097": 118, "2377": 118, "isic_0033762": 118, "2378": 118, "isic_0034214": 118, "2379": 118, "isic_0033749": 118, "ham_0001852": 118, "2380": 118, "isic_0034196": 118, "isic_0031090": 118, "ham_0001719": 118, "isic_0032270": 118, "ham_0005270": 118, "2383": 118, "isic_0031950": 118, "ham_0005158": 118, "2384": 118, "isic_0030722": 118, "ham_0004820": 118, "2388": 118, "isic_0030606": 118, "ham_0002610": 118, "2390": 118, "isic_0031346": 118, "ham_0001566": 118, "2392": 118, "isic_0031719": 118, "ham_0007020": 118, "2395": 118, "isic_0030070": 118, "2396": 118, "isic_0031093": 118, "ham_0000502": 118, "2397": 118, "isic_0029608": 118, "2398": 118, "isic_0032715": 118, "ham_0006852": 118, "2401": 118, "isic_0033991": 118, "2402": 118, "isic_0033817": 118, "ham_0001249": 118, "2403": 118, "isic_0032839": 118, "ham_0002498": 118, "2404": 118, "isic_0032932": 118, "2405": 118, "isic_0031996": 118, "ham_0003480": 118, "2406": 118, "isic_0032890": 118, "2407": 118, "isic_0033844": 118, "2408": 118, "isic_0029439": 118, "ham_0002390": 118, "2410": 118, "isic_0031201": 118, "ham_0004549": 118, "2411": 118, "isic_0030283": 118, "ham_0007372": 118, "2412": 118, "isic_0031706": 118, "ham_0000934": 118, "2413": 118, "isic_0032409": 118, "ham_0001238": 118, "2418": 118, "isic_0029742": 118, "ham_0002650": 118, "2424": 118, "isic_0029877": 118, "ham_0006193": 118, "isic_0031215": 118, "ham_0005885": 118, "2432": 118, "isic_0030104": 118, "ham_0001122": 118, "2435": 118, "isic_0031103": 118, "ham_0001372": 118, "2441": 118, "isic_0031065": 118, "ham_0000109": 118, "2442": 118, "isic_0031955": 118, "ham_0001091": 118, "2446": 118, "isic_0031276": 118, "ham_0006447": 118, "2449": 118, "isic_0032057": 118, "ham_0004862": 118, "2457": 118, "isic_0034093": 118, "ham_0003220": 118, "bcc": 118, "2464": 118, "isic_0031513": 118, "ham_0007141": 118, "2466": 118, "isic_0032384": 118, "ham_0007009": 118, "2467": 118, "isic_0029755": 118, "ham_0005776": 118, "2479": 118, "isic_0030574": 118, "ham_0000195": 118, "2486": 118, "isic_0031585": 118, "ham_0004219": 118, "2487": 118, "isic_0030446": 118, "ham_0003805": 118, "2491": 118, "isic_0031527": 118, "2492": 118, "isic_0031166": 118, "ham_0001610": 118, "2493": 118, "isic_0030893": 118, "ham_0002467": 118, "2495": 118, "isic_0030261": 118, "ham_0004871": 118, "2496": 118, "isic_0032696": 118, "ham_0000993": 118, "2498": 118, "isic_0029466": 118, "ham_0002021": 118, "isic_0031400": 118, "ham_0001331": 118, "2504": 118, "isic_0029747": 118, "ham_0006800": 118, "2505": 118, "isic_0030778": 118, "2506": 118, "isic_0031749": 118, "ham_0002791": 118, "2507": 118, "isic_0029847": 118, "2508": 118, "isic_0031943": 118, "ham_0000393": 118, "2509": 118, "isic_0030335": 118, "ham_0004603": 118, "2511": 118, "isic_0029647": 118, "ham_0003094": 118, "2515": 118, "isic_0029515": 118, "ham_0007002": 118, "2518": 118, "isic_0030271": 118, "ham_0005469": 118, "2519": 118, "isic_0031140": 118, "ham_0003229": 118, "2521": 118, "isic_0032139": 118, "ham_0003738": 118, "2522": 118, "isic_0031243": 118, "2523": 118, "isic_0030687": 118, "ham_0000791": 118, "2527": 118, "isic_0030766": 118, "ham_0006351": 118, "2531": 118, "isic_0030800": 118, "ham_0005921": 118, "2534": 118, "isic_0029341": 118, "ham_0002346": 118, "2537": 118, "isic_0031762": 118, "ham_0007428": 118, "2538": 118, "isic_0031442": 118, "ham_0005982": 118, "2544": 118, "isic_0032415": 118, "ham_0000463": 118, "2546": 118, "isic_0030177": 118, "2547": 118, "isic_0031284": 118, "ham_0002717": 118, "2548": 118, "isic_0031789": 118, "2549": 118, "isic_0032414": 118, "ham_0001926": 118, "2551": 118, "isic_0031824": 118, "ham_0001326": 118, "2552": 118, "isic_0030145": 118, "2553": 118, "isic_0031640": 118, "ham_0001239": 118, "2554": 118, "isic_0029899": 118, "ham_0005530": 118, "2556": 118, "isic_0030659": 118, "ham_0001618": 118, "2563": 118, "isic_0031272": 118, "ham_0006384": 118, "2569": 118, "isic_0030010": 118, "ham_0006548": 118, "2575": 118, "isic_0032482": 118, "ham_0006387": 118, "2577": 118, "isic_0029779": 118, "ham_0000009": 118, "2580": 118, "isic_0029669": 118, "ham_0001616": 118, "2581": 118, "isic_0031169": 118, "2582": 118, "isic_0030349": 118, "ham_0006572": 118, "2584": 118, "isic_0034160": 118, "2586": 118, "isic_0031489": 118, "ham_0003328": 118, "2588": 118, "isic_0032660": 118, "ham_0002565": 118, "2591": 118, "isic_0033504": 118, "2592": 118, "isic_0030114": 118, "ham_0005998": 118, "2595": 118, "isic_0032959": 118, "ham_0003427": 118, "2597": 118, "isic_0034306": 118, "ham_0002526": 118, "2598": 118, "isic_0032799": 118, "2599": 118, "isic_0033020": 118, "ham_0001138": 118, "2600": 118, "isic_0032768": 118, "2601": 118, "isic_0033205": 118, "2602": 118, "isic_0033271": 118, "ham_0000823": 118, "2603": 118, "isic_0033575": 118, "2604": 118, "isic_0032894": 118, "2605": 118, "isic_0033720": 118, "ham_0005396": 118, "2606": 118, "isic_0034255": 118, "2607": 118, "isic_0032834": 118, "2608": 118, "isic_0034058": 118, "ham_0000263": 118, "2610": 118, "isic_0033001": 118, "2611": 118, "isic_0033354": 118, "ham_0003887": 118, "2612": 118, "isic_0032857": 118, "2613": 118, "isic_0032906": 118, "2614": 118, "isic_0033579": 118, "ham_0000394": 118, "2616": 118, "isic_0034095": 118, "2617": 118, "isic_0034143": 118, "2618": 118, "isic_0032652": 118, "ham_0004083": 118, "2619": 118, "isic_0033551": 118, "2620": 118, "isic_0033571": 118, "2621": 118, "isic_0033666": 118, "ham_0002664": 118, "2622": 118, "isic_0033218": 118, "2623": 118, "isic_0033054": 118, "2624": 118, "isic_0033257": 118, "ham_0003046": 118, "2625": 118, "isic_0034276": 118, "2626": 118, "isic_0034119": 118, "2627": 118, "isic_0034047": 118, "ham_0002559": 118, "2628": 118, "isic_0034299": 118, "ham_0007335": 118, "2629": 118, "isic_0032808": 118, "2630": 118, "isic_0033483": 118, "ham_0007471": 118, "2631": 118, "isic_0032536": 118, "2632": 118, "isic_0034161": 118, "ham_0001243": 118, "2633": 118, "isic_0033747": 118, "2634": 118, "isic_0030314": 118, "ham_0004536": 118, "2636": 118, "isic_0033012": 118, "ham_0000795": 118, "2637": 118, "isic_0033468": 118, "2638": 118, "isic_0033609": 118, "ham_0002243": 118, "2639": 118, "isic_0032777": 118, "2640": 118, "isic_0033019": 118, "2641": 118, "isic_0033203": 118, "ham_0000879": 118, "2642": 118, "isic_0033366": 118, "2643": 118, "isic_0032816": 118, "2644": 118, "isic_0034015": 118, "ham_0003216": 118, "2648": 118, "isic_0034223": 118, "2649": 118, "isic_0032611": 118, "ham_0003072": 118, "2650": 118, "isic_0033499": 118, "2651": 118, "isic_0033372": 118, "ham_0001749": 118, "2652": 118, "isic_0034066": 118, "2653": 118, "isic_0034123": 118, "ham_0006586": 118, "2654": 118, "isic_0034026": 118, "2655": 118, "isic_0032741": 118, "ham_0005478": 118, "2656": 118, "isic_0033301": 118, "2657": 118, "isic_0034155": 118, "ham_0003690": 118, "2658": 118, "isic_0033146": 118, "2659": 118, "isic_0033248": 118, "ham_0002397": 118, "2661": 118, "isic_0032850": 118, "ham_0007248": 118, "2663": 118, "isic_0030712": 118, "2664": 118, "isic_0032727": 118, "ham_0004848": 118, "2665": 118, "isic_0032991": 118, "ham_0004849": 118, "2666": 118, "isic_0033979": 118, "2667": 118, "isic_0031836": 118, "ham_0003600": 118, "2669": 118, "isic_0031569": 118, "ham_0003039": 118, "isic_0029564": 118, "ham_0004515": 118, "2675": 118, "isic_0031225": 118, "ham_0000352": 118, "2678": 118, "isic_0031450": 118, "ham_0003373": 118, "2679": 118, "isic_0031026": 118, "ham_0001640": 118, "2680": 118, "isic_0032146": 118, "ham_0004435": 118, "2681": 118, "isic_0031539": 118, "ham_0005302": 118, "2683": 118, "isic_0030233": 118, "ham_0003112": 118, "2684": 118, "isic_0029331": 118, "ham_0002069": 118, "2690": 118, "isic_0029546": 118, "ham_0005482": 118, "2691": 118, "isic_0029392": 118, "ham_0002983": 118, "2692": 118, "isic_0031698": 118, "ham_0000082": 118, "2694": 118, "isic_0031245": 118, "ham_0005901": 118, "2695": 118, "isic_0031351": 118, "ham_0006274": 118, "2699": 118, "isic_0031413": 118, "ham_0004521": 118, "2701": 118, "isic_0032497": 118, "ham_0001759": 118, "2702": 118, "isic_0031643": 118, "ham_0003851": 118, "2708": 118, "isic_0030644": 118, "ham_0003853": 118, "2710": 118, "isic_0030737": 118, "ham_0003119": 118, "2719": 118, "isic_0031384": 118, "ham_0002427": 118, "2726": 118, "isic_0031712": 118, "ham_0004147": 118, "2729": 118, "isic_0032439": 118, "ham_0005547": 118, "2730": 118, "isic_0029391": 118, "ham_0006575": 118, "2731": 118, "isic_0030403": 118, "ham_0004027": 118, "2732": 118, "isic_0029805": 118, "ham_0005575": 118, "2738": 118, "isic_0029412": 118, "ham_0002024": 118, "2743": 118, "isic_0030528": 118, "ham_0000512": 118, "2746": 118, "isic_0030511": 118, "ham_0005599": 118, "2747": 118, "isic_0030594": 118, "ham_0002736": 118, "2748": 118, "isic_0031236": 118, "ham_0002744": 118, "2753": 118, "isic_0030813": 118, "ham_0006465": 118, "2754": 118, "isic_0032174": 118, "ham_0005559": 118, "2757": 118, "isic_0031266": 118, "ham_0006609": 118, "2759": 118, "isic_0032194": 118, "ham_0003596": 118, "2764": 118, "isic_0029489": 118, "ham_0006005": 118, "2765": 118, "isic_0029974": 118, "ham_0004627": 118, "2766": 118, "isic_0031597": 118, "2767": 118, "isic_0032307": 118, "ham_0001301": 118, "2776": 118, "isic_0032022": 118, "ham_0005417": 118, "2781": 118, "isic_0029539": 118, "ham_0005971": 118, "2783": 118, "isic_0031258": 118, "2784": 118, "isic_0030197": 118, "ham_0006727": 118, "2785": 118, "isic_0029655": 118, "2787": 118, "isic_0031175": 118, "ham_0001654": 118, "2791": 118, "isic_0030755": 118, "2792": 118, "isic_0031976": 118, "ham_0006851": 118, "2794": 118, "isic_0031122": 118, "ham_0003389": 118, "2795": 118, "isic_0032225": 118, "ham_0001388": 118, "2798": 118, "isic_0029856": 118, "ham_0001457": 118, "2799": 118, "isic_0031007": 118, "ham_0000153": 118, "isic_0032290": 118, "ham_0004480": 118, "2802": 118, "isic_0030230": 118, "ham_0007588": 118, "2803": 118, "isic_0031728": 118, "2804": 118, "isic_0031526": 118, "2805": 118, "isic_0032461": 118, "ham_0001528": 118, "2813": 118, "isic_0030690": 118, "ham_0004514": 118, "2814": 118, "isic_0030181": 118, "ham_0005985": 118, "2818": 118, "isic_0030964": 118, "ham_0007557": 118, "2820": 118, "isic_0031009": 118, "ham_0001434": 118, "2821": 118, "isic_0030452": 118, "ham_0004235": 118, "2823": 118, "isic_0031925": 118, "ham_0001707": 118, "2824": 118, "isic_0031095": 118, "ham_0005798": 118, "2825": 118, "isic_0032246": 118, "ham_0005509": 118, "2827": 118, "isic_0031057": 118, "2829": 118, "isic_0029524": 118, "ham_0003191": 118, "2836": 118, "isic_0031294": 118, "ham_0004365": 118, "2839": 118, "isic_0031154": 118, "ham_0005371": 118, "2842": 118, "isic_0031056": 118, "ham_0007507": 118, "2844": 118, "isic_0029820": 118, "ham_0007627": 118, "2846": 118, "isic_0029644": 118, "ham_0005184": 118, "2848": 118, "isic_0031063": 118, "ham_0003764": 118, "2849": 118, "isic_0032314": 118, "ham_0007611": 118, "2851": 118, "isic_0029323": 118, "ham_0000872": 118, "2853": 118, "isic_0031520": 118, "2854": 118, "isic_0031171": 118, "2855": 118, "isic_0031552": 118, "ham_0006588": 118, "2856": 118, "isic_0030526": 118, "ham_0002313": 118, "2861": 118, "isic_0029337": 118, "ham_0002506": 118, "2865": 118, "isic_0030096": 118, "ham_0003669": 118, "2866": 118, "isic_0029831": 118, "ham_0004711": 118, "2868": 118, "isic_0030514": 118, "ham_0006872": 118, "2869": 118, "isic_0031407": 118, "ham_0001575": 118, "2873": 118, "isic_0032030": 118, "2876": 118, "isic_0031651": 118, "ham_0006631": 118, "2877": 118, "isic_0029919": 118, "ham_0005721": 118, "2880": 118, "isic_0031378": 118, "ham_0002998": 118, "2882": 118, "isic_0030868": 118, "ham_0001693": 118, "2888": 118, "isic_0029372": 118, "ham_0000451": 118, "2891": 118, "isic_0030782": 118, "2892": 118, "isic_0030915": 118, "ham_0003043": 118, "2893": 118, "isic_0031318": 118, "ham_0001424": 118, "2894": 118, "isic_0031470": 118, "2895": 118, "isic_0032092": 118, "ham_0005379": 118, "2896": 118, "isic_0029602": 118, "ham_0003991": 118, "2900": 118, "isic_0030954": 118, "ham_0003115": 118, "2902": 118, "isic_0031062": 118, "ham_0001183": 118, "2903": 118, "isic_0030094": 118, "ham_0003101": 118, "2905": 118, "isic_0030352": 118, "ham_0001129": 118, "2908": 118, "isic_0029745": 118, "ham_0003941": 118, "2909": 118, "isic_0030746": 118, "ham_0004621": 118, "2912": 118, "isic_0031986": 118, "ham_0000658": 118, "2914": 118, "isic_0029342": 118, "ham_0007139": 118, "2919": 118, "isic_0029680": 118, "ham_0001237": 118, "2922": 118, "isic_0030339": 118, "ham_0000915": 118, "2923": 118, "isic_0032132": 118, "2925": 118, "isic_0029545": 118, "ham_0000496": 118, "2926": 118, "isic_0031298": 118, "ham_0005334": 118, "2928": 118, "isic_0030249": 118, "ham_0003444": 118, "2929": 118, "isic_0032302": 118, "ham_0006765": 118, "2930": 118, "isic_0029352": 118, "isic_0031697": 118, "ham_0003177": 118, "2935": 118, "isic_0029917": 118, "ham_0007364": 118, "2936": 118, "isic_0029501": 118, "ham_0002018": 118, "2939": 118, "isic_0030138": 118, "ham_0006111": 118, "2940": 118, "isic_0032185": 118, "2941": 118, "isic_0032222": 118, "ham_0001415": 118, "2942": 118, "isic_0032429": 118, "ham_0005973": 118, "2945": 118, "isic_0029951": 118, "2946": 118, "isic_0031614": 118, "ham_0006049": 118, "2948": 118, "isic_0029857": 118, "ham_0005856": 118, "2954": 118, "isic_0031263": 118, "ham_0007289": 118, "2956": 118, "isic_0032164": 118, "ham_0000807": 118, "2958": 118, "isic_0031041": 118, "ham_0002733": 118, "isic_0032316": 118, "ham_0000868": 118, "2961": 118, "isic_0032318": 118, "ham_0006444": 118, "2967": 118, "isic_0030767": 118, "ham_0004685": 118, "2968": 118, "isic_0032061": 118, "2969": 118, "isic_0031971": 118, "ham_0006564": 118, "2970": 118, "isic_0031721": 118, "2971": 118, "isic_0031531": 118, "ham_0001215": 118, "2974": 118, "isic_0032212": 118, "ham_0004932": 118, "nv": 118, "follow_up": 118, "2977": 118, "isic_0029828": 118, "ham_0006510": 118, "2979": 118, "isic_0031588": 118, "ham_0007567": 118, "2980": 118, "isic_0031325": 118, "ham_0002082": 118, "2983": 118, "isic_0032115": 118, "ham_0000701": 118, "2984": 118, "isic_0031503": 118, "ham_0002808": 118, "2987": 118, "isic_0032446": 118, "ham_0002483": 118, "2989": 118, "isic_0032285": 118, "ham_0006830": 118, "2990": 118, "isic_0029979": 118, "ham_0004233": 118, "2992": 118, "isic_0029624": 118, "ham_0006489": 118, "2993": 118, "isic_0031282": 118, "ham_0003042": 118, "2998": 118, "isic_0029961": 118, "ham_0000727": 118, "isic_0032226": 118, "ham_0000289": 118, "3001": 118, "isic_0031536": 118, "ham_0007339": 118, "isic_0029594": 118, "ham_0003227": 118, "3008": 118, "isic_0031575": 118, "ham_0000699": 118, "3009": 118, "isic_0032060": 118, "ham_0005508": 118, "3011": 118, "isic_0029347": 118, "ham_0000256": 118, "3014": 118, "isic_0030435": 118, "ham_0002877": 118, "3018": 118, "isic_0031184": 118, "ham_0004290": 118, "3023": 118, "isic_0031269": 118, "ham_0001965": 118, "3028": 118, "isic_0030035": 118, "ham_0001065": 118, "3030": 118, "isic_0031403": 118, "ham_0006421": 118, "3031": 118, "isic_0030993": 118, "ham_0006998": 118, "3034": 118, "isic_0031068": 118, "ham_0003396": 118, "3036": 118, "isic_0030791": 118, "ham_0002265": 118, "3038": 118, "isic_0031463": 118, "ham_0001263": 118, "3039": 118, "isic_0031974": 118, "ham_0000758": 118, "3041": 118, "isic_0030517": 118, "ham_0005093": 118, "3045": 118, "isic_0031455": 118, "ham_0000841": 118, "3046": 118, "isic_0029569": 118, "ham_0005853": 118, "3048": 118, "isic_0029351": 118, "ham_0006224": 118, "3049": 118, "isic_0030102": 118, "ham_0005449": 118, "3051": 118, "isic_0031486": 118, "ham_0005487": 118, "3052": 118, "isic_0029526": 118, "ham_0001061": 118, "3053": 118, "isic_0031895": 118, "ham_0007316": 118, "3055": 118, "isic_0030072": 118, "ham_0005384": 118, "3056": 118, "isic_0031935": 118, "ham_0001270": 118, "3059": 118, "isic_0030820": 118, "ham_0002112": 118, "3060": 118, "isic_0032210": 118, "ham_0001227": 118, "3061": 118, "isic_0031845": 118, "ham_0007203": 118, "3062": 118, "isic_0030148": 118, "ham_0000381": 118, "3068": 118, "isic_0029540": 118, "ham_0003516": 118, "3069": 118, "isic_0032016": 118, "ham_0007551": 118, "3071": 118, "isic_0032048": 118, "ham_0000742": 118, "isic_0030013": 118, "ham_0001530": 118, "3074": 118, "isic_0031371": 118, "ham_0001079": 118, "3075": 118, "isic_0030523": 118, "ham_0006362": 118, "3077": 118, "isic_0031100": 118, "ham_0006178": 118, "3078": 118, "isic_0031671": 118, "ham_0004264": 118, "3079": 118, "isic_0029637": 118, "ham_0001807": 118, "3081": 118, "isic_0031207": 118, "ham_0001090": 118, "3086": 118, "isic_0030918": 118, "ham_0001103": 118, "3088": 118, "isic_0031926": 118, "ham_0007391": 118, "isic_0031652": 118, "ham_0004789": 118, "3092": 118, "isic_0030846": 118, "ham_0006242": 118, "3093": 118, "isic_0029829": 118, "ham_0006992": 118, "3094": 118, "isic_0031297": 118, "ham_0003323": 118, "3096": 118, "isic_0032391": 118, "ham_0004481": 118, "3097": 118, "isic_0032169": 118, "ham_0005044": 118, "3099": 118, "isic_0029870": 118, "ham_0002151": 118, "3101": 118, "isic_0031833": 118, "ham_0006703": 118, "3106": 118, "isic_0031164": 118, "ham_0007230": 118, "3108": 118, "isic_0029998": 118, "ham_0005401": 118, "3109": 118, "isic_0031579": 118, "ham_0003020": 118, "3110": 118, "isic_0032317": 118, "ham_0001629": 118, "3113": 118, "isic_0029997": 118, "ham_0000526": 118, "3114": 118, "isic_0029685": 118, "ham_0002443": 118, "3115": 118, "isic_0030338": 118, "ham_0001775": 118, "3117": 118, "isic_0030907": 118, "ham_0006863": 118, "3118": 118, "isic_0030428": 118, "ham_0002508": 118, "3119": 118, "isic_0029373": 118, "ham_0003671": 118, "3121": 118, "isic_0030421": 118, "ham_0007183": 118, "3123": 118, "isic_0029911": 118, "ham_0000647": 118, "3124": 118, "isic_0030682": 118, "ham_0002924": 118, "isic_0031332": 118, "ham_0001021": 118, "3131": 118, "isic_0031966": 118, "ham_0005792": 118, "3132": 118, "isic_0032501": 118, "ham_0001467": 118, "3137": 118, "isic_0029888": 118, "ham_0003217": 118, "3144": 118, "isic_0032087": 118, "ham_0001323": 118, "isic_0032387": 118, "ham_0005867": 118, "3147": 118, "isic_0031604": 118, "ham_0004792": 118, "3149": 118, "isic_0030617": 118, "ham_0006778": 118, "isic_0029496": 118, "ham_0001448": 118, "3159": 118, "isic_0031331": 118, "ham_0004419": 118, "3164": 118, "isic_0031997": 118, "ham_0003250": 118, "3168": 118, "isic_0030669": 118, "ham_0007244": 118, "3169": 118, "isic_0032490": 118, "ham_0002620": 118, "3170": 118, "isic_0030642": 118, "ham_0007023": 118, "3171": 118, "isic_0030050": 118, "ham_0001662": 118, "3174": 118, "isic_0030573": 118, "ham_0003665": 118, "3179": 118, "isic_0029966": 118, "ham_0003064": 118, "3183": 118, "isic_0031106": 118, "ham_0004100": 118, "3191": 118, "isic_0032434": 118, "ham_0003302": 118, "3196": 118, "isic_0030016": 118, "ham_0003673": 118, "3197": 118, "isic_0030287": 118, "ham_0004055": 118, "3203": 118, "isic_0030888": 118, "ham_0005838": 118, "3209": 118, "isic_0030599": 118, "ham_0004074": 118, "3211": 118, "isic_0032153": 118, "ham_0001627": 118, "3212": 118, "isic_0029523": 118, "ham_0005134": 118, "3214": 118, "isic_0030541": 118, "ham_0006657": 118, "3215": 118, "isic_0032211": 118, "ham_0000041": 118, "3216": 118, "isic_0031388": 118, "ham_0003463": 118, "3227": 118, "isic_0029336": 118, "ham_0005863": 118, "3231": 118, "isic_0031653": 118, "ham_0004006": 118, "3238": 118, "isic_0030128": 118, "ham_0002466": 118, "3240": 118, "isic_0032100": 118, "ham_0000101": 118, "3241": 118, "isic_0031632": 118, "ham_0005072": 118, "3243": 118, "isic_0031453": 118, "ham_0000015": 118, "3245": 118, "isic_0030214": 118, "ham_0006216": 118, "3247": 118, "isic_0031099": 118, "ham_0004544": 118, "3250": 118, "isic_0031773": 118, "ham_0007065": 118, "3256": 118, "isic_0031881": 118, "ham_0006544": 118, "3257": 118, "isic_0029892": 118, "ham_0006511": 118, "3259": 118, "isic_0029943": 118, "ham_0002632": 118, "3261": 118, "isic_0029561": 118, "ham_0005046": 118, "3262": 118, "isic_0030550": 118, "ham_0000219": 118, "3270": 118, "isic_0031704": 118, "ham_0002918": 118, "3271": 118, "isic_0030235": 118, "ham_0002896": 118, "3272": 118, "isic_0031701": 118, "ham_0005142": 118, "3275": 118, "isic_0031185": 118, "ham_0000329": 118, "3277": 118, "isic_0029463": 118, "ham_0003704": 118, "3279": 118, "isic_0029815": 118, "ham_0006537": 118, "3280": 118, "isic_0030968": 118, "ham_0006194": 118, "3282": 118, "isic_0032025": 118, "ham_0001906": 118, "3285": 118, "isic_0031157": 118, "ham_0003238": 118, "3286": 118, "isic_0031234": 118, "ham_0006177": 118, "3287": 118, "isic_0031907": 118, "ham_0004177": 118, "3288": 118, "isic_0032254": 118, "ham_0001548": 118, "3292": 118, "isic_0030903": 118, "ham_0005055": 118, "3294": 118, "isic_0030292": 118, "ham_0002387": 118, "3297": 118, "isic_0031730": 118, "ham_0003648": 118, "3301": 118, "isic_0030469": 118, "ham_0005810": 118, "3302": 118, "isic_0030170": 118, "ham_0006845": 118, "3303": 118, "isic_0030322": 118, "ham_0005279": 118, "3306": 118, "isic_0030885": 118, "ham_0000631": 118, "3307": 118, "isic_0031638": 118, "ham_0002704": 118, "3308": 118, "isic_0031330": 118, "ham_0002495": 118, "3313": 118, "isic_0032011": 118, "ham_0002433": 118, "3315": 118, "isic_0030540": 118, "ham_0000529": 118, "3316": 118, "isic_0031151": 118, "ham_0003438": 118, "3317": 118, "isic_0030308": 118, "ham_0006250": 118, "3320": 118, "isic_0030470": 118, "ham_0001876": 118, "3321": 118, "isic_0032366": 118, "ham_0004046": 118, "3324": 118, "isic_0030936": 118, "ham_0002066": 118, "3329": 118, "isic_0030168": 118, "ham_0000966": 118, "3330": 118, "isic_0031229": 118, "ham_0004489": 118, "3331": 118, "isic_0031777": 118, "ham_0006909": 118, "3332": 118, "isic_0030729": 118, "ham_0003048": 118, "3337": 118, "isic_0030457": 118, "ham_0006662": 118, "3338": 118, "isic_0029729": 118, "ham_0003008": 118, "3339": 118, "isic_0032442": 118, "ham_0000812": 118, "3349": 118, "isic_0030302": 118, "ham_0000058": 118, "3354": 118, "isic_0031606": 118, "ham_0006270": 118, "3356": 118, "isic_0031422": 118, "ham_0003375": 118, "3357": 118, "isic_0032453": 118, "ham_0000132": 118, "3358": 118, "isic_0029784": 118, "ham_0005563": 118, "3359": 118, "isic_0029633": 118, "ham_0002302": 118, "3360": 118, "isic_0030880": 118, "ham_0004803": 118, "3364": 118, "isic_0031174": 118, "ham_0000713": 118, "3368": 118, "isic_0031319": 118, "ham_0002845": 118, "3369": 118, "isic_0030376": 118, "ham_0000053": 118, "3373": 118, "isic_0029822": 118, "ham_0006332": 118, "3374": 118, "isic_0031776": 118, "ham_0002404": 118, "3376": 118, "isic_0029385": 118, "ham_0005187": 118, "3378": 118, "isic_0029918": 118, "ham_0000170": 118, "3384": 118, "isic_0031237": 118, "ham_0001978": 118, "3388": 118, "isic_0029876": 118, "ham_0002286": 118, "3391": 118, "isic_0029701": 118, "ham_0001425": 118, "3394": 118, "isic_0030536": 118, "ham_0002782": 118, "3400": 118, "isic_0030902": 118, "ham_0004790": 118, "3401": 118, "isic_0031837": 118, "ham_0005975": 118, "3406": 118, "isic_0030774": 118, "ham_0002889": 118, "3407": 118, "isic_0030041": 118, "ham_0000925": 118, "3408": 118, "isic_0029317": 118, "ham_0005629": 118, "3410": 118, "isic_0030797": 118, "ham_0006691": 118, "3412": 118, "isic_0031690": 118, "ham_0006809": 118, "3413": 118, "isic_0029619": 118, "ham_0002080": 118, "3420": 118, "isic_0030906": 118, "ham_0004847": 118, "3424": 118, "isic_0031291": 118, "ham_0001918": 118, "3426": 118, "isic_0031947": 118, "ham_0002961": 118, "3427": 118, "isic_0030904": 118, "ham_0000120": 118, "3428": 118, "isic_0031938": 118, "ham_0004613": 118, "3431": 118, "isic_0029386": 118, "ham_0004707": 118, "3433": 118, "isic_0029410": 118, "ham_0004286": 118, "3435": 118, "isic_0029675": 118, "ham_0001314": 118, "3436": 118, "isic_0029751": 118, "ham_0004786": 118, "3437": 118, "isic_0030293": 118, "ham_0007618": 118, "3439": 118, "isic_0031035": 118, "ham_0004253": 118, "3440": 118, "isic_0029604": 118, "ham_0001804": 118, "3441": 118, "isic_0031771": 118, "ham_0001582": 118, "3443": 118, "isic_0031572": 118, "ham_0002662": 118, "3445": 118, "isic_0032426": 118, "ham_0007527": 118, "3446": 118, "isic_0030411": 118, "ham_0001392": 118, "3447": 118, "isic_0030315": 118, "ham_0002584": 118, "3448": 118, "isic_0030269": 118, "ham_0006817": 118, "3449": 118, "isic_0031571": 118, "ham_0003233": 118, "3451": 118, "isic_0032059": 118, "ham_0001661": 118, "3452": 118, "isic_0031069": 118, "ham_0003122": 118, "3453": 118, "isic_0031219": 118, "ham_0004851": 118, "3457": 118, "isic_0031781": 118, "ham_0004263": 118, "3458": 118, "isic_0030120": 118, "ham_0000729": 118, "3464": 118, "isic_0031534": 118, "ham_0002111": 118, "3468": 118, "isic_0031477": 118, "ham_0005464": 118, "3477": 118, "isic_0031153": 118, "ham_0004861": 118, "3478": 118, "isic_0030483": 118, "ham_0006569": 118, "3479": 118, "isic_0031995": 118, "ham_0006649": 118, "3486": 118, "isic_0029469": 118, "ham_0003976": 118, "3489": 118, "isic_0030289": 118, "ham_0002836": 118, "3490": 118, "isic_0030836": 118, "ham_0001554": 118, "3493": 118, "isic_0029618": 118, "ham_0005655": 118, "3494": 118, "isic_0030204": 118, "ham_0005104": 118, "3495": 118, "isic_0030003": 118, "ham_0005229": 118, "3498": 118, "isic_0032321": 118, "ham_0006859": 118, "3499": 118, "isic_0030658": 118, "ham_0002474": 118, "3500": 118, "isic_0032193": 118, "ham_0007492": 118, "3501": 118, "isic_0030944": 118, "ham_0000858": 118, "3502": 118, "isic_0030566": 118, "ham_0002464": 118, "3504": 118, "isic_0030400": 118, "ham_0001145": 118, "3511": 118, "isic_0030282": 118, "ham_0005211": 118, "3512": 118, "isic_0029703": 118, "ham_0000617": 118, "3521": 118, "isic_0031699": 118, "ham_0003611": 118, "3522": 118, "isic_0031213": 118, "ham_0005225": 118, "3523": 118, "isic_0031038": 118, "ham_0007323": 118, "3524": 118, "isic_0032337": 118, "ham_0002038": 118, "3525": 118, "isic_0031102": 118, "ham_0004122": 118, "3528": 118, "isic_0032231": 118, "ham_0001591": 118, "3530": 118, "isic_0029950": 118, "ham_0000232": 118, "3535": 118, "isic_0030761": 118, "ham_0002949": 118, "3537": 118, "isic_0031402": 118, "ham_0002505": 118, "3538": 118, "isic_0031461": 118, "ham_0001241": 118, "3539": 118, "isic_0030862": 118, "ham_0006428": 118, "3540": 118, "isic_0030049": 118, "ham_0007469": 118, "isic_0032162": 118, "ham_0001188": 118, "3544": 118, "isic_0030957": 118, "ham_0003371": 118, "3549": 118, "isic_0030547": 118, "ham_0006956": 118, "3551": 118, "isic_0031288": 118, "ham_0005182": 118, "3552": 118, "isic_0031392": 118, "ham_0007465": 118, "3554": 118, "isic_0031909": 118, "ham_0007266": 118, "3556": 118, "isic_0030787": 118, "ham_0005066": 118, "3559": 118, "isic_0030000": 118, "ham_0004735": 118, "3560": 118, "isic_0031199": 118, "ham_0006046": 118, "3564": 118, "isic_0031250": 118, "ham_0005812": 118, "3571": 118, "isic_0031438": 118, "ham_0005001": 118, "3574": 118, "isic_0029972": 118, "ham_0002997": 118, "3578": 118, "isic_0030519": 118, "ham_0005703": 118, "3579": 118, "isic_0031021": 118, "ham_0006780": 118, "3586": 118, "isic_0031469": 118, "ham_0003283": 118, "3589": 118, "isic_0032073": 118, "ham_0001794": 118, "3590": 118, "isic_0030871": 118, "ham_0004533": 118, "3597": 118, "isic_0031582": 118, "ham_0006299": 118, "3598": 118, "isic_0029699": 118, "ham_0005241": 118, "3603": 118, "isic_0032228": 118, "ham_0003984": 118, "3605": 118, "isic_0032201": 118, "ham_0000227": 118, "3608": 118, "isic_0032066": 118, "ham_0002225": 118, "3609": 118, "isic_0030955": 118, "ham_0000657": 118, "3612": 118, "isic_0031279": 118, "ham_0006339": 118, "3614": 118, "isic_0030804": 118, "ham_0000702": 118, "3615": 118, "isic_0029628": 118, "ham_0004227": 118, "3616": 118, "isic_0032288": 118, "ham_0006100": 118, "3619": 118, "isic_0031051": 118, "ham_0003748": 118, "3623": 118, "isic_0031437": 118, "ham_0001376": 118, "3628": 118, "isic_0031313": 118, "ham_0004094": 118, "3635": 118, "isic_0030569": 118, "ham_0003924": 118, "3637": 118, "isic_0031661": 118, "ham_0001519": 118, "3640": 118, "isic_0032419": 118, "ham_0004879": 118, "3650": 118, "isic_0031797": 118, "ham_0001064": 118, "3651": 118, "isic_0030943": 118, "ham_0000518": 118, "3653": 118, "isic_0029848": 118, "ham_0001993": 118, "3654": 118, "isic_0030736": 118, "ham_0004818": 118, "3658": 118, "isic_0031685": 118, "ham_0002054": 118, "3659": 118, "isic_0029426": 118, "ham_0002250": 118, "3663": 118, "isic_0029335": 118, "ham_0005119": 118, "3666": 118, "isic_0030875": 118, "ham_0001544": 118, "3667": 118, "isic_0031647": 118, "ham_0005088": 118, "3670": 118, "isic_0030351": 118, "ham_0004017": 118, "3671": 118, "isic_0029883": 118, "ham_0006382": 118, "3674": 118, "isic_0030206": 118, "ham_0000191": 118, "3684": 118, "isic_0029381": 118, "ham_0002681": 118, "3685": 118, "isic_0030274": 118, "ham_0005100": 118, "3686": 118, "isic_0032133": 118, "ham_0007104": 118, "3689": 118, "isic_0031256": 118, "ham_0005065": 118, "3690": 118, "isic_0032071": 118, "ham_0006982": 118, "3691": 118, "isic_0031114": 118, "ham_0005214": 118, "3695": 118, "isic_0030734": 118, "ham_0004692": 118, "3700": 118, "isic_0032484": 118, "ham_0005506": 118, "3701": 118, "isic_0032367": 118, "ham_0006415": 118, "3707": 118, "isic_0032202": 118, "ham_0001170": 118, "3714": 118, "isic_0030332": 118, "ham_0007035": 118, "3717": 118, "isic_0029697": 118, "ham_0005671": 118, "3719": 118, "isic_0031364": 118, "ham_0000723": 118, "3720": 118, "isic_0031963": 118, "ham_0005521": 118, "3728": 118, "isic_0031625": 118, "ham_0001862": 118, "3729": 118, "isic_0032002": 118, "ham_0005130": 118, "3731": 118, "isic_0031800": 118, "ham_0003551": 118, "3732": 118, "isic_0030743": 118, "ham_0003513": 118, "3734": 118, "isic_0030374": 118, "ham_0007095": 118, "3736": 118, "isic_0031398": 118, "ham_0005474": 118, "3739": 118, "isic_0029984": 118, "ham_0004523": 118, "3740": 118, "isic_0032039": 118, "ham_0005654": 118, "3741": 118, "isic_0030306": 118, "ham_0001904": 118, "3742": 118, "isic_0030202": 118, "ham_0003644": 118, "3745": 118, "isic_0030911": 118, "ham_0005111": 118, "3748": 118, "isic_0032166": 118, "ham_0001960": 118, "isic_0032266": 118, "ham_0002289": 118, "3751": 118, "isic_0031682": 118, "ham_0002144": 118, "3753": 118, "isic_0031734": 118, "ham_0000810": 118, "3755": 118, "isic_0029471": 118, "ham_0000205": 118, "3756": 118, "isic_0031173": 118, "ham_0005802": 118, "3759": 118, "isic_0030285": 118, "ham_0005178": 118, "3760": 118, "isic_0030570": 118, "ham_0004885": 118, "3764": 118, "isic_0030524": 118, "ham_0005419": 118, "3772": 118, "isic_0031018": 118, "ham_0005097": 118, "3773": 118, "isic_0029708": 118, "ham_0000899": 118, "3774": 118, "isic_0030538": 118, "ham_0003630": 118, "3775": 118, "isic_0031637": 118, "ham_0007159": 118, "3777": 118, "isic_0030092": 118, "ham_0002000": 118, "3779": 118, "isic_0031190": 118, "ham_0005028": 118, "3780": 118, "isic_0031544": 118, "ham_0001311": 118, "3781": 118, "isic_0030814": 118, "ham_0005675": 118, "3782": 118, "isic_0030193": 118, "ham_0000671": 118, "3783": 118, "isic_0030448": 118, "ham_0005013": 118, "3784": 118, "isic_0031504": 118, "ham_0006103": 118, "3785": 118, "isic_0031523": 118, "ham_0000686": 118, "3791": 118, "isic_0030679": 118, "ham_0005784": 118, "3792": 118, "isic_0032336": 118, "ham_0002460": 118, "3797": 118, "isic_0030477": 118, "ham_0000141": 118, "isic_0031882": 118, "ham_0005341": 118, "3801": 118, "isic_0031390": 118, "ham_0007544": 118, "3807": 118, "isic_0030878": 118, "ham_0007166": 118, "3809": 118, "isic_0032467": 118, "ham_0003234": 118, "isic_0029490": 118, "ham_0003721": 118, "3813": 118, "isic_0032005": 118, "ham_0000455": 118, "3814": 118, "isic_0031086": 118, "ham_0004159": 118, "3817": 118, "isic_0029346": 118, "ham_0004625": 118, "3818": 118, "isic_0030660": 118, "ham_0003128": 118, "3820": 118, "isic_0030461": 118, "ham_0004252": 118, "3821": 118, "isic_0030239": 118, "ham_0001648": 118, "3823": 118, "isic_0031774": 118, "ham_0002275": 118, "3827": 118, "isic_0031176": 118, "ham_0003952": 118, "3829": 118, "isic_0031865": 118, "ham_0001556": 118, "3830": 118, "isic_0030237": 118, "ham_0003210": 118, "3831": 118, "isic_0032091": 118, "ham_0003114": 118, "3832": 118, "isic_0030174": 118, "ham_0005259": 118, "3834": 118, "isic_0030099": 118, "ham_0000474": 118, "3836": 118, "isic_0032263": 118, "ham_0001290": 118, "3840": 118, "isic_0032241": 118, "ham_0000882": 118, "3843": 118, "isic_0029388": 118, "ham_0006144": 118, "3844": 118, "isic_0031367": 118, "ham_0006891": 118, "3845": 118, "isic_0030596": 118, "ham_0006285": 118, "isic_0030502": 118, "ham_0002991": 118, "3850": 118, "isic_0030974": 118, "ham_0005292": 118, "3851": 118, "isic_0031231": 118, "ham_0001875": 118, "3852": 118, "isic_0030337": 118, "ham_0002640": 118, "3856": 118, "isic_0030668": 118, "ham_0006579": 118, "3857": 118, "isic_0031636": 118, "ham_0003469": 118, "3860": 118, "isic_0031714": 118, "ham_0004307": 118, "3861": 118, "isic_0030481": 118, "ham_0003876": 118, "3866": 118, "isic_0032088": 118, "ham_0007045": 118, "3869": 118, "isic_0029367": 118, "ham_0003304": 118, "3870": 118, "isic_0032223": 118, "ham_0003059": 118, "3871": 118, "isic_0031355": 118, "ham_0007466": 118, "3874": 118, "isic_0030509": 118, "ham_0000027": 118, "3877": 118, "isic_0030407": 118, "ham_0005550": 118, "3886": 118, "isic_0032188": 118, "ham_0003865": 118, "3887": 118, "isic_0030490": 118, "ham_0001438": 118, "3889": 118, "isic_0031172": 118, "ham_0002165": 118, "3892": 118, "isic_0029689": 118, "ham_0006976": 118, "3894": 118, "isic_0030748": 118, "ham_0000540": 118, "3896": 118, "isic_0031820": 118, "ham_0000161": 118, "3898": 118, "isic_0029599": 118, "ham_0000499": 118, "3900": 118, "isic_0029436": 118, "ham_0006786": 118, "3903": 118, "isic_0032411": 118, "ham_0000034": 118, "3908": 118, "isic_0029999": 118, "ham_0001373": 118, "3910": 118, "isic_0030711": 118, "ham_0002418": 118, "3911": 118, "isic_0031978": 118, "ham_0007286": 118, "3912": 118, "isic_0032108": 118, "ham_0004823": 118, "3913": 118, "isic_0030971": 118, "ham_0001700": 118, "3914": 118, "isic_0031898": 118, "ham_0001008": 118, "3916": 118, "isic_0029330": 118, "ham_0005768": 118, "3917": 118, "isic_0032487": 118, "ham_0004301": 118, "3926": 118, "isic_0031357": 118, "ham_0003289": 118, "3928": 118, "isic_0032507": 118, "ham_0004725": 118, "3935": 118, "isic_0031156": 118, "ham_0003209": 118, "3937": 118, "isic_0030186": 118, "ham_0006850": 118, "3938": 118, "isic_0032234": 118, "ham_0004721": 118, "3941": 118, "isic_0029940": 118, "ham_0007297": 118, "3947": 118, "isic_0031097": 118, "ham_0004003": 118, "3949": 118, "isic_0032056": 118, "ham_0004306": 118, "3951": 118, "isic_0030493": 118, "ham_0004981": 118, "3954": 118, "isic_0030518": 118, "ham_0005872": 118, "3956": 118, "isic_0031715": 118, "ham_0003464": 118, "3957": 118, "isic_0029492": 118, "ham_0000735": 118, "3960": 118, "isic_0029508": 118, "ham_0004966": 118, "3965": 118, "isic_0032454": 118, "ham_0004634": 118, "3967": 118, "isic_0030484": 118, "ham_0007274": 118, "3968": 118, "isic_0031167": 118, "ham_0000270": 118, "3971": 118, "isic_0030418": 118, "ham_0005283": 118, "3974": 118, "isic_0031581": 118, "ham_0003329": 118, "isic_0030262": 118, "ham_0006474": 118, "3979": 118, "isic_0032399": 118, "ham_0005677": 118, "3981": 118, "isic_0029706": 118, "ham_0003972": 118, "3982": 118, "isic_0029550": 118, "ham_0002394": 118, "3983": 118, "isic_0029639": 118, "ham_0001543": 118, "isic_0032398": 118, "ham_0002555": 118, "3987": 118, "isic_0030556": 118, "ham_0001771": 118, "3988": 118, "isic_0029798": 118, "ham_0003517": 118, "3994": 118, "isic_0030560": 118, "ham_0007424": 118, "3998": 118, "isic_0030414": 118, "ham_0003717": 118, "3999": 118, "isic_0030972": 118, "ham_0002181": 118, "4003": 118, "isic_0032143": 118, "ham_0004796": 118, "4006": 118, "isic_0030141": 118, "ham_0001798": 118, "4008": 118, "isic_0029536": 118, "ham_0005223": 118, "4010": 118, "isic_0030815": 118, "ham_0000305": 118, "4014": 118, "isic_0030413": 118, "ham_0006546": 118, "4019": 118, "isic_0029312": 118, "ham_0006502": 118, "4027": 118, "isic_0030545": 118, "ham_0006831": 118, "4028": 118, "isic_0030307": 118, "ham_0003798": 118, "4032": 118, "isic_0030921": 118, "ham_0000350": 118, "4033": 118, "isic_0030657": 118, "ham_0005639": 118, "4034": 118, "isic_0030380": 118, "ham_0002405": 118, "4039": 118, "isic_0029772": 118, "ham_0006805": 118, "4041": 118, "isic_0031792": 118, "ham_0006961": 118, "4043": 118, "isic_0031656": 118, "ham_0000471": 118, "4050": 118, "isic_0030441": 118, "ham_0000479": 118, "4052": 118, "isic_0029871": 118, "ham_0003529": 118, "isic_0031532": 118, "ham_0004247": 118, "4058": 118, "isic_0030913": 118, "ham_0002969": 118, "4059": 118, "isic_0031434": 118, "ham_0003425": 118, "4063": 118, "isic_0029688": 118, "ham_0006369": 118, "4070": 118, "isic_0031320": 118, "ham_0001206": 118, "4071": 118, "isic_0030896": 118, "ham_0003406": 118, "isic_0032505": 118, "ham_0007077": 118, "4073": 118, "isic_0032080": 118, "ham_0005871": 118, "isic_0029456": 118, "ham_0006977": 118, "4075": 118, "isic_0030692": 118, "ham_0001828": 118, "4078": 118, "isic_0031055": 118, "ham_0004180": 118, "4084": 118, "isic_0032352": 118, "ham_0004244": 118, "4087": 118, "isic_0031273": 118, "ham_0006687": 118, "4090": 118, "isic_0029748": 118, "ham_0006260": 118, "4094": 118, "isic_0032361": 118, "ham_0001690": 118, "4099": 118, "isic_0030775": 118, "ham_0006665": 118, "4100": 118, "isic_0030752": 118, "ham_0001483": 118, "4102": 118, "isic_0031508": 118, "ham_0003453": 118, "4103": 118, "isic_0032339": 118, "ham_0007072": 118, "4105": 118, "isic_0031490": 118, "ham_0005685": 118, "4108": 118, "isic_0031675": 118, "ham_0006939": 118, "4109": 118, "isic_0030866": 118, "ham_0001636": 118, "4113": 118, "isic_0031998": 118, "ham_0002868": 118, "4114": 118, "isic_0029484": 118, "ham_0005296": 118, "4118": 118, "isic_0031693": 118, "ham_0007388": 118, "4124": 118, "isic_0031540": 118, "ham_0006374": 118, "4125": 118, "isic_0029980": 118, "ham_0000379": 118, "4130": 118, "isic_0032050": 118, "ham_0002875": 118, "4132": 118, "isic_0031033": 118, "ham_0006767": 118, "4133": 118, "isic_0029711": 118, "ham_0002544": 118, "4135": 118, "isic_0031104": 118, "ham_0000945": 118, "4142": 118, "isic_0029695": 118, "ham_0007377": 118, "4146": 118, "isic_0031165": 118, "ham_0006413": 118, "4147": 118, "isic_0030291": 118, "ham_0004983": 118, "4148": 118, "isic_0031785": 118, "ham_0001087": 118, "4154": 118, "isic_0032075": 118, "ham_0005534": 118, "4156": 118, "isic_0030402": 118, "ham_0002019": 118, "4160": 118, "isic_0029844": 118, "ham_0002999": 118, "4162": 118, "isic_0030265": 118, "ham_0003374": 118, "4165": 118, "isic_0030505": 118, "ham_0007190": 118, "4167": 118, "isic_0032500": 118, "ham_0006860": 118, "4170": 118, "isic_0030248": 118, "ham_0006403": 118, "4176": 118, "isic_0031144": 118, "ham_0006316": 118, "4178": 118, "isic_0030578": 118, "ham_0002789": 118, "4183": 118, "isic_0031724": 118, "ham_0006919": 118, "4188": 118, "isic_0032084": 118, "ham_0003067": 118, "4192": 118, "isic_0032052": 118, "ham_0000669": 118, "4197": 118, "isic_0029440": 118, "ham_0000829": 118, "4198": 118, "isic_0029387": 118, "ham_0000711": 118, "4204": 118, "isic_0031004": 118, "ham_0001408": 118, "4205": 118, "isic_0030373": 118, "ham_0007362": 118, "4210": 118, "isic_0032183": 118, "ham_0007351": 118, "4211": 118, "isic_0029322": 118, "ham_0001371": 118, "4213": 118, "isic_0030468": 118, "ham_0003703": 118, "4214": 118, "isic_0031240": 118, "ham_0004602": 118, "4216": 118, "isic_0030037": 118, "ham_0002568": 118, "4219": 118, "isic_0029449": 118, "ham_0000957": 118, "4221": 118, "isic_0032272": 118, "ham_0005917": 118, "4223": 118, "isic_0032320": 118, "ham_0005990": 118, "4224": 118, "isic_0032250": 118, "ham_0005875": 118, "4230": 118, "isic_0032239": 118, "ham_0004858": 118, "4234": 118, "isic_0030781": 118, "ham_0000592": 118, "4238": 118, "isic_0030450": 118, "ham_0006328": 118, "4246": 118, "isic_0031969": 118, "ham_0004528": 118, "4249": 118, "isic_0029795": 118, "ham_0002737": 118, "4251": 118, "isic_0031383": 118, "ham_0000030": 118, "4252": 118, "isic_0029721": 118, "ham_0006212": 118, "4253": 118, "isic_0030614": 118, "ham_0001568": 118, "4258": 118, "isic_0029992": 118, "ham_0002735": 118, "4259": 118, "isic_0031116": 118, "ham_0004217": 118, "4260": 118, "isic_0031535": 118, "ham_0003298": 118, "4261": 118, "isic_0030357": 118, "ham_0004026": 118, "4266": 118, "isic_0030513": 118, "ham_0006060": 118, "4268": 118, "isic_0030562": 118, "ham_0004093": 118, "4269": 118, "isic_0032198": 118, "ham_0001093": 118, "4272": 118, "isic_0030643": 118, "ham_0004894": 118, "4277": 118, "isic_0030684": 118, "ham_0007328": 118, "4278": 118, "isic_0031162": 118, "ham_0003490": 118, "4281": 118, "isic_0030916": 118, "ham_0006642": 118, "4282": 118, "isic_0032004": 118, "ham_0000623": 118, "4283": 118, "isic_0032413": 118, "ham_0004723": 118, "4287": 118, "isic_0030154": 118, "ham_0000293": 118, "4289": 118, "isic_0032180": 118, "ham_0004236": 118, "4295": 118, "isic_0032083": 118, "ham_0005491": 118, "4297": 118, "isic_0029906": 118, "ham_0001644": 118, "4302": 118, "isic_0031275": 118, "ham_0001827": 118, "4313": 118, "isic_0032120": 118, "ham_0000901": 118, "4314": 118, "isic_0031343": 118, "ham_0006505": 118, "isic_0031964": 118, "ham_0007181": 118, "4318": 118, "isic_0029702": 118, "ham_0000824": 118, "4319": 118, "isic_0030989": 118, "ham_0000784": 118, "4320": 118, "isic_0030131": 118, "ham_0002064": 118, "4321": 118, "isic_0030409": 118, "ham_0001181": 118, "isic_0029307": 118, "ham_0001127": 118, "4327": 118, "isic_0030196": 118, "ham_0006361": 118, "4329": 118, "isic_0029423": 118, "ham_0005177": 118, "4332": 118, "isic_0030385": 118, "ham_0000997": 118, "4335": 118, "isic_0030166": 118, "ham_0007270": 118, "4336": 118, "isic_0031296": 118, "ham_0002825": 118, "4337": 118, "isic_0032049": 118, "ham_0000839": 118, "4343": 118, "isic_0029556": 118, "ham_0001831": 118, "4356": 118, "isic_0029377": 118, "ham_0006973": 118, "4357": 118, "isic_0031775": 118, "ham_0000946": 118, "4358": 118, "isic_0031120": 118, "ham_0002014": 118, "4359": 118, "isic_0031089": 118, "ham_0003467": 118, "4362": 118, "isic_0030613": 118, "ham_0006298": 118, "4366": 118, "isic_0029864": 118, "ham_0000276": 118, "4369": 118, "isic_0031141": 118, "ham_0006278": 118, "4370": 118, "isic_0031230": 118, "ham_0003077": 118, "4375": 118, "isic_0031032": 118, "ham_0001611": 118, "4378": 118, "isic_0030554": 118, "ham_0005422": 118, "4379": 118, "isic_0031679": 118, "ham_0002219": 118, "4381": 118, "isic_0031373": 118, "ham_0004649": 118, "4382": 118, "isic_0031854": 118, "ham_0007593": 118, "4383": 118, "isic_0029714": 118, "ham_0006494": 118, "4387": 118, "isic_0030073": 118, "ham_0005764": 118, "4388": 118, "isic_0029517": 118, "ham_0004031": 118, "4389": 118, "isic_0032499": 118, "ham_0004250": 118, "4403": 118, "isic_0031635": 118, "ham_0000434": 118, "4407": 118, "isic_0030042": 118, "ham_0004436": 118, "4408": 118, "isic_0030764": 118, "ham_0001074": 118, "4409": 118, "isic_0030718": 118, "ham_0005373": 118, "4410": 118, "isic_0031260": 118, "ham_0001114": 118, "4412": 118, "isic_0030897": 118, "ham_0007213": 118, "4414": 118, "isic_0030837": 118, "ham_0007531": 118, "4415": 118, "isic_0029510": 118, "ham_0001364": 118, "4416": 118, "isic_0030068": 118, "ham_0005322": 118, "4417": 118, "isic_0030947": 118, "ham_0001850": 118, "4419": 118, "isic_0030220": 118, "ham_0004810": 118, "4420": 118, "isic_0029364": 118, "ham_0002635": 118, "4423": 118, "isic_0030857": 118, "ham_0003479": 118, "4436": 118, "isic_0029806": 118, "ham_0006204": 118, "4438": 118, "isic_0030863": 118, "ham_0005070": 118, "4439": 118, "isic_0029324": 118, "ham_0007380": 118, "4440": 118, "isic_0031864": 118, "ham_0001394": 118, "4442": 118, "isic_0031423": 118, "ham_0002982": 118, "4445": 118, "isic_0031816": 118, "ham_0005321": 118, "4448": 118, "isic_0029722": 118, "ham_0003338": 118, "4449": 118, "isic_0030975": 118, "ham_0005767": 118, "4452": 118, "isic_0032054": 118, "ham_0005350": 118, "4453": 118, "isic_0030101": 118, "ham_0004712": 118, "4454": 118, "isic_0031763": 118, "ham_0004551": 118, "4457": 118, "isic_0030295": 118, "ham_0007404": 118, "4458": 118, "isic_0030342": 118, "ham_0006508": 118, "4459": 118, "isic_0029542": 118, "ham_0006388": 118, "4461": 118, "isic_0029485": 118, "ham_0004457": 118, "4464": 118, "isic_0031801": 118, "ham_0000990": 118, "4466": 118, "isic_0029788": 118, "ham_0004822": 118, "4470": 118, "isic_0032479": 118, "ham_0006500": 118, "4471": 118, "isic_0031471": 118, "ham_0004154": 118, "4472": 118, "isic_0031030": 118, "ham_0001832": 118, "4473": 118, "isic_0031525": 118, "ham_0002633": 118, "4474": 118, "isic_0030480": 118, "ham_0004468": 118, "4475": 118, "isic_0029595": 118, "ham_0007520": 118, "4480": 118, "isic_0030867": 118, "ham_0007578": 118, "4482": 118, "isic_0030928": 118, "ham_0002047": 118, "4483": 118, "isic_0031954": 118, "ham_0003799": 118, "4486": 118, "isic_0031764": 118, "ham_0003454": 118, "4487": 118, "isic_0029419": 118, "ham_0002469": 118, "4488": 118, "isic_0030927": 118, "ham_0002948": 118, "4503": 118, "isic_0031348": 118, "ham_0003274": 118, "4504": 118, "isic_0029944": 118, "ham_0006119": 118, "4506": 118, "isic_0031128": 118, "ham_0004287": 118, "4507": 118, "isic_0029968": 118, "ham_0001559": 118, "4509": 118, "isic_0030529": 118, "ham_0001459": 118, "4513": 118, "isic_0030984": 118, "ham_0000317": 118, "4515": 118, "isic_0029874": 118, "ham_0003527": 118, "4516": 118, "isic_0030221": 118, "ham_0001350": 118, "4517": 118, "isic_0032268": 118, "ham_0000487": 118, "4518": 118, "isic_0029378": 118, "ham_0006620": 118, "4520": 118, "isic_0029903": 118, "ham_0001102": 118, "4528": 118, "isic_0031870": 118, "ham_0003028": 118, "4529": 118, "isic_0031427": 118, "ham_0002279": 118, "4534": 118, "isic_0029956": 118, "ham_0005073": 118, "4535": 118, "isic_0031782": 118, "ham_0002636": 118, "4537": 118, "isic_0029408": 118, "ham_0002122": 118, "4540": 118, "isic_0029684": 118, "ham_0005754": 118, "4542": 118, "isic_0030769": 118, "ham_0000131": 118, "4543": 118, "isic_0030853": 118, "ham_0000078": 118, "4544": 118, "isic_0032276": 118, "ham_0005174": 118, "4547": 118, "isic_0029816": 118, "ham_0003074": 118, "4548": 118, "isic_0031112": 118, "ham_0001924": 118, "4550": 118, "isic_0031391": 118, "ham_0002203": 118, "4553": 118, "isic_0032094": 118, "ham_0006087": 118, "4554": 118, "isic_0030612": 118, "ham_0000467": 118, "4564": 118, "isic_0031505": 118, "ham_0005991": 118, "4568": 118, "isic_0030855": 118, "ham_0007610": 118, "4569": 118, "isic_0030495": 118, "ham_0003111": 118, "4576": 118, "isic_0029762": 118, "ham_0007587": 118, "4579": 118, "isic_0031787": 118, "ham_0002478": 118, "4580": 118, "isic_0029758": 118, "ham_0004314": 118, "4581": 118, "isic_0031244": 118, "ham_0001822": 118, "4588": 118, "isic_0031467": 118, "ham_0002642": 118, "4592": 118, "isic_0032196": 118, "ham_0002188": 118, "4593": 118, "isic_0030884": 118, "ham_0006432": 118, "4594": 118, "isic_0032213": 118, "ham_0003656": 118, "4598": 118, "isic_0031891": 118, "ham_0000506": 118, "4599": 118, "isic_0029483": 118, "ham_0003433": 118, "4602": 118, "isic_0031655": 118, "ham_0003854": 118, "4610": 118, "isic_0032106": 118, "ham_0004526": 118, "4611": 118, "isic_0030368": 118, "ham_0006422": 118, "4612": 118, "isic_0032370": 118, "ham_0003916": 118, "4614": 118, "isic_0032502": 118, "ham_0006650": 118, "4615": 118, "isic_0029383": 118, "ham_0005344": 118, "4621": 118, "isic_0031793": 118, "ham_0003096": 118, "4622": 118, "isic_0029532": 118, "ham_0006314": 118, "4629": 118, "isic_0029723": 118, "ham_0002440": 118, "4630": 118, "isic_0029621": 118, "ham_0007132": 118, "4633": 118, "isic_0029503": 118, "ham_0006894": 118, "4634": 118, "isic_0029458": 118, "ham_0002762": 118, "4635": 118, "isic_0032121": 118, "ham_0006000": 118, "4636": 118, "isic_0029866": 118, "ham_0006761": 118, "4639": 118, "isic_0029921": 118, "ham_0002453": 118, "4640": 118, "isic_0032469": 118, "ham_0002892": 118, "4642": 118, "isic_0030087": 118, "ham_0006248": 118, "4643": 118, "isic_0029858": 118, "ham_0005965": 118, "4649": 118, "isic_0029925": 118, "ham_0004061": 118, "4650": 118, "isic_0032137": 118, "ham_0006354": 118, "4652": 118, "isic_0031082": 118, "ham_0001932": 118, "4653": 118, "isic_0031492": 118, "ham_0003638": 118, "4654": 118, "isic_0031939": 118, "ham_0002028": 118, "4662": 118, "isic_0030584": 118, "ham_0005458": 118, "4668": 118, "isic_0029399": 118, "ham_0004059": 118, "4669": 118, "isic_0030294": 118, "ham_0007215": 118, "4670": 118, "isic_0031861": 118, "ham_0000033": 118, "4671": 118, "isic_0030701": 118, "ham_0005045": 118, "isic_0029663": 118, "ham_0002039": 118, "4677": 118, "isic_0031747": 118, "ham_0003213": 118, "4679": 118, "isic_0032117": 118, "ham_0006336": 118, "4681": 118, "isic_0032377": 118, "ham_0000196": 118, "4682": 118, "isic_0030510": 118, "ham_0000895": 118, "4683": 118, "isic_0030163": 118, "ham_0006140": 118, "4687": 118, "isic_0031723": 118, "ham_0006818": 118, "4689": 118, "isic_0030999": 118, "ham_0006057": 118, "4691": 118, "isic_0030022": 118, "ham_0002347": 118, "4695": 118, "isic_0031884": 118, "ham_0004753": 118, "4699": 118, "isic_0030799": 118, "ham_0005771": 118, "4704": 118, "isic_0031928": 118, "ham_0007214": 118, "4705": 118, "isic_0030286": 118, "ham_0000793": 118, "4706": 118, "isic_0031634": 118, "ham_0000341": 118, "4707": 118, "isic_0031664": 118, "ham_0003871": 118, "4708": 118, "isic_0030215": 118, "ham_0002978": 118, "4710": 118, "isic_0031669": 118, "ham_0004325": 118, "4713": 118, "isic_0030861": 118, "ham_0002496": 118, "4715": 118, "isic_0029757": 118, "ham_0001288": 118, "isic_0029521": 118, "ham_0001663": 118, "4721": 118, "isic_0032237": 118, "ham_0003370": 118, "4725": 118, "isic_0032053": 118, "ham_0005945": 118, "4727": 118, "isic_0030327": 118, "ham_0005815": 118, "4728": 118, "isic_0030256": 118, "ham_0001586": 118, "4733": 118, "isic_0029767": 118, "ham_0003734": 118, "4734": 118, "isic_0030379": 118, "ham_0003416": 118, "4735": 118, "isic_0029414": 118, "ham_0001422": 118, "4738": 118, "isic_0032216": 118, "ham_0004123": 118, "4739": 118, "isic_0030213": 118, "ham_0005622": 118, "4740": 118, "isic_0031729": 118, "ham_0001401": 118, "4745": 118, "isic_0032093": 118, "ham_0004005": 118, "4749": 118, "isic_0032449": 118, "ham_0006127": 118, "4753": 118, "isic_0031665": 118, "ham_0007007": 118, "4754": 118, "isic_0031135": 118, "ham_0000401": 118, "4758": 118, "isic_0029605": 118, "ham_0005502": 118, "4765": 118, "isic_0031767": 118, "ham_0005899": 118, "4770": 118, "isic_0029467": 118, "ham_0006762": 118, "4771": 118, "isic_0031110": 118, "ham_0004510": 118, "4772": 118, "isic_0031587": 118, "ham_0001676": 118, "4774": 118, "isic_0029782": 118, "ham_0007120": 118, "4775": 118, "isic_0030103": 118, "ham_0001148": 118, "4776": 118, "isic_0031370": 118, "ham_0007092": 118, "4777": 118, "isic_0029649": 118, "ham_0000586": 118, "4779": 118, "isic_0032255": 118, "ham_0005145": 118, "4780": 118, "isic_0031990": 118, "ham_0004736": 118, "isic_0031914": 118, "ham_0002767": 118, "4786": 118, "isic_0031382": 118, "ham_0003954": 118, "4787": 118, "isic_0032252": 118, "ham_0005895": 118, "4789": 118, "isic_0031739": 118, "ham_0001748": 118, "4790": 118, "isic_0031227": 118, "ham_0002252": 118, "4796": 118, "isic_0029497": 118, "ham_0001300": 118, "4799": 118, "isic_0030398": 118, "ham_0003834": 118, "4801": 118, "isic_0029710": 118, "ham_0002068": 118, "4802": 118, "isic_0031855": 118, "ham_0002843": 118, "4805": 118, "isic_0029398": 118, "ham_0002101": 118, "4806": 118, "isic_0032038": 118, "ham_0001998": 118, "4811": 118, "isic_0032171": 118, "ham_0006536": 118, "4812": 118, "isic_0030250": 118, "ham_0002163": 118, "4813": 118, "isic_0030330": 118, "ham_0002399": 118, "4816": 118, "isic_0029852": 118, "ham_0002444": 118, "4817": 118, "isic_0030869": 118, "ham_0004838": 118, "4820": 118, "isic_0030395": 118, "ham_0002980": 118, "4821": 118, "isic_0032403": 118, "ham_0004032": 118, "4823": 118, "isic_0029949": 118, "ham_0002337": 118, "4824": 118, "isic_0030222": 118, "ham_0002213": 118, "4826": 118, "isic_0031553": 118, "ham_0001285": 118, "4828": 118, "isic_0031235": 118, "ham_0007055": 118, "4833": 118, "isic_0029768": 118, "ham_0002479": 118, "4835": 118, "isic_0031878": 118, "ham_0004950": 118, "4839": 118, "isic_0030494": 118, "ham_0004715": 118, "4841": 118, "isic_0030987": 118, "ham_0001254": 118, "4845": 118, "isic_0030527": 118, "ham_0006713": 118, "4846": 118, "isic_0030359": 118, "ham_0007435": 118, "4848": 118, "isic_0029338": 118, "ham_0002141": 118, "4853": 118, "isic_0032298": 118, "ham_0000694": 118, "4858": 118, "isic_0029732": 118, "ham_0006356": 118, "4859": 118, "isic_0029868": 118, "ham_0000008": 118, "4864": 118, "isic_0031687": 118, "ham_0004741": 118, "4867": 118, "isic_0031992": 118, "ham_0006431": 118, "4872": 118, "isic_0031810": 118, "ham_0000544": 118, "4873": 118, "isic_0029626": 118, "ham_0002564": 118, "4875": 118, "isic_0032416": 118, "ham_0003347": 118, "4876": 118, "isic_0029622": 118, "ham_0004276": 118, "4879": 118, "isic_0030763": 118, "ham_0002157": 118, "4882": 118, "isic_0029587": 118, "ham_0003160": 118, "4883": 118, "isic_0031846": 118, "ham_0001286": 118, "4884": 118, "isic_0031022": 118, "ham_0000875": 118, "4887": 118, "isic_0029478": 118, "ham_0002937": 118, "4888": 118, "isic_0032386": 118, "ham_0000310": 118, "4892": 118, "isic_0030199": 118, "ham_0001165": 118, "4893": 118, "isic_0032275": 118, "ham_0003489": 118, "4896": 118, "isic_0032264": 118, "ham_0006814": 118, "4897": 118, "isic_0029365": 118, "ham_0001068": 118, "4898": 118, "isic_0030823": 118, "ham_0004902": 118, "4899": 118, "isic_0029941": 118, "ham_0001089": 118, "4900": 118, "isic_0030147": 118, "ham_0004366": 118, "4901": 118, "isic_0029691": 118, "ham_0002880": 118, "4904": 118, "isic_0031551": 118, "ham_0001674": 118, "4907": 118, "isic_0029882": 118, "ham_0007440": 118, "4910": 118, "isic_0030924": 118, "ham_0004049": 118, "4911": 118, "isic_0031862": 118, "ham_0004446": 118, "4915": 118, "isic_0029611": 118, "ham_0000818": 118, "4917": 118, "isic_0030178": 118, "ham_0003533": 118, "4920": 118, "isic_0031608": 118, "ham_0004816": 118, "4924": 118, "isic_0031590": 118, "ham_0003786": 118, "4927": 118, "isic_0032064": 118, "ham_0002482": 118, "4928": 118, "isic_0030475": 118, "ham_0006051": 118, "4931": 118, "isic_0032464": 118, "ham_0001865": 118, "4933": 118, "isic_0029379": 118, "ham_0002781": 118, "4939": 118, "isic_0032483": 118, "ham_0004104": 118, "4940": 118, "isic_0032032": 118, "ham_0000681": 118, "4942": 118, "isic_0030624": 118, "ham_0006771": 118, "4943": 118, "isic_0029446": 118, "ham_0000749": 118, "4949": 118, "isic_0029380": 118, "ham_0005171": 118, "4950": 118, "isic_0029593": 118, "ham_0004229": 118, "4951": 118, "isic_0030703": 118, "ham_0002373": 118, "4953": 118, "isic_0030467": 118, "ham_0004759": 118, "4954": 118, "isic_0032503": 118, "ham_0002487": 118, "4959": 118, "isic_0029948": 118, "ham_0001988": 118, "4961": 118, "isic_0030228": 118, "ham_0002777": 118, "4963": 118, "isic_0029433": 118, "ham_0001445": 118, "4967": 118, "isic_0029922": 118, "ham_0007121": 118, "4971": 118, "isic_0032062": 118, "ham_0007366": 118, "4975": 118, "isic_0030386": 118, "ham_0003201": 118, "4976": 118, "isic_0032401": 118, "ham_0001229": 118, "4977": 118, "isic_0030252": 118, "ham_0002263": 118, "4978": 118, "isic_0030713": 118, "ham_0006866": 118, "4986": 118, "isic_0031262": 118, "ham_0007602": 118, "4993": 118, "isic_0031493": 118, "ham_0007146": 118, "4996": 118, "isic_0031574": 118, "ham_0005928": 118, "isic_0032473": 118, "ham_0004631": 118, "5001": 118, "isic_0031834": 118, "ham_0004640": 118, "5002": 118, "isic_0030309": 118, "ham_0006322": 118, "5008": 118, "isic_0030895": 118, "ham_0006647": 118, "5009": 118, "isic_0031336": 118, "ham_0002085": 118, "5010": 118, "isic_0032010": 118, "ham_0000445": 118, "isic_0032224": 118, "ham_0005033": 118, "5014": 118, "isic_0031264": 118, "ham_0006227": 118, "5015": 118, "isic_0031979": 118, "ham_0003318": 118, "5017": 118, "isic_0031680": 118, "ham_0003731": 118, "isic_0029738": 118, "ham_0003637": 118, "5021": 118, "isic_0031627": 118, "ham_0002210": 118, "5022": 118, "isic_0031828": 118, "ham_0005788": 118, "5024": 118, "isic_0030304": 118, "ham_0000493": 118, "5026": 118, "isic_0030982": 118, "ham_0006054": 118, "5027": 118, "isic_0031419": 118, "ham_0005923": 118, "5030": 118, "isic_0031949": 118, "ham_0007412": 118, "5031": 118, "isic_0029586": 118, "ham_0003864": 118, "5033": 118, "isic_0031840": 118, "ham_0006991": 118, "5036": 118, "isic_0032041": 118, "ham_0000103": 118, "5038": 118, "isic_0032160": 118, "ham_0004874": 118, "5043": 118, "isic_0031491": 118, "ham_0006918": 118, "5044": 118, "isic_0032178": 118, "ham_0000651": 118, "5045": 118, "isic_0032451": 118, "ham_0000414": 118, "5047": 118, "isic_0029625": 118, "ham_0004292": 118, "5048": 118, "isic_0030169": 118, "ham_0005240": 118, "5049": 118, "isic_0031444": 118, "ham_0006892": 118, "5051": 118, "isic_0032452": 118, "ham_0002739": 118, "5052": 118, "isic_0030779": 118, "ham_0002716": 118, "5054": 118, "isic_0029681": 118, "ham_0000583": 118, "5055": 118, "isic_0030113": 118, "ham_0005729": 118, "5059": 118, "isic_0030100": 118, "ham_0002694": 118, "5060": 118, "isic_0029631": 118, "ham_0003170": 118, "5077": 118, "isic_0029754": 118, "ham_0000389": 118, "5078": 118, "isic_0031736": 118, "ham_0004993": 118, "5080": 118, "isic_0029692": 118, "ham_0005503": 118, "5085": 118, "isic_0030572": 118, "ham_0000809": 118, "5086": 118, "isic_0030931": 118, "ham_0007493": 118, "5087": 118, "isic_0032167": 118, "ham_0000916": 118, "5096": 118, "isic_0030084": 118, "ham_0004616": 118, "5097": 118, "isic_0029428": 118, "ham_0003291": 118, "5098": 118, "isic_0031324": 118, "ham_0003628": 118, "5099": 118, "isic_0031514": 118, "ham_0005029": 118, "5103": 118, "isic_0031058": 118, "ham_0003180": 118, "5106": 118, "isic_0030577": 118, "ham_0000281": 118, "5109": 118, "isic_0031538": 118, "ham_0004868": 118, "5112": 118, "isic_0030288": 118, "ham_0003626": 118, "5116": 118, "isic_0032351": 118, "ham_0006963": 118, "5119": 118, "isic_0030438": 118, "ham_0006206": 118, "5127": 118, "isic_0031155": 118, "ham_0001797": 118, "5128": 118, "isic_0030939": 118, "ham_0004045": 118, "5129": 118, "isic_0031179": 118, "ham_0001996": 118, "5130": 118, "isic_0030212": 118, "ham_0000605": 118, "5132": 118, "isic_0031129": 118, "ham_0006848": 118, "5134": 118, "isic_0029590": 118, "ham_0002679": 118, "isic_0030043": 118, "ham_0002549": 118, "5136": 118, "isic_0029451": 118, "ham_0006981": 118, "5137": 118, "isic_0029990": 118, "ham_0002858": 118, "5138": 118, "isic_0029648": 118, "ham_0005099": 118, "5139": 118, "isic_0030671": 118, "ham_0006578": 118, "5140": 118, "isic_0030667": 118, "ham_0004530": 118, "5143": 118, "isic_0032127": 118, "ham_0001595": 118, "5145": 118, "isic_0030686": 118, "ham_0001592": 118, "5151": 118, "isic_0030881": 118, "ham_0004101": 118, "5153": 118, "isic_0029375": 118, "ham_0003012": 118, "5154": 118, "isic_0029487": 118, "ham_0006582": 118, "5155": 118, "isic_0029935": 118, "ham_0002593": 118, "5157": 118, "isic_0030506": 118, "ham_0000384": 118, "5160": 118, "isic_0031994": 118, "ham_0002669": 118, "5162": 118, "isic_0032122": 118, "ham_0000018": 118, "5163": 118, "isic_0031210": 118, "ham_0004390": 118, "5167": 118, "isic_0032286": 118, "ham_0006959": 118, "5171": 118, "isic_0030392": 118, "ham_0003395": 118, "5173": 118, "isic_0031075": 118, "ham_0003154": 118, "5181": 118, "isic_0030631": 118, "ham_0000883": 118, "5182": 118, "isic_0029960": 118, "ham_0001451": 118, "5184": 118, "isic_0030716": 118, "ham_0006308": 118, "5186": 118, "isic_0030476": 118, "ham_0005372": 118, "5187": 118, "isic_0031067": 118, "ham_0005615": 118, "5192": 118, "isic_0031549": 118, "ham_0001899": 118, "5194": 118, "isic_0031214": 118, "ham_0002148": 118, "5199": 118, "isic_0030482": 118, "ham_0006951": 118, "5201": 118, "isic_0031902": 118, "ham_0005432": 118, "5204": 118, "isic_0031073": 118, "ham_0001800": 118, "5205": 118, "isic_0029325": 118, "ham_0000026": 118, "5206": 118, "isic_0031842": 118, "ham_0006752": 118, "5209": 118, "isic_0029853": 118, "ham_0001485": 118, "5210": 118, "isic_0030834": 118, "ham_0001871": 118, "5212": 118, "isic_0031856": 118, "ham_0007197": 118, "5214": 118, "isic_0031684": 118, "ham_0001351": 118, "5215": 118, "isic_0030071": 118, "ham_0002883": 118, "5223": 118, "isic_0030471": 118, "ham_0002540": 118, "5229": 118, "isic_0030132": 118, "ham_0005857": 118, "5230": 118, "isic_0029321": 118, "ham_0007162": 118, "5231": 118, "isic_0029709": 118, "ham_0003763": 118, "5233": 118, "isic_0032105": 118, "ham_0006102": 118, "5234": 118, "isic_0030419": 118, "ham_0005063": 118, "5235": 118, "isic_0030474": 118, "ham_0005399": 118, "5236": 118, "isic_0031280": 118, "ham_0004843": 118, "5237": 118, "isic_0032259": 118, "ham_0004333": 118, "5240": 118, "isic_0031274": 118, "ham_0006305": 118, "5245": 118, "isic_0030745": 118, "ham_0000115": 118, "5247": 118, "isic_0031300": 118, "ham_0007626": 118, "5248": 118, "isic_0029769": 118, "ham_0004107": 118, "5249": 118, "isic_0031758": 118, "ham_0001007": 118, "5251": 118, "isic_0031780": 118, "ham_0005167": 118, "5252": 118, "isic_0029766": 118, "ham_0004023": 118, "5255": 118, "isic_0029616": 118, "ham_0002842": 118, "5257": 118, "isic_0030994": 118, "ham_0001569": 118, "5258": 118, "isic_0031028": 118, "ham_0002941": 118, "5259": 118, "isic_0030454": 118, "ham_0001267": 118, "5261": 118, "isic_0029494": 118, "ham_0003486": 118, "5264": 118, "isic_0030201": 118, "ham_0005638": 118, "5265": 118, "isic_0029421": 118, "ham_0003203": 118, "5268": 118, "isic_0030149": 118, "ham_0003693": 118, "5270": 118, "isic_0031843": 118, "ham_0001471": 118, "5277": 118, "isic_0031252": 118, "ham_0002580": 118, "5280": 118, "isic_0030750": 118, "ham_0005277": 118, "5281": 118, "isic_0031516": 118, "ham_0003499": 118, "5282": 118, "isic_0029934": 118, "ham_0006317": 118, "5284": 118, "isic_0029506": 118, "ham_0005497": 118, "5286": 118, "isic_0030788": 118, "ham_0004785": 118, "5287": 118, "isic_0030046": 118, "ham_0001917": 118, "5289": 118, "isic_0031847": 118, "ham_0003431": 118, "5295": 118, "isic_0031003": 118, "ham_0001578": 118, "5296": 118, "isic_0029690": 118, "ham_0006455": 118, "5304": 118, "isic_0029981": 118, "ham_0005357": 118, "5305": 118, "isic_0030267": 118, "ham_0000877": 118, "5307": 118, "isic_0031616": 118, "ham_0002071": 118, "5312": 118, "isic_0030864": 118, "ham_0007394": 118, "5317": 118, "isic_0032295": 118, "ham_0006106": 118, "5318": 118, "isic_0030012": 118, "ham_0000253": 118, "5320": 118, "isic_0029969": 118, "ham_0006038": 118, "5322": 118, "isic_0029361": 118, "ham_0001182": 118, "5323": 118, "isic_0030152": 118, "ham_0000043": 118, "5330": 118, "isic_0030381": 118, "ham_0005702": 118, "5334": 118, "isic_0031607": 118, "ham_0002270": 118, "5336": 118, "isic_0031180": 118, "ham_0002612": 118, "5339": 118, "isic_0031124": 118, "ham_0002510": 118, "5342": 118, "isic_0031683": 118, "ham_0002579": 118, "5345": 118, "isic_0029718": 118, "ham_0003545": 118, "5356": 118, "isic_0030017": 118, "ham_0002643": 118, "5362": 118, "isic_0030216": 118, "ham_0001951": 118, "5365": 118, "isic_0030808": 118, "ham_0001710": 118, "5368": 118, "isic_0030648": 118, "ham_0003607": 118, "5369": 118, "isic_0030489": 118, "ham_0007447": 118, "5370": 118, "isic_0030879": 118, "ham_0002445": 118, "5374": 118, "isic_0030078": 118, "ham_0005796": 118, "5377": 118, "isic_0030345": 118, "ham_0004598": 118, "5378": 118, "isic_0030601": 118, "ham_0004488": 118, "5384": 118, "isic_0032085": 118, "ham_0003377": 118, "5387": 118, "isic_0031096": 118, "ham_0005773": 118, "5391": 118, "isic_0031873": 118, "ham_0004362": 118, "5392": 118, "isic_0029629": 118, "ham_0004019": 118, "5393": 118, "isic_0030254": 118, "ham_0006759": 118, "5395": 118, "isic_0031251": 118, "ham_0005012": 118, "5397": 118, "isic_0029957": 118, "ham_0005418": 118, "5399": 118, "isic_0032438": 118, "ham_0007485": 118, "5402": 118, "isic_0030153": 118, "ham_0005836": 118, "5403": 118, "isic_0030551": 118, "ham_0004445": 118, "5404": 118, "isic_0029765": 118, "ham_0005348": 118, "5405": 118, "isic_0029552": 118, "ham_0005477": 118, "5408": 118, "isic_0031788": 118, "ham_0004490": 118, "5414": 118, "isic_0031397": 118, "ham_0000178": 118, "5417": 118, "isic_0031342": 118, "ham_0004815": 118, "5419": 118, "isic_0030325": 118, "ham_0004493": 118, "5420": 118, "isic_0031548": 118, "ham_0003575": 118, "5422": 118, "isic_0031628": 118, "ham_0001315": 118, "5424": 118, "isic_0031859": 118, "ham_0001574": 118, "5426": 118, "isic_0030001": 118, "ham_0001658": 118, "5428": 118, "isic_0029535": 118, "ham_0000664": 118, "5431": 118, "isic_0032000": 118, "ham_0004688": 118, "5432": 118, "isic_0031066": 118, "ham_0006488": 118, "5435": 118, "isic_0031983": 118, "ham_0006890": 118, "5441": 118, "isic_0029901": 118, "ham_0006022": 118, "5451": 118, "isic_0029989": 118, "ham_0000834": 118, "5453": 118, "isic_0031425": 118, "ham_0007087": 118, "5456": 118, "isic_0029734": 118, "ham_0003537": 118, "5458": 118, "isic_0030627": 118, "ham_0006202": 118, "5459": 118, "isic_0030217": 118, "ham_0002137": 118, "5460": 118, "isic_0031109": 118, "ham_0000869": 118, "5462": 118, "isic_0031307": 118, "ham_0004299": 118, "5467": 118, "isic_0030992": 118, "ham_0005151": 118, "5468": 118, "isic_0030638": 118, "ham_0005976": 118, "5469": 118, "isic_0030472": 118, "ham_0005161": 118, "5472": 118, "isic_0030983": 118, "ham_0004920": 118, "5473": 118, "isic_0032431": 118, "ham_0000234": 118, "5479": 118, "isic_0030647": 118, "ham_0002987": 118, "5481": 118, "isic_0031772": 118, "ham_0006282": 118, "5484": 118, "isic_0029964": 118, "ham_0006165": 118, "5486": 118, "isic_0029842": 118, "ham_0006865": 118, "5488": 118, "isic_0029807": 118, "ham_0002380": 118, "5489": 118, "isic_0029444": 118, "ham_0001128": 118, "5493": 118, "isic_0030415": 118, "ham_0005317": 118, "5494": 118, "isic_0031020": 118, "ham_0005515": 118, "5496": 118, "isic_0031641": 118, "ham_0006405": 118, "5500": 118, "isic_0031512": 118, "ham_0003124": 118, "5501": 118, "isic_0029818": 118, "ham_0001577": 118, "5504": 118, "isic_0031439": 118, "ham_0001779": 118, "5505": 118, "isic_0031255": 118, "ham_0005520": 118, "5508": 118, "isic_0030516": 118, "ham_0003312": 118, "5510": 118, "isic_0031696": 118, "ham_0006113": 118, "5511": 118, "isic_0031205": 118, "ham_0002920": 118, "5512": 118, "isic_0032488": 118, "ham_0002383": 118, "5516": 118, "isic_0030634": 118, "ham_0000830": 118, "5519": 118, "isic_0030185": 118, "ham_0001204": 118, "5521": 118, "isic_0029787": 118, "ham_0004136": 118, "5522": 118, "isic_0030200": 118, "ham_0000495": 118, "5526": 118, "isic_0029607": 118, "ham_0003599": 118, "5529": 118, "isic_0030696": 118, "ham_0003796": 118, "5530": 118, "isic_0029863": 118, "ham_0000804": 118, "5531": 118, "isic_0030727": 118, "ham_0005957": 118, "5534": 118, "isic_0030719": 118, "ham_0000633": 118, "5535": 118, "isic_0030030": 118, "ham_0007382": 118, "5538": 118, "isic_0032493": 118, "ham_0007011": 118, "5542": 118, "isic_0032012": 118, "ham_0001980": 118, "5544": 118, "isic_0030751": 118, "ham_0002813": 118, "5545": 118, "isic_0029442": 118, "ham_0007175": 118, "5546": 118, "isic_0029923": 118, "ham_0000870": 118, "5553": 118, "isic_0032208": 118, "ham_0002665": 118, "5554": 118, "isic_0031480": 118, "ham_0007256": 118, "5557": 118, "isic_0031717": 118, "ham_0001228": 118, "5560": 118, "isic_0031487": 118, "ham_0006903": 118, "5562": 118, "isic_0031858": 118, "ham_0005192": 118, "5566": 118, "isic_0031568": 118, "ham_0001380": 118, "5571": 118, "isic_0029551": 118, "ham_0006640": 118, "5572": 118, "isic_0029620": 118, "ham_0004800": 118, "5574": 118, "isic_0030917": 118, "ham_0003036": 118, "5575": 118, "isic_0029477": 118, "ham_0004168": 118, "5577": 118, "isic_0031879": 118, "ham_0003065": 118, "5578": 118, "isic_0030637": 118, "ham_0004173": 118, "5579": 118, "isic_0032297": 118, "ham_0004730": 118, "5582": 118, "isic_0032177": 118, "ham_0002520": 118, "5587": 118, "isic_0031830": 118, "ham_0005340": 118, "5591": 118, "isic_0031098": 118, "ham_0006504": 118, "5594": 118, "isic_0030887": 118, "ham_0001305": 118, "5597": 118, "isic_0030708": 118, "ham_0002162": 118, "5600": 118, "isic_0032390": 118, "ham_0000155": 118, "5602": 118, "isic_0032435": 118, "ham_0002963": 118, "5606": 118, "isic_0031246": 118, "ham_0003538": 118, "5607": 118, "isic_0031899": 118, "ham_0002437": 118, "5608": 118, "isic_0029437": 118, "ham_0005235": 118, "5612": 118, "isic_0031530": 118, "ham_0002852": 118, "5613": 118, "isic_0030320": 118, "ham_0006646": 118, "5614": 118, "isic_0031765": 118, "ham_0001489": 118, "5619": 118, "isic_0031818": 118, "ham_0001395": 118, "5620": 118, "isic_0030098": 118, "ham_0003975": 118, "5621": 118, "isic_0031283": 118, "ham_0000411": 118, "5625": 118, "isic_0029987": 118, "ham_0005071": 118, "5627": 118, "isic_0030331": 118, "ham_0006163": 118, "5629": 118, "isic_0031415": 118, "ham_0001704": 118, "5630": 118, "isic_0029910": 118, "ham_0006045": 118, "5633": 118, "isic_0031265": 118, "ham_0007357": 118, "5637": 118, "isic_0030500": 118, "ham_0001836": 118, "5639": 118, "isic_0030009": 118, "ham_0006454": 118, "5640": 118, "isic_0031936": 118, "ham_0002077": 118, "5641": 118, "isic_0030563": 118, "ham_0007136": 118, "5642": 118, "isic_0031047": 118, "ham_0002594": 118, "5647": 118, "isic_0031101": 118, "ham_0000621": 118, "5654": 118, "isic_0030040": 118, "ham_0003543": 118, "5655": 118, "isic_0030576": 118, "ham_0004414": 118, "5658": 118, "isic_0032147": 118, "ham_0006867": 118, "5664": 118, "isic_0030290": 118, "ham_0004391": 118, "5665": 118, "isic_0030234": 118, "ham_0002152": 118, "5666": 118, "isic_0031885": 118, "ham_0004821": 118, "5669": 118, "isic_0031312": 118, "ham_0005000": 118, "5670": 118, "isic_0032323": 118, "ham_0003070": 118, "5671": 118, "isic_0031849": 118, "ham_0007401": 118, "5683": 118, "isic_0032472": 118, "ham_0002140": 118, "5684": 118, "isic_0030811": 118, "ham_0001156": 118, "5692": 118, "isic_0030062": 118, "ham_0001293": 118, "5694": 118, "isic_0029942": 118, "ham_0003211": 118, "5695": 118, "isic_0030680": 118, "ham_0002381": 118, "5699": 118, "isic_0032229": 118, "ham_0002849": 118, "5700": 118, "isic_0032406": 118, "ham_0006304": 118, "5702": 118, "isic_0030439": 118, "ham_0002743": 118, "5703": 118, "isic_0031341": 118, "ham_0006807": 118, "5706": 118, "isic_0030236": 118, "ham_0004368": 118, "5707": 118, "isic_0030762": 118, "ham_0006944": 118, "5714": 118, "isic_0029896": 118, "ham_0001352": 118, "5715": 118, "isic_0030568": 118, "ham_0002406": 118, "5716": 118, "isic_0032369": 118, "ham_0003079": 118, "5717": 118, "isic_0031755": 118, "ham_0003928": 118, "5720": 118, "isic_0030052": 118, "ham_0003722": 118, "5724": 118, "isic_0030685": 118, "ham_0000585": 118, "5726": 118, "isic_0032293": 118, "ham_0000123": 118, "5727": 118, "isic_0030433": 118, "ham_0005582": 118, "5733": 118, "isic_0030678": 118, "ham_0006591": 118, "5736": 118, "isic_0030343": 118, "ham_0006570": 118, "5737": 118, "isic_0030055": 118, "ham_0006743": 118, "5741": 118, "isic_0029977": 118, "ham_0003252": 118, "5743": 118, "isic_0031328": 118, "ham_0000424": 118, "5744": 118, "isic_0031182": 118, "ham_0004079": 118, "5746": 118, "isic_0031737": 118, "ham_0006007": 118, "5749": 118, "isic_0029646": 118, "ham_0002674": 118, "5751": 118, "isic_0031533": 118, "ham_0001013": 118, "5757": 118, "isic_0030749": 118, "ham_0006153": 118, "5763": 118, "isic_0032037": 118, "ham_0002687": 118, "5767": 118, "isic_0032319": 118, "ham_0002352": 118, "5768": 118, "isic_0029800": 118, "ham_0003702": 118, "5770": 118, "isic_0031886": 118, "ham_0006949": 118, "5771": 118, "isic_0031509": 118, "ham_0000560": 118, "5775": 118, "isic_0030948": 118, "ham_0001255": 118, "5776": 118, "isic_0029327": 118, "ham_0003163": 118, "5784": 118, "isic_0030029": 118, "ham_0005437": 118, "isic_0029712": 118, "ham_0004438": 118, "5791": 118, "isic_0030691": 118, "ham_0006081": 118, "5792": 118, "isic_0029796": 118, "ham_0000860": 118, "5793": 118, "isic_0031768": 118, "ham_0004312": 118, "5797": 118, "isic_0030097": 118, "ham_0007487": 118, "5801": 118, "isic_0030393": 118, "ham_0005238": 118, "5802": 118, "isic_0032332": 118, "ham_0004449": 118, "5807": 118, "isic_0030558": 118, "ham_0007192": 118, "5808": 118, "isic_0030028": 118, "ham_0004645": 118, "5813": 118, "isic_0030004": 118, "ham_0007482": 118, "5817": 118, "isic_0029887": 118, "ham_0000638": 118, "isic_0031316": 118, "ham_0006089": 118, "5824": 118, "isic_0031445": 118, "ham_0000292": 118, "5825": 118, "isic_0031458": 118, "ham_0007561": 118, "5827": 118, "isic_0030633": 118, "ham_0005391": 118, "5828": 118, "isic_0029623": 118, "ham_0004433": 118, "5829": 118, "isic_0031962": 118, "ham_0001092": 118, "5832": 118, "isic_0032299": 118, "ham_0002090": 118, "5833": 118, "isic_0030018": 118, "ham_0002573": 118, "5838": 118, "isic_0031305": 118, "ham_0003655": 118, "5844": 118, "isic_0031414": 118, "ham_0000400": 118, "5845": 118, "isic_0030650": 118, "ham_0000538": 118, "5848": 118, "isic_0031605": 118, "ham_0000972": 118, "5850": 118, "isic_0032130": 118, "ham_0004072": 118, "5851": 118, "isic_0029565": 118, "ham_0001859": 118, "5853": 118, "isic_0029407": 118, "ham_0002116": 118, "isic_0029890": 118, "ham_0000052": 118, "5855": 118, "isic_0032393": 118, "ham_0005200": 118, "5856": 118, "isic_0030259": 118, "ham_0000665": 118, "isic_0031356": 118, "ham_0003858": 118, "5863": 118, "isic_0030715": 118, "ham_0003339": 118, "5865": 118, "isic_0031850": 118, "ham_0003271": 118, "5866": 118, "isic_0032033": 118, "ham_0005943": 118, "5867": 118, "isic_0031137": 118, "ham_0005774": 118, "5868": 118, "isic_0030720": 118, "ham_0002663": 118, "5870": 118, "isic_0029716": 118, "ham_0000098": 118, "5872": 118, "isic_0031232": 118, "ham_0004644": 118, "5874": 118, "isic_0029753": 118, "ham_0005646": 118, "5875": 118, "isic_0029707": 118, "ham_0000774": 118, "5877": 118, "isic_0031027": 118, "ham_0006499": 118, "5878": 118, "isic_0030363": 118, "ham_0004112": 118, "5879": 118, "isic_0031500": 118, "ham_0007486": 118, "5884": 118, "isic_0030949": 118, "ham_0001271": 118, "5885": 118, "isic_0030872": 118, "ham_0004580": 118, "5889": 118, "isic_0030498": 118, "ham_0003098": 118, "5890": 118, "isic_0029314": 118, "ham_0003959": 118, "5893": 118, "isic_0030938": 118, "ham_0006098": 118, "5897": 118, "isic_0030559": 118, "ham_0004944": 118, "5898": 118, "isic_0029584": 118, "ham_0007115": 118, "5901": 118, "isic_0032440": 118, "ham_0005570": 118, "5902": 118, "isic_0031054": 118, "ham_0007347": 118, "5903": 118, "isic_0029817": 118, "ham_0003572": 118, "5904": 118, "isic_0031826": 118, "ham_0000387": 118, "5905": 118, "isic_0032448": 118, "ham_0003232": 118, "5908": 118, "isic_0029946": 118, "ham_0001374": 118, "5910": 118, "isic_0030530": 118, "ham_0001244": 118, "5912": 118, "isic_0029965": 118, "ham_0001360": 118, "5913": 118, "isic_0030364": 118, "ham_0001709": 118, "5914": 118, "isic_0031912": 118, "ham_0002183": 118, "5920": 118, "isic_0030946": 118, "ham_0001084": 118, "5921": 118, "isic_0031722": 118, "ham_0002805": 118, "5922": 118, "isic_0029468": 118, "ham_0003266": 118, "5926": 118, "isic_0029445": 118, "ham_0001368": 118, "5927": 118, "isic_0030622": 118, "ham_0006134": 118, "5928": 118, "isic_0031315": 118, "ham_0002680": 118, "5929": 118, "isic_0032432": 118, "ham_0001937": 118, "5930": 118, "isic_0029376": 118, "ham_0002637": 118, "5931": 118, "isic_0029952": 118, "ham_0002570": 118, "5932": 118, "isic_0030641": 118, "ham_0006079": 118, "5933": 118, "isic_0031224": 118, "ham_0000753": 118, "5934": 118, "isic_0031248": 118, "ham_0004731": 118, "5937": 118, "isic_0030317": 118, "ham_0001050": 118, "5938": 118, "isic_0031393": 118, "ham_0006247": 118, "5942": 118, "isic_0029672": 118, "ham_0006880": 118, "isic_0030515": 118, "ham_0004361": 118, "5947": 118, "isic_0029939": 118, "ham_0001557": 118, "5948": 118, "isic_0030111": 118, "ham_0001864": 118, "5951": 118, "isic_0029461": 118, "ham_0007344": 118, "5956": 118, "isic_0029971": 118, "ham_0004459": 118, "5961": 118, "isic_0032097": 118, "ham_0003006": 118, "5963": 118, "isic_0032458": 118, "ham_0001602": 118, "5965": 118, "isic_0031562": 118, "ham_0001132": 118, "5966": 118, "isic_0030662": 118, "ham_0006179": 118, "5973": 118, "isic_0029643": 118, "ham_0005451": 118, "5974": 118, "isic_0030195": 118, "ham_0004110": 118, "5975": 118, "isic_0029429": 118, "ham_0003794": 118, "5976": 118, "isic_0030531": 118, "ham_0000257": 118, "5977": 118, "isic_0029326": 118, "ham_0005081": 118, "5979": 118, "isic_0030735": 118, "ham_0004837": 118, "5984": 118, "isic_0030353": 118, "ham_0000737": 118, "5987": 118, "isic_0031083": 118, "ham_0002439": 118, "5988": 118, "isic_0031478": 118, "ham_0004658": 118, "5989": 118, "isic_0031952": 118, "ham_0000480": 118, "5990": 118, "isic_0032381": 118, "ham_0004904": 118, "5991": 118, "isic_0030266": 118, "ham_0007458": 118, "5992": 118, "isic_0032172": 118, "ham_0007517": 118, "5994": 118, "isic_0029673": 118, "ham_0001825": 118, "5995": 118, "isic_0031052": 118, "ham_0007174": 118, "5996": 118, "isic_0030424": 118, "ham_0006452": 118, "5998": 118, "isic_0031441": 118, "ham_0007267": 118, "5999": 118, "isic_0031804": 118, "ham_0005441": 118, "6001": 118, "isic_0030860": 118, "ham_0004911": 118, "6002": 118, "isic_0030776": 118, "ham_0000543": 118, "6003": 118, "isic_0032480": 118, "ham_0001146": 118, "6006": 118, "isic_0032357": 118, "ham_0007098": 118, "6010": 118, "isic_0030724": 118, "ham_0000862": 118, "6011": 118, "isic_0030025": 118, "ham_0003391": 118, "6012": 118, "isic_0030997": 118, "ham_0006825": 118, "6017": 118, "isic_0029850": 118, "ham_0006714": 118, "6018": 118, "isic_0030024": 118, "ham_0001650": 118, "6021": 118, "isic_0030161": 118, "ham_0000622": 118, "6030": 118, "isic_0030218": 118, "ham_0002098": 118, "6031": 118, "isic_0031877": 118, "ham_0006476": 118, "6033": 118, "isic_0031187": 118, "ham_0006589": 118, "6035": 118, "isic_0029529": 118, "ham_0007034": 118, "6036": 118, "isic_0032394": 118, "ham_0005667": 118, "6038": 118, "isic_0030958": 118, "ham_0005999": 118, "6039": 118, "isic_0030848": 118, "ham_0003166": 118, "6040": 118, "isic_0031860": 118, "ham_0001521": 118, "6043": 118, "isic_0029761": 118, "ham_0005948": 118, "6047": 118, "isic_0030027": 118, "ham_0002860": 118, "6048": 118, "isic_0032256": 118, "ham_0006424": 118, "6050": 118, "isic_0030702": 118, "ham_0002246": 118, "6051": 118, "isic_0032104": 118, "ham_0001413": 118, "6053": 118, "isic_0031010": 118, "ham_0002910": 118, "6056": 118, "isic_0030044": 118, "ham_0001776": 118, "6059": 118, "isic_0032131": 118, "ham_0003173": 118, "6064": 118, "isic_0029424": 118, "ham_0000297": 118, "6065": 118, "isic_0030632": 118, "ham_0002811": 118, "6066": 118, "isic_0032101": 118, "ham_0004978": 118, "6070": 118, "isic_0030412": 118, "ham_0002123": 118, "6071": 118, "isic_0030298": 118, "ham_0003336": 118, "6073": [118, 119], "isic_0031946": 118, "ham_0000190": 118, "6078": 118, "isic_0031732": 118, "ham_0004860": 118, "6080": 118, "isic_0030048": 118, "ham_0003621": 118, "6081": 118, "isic_0029936": 118, "ham_0000575": 118, "6082": 118, "isic_0030854": 118, "ham_0003908": 118, "6084": 118, "isic_0029797": 118, "ham_0003404": 118, "6087": 118, "isic_0029834": 118, "ham_0004454": 118, "6092": 118, "isic_0031626": 118, "ham_0007292": 118, "6095": 118, "isic_0030850": 118, "ham_0005944": 118, "6096": 118, "isic_0029954": 118, "ham_0000736": 118, "6097": 118, "isic_0029737": 118, "ham_0000515": 118, "6101": 118, "isic_0030628": 118, "ham_0002707": 118, "6105": 118, "isic_0029700": 118, "ham_0001787": 118, "6115": 118, "isic_0030405": 118, "ham_0006555": 118, "6118": 118, "isic_0030595": 118, "ham_0002001": 118, "6120": 118, "isic_0029928": 118, "ham_0001179": 118, "6124": 118, "isic_0030651": 118, "ham_0004374": 118, "6131": 118, "isic_0031241": 118, "ham_0000404": 118, "6134": 118, "isic_0029908": 118, "ham_0001646": 118, "6136": 118, "isic_0031968": 118, "ham_0003485": 118, "6137": 118, "isic_0029873": 118, "ham_0005824": 118, "6138": 118, "isic_0030389": 118, "ham_0005645": 118, "6139": 118, "isic_0029743": 118, "ham_0005367": 118, "6140": 118, "isic_0031760": 118, "ham_0004336": 118, "isic_0029658": 118, "ham_0005593": 118, "6144": 118, "isic_0031740": 118, "ham_0005934": 118, "6147": 118, "isic_0031375": 118, "ham_0000127": 118, "6148": 118, "isic_0031751": 118, "ham_0006858": 118, "6150": 118, "isic_0030590": 118, "ham_0000950": 118, "6152": 118, "isic_0032346": 118, "ham_0001171": 118, "isic_0029988": 118, "ham_0002212": 118, "6157": 118, "isic_0030676": 118, "ham_0005054": 118, "6158": 118, "isic_0029635": 118, "ham_0005485": 118, "6159": 118, "isic_0030548": 118, "ham_0005412": 118, "6160": 118, "isic_0031910": 118, "ham_0002309": 118, "6163": 118, "isic_0030437": 118, "ham_0003746": 118, "6164": 118, "isic_0031790": 118, "ham_0006729": 118, "6169": 118, "isic_0031786": 118, "ham_0000255": 118, "6170": 118, "isic_0032491": 118, "ham_0001513": 118, "6171": 118, "isic_0031835": 118, "ham_0006289": 118, "6172": 118, "isic_0031193": 118, "ham_0002281": 118, "6174": 118, "isic_0029832": 118, "ham_0000325": 118, "6177": 118, "isic_0031868": 118, "ham_0005446": 118, "6179": 118, "isic_0032326": 118, "ham_0000280": 118, "6180": 118, "isic_0032383": 118, "ham_0005333": 118, "6182": 118, "isic_0031333": 118, "ham_0004612": 118, "6184": 118, "isic_0031916": 118, "ham_0000938": 118, "6186": 118, "isic_0030934": 118, "ham_0004355": 118, "6187": 118, "isic_0032289": 118, "ham_0001782": 118, "6189": 118, "isic_0031387": 118, "ham_0004562": 118, "6195": 118, "isic_0032353": 118, "ham_0000535": 118, "6198": 118, "isic_0030090": 118, "ham_0005756": 118, "6199": 118, "isic_0029579": 118, "ham_0003082": 118, "6203": 118, "isic_0032001": 118, "ham_0003019": 118, "6208": 118, "isic_0031072": 118, "ham_0003878": 118, "6210": 118, "isic_0030805": 118, "ham_0003200": 118, "6214": 118, "isic_0031432": 118, "ham_0007063": 118, "6215": 118, "isic_0030780": 118, "ham_0007501": 118, "isic_0030832": 118, "ham_0003756": 118, "6217": 118, "isic_0031183": 118, "ham_0002292": 118, "6220": 118, "isic_0030587": 118, "ham_0001848": 118, "6221": 118, "isic_0030162": 118, "ham_0006468": 118, "6225": 118, "isic_0030886": 118, "ham_0003334": 118, "6229": 118, "isic_0030969": 118, "ham_0003413": 118, "6233": 118, "isic_0031911": 118, "ham_0003753": 118, "6234": 118, "isic_0030699": 118, "ham_0006688": 118, "6238": 118, "isic_0031484": 118, "ham_0005930": 118, "6239": 118, "isic_0031242": 118, "ham_0003242": 118, "6249": 118, "isic_0030224": 118, "ham_0001802": 118, "6252": 118, "isic_0031338": 118, "ham_0005996": 118, "6254": 118, "isic_0032360": 118, "ham_0001622": 118, "6257": 118, "isic_0030136": 118, "ham_0001867": 118, "6258": 118, "isic_0030112": 118, "ham_0005152": 118, "6259": 118, "isic_0031610": 118, "ham_0004157": 118, "6261": 118, "isic_0031267": 118, "ham_0006679": 118, "6264": 118, "isic_0029403": 118, "ham_0007506": 118, "6265": 118, "isic_0031566": 118, "ham_0002422": 118, "6267": 118, "isic_0031006": 118, "ham_0001638": 118, "6268": 118, "isic_0029727": 118, "ham_0000929": 118, "6269": 118, "isic_0029416": 118, "ham_0005455": 118, "6272": 118, "isic_0030889": 118, "ham_0002356": 118, "6278": 118, "isic_0029777": 118, "ham_0001189": 118, "6280": 118, "isic_0030045": 118, "ham_0006864": 118, "6281": 118, "isic_0030496": 118, "ham_0005808": 118, "6282": 118, "isic_0031084": 118, "ham_0006562": 118, "6284": 118, "isic_0030430": 118, "ham_0003185": 118, "6288": 118, "isic_0031944": 118, "ham_0004162": 118, "6293": 118, "isic_0030670": 118, "ham_0000726": 118, "6295": 118, "isic_0031161": 118, "ham_0001195": 118, "6297": 118, "isic_0032089": 118, "ham_0002887": 118, "6298": 118, "isic_0031433": 118, "ham_0007061": 118, "6300": 118, "isic_0031576": 118, "ham_0002195": 118, "6305": 118, "isic_0029507": 118, "ham_0002783": 118, "6307": 118, "isic_0032495": 118, "ham_0004770": 118, "6308": 118, "isic_0030347": 118, "ham_0006019": 118, "6311": 118, "isic_0029400": 118, "ham_0000369": 118, "6312": 118, "isic_0030190": 118, "ham_0003956": 118, "6313": 118, "isic_0030571": 118, "ham_0003190": 118, "6315": 118, "isic_0032418": 118, "ham_0004594": 118, "isic_0032324": 118, "ham_0002117": 118, "6320": 118, "isic_0031139": 118, "ham_0006683": 118, "6326": 118, "isic_0030431": 118, "ham_0005833": 118, "6331": 118, "isic_0029813": 118, "ham_0007457": 118, "6332": 118, "isic_0032506": 118, "ham_0002917": 118, "6337": 118, "isic_0030503": 118, "ham_0005919": 118, "6338": 118, "isic_0029996": 118, "ham_0004001": 118, "6340": 118, "isic_0029916": 118, "ham_0001222": 118, "6341": 118, "isic_0032261": 118, "ham_0005025": 118, "6347": 118, "isic_0030051": 118, "ham_0003581": 118, "6349": 118, "isic_0031420": 118, "ham_0001197": 118, "isic_0030656": 118, "ham_0003825": 118, "6351": 118, "isic_0029907": 118, "ham_0003285": 118, "6354": 118, "isic_0032142": 118, "ham_0000740": 118, "6357": 118, "isic_0032354": 118, "ham_0001714": 118, "6360": 118, "isic_0032465": 118, "ham_0004557": 118, "6361": 118, "isic_0030739": 118, "ham_0002678": 118, "6374": 118, "isic_0032077": 118, "ham_0004334": 118, "6377": 118, "isic_0030611": 118, "ham_0001795": 118, "6378": 118, "isic_0030619": 118, "ham_0003379": 118, "6383": 118, "isic_0030453": 118, "ham_0003116": 118, "6384": 118, "isic_0029677": 118, "ham_0000567": 118, "6385": 118, "isic_0029601": 118, "ham_0001131": 118, "6390": 118, "isic_0032477": 118, "ham_0000430": 118, "6392": 118, "isic_0031869": 118, "ham_0005002": 118, "6394": 118, "isic_0032350": 118, "ham_0007033": 118, "6398": 118, "isic_0030996": 118, "ham_0007222": 118, "6400": 118, "isic_0030753": 118, "ham_0005694": 118, "6403": 118, "isic_0031920": 118, "ham_0005005": 118, "6407": 118, "isic_0031589": 118, "ham_0002947": 118, "6416": 118, "isic_0029481": 118, "ham_0004421": 118, "6420": 118, "isic_0030952": 118, "ham_0003896": 118, "6421": 118, "isic_0029356": 118, "ham_0004876": 118, "6424": 118, "isic_0030600": 118, "ham_0007157": 118, "6425": 118, "isic_0029763": 118, "ham_0005739": 118, "6426": 118, "isic_0031841": 118, "ham_0005716": 118, "6427": 118, "isic_0029670": 118, "ham_0006016": 118, "6430": 118, "isic_0031507": 118, "ham_0003510": 118, "6434": 118, "isic_0030157": 118, "ham_0002173": 118, "6435": 118, "isic_0030497": 118, "ham_0004804": 118, "6437": 118, "isic_0029447": 118, "ham_0006263": 118, "6439": 118, "isic_0031497": 118, "ham_0004774": 118, "6444": 118, "isic_0031673": 118, "ham_0002854": 118, "6445": 118, "isic_0032118": 118, "ham_0007540": 118, "6447": 118, "isic_0031448": 118, "ham_0004486": 118, "6448": 118, "isic_0030020": 118, "ham_0003986": 118, "6456": 118, "isic_0031152": 118, "ham_0007314": 118, "6459": 118, "isic_0030257": 118, "ham_0001370": 118, "6461": 118, "isic_0030075": 118, "ham_0003563": 118, "6464": 118, "isic_0032282": 118, "ham_0007064": 118, "6466": 118, "isic_0029750": 118, "ham_0002395": 118, "6468": 118, "isic_0031347": 118, "ham_0003494": 118, "6469": 118, "isic_0030908": 118, "ham_0004474": 118, "6471": 118, "isic_0030725": 118, "ham_0000300": 118, "6473": 118, "isic_0031805": 118, "ham_0005023": 118, "6475": 118, "isic_0031688": 118, "ham_0000116": 118, "6476": 118, "isic_0029739": 118, "ham_0007352": 118, "6477": 118, "isic_0030807": 118, "ham_0004799": 118, "6480": 118, "isic_0032485": 118, "ham_0003443": 118, "6482": 118, "isic_0032119": 118, "ham_0000874": 118, "6484": 118, "isic_0030301": 118, "ham_0000788": 118, "6485": 118, "isic_0029804": 118, "ham_0005851": 118, "6486": 118, "isic_0031731": 118, "ham_0005355": 118, "6488": 118, "isic_0031147": 118, "ham_0003307": 118, "6489": 118, "isic_0029694": 118, "ham_0006590": 118, "6490": 118, "isic_0031327": 118, "ham_0007137": 118, "6494": 118, "isic_0029415": 118, "ham_0004504": 118, "6495": 118, "isic_0032392": 118, "ham_0000157": 118, "6499": 118, "isic_0029509": 118, "ham_0001826": 118, "6500": 118, "isic_0029799": 118, "ham_0003995": 118, "6501": 118, "isic_0031815": 118, "ham_0002760": 118, "6502": 118, "isic_0031744": 118, "ham_0006667": 118, "6504": 118, "isic_0030728": 118, "ham_0006842": 118, "6505": 118, "isic_0029785": 118, "ham_0005468": 118, "6509": 118, "isic_0032161": 118, "ham_0005216": 118, "6517": 118, "isic_0030054": 118, "ham_0001377": 118, "6521": 118, "isic_0031361": 118, "ham_0000345": 118, "6528": 118, "isic_0031195": 118, "ham_0007277": 118, "6529": 118, "isic_0030985": 118, "ham_0004679": 118, "6531": 118, "isic_0029333": 118, "ham_0001946": 118, "6535": 118, "isic_0031658": 118, "ham_0001033": 118, "6536": 118, "isic_0030388": 118, "ham_0000936": 118, "6538": 118, "isic_0030499": 118, "ham_0001086": 118, "6540": 118, "isic_0031921": 118, "ham_0003103": 118, "6542": 118, "isic_0029955": 118, "ham_0003906": 118, "6543": 118, "isic_0031472": 118, "ham_0003316": 118, "6544": 118, "isic_0030726": 118, "ham_0002255": 118, "6545": 118, "isic_0032301": 118, "ham_0002020": 118, "6546": 118, "isic_0030270": 118, "ham_0002029": 118, "6548": 118, "isic_0031365": 118, "ham_0006728": 118, "6550": 118, "isic_0031452": 118, "ham_0002588": 118, "6556": 118, "isic_0029511": 118, "ham_0006627": 118, "6557": 118, "isic_0029411": 118, "ham_0002866": 118, "6558": 118, "isic_0032068": 118, "ham_0002929": 118, "6562": 118, "isic_0032296": 118, "ham_0006151": 118, "6570": 118, "isic_0031807": 118, "ham_0005511": 118, "6574": 118, "isic_0029310": 118, "ham_0006701": 118, "6577": 118, "isic_0030205": 118, "ham_0007322": 118, "6579": 118, "isic_0029350": 118, "ham_0000151": 118, "6580": 118, "isic_0030449": 118, "ham_0007071": 118, "6582": 118, "isic_0031456": 118, "ham_0006055": 118, "6584": 118, "isic_0029395": 118, "ham_0006958": 118, "6586": 118, "isic_0029520": 118, "ham_0002249": 118, "6589": 118, "isic_0030738": 118, "ham_0004560": 118, "6590": 118, "isic_0030146": 118, "ham_0006895": 118, "6593": 118, "isic_0032262": 118, "ham_0003061": 118, "6594": 118, "isic_0031426": 118, "ham_0006612": 118, "6597": 118, "isic_0030831": 118, "ham_0002926": 118, "6600": 118, "isic_0031416": 118, "ham_0003592": 118, "6604": 118, "isic_0031689": 118, "ham_0001478": 118, "6606": 118, "isic_0029821": 118, "ham_0005707": 118, "6607": 118, "isic_0031906": 118, "ham_0004893": 118, "6608": 118, "isic_0029686": 118, "ham_0006530": 118, "6609": 118, "isic_0031752": 118, "ham_0007331": 118, "6614": 118, "isic_0030865": 118, "ham_0007012": 118, "6615": 118, "isic_0031254": 118, "ham_0006906": 118, "6619": 118, "isic_0030905": 118, "ham_0004280": 118, "6620": 118, "isic_0030109": 118, "ham_0000606": 118, "6622": 118, "isic_0031136": 118, "ham_0001970": 118, "6623": 118, "isic_0030108": 118, "ham_0005165": 118, "6628": 118, "isic_0030673": 118, "ham_0001144": 118, "6630": 118, "isic_0030278": 118, "ham_0001545": 118, "6632": 118, "isic_0031446": 118, "ham_0002336": 118, "6634": 118, "isic_0032457": 118, "ham_0005691": 118, "6640": 118, "isic_0030618": 118, "ham_0001379": 118, "6642": 118, "isic_0029774": 118, "ham_0004393": 118, "6645": 118, "isic_0030777": 118, "ham_0001224": 118, "6650": 118, "isic_0029875": 118, "ham_0003584": 118, "6651": 118, "isic_0029886": 118, "ham_0007459": 118, "6653": 118, "isic_0031892": 118, "ham_0006795": 118, "6654": 118, "isic_0031409": 118, "ham_0003403": 118, "6656": 118, "isic_0031695": 118, "ham_0005402": 118, "6659": 118, "isic_0030478": 118, "ham_0000894": 118, "6660": 118, "isic_0032217": 118, "ham_0006503": 118, "6661": 118, "isic_0032155": 118, "ham_0002052": 118, "6664": 118, "isic_0030891": 118, "ham_0001025": 118, "6665": 118, "isic_0029717": 118, "ham_0002802": 118, "6667": 118, "isic_0032205": 118, "ham_0001921": 118, "6668": 118, "isic_0030838": 118, "ham_0007017": 118, "6669": 118, "isic_0029869": 118, "ham_0004995": 118, "6670": 118, "isic_0032267": 118, "ham_0004605": 118, "6673": 118, "isic_0030164": 118, "ham_0002828": 118, "6674": 118, "isic_0032069": 118, "ham_0006535": 118, "6675": 118, "isic_0029657": 118, "ham_0006694": 118, "6677": 118, "isic_0030646": 118, "ham_0007074": 118, "6681": 118, "isic_0032475": 118, "ham_0007448": 118, "6688": 118, "isic_0032294": 118, "6689": 118, "isic_0030672": 118, "ham_0007255": 118, "6703": 118, "isic_0032363": 118, "ham_0007003": 118, "6706": 118, "isic_0030980": 118, "ham_0003303": 118, "6708": 118, "isic_0030629": 118, "ham_0004935": 118, "6710": 118, "isic_0031178": 118, "6711": 118, "isic_0029534": 118, "ham_0000854": 118, "6712": 118, "isic_0030640": 118, "ham_0007311": 118, "6713": 118, "isic_0029845": 118, "ham_0000892": 118, "6718": 118, "isic_0031617": 118, "ham_0000376": 118, "6721": 118, "isic_0032376": 118, "ham_0000174": 118, "6724": 118, "isic_0031091": 118, "6725": 118, "isic_0029790": 118, "ham_0001684": 118, "6727": 118, "isic_0032023": 118, "ham_0002698": 118, "6730": 118, "isic_0031247": 118, "6731": 118, "isic_0030697": 118, "ham_0001141": 118, "6735": 118, "isic_0032428": 118, "ham_0004410": 118, "6738": 118, "isic_0032342": 118, "6739": 118, "isic_0029752": 118, "ham_0000028": 118, "6743": 118, "isic_0032086": 118, "ham_0002973": 118, "6747": 118, "isic_0030273": 118, "ham_0004524": 118, "6755": 118, "isic_0031563": 118, "ham_0001869": 118, "6757": 118, "isic_0029653": 118, "ham_0006738": 118, "6758": 118, "isic_0029374": 118, "6759": 118, "isic_0032209": 118, "ham_0001100": 118, "6760": 118, "isic_0031404": 118, "ham_0006150": 118, "6762": 118, "isic_0031145": 118, "ham_0004267": 118, "6766": 118, "isic_0032985": 118, "ham_0002552": 118, "6770": 118, "isic_0031160": 118, "ham_0000068": 118, "6777": 118, "isic_0029735": 118, "ham_0002120": 118, "6778": 118, "isic_0029985": 118, "ham_0004763": 118, "6782": 118, "isic_0031474": 118, "ham_0000072": 118, "6787": 118, "isic_0029719": 118, "ham_0003692": 118, "6788": 118, "isic_0032158": 118, "ham_0004318": 118, "6790": 118, "isic_0031678": 118, "6791": 118, "isic_0030664": 118, "ham_0007123": 118, "6795": 118, "isic_0031733": 118, "ham_0005237": 118, "6796": 118, "isic_0032334": 118, "ham_0006197": 118, "6799": 118, "isic_0030858": 118, "ham_0001813": 118, "6800": 118, "isic_0030609": 118, "6801": 118, "isic_0032257": 118, "ham_0006457": 118, "6803": 118, "isic_0031663": 118, "ham_0002946": 118, "6806": 118, "isic_0031883": 118, "6807": 118, "isic_0032096": 118, "ham_0003848": 118, "6812": 118, "isic_0029366": 118, "ham_0001342": 118, "6813": 118, "isic_0032378": 118, "6814": 118, "isic_0030247": 118, "ham_0003767": 118, "isic_0030426": 118, "ham_0002670": 118, "6819": 118, "isic_0030786": 118, "ham_0000682": 118, "6821": 118, "isic_0030520": 118, "ham_0003221": 118, "6824": 118, "isic_0032341": 118, "6825": 118, "isic_0029756": 118, "6826": 118, "isic_0030874": 118, "ham_0002489": 118, "6827": 118, "isic_0031629": 118, "6828": 118, "isic_0029389": 118, "ham_0004575": 118, "6834": 118, "isic_0030312": 118, "ham_0004762": 118, "6836": 118, "isic_0029430": 118, "ham_0003327": 118, "6838": 118, "isic_0031143": 118, "ham_0006853": 118, "6840": 118, "isic_0031863": 118, "6841": 118, "isic_0031515": 118, "ham_0003933": 118, "6842": 118, "isic_0029854": 118, "6843": 118, "isic_0031418": 118, "ham_0002942": 118, "6844": 118, "isic_0031705": 118, "ham_0004747": 118, "6847": 118, "isic_0031435": 118, "6848": 118, "isic_0029615": 118, "ham_0006735": 118, "6849": 118, "isic_0030432": 118, "6850": 118, "isic_0031618": 118, "ham_0005339": 118, "6854": 118, "isic_0031142": 118, "ham_0006030": 118, "6859": 118, "isic_0031059": 118, "ham_0002159": 118, "6861": 118, "isic_0030355": 118, "6862": 118, "isic_0030371": 118, "ham_0005342": 118, "6868": 118, "isic_0030741": 118, "ham_0003912": 118, "6870": 118, "isic_0031555": 118, "ham_0000837": 118, "6872": 118, "isic_0031660": 118, "ham_0001316": 118, "6875": 118, "isic_0030666": 118, "ham_0005188": 118, "6877": 118, "isic_0031293": 118, "ham_0004418": 118, "6878": 118, "isic_0031560": 118, "ham_0004663": 118, "6880": 118, "isic_0031646": 118, "ham_0003684": 118, "6884": 118, "isic_0031385": 118, "6885": 118, "isic_0032055": 118, "ham_0007189": 118, "6887": 118, "isic_0031518": 118, "ham_0006389": 118, "6889": 118, "isic_0030063": 118, "ham_0007464": 118, "6893": 118, "isic_0029475": 118, "ham_0006397": 118, "6894": 118, "isic_0029894": 118, "6895": 118, "isic_0029986": 118, "ham_0006711": 118, "6897": 118, "isic_0030064": 118, "ham_0006048": 118, "6901": 118, "isic_0031817": 118, "ham_0004461": 118, "6903": 118, "isic_0032421": 118, "6904": 118, "isic_0029409": 118, "ham_0003677": 118, "6905": 118, "isic_0032364": 118, "6906": 118, "isic_0031281": 118, "ham_0006974": 118, "6908": 118, "isic_0030829": 118, "ham_0005859": 118, "6909": 118, "isic_0030688": 118, "ham_0003475": 118, "6915": 118, "isic_0029825": 118, "6916": 118, "isic_0031959": 118, "ham_0001088": 118, "6923": 118, "isic_0032078": 118, "6924": 118, "isic_0032443": 118, "ham_0005484": 118, "6931": 118, "isic_0030460": 118, "ham_0001696": 118, "6934": 118, "isic_0030793": 118, "ham_0001712": 118, "6935": 118, "isic_0031221": 118, "6936": 118, "isic_0030194": 118, "ham_0000589": 118, "6940": 118, "isic_0031380": 118, "ham_0007295": 118, "6946": 118, "isic_0029543": 118, "ham_0007419": 118, "6947": 118, "isic_0030930": 118, "ham_0001975": 118, "6950": 118, "isic_0029945": 118, "ham_0000324": 118, "6955": 118, "isic_0031720": 118, "ham_0003222": 118, "6960": 118, "isic_0029720": 118, "ham_0000230": 118, "6962": 118, "isic_0032150": 118, "6963": 118, "isic_0029725": 118, "ham_0004724": 118, "6964": 118, "isic_0031094": 118, "ham_0005056": 118, "6966": 118, "isic_0032345": 118, "6967": 118, "isic_0031676": 118, "ham_0007553": 118, "6968": 118, "isic_0032151": 118, "6969": 118, "isic_0031615": 118, "ham_0000569": 118, "6970": 118, "isic_0031592": 118, "6971": 118, "isic_0029488": 118, "ham_0001623": 118, "6972": 118, "isic_0030125": 118, "ham_0001680": 118, "6977": 118, "isic_0032191": 118, "ham_0006618": 118, "6981": 118, "isic_0030464": 118, "ham_0006303": 118, "6983": 118, "isic_0031268": 118, "ham_0000928": 118, "6987": 118, "isic_0029402": 118, "ham_0007579": 118, "6990": 118, "isic_0029357": 118, "ham_0001767": 118, "6993": 118, "isic_0032309": 118, "ham_0006185": 118, "6994": 118, "isic_0029846": 118, "ham_0002484": 118, "6996": 118, "isic_0031887": 118, "ham_0007426": 118, "7003": 118, "isic_0032029": 118, "ham_0005519": 118, "7007": 118, "isic_0030139": 118, "ham_0003653": 118, "7009": 118, "isic_0031713": 118, "ham_0006145": 118, "7010": 118, "isic_0032027": 118, "7011": 118, "isic_0029976": 118, "ham_0002323": 118, "7012": 118, "isic_0031001": 118, "7013": 118, "isic_0030406": 118, "ham_0007548": 118, "7014": 118, "isic_0030979": 118, "ham_0003175": 118, "7022": 118, "isic_0031674": 118, "ham_0006837": 118, "7025": 118, "isic_0029982": 118, "ham_0005886": 118, "7027": 118, "isic_0031622": 118, "7028": 118, "isic_0031080": 118, "ham_0005561": 118, "7036": 118, "isic_0030053": 118, "ham_0000261": 118, "7040": 118, "isic_0029435": 118, "ham_0006062": 118, "7048": 118, "isic_0030334": 118, "ham_0001497": 118, "7050": 118, "isic_0030184": 118, "ham_0004138": 118, "7055": 118, "isic_0031337": 118, "ham_0006312": 118, "7058": 118, "isic_0030473": 118, "ham_0005244": 118, "isic_0030859": 118, "ham_0006822": 118, "7062": 118, "isic_0030350": 118, "7063": 118, "isic_0031440": 118, "ham_0002100": 118, "7068": 118, "isic_0031975": 118, "ham_0005060": 118, "7070": 118, "isic_0031501": 118, "ham_0007138": 118, "7074": 118, "isic_0032910": 118, "ham_0006882": 118, "7075": 118, "isic_0029354": 118, "ham_0000269": 118, "7078": 118, "isic_0031748": 118, "7079": 118, "isic_0032242": 118, "ham_0003951": 118, "7081": 118, "isic_0033745": 118, "ham_0005686": 118, "7086": 118, "isic_0033112": 118, "7087": 118, "isic_0033380": 118, "ham_0000262": 118, "7088": 118, "isic_0030326": 118, "7089": 118, "isic_0033356": 118, "ham_0005213": 118, "7091": 118, "isic_0033998": 118, "7092": 118, "isic_0030303": 118, "ham_0005143": 118, "7093": 118, "isic_0032470": 118, "ham_0002581": 118, "7095": 118, "isic_0029826": 118, "ham_0005159": 118, "7096": 118, "isic_0029491": 118, "ham_0003663": 118, "7103": 118, "isic_0029422": 118, "ham_0005866": 118, "7107": 118, "isic_0031158": 118, "ham_0006709": 118, "7108": 118, "isic_0029728": 118, "ham_0006155": 118, "7109": 118, "isic_0032181": 118, "ham_0003369": 118, "7110": 118, "isic_0033859": 118, "ham_0001192": 118, "7111": 118, "isic_0031546": 118, "7112": 118, "isic_0033423": 118, "ham_0006516": 118, "7117": 118, "isic_0033846": 118, "7118": 118, "isic_0033315": 118, "7119": 118, "isic_0032691": 118, "ham_0007541": 118, "7120": 118, "isic_0032540": 118, "7121": 118, "isic_0032573": 118, "7122": 118, "isic_0032633": 118, "ham_0007462": 118, "7123": 118, "isic_0032007": 118, "ham_0007477": 118, "7124": 118, "isic_0034298": 118, "7125": 118, "isic_0033686": 118, "ham_0002494": 118, "7126": 118, "isic_0033251": 118, "ham_0001651": 118, "7127": 118, "isic_0033402": 118, "7128": 118, "isic_0034204": 118, "7129": 118, "isic_0030462": 118, "ham_0004766": 118, "7130": 118, "isic_0033971": 118, "ham_0007451": 118, "7131": 118, "isic_0032527": 118, "7132": 118, "isic_0032964": 118, "7133": 118, "isic_0033347": 118, "ham_0006080": 118, "7134": 118, "isic_0032668": 118, "7135": 118, "isic_0032891": 118, "7136": 118, "isic_0033555": 118, "ham_0003143": 118, "7137": 118, "isic_0033963": 118, "7138": 118, "isic_0033793": 118, "7139": 118, "isic_0033363": 118, "ham_0002363": 118, "7140": 118, "isic_0033058": 118, "7141": 118, "isic_0032924": 118, "7142": 118, "isic_0033712": 118, "ham_0000407": 118, "7143": 118, "isic_0032771": 118, "7144": 118, "isic_0033297": 118, "7145": 118, "isic_0030845": 118, "ham_0000093": 118, "7146": 118, "isic_0032555": 118, "ham_0002616": 118, "7147": 118, "isic_0034254": 118, "7148": 118, "isic_0033852": 118, "ham_0004708": 118, "7149": 118, "isic_0033775": 118, "7150": 118, "isic_0033561": 118, "7151": 118, "isic_0034225": 118, "ham_0002030": 118, "7152": 118, "isic_0032916": 118, "7153": 118, "isic_0033756": 118, "7154": 118, "isic_0033823": 118, "ham_0000704": 118, "7156": 118, "isic_0032954": 118, "7157": 118, "isic_0033371": 118, "7158": 118, "isic_0033348": 118, "ham_0001615": 118, "7159": 118, "isic_0033048": 118, "7160": 118, "isic_0033870": 118, "7161": 118, "isic_0033032": 118, "ham_0003505": 118, "7162": 118, "isic_0034227": 118, "7163": 118, "isic_0033563": 118, "7164": 118, "isic_0031613": 118, "ham_0005408": 118, "7165": 118, "isic_0029553": 118, "ham_0005048": 118, "7166": 118, "isic_0029953": 118, "ham_0002793": 118, "7167": 118, "isic_0033276": 118, "ham_0000304": 118, "7168": 118, "isic_0034083": 118, "7169": 118, "isic_0033316": 118, "7170": 118, "isic_0034079": 118, "ham_0005374": 118, "7174": 118, "isic_0033327": 118, "7175": 118, "isic_0032871": 118, "7176": 118, "isic_0034290": 118, "ham_0002009": 118, "7177": 118, "isic_0033165": 118, "7178": 118, "isic_0033430": 118, "7179": 118, "isic_0030851": 118, "ham_0000077": 118, "7182": 118, "isic_0033227": 118, "ham_0006634": 118, "7183": 118, "isic_0033365": 118, "7184": 118, "isic_0033767": 118, "ham_0005300": 118, "7185": 118, "isic_0033755": 118, "7186": 118, "isic_0033625": 118, "7187": 118, "isic_0032362": 118, "ham_0007127": 118, "7188": 118, "isic_0032739": 118, "ham_0001790": 118, "7189": 118, "isic_0032874": 118, "7190": 118, "isic_0032590": 118, "ham_0005351": 118, "7191": 118, "isic_0033549": 118, "7192": 118, "isic_0033921": 118, "7193": 118, "isic_0033959": 118, "ham_0002136": 118, "7194": 118, "isic_0032914": 118, "7195": 118, "isic_0033309": 118, "7196": 118, "isic_0034267": 118, "ham_0005116": 118, "7197": 118, "isic_0033137": 118, "7198": 118, "isic_0032953": 118, "7199": 118, "isic_0034110": 118, "ham_0000268": 118, "7202": 118, "isic_0033389": 118, "7204": 118, "isic_0031904": 118, "ham_0005700": 118, "7205": 118, "isic_0034234": 118, "ham_0004706": 118, "7207": 118, "isic_0033308": 118, "7208": 118, "isic_0034274": 118, "7209": 118, "isic_0033331": 118, "ham_0005995": 118, "7210": 118, "isic_0034192": 118, "7211": 118, "isic_0033689": 118, "7212": 118, "isic_0030546": 118, "ham_0006810": 118, "7213": 118, "isic_0033989": 118, "ham_0007444": 118, "7214": 118, "isic_0032977": 118, "7215": 118, "isic_0033664": 118, "7216": 118, "isic_0033759": 118, "ham_0002923": 118, "7217": 118, "isic_0034144": 118, "7218": 118, "isic_0032992": 118, "7219": 118, "isic_0032950": 118, "ham_0001097": 118, "isic_0034156": 118, "7223": [118, 119], "isic_0034136": 118, "ham_0002750": 118, "7225": 118, "isic_0033386": 118, "7226": 118, "isic_0033003": 118, "7227": 118, "isic_0033253": 118, "ham_0002434": 118, "7228": 118, "isic_0033974": 118, "7229": 118, "isic_0033941": 118, "7230": 118, "isic_0033919": 118, "ham_0002386": 118, "7231": 118, "isic_0033640": 118, "7232": 118, "isic_0033927": 118, "7233": 118, "isic_0032664": 118, "ham_0000294": 118, "7234": 118, "isic_0033461": 118, "7235": 118, "isic_0033511": 118, "ham_0006147": 118, "7236": 118, "isic_0031466": 118, "ham_0002567": 118, "isic_0031048": 118, "7242": 118, "isic_0031694": 118, "ham_0000523": 118, "7243": 118, "isic_0031412": 118, "ham_0002797": 118, "7250": 118, "isic_0029656": 118, "ham_0000395": 118, "7253": 118, "isic_0029405": 118, "ham_0003394": 118, "7255": 118, "isic_0030709": 118, "ham_0000249": 118, "7259": 118, "isic_0030765": 118, "ham_0003188": 118, "7261": 118, "isic_0029902": 118, "ham_0000138": 118, "7263": 118, "isic_0031988": 118, "ham_0003904": 118, "7265": 118, "isic_0032082": 118, "ham_0005107": 118, "7267": 118, "isic_0030378": 118, "ham_0004128": 118, "7269": 118, "isic_0029662": 118, "ham_0005298": 118, "7274": 118, "isic_0030582": 118, "7275": 118, "isic_0029636": 118, "ham_0001220": 118, "7278": 118, "isic_0032374": 118, "ham_0001279": 118, "7281": 118, "isic_0030085": 118, "ham_0000012": 118, "7285": 118, "isic_0029348": 118, "7286": 118, "isic_0031202": 118, "ham_0007350": 118, "7287": 118, "isic_0030892": 118, "7288": 118, "isic_0030429": 118, "ham_0006146": 118, "7289": 118, "isic_0030899": 118, "ham_0004222": 118, "7291": 118, "isic_0031757": 118, "7292": 118, "isic_0032009": 118, "ham_0001107": 118, "7295": 118, "isic_0032641": 118, "7296": 118, "isic_0033345": 118, "7297": 118, "isic_0032711": 118, "ham_0006869": 118, "7298": 118, "isic_0033207": 118, "7299": 118, "isic_0032558": 118, "7300": 118, "isic_0034146": 118, "ham_0001046": 118, "7301": 118, "isic_0033964": 118, "7302": 118, "isic_0032951": 118, "7303": 118, "isic_0033652": 118, "ham_0005363": 118, "7304": 118, "isic_0033944": 118, "7305": 118, "isic_0032717": 118, "7306": 118, "isic_0032651": 118, "ham_0004714": 118, "7307": 118, "isic_0033699": 118, "7308": 118, "isic_0033915": 118, "7309": 118, "isic_0032784": 118, "ham_0003507": 118, "7310": 118, "isic_0033459": 118, "7311": 118, "isic_0032710": 118, "7312": 118, "isic_0032767": 118, "ham_0006520": 118, "7313": 118, "isic_0033503": 118, "7314": 118, "isic_0033795": 118, "7315": 118, "isic_0032679": 118, "ham_0005942": 118, "7316": 118, "isic_0032529": 118, "7317": 118, "isic_0033119": 118, "7318": 118, "isic_0033850": 118, "ham_0004574": 118, "7319": 118, "isic_0032671": 118, "7320": 118, "isic_0032566": 118, "7321": 118, "isic_0033059": 118, "ham_0001400": 118, "7322": 118, "isic_0033113": 118, "7323": 118, "isic_0033547": 118, "7324": 118, "isic_0033172": 118, "ham_0001692": 118, "7325": 118, "isic_0033326": 118, "7326": 118, "isic_0032743": 118, "7327": 118, "isic_0033292": 118, "ham_0000313": 118, "7328": 118, "isic_0033610": 118, "7329": 118, "isic_0033100": 118, "7330": 118, "isic_0033388": 118, "ham_0002501": 118, "7331": 118, "isic_0033009": 118, "7332": 118, "isic_0032928": 118, "isic_0032666": 118, "ham_0002574": 118, "7334": 118, "isic_0033157": 118, "7335": 118, "isic_0032811": 118, "7336": 118, "isic_0034131": 118, "ham_0005106": 118, "isic_0032901": 118, "7338": 118, "isic_0033370": 118, "ham_0001484": 118, "7339": 118, "isic_0033521": 118, "7340": 118, "isic_0032623": 118, "7341": 118, "isic_0032821": 118, "ham_0006391": 118, "7342": 118, "isic_0032783": 118, "7343": 118, "isic_0034139": 118, "7344": 118, "isic_0034133": 118, "ham_0004829": 118, "7345": 118, "isic_0034042": 118, "7346": 118, "isic_0032595": 118, "7347": 118, "isic_0034281": 118, "ham_0004296": 118, "7348": 118, "isic_0034152": 118, "7349": 118, "isic_0033739": 118, "7350": 118, "isic_0034020": 118, "ham_0002206": 118, "7351": 118, "isic_0033727": 118, "7352": 118, "isic_0033827": 118, "ham_0001697": 118, "isic_0033497": 118, "7354": 118, "isic_0034308": 118, "ham_0004272": 118, "7355": 118, "isic_0032957": 118, "7356": 118, "isic_0033334": 118, "7357": 118, "isic_0034273": 118, "ham_0002016": 118, "7358": 118, "isic_0032805": 118, "7359": 118, "isic_0032753": 118, "isic_0033706": 118, "ham_0003993": 118, "7361": 118, "isic_0033097": 118, "7362": 118, "isic_0034014": 118, "7363": 118, "isic_0034320": 118, "ham_0002244": 118, "7364": 118, "isic_0032549": 118, "7365": 118, "isic_0033633": 118, "ham_0005265": 118, "7366": 118, "isic_0034199": 118, "7367": 118, "isic_0032998": 118, "7368": 118, "isic_0032902": 118, "ham_0005248": 118, "7369": 118, "isic_0032948": 118, "7370": 118, "isic_0034264": 118, "isic_0033657": 118, "ham_0006491": 118, "7372": 118, "isic_0034038": 118, "7373": 118, "isic_0033070": 118, "7374": 118, "isic_0033837": 118, "ham_0000402": 118, "7375": 118, "isic_0032612": 118, "7376": 118, "isic_0034039": 118, "7377": 118, "isic_0032785": 118, "ham_0004963": 118, "7378": 118, "isic_0032563": 118, "7379": 118, "isic_0033071": 118, "7380": 118, "isic_0034086": 118, "ham_0003460": 118, "isic_0032577": 118, "7382": 118, "isic_0033753": 118, "ham_0004167": 118, "7383": 118, "isic_0033242": 118, "ham_0006883": 118, "7384": 118, "isic_0032619": 118, "7385": 118, "isic_0032742": 118, "ham_0000579": 118, "7386": 118, "isic_0032961": 118, "7387": 118, "isic_0034112": 118, "7388": 118, "isic_0033296": 118, "ham_0005539": 118, "7389": 118, "isic_0033838": 118, "7390": 118, "isic_0033409": 118, "7391": 118, "isic_0033990": 118, "ham_0006379": 118, "7392": 118, "isic_0032937": 118, "7393": 118, "isic_0032585": 118, "ham_0002721": 118, "7394": 118, "isic_0032899": 118, "7395": 118, "isic_0034157": 118, "7396": 118, "isic_0033231": 118, "ham_0005364": 118, "7397": 118, "isic_0033035": 118, "7398": 118, "isic_0032525": 118, "7399": 118, "isic_0033233": 118, "ham_0003137": 118, "7400": 118, "isic_0032770": 118, "7401": 118, "isic_0034184": 118, "7402": 118, "isic_0033385": 118, "ham_0001321": 118, "7403": 118, "isic_0033471": 118, "7404": 118, "isic_0032831": 118, "7405": 118, "isic_0032780": 118, "ham_0006615": 118, "7406": 118, "isic_0033849": 118, "7407": 118, "isic_0032861": 118, "7408": 118, "isic_0033984": 118, "ham_0002878": 118, "7409": 118, "isic_0032640": 118, "7410": 118, "isic_0032568": 118, "ham_0007005": 118, "acral": 118, "7411": 118, "isic_0033126": 118, "isic_0034099": 118, "7413": 118, "isic_0032599": 118, "ham_0003352": 118, "7414": 118, "isic_0033472": 118, "7415": 118, "isic_0032667": 118, "7416": 118, "isic_0033648": 118, "ham_0005571": 118, "7417": 118, "isic_0032825": 118, "7418": 118, "isic_0032803": 118, "7419": 118, "isic_0033798": 118, "ham_0006539": 118, "7420": 118, "isic_0033014": 118, "7421": 118, "isic_0032516": 118, "7422": 118, "isic_0032520": 118, "ham_0004548": 118, "7423": 118, "isic_0032832": 118, "7424": 118, "isic_0033917": 118, "7425": 118, "isic_0032815": 118, "ham_0004615": 118, "7426": 118, "isic_0033094": 118, "7427": 118, "isic_0033162": 118, "7428": 118, "isic_0033475": 118, "ham_0006857": 118, "isic_0033210": 118, "7430": 118, "isic_0033219": 118, "7431": 118, "isic_0032885": 118, "ham_0003713": 118, "7432": 118, "isic_0033291": 118, "7433": 118, "isic_0034102": 118, "7434": 118, "isic_0033988": 118, "ham_0005961": 118, "7435": 118, "isic_0032859": 118, "7436": 118, "isic_0032795": 118, "7437": 118, "isic_0034105": 118, "ham_0004550": 118, "7438": 118, "isic_0033138": 118, "isic_0032728": 118, "7440": 118, "isic_0034319": 118, "ham_0000747": 118, "7441": 118, "isic_0033748": 118, "7442": 118, "isic_0034044": 118, "7443": 118, "isic_0032864": 118, "ham_0001218": 118, "7444": 118, "isic_0033763": 118, "7445": 118, "isic_0033650": 118, "7446": 118, "isic_0033992": 118, "ham_0006980": 118, "7447": 118, "isic_0033715": 118, "7448": 118, "isic_0033920": 118, "7449": 118, "isic_0033825": 118, "ham_0007552": 118, "7450": 118, "isic_0033857": 118, "7451": 118, "isic_0032731": 118, "7452": 118, "isic_0033069": 118, "ham_0004503": 118, "7453": 118, "isic_0032735": 118, "7454": 118, "isic_0033840": 118, "7455": 118, "isic_0033632": 118, "ham_0003418": 118, "7456": 118, "isic_0034025": 118, "7457": 118, "isic_0033182": 118, "7458": 118, "isic_0034257": 118, "ham_0005905": 118, "7459": 118, "isic_0032999": 118, "ham_0007259": 118, "7460": 118, "isic_0032669": 118, "7461": 118, "isic_0033236": 118, "7462": 118, "isic_0032802": 118, "ham_0003947": 118, "7463": 118, "isic_0032551": 118, "7464": 118, "isic_0033544": 118, "7465": 118, "isic_0032749": 118, "ham_0004145": 118, "7466": 118, "isic_0034091": 118, "7467": 118, "isic_0033738": 118, "7468": 118, "isic_0033510": 118, "ham_0000547": 118, "7469": 118, "isic_0033222": 118, "7470": 118, "isic_0032546": 118, "7471": 118, "isic_0032521": 118, "ham_0005206": 118, "7472": 118, "isic_0032674": 118, "7473": 118, "isic_0033958": 118, "7474": 118, "isic_0032989": 118, "ham_0005135": 118, "7475": 118, "isic_0033618": 118, "7476": 118, "isic_0033016": 118, "7477": 118, "isic_0033906": 118, "ham_0005433": 118, "7478": 118, "isic_0033298": 118, "7479": 118, "isic_0034210": 118, "7480": 118, "isic_0033351": 118, "ham_0001870": 118, "7482": 118, "isic_0033131": 118, "7483": 118, "isic_0033090": 118, "7484": 118, "isic_0033832": 118, "ham_0005383": 118, "7485": 118, "isic_0032893": 118, "7486": 118, "isic_0032683": 118, "7487": 118, "isic_0034111": 118, "ham_0002641": 118, "7488": 118, "isic_0032676": 118, "7489": 118, "isic_0034077": 118, "7490": 118, "isic_0033641": 118, "ham_0003259": 118, "7491": 118, "isic_0033527": 118, "7492": 118, "isic_0032895": 118, "7493": 118, "isic_0033091": 118, "ham_0003824": 118, "7494": 118, "isic_0034138": 118, "7495": 118, "isic_0032971": 118, "7496": 118, "isic_0032781": 118, "ham_0001040": 118, "7497": 118, "isic_0033237": 118, "7498": 118, "isic_0032747": 118, "7499": 118, "isic_0034286": 118, "ham_0004176": 118, "isic_0033373": 118, "7501": 118, "isic_0033170": 118, "ham_0001358": 118, "7502": 118, "isic_0032680": 118, "7503": 118, "isic_0033674": 118, "7504": 118, "isic_0032542": 118, "ham_0003852": 118, "7505": 118, "isic_0034224": 118, "7506": 118, "isic_0033411": 118, "ham_0005573": 118, "7507": 118, "isic_0034096": 118, "7508": 118, "isic_0033382": 118, "7509": 118, "isic_0034288": 118, "ham_0003606": 118, "7510": 118, "isic_0033420": 118, "7511": 118, "isic_0032661": 118, "7512": 118, "isic_0032587": 118, "ham_0003288": 118, "7513": 118, "isic_0033824": 118, "isic_0033830": 118, "7515": 118, "isic_0032838": 118, "ham_0001264": 118, "7516": 118, "isic_0034230": 118, "7517": 118, "isic_0033057": 118, "7518": 118, "isic_0034300": 118, "ham_0003512": 118, "7519": 118, "isic_0033155": 118, "7520": 118, "isic_0032609": 118, "7521": 118, "isic_0033729": 118, "ham_0000439": 118, "7522": 118, "isic_0034307": 118, "7523": 118, "isic_0034137": 118, "7524": 118, "isic_0032761": 118, "ham_0001740": 118, "7525": 118, "isic_0033160": 118, "7526": 118, "isic_0033930": 118, "7527": 118, "isic_0033096": 118, "ham_0006158": 118, "7528": 118, "isic_0033972": 118, "7529": 118, "isic_0033367": 118, "7530": 118, "isic_0033904": 118, "ham_0005820": 118, "7531": 118, "isic_0033342": 118, "7532": 118, "isic_0033265": 118, "7533": 118, "isic_0032704": 118, "ham_0002890": 118, "7534": 118, "isic_0033289": 118, "7535": 118, "isic_0032822": 118, "ham_0001246": 118, "7536": 118, "isic_0033283": 118, "7537": 118, "isic_0033359": 118, "7538": 118, "isic_0032905": 118, "ham_0003614": 118, "7539": 118, "isic_0034001": 118, "7540": 118, "isic_0032560": 118, "7541": 118, "isic_0033427": 118, "ham_0001641": 118, "7542": 118, "isic_0033948": 118, "7543": 118, "isic_0033680": 118, "7544": 118, "isic_0033085": 118, "ham_0003181": 118, "7545": 118, "isic_0033976": 118, "7546": 118, "isic_0034030": 118, "7547": 118, "isic_0034179": 118, "ham_0001133": 118, "7548": 118, "isic_0034206": 118, "7549": 118, "isic_0032980": 118, "7550": 118, "isic_0034314": 118, "ham_0006042": 118, "7551": 118, "isic_0034174": 118, "7552": 118, "isic_0033983": 118, "7554": 118, "isic_0033018": 118, "ham_0007415": 118, "7556": 118, "isic_0032541": 118, "7557": 118, "isic_0032515": 118, "7558": 118, "isic_0033492": 118, "ham_0002253": 118, "7560": 118, "isic_0032548": 118, "isic_0033106": 118, "7562": 118, "isic_0033506": 118, "ham_0003542": 118, "7563": 118, "isic_0033600": 118, "7564": 118, "isic_0033714": 118, "7565": 118, "isic_0034190": 118, "ham_0003325": 118, "7566": 118, "isic_0033605": 118, "ham_0003884": 118, "7567": 118, "isic_0033961": 118, "7568": 118, "isic_0033702": 118, "7569": 118, "isic_0033318": 118, "ham_0001808": 118, "7570": 118, "isic_0032615": 118, "7571": 118, "isic_0033862": 118, "7572": 118, "isic_0032942": 118, "ham_0007483": 118, "7573": 118, "isic_0032628": 118, "7575": 118, "isic_0033110": 118, "ham_0005814": 118, "7576": 118, "isic_0032701": 118, "7577": 118, "isic_0034153": 118, "ham_0000067": 118, "7578": 118, "isic_0034017": 118, "7579": 118, "isic_0034215": 118, "ham_0004088": 118, "7580": 118, "isic_0033743": 118, "ham_0001026": 118, "7581": 118, "isic_0033833": 118, "ham_0000165": 118, "7582": 118, "isic_0032512": 118, "ham_0003735": 118, "7583": 118, "isic_0034149": 118, "7584": 118, "isic_0033800": 118, "7585": 118, "isic_0033163": 118, "ham_0004221": 118, "7586": 118, "isic_0033887": 118, "7587": 118, "isic_0033145": 118, "ham_0001912": 118, "7588": 118, "isic_0033799": 118, "7589": 118, "isic_0032646": 118, "ham_0001076": 118, "7590": 118, "isic_0033627": 118, "7591": 118, "isic_0033803": 118, "ham_0005331": 118, "7592": 118, "isic_0032860": 118, "7593": 118, "isic_0034292": 118, "ham_0007475": 118, "7594": 118, "isic_0034207": 118, "7595": 118, "isic_0033408": 118, "7596": 118, "isic_0033621": 118, "ham_0001889": 118, "7597": 118, "isic_0034116": 118, "isic_0034073": 118, "7599": 118, "isic_0032702": 118, "ham_0004814": 118, "isic_0033667": 118, "7601": 118, "isic_0033107": 118, "7602": 118, "isic_0032882": 118, "ham_0003193": 118, "7603": 118, "isic_0034078": 118, "7604": 118, "isic_0032818": 118, "7605": 118, "isic_0034060": 118, "ham_0001511": 118, "7606": 118, "isic_0033002": 118, "7607": 118, "isic_0033683": 118, "7608": 118, "isic_0032524": 118, "ham_0004411": 118, "7609": 118, "isic_0033376": 118, "7610": 118, "isic_0033796": 118, "7611": 118, "isic_0033121": 118, "ham_0001824": 118, "7612": 118, "isic_0034158": 118, "7613": 118, "isic_0033213": 118, "7614": 118, "isic_0033897": 118, "ham_0000855": 118, "7615": 118, "isic_0033694": 118, "7616": 118, "isic_0034013": 118, "7617": 118, "isic_0032705": 118, "ham_0007367": 118, "7618": 118, "isic_0034198": 118, "isic_0033658": 118, "7620": 118, "isic_0033046": 118, "7621": 118, "isic_0032689": 118, "7622": 118, "isic_0034088": 118, "ham_0006666": 118, "7623": 118, "isic_0034268": 118, "7624": 118, "isic_0032908": 118, "7625": 118, "isic_0034203": 118, "ham_0005190": 118, "7626": 118, "isic_0033311": 118, "7627": 118, "isic_0032700": 118, "7628": 118, "isic_0032608": 118, "ham_0005566": 118, "7629": 118, "isic_0032746": 118, "7630": 118, "isic_0033266": 118, "7631": 118, "isic_0033188": 118, "ham_0001935": 118, "7632": 118, "isic_0033067": 118, "7633": 118, "isic_0032787": 118, "7634": 118, "isic_0033936": 118, "ham_0000216": 118, "7635": 118, "isic_0034121": 118, "7636": 118, "isic_0034232": 118, "isic_0034282": 118, "ham_0004882": 118, "7638": 118, "isic_0033357": 118, "7639": 118, "isic_0034178": 118, "7640": 118, "isic_0033517": 118, "ham_0001683": 118, "7641": 118, "isic_0033513": 118, "7642": 118, "isic_0033649": 118, "7643": 118, "isic_0033404": 118, "ham_0006623": 118, "7644": 118, "isic_0033478": 118, "7645": 118, "isic_0032707": 118, "ham_0007124": 118, "isic_0034311": 118, "isic_0032786": 118, "ham_0002139": 118, "7648": 118, "isic_0033788": 118, "7649": 118, "isic_0033150": 118, "ham_0002367": 118, "7650": 118, "isic_0033698": 118, "7651": 118, "isic_0034240": 118, "7652": 118, "isic_0033220": 118, "ham_0006372": 118, "7653": 118, "isic_0032817": 118, "7654": 118, "isic_0032820": 118, "7655": 118, "isic_0032853": 118, "ham_0004773": 118, "7656": 118, "isic_0034148": 118, "7657": 118, "isic_0034241": 118, "7658": 118, "isic_0033665": 118, "ham_0002582": 118, "7659": 118, "isic_0032813": 118, "7660": 118, "isic_0033558": 118, "ham_0005740": 118, "7661": 118, "isic_0033590": 118, "7662": 118, "isic_0033303": 118, "7663": 118, "isic_0032584": 118, "ham_0003966": 118, "7664": 118, "isic_0033731": 118, "7665": 118, "isic_0032644": 118, "7666": 118, "isic_0033637": 118, "ham_0006873": 118, "7667": 118, "isic_0033566": 118, "7668": 118, "isic_0033263": 118, "ham_0005759": 118, "7669": 118, "isic_0033815": 118, "7670": 118, "isic_0034194": 118, "7671": 118, "isic_0032969": 118, "ham_0000676": 118, "7672": 118, "isic_0033894": 118, "7673": 118, "isic_0033933": 118, "ham_0007265": 118, "isic_0033447": 118, "7675": 118, "isic_0033639": 118, "7676": 118, "isic_0033282": 118, "ham_0004716": 118, "7677": 118, "isic_0032729": 118, "7678": 118, "isic_0033076": 118, "7679": 118, "isic_0033194": 118, "ham_0003634": 118, "7680": 118, "isic_0034258": 118, "7681": 118, "isic_0034023": 118, "7682": 118, "isic_0033243": 118, "ham_0003106": 118, "7683": 118, "isic_0032648": 118, "7684": 118, "isic_0032620": 118, "7685": 118, "isic_0030420": 118, "7686": 118, "isic_0033671": 118, "ham_0007562": 118, "7687": 118, "isic_0033711": 118, "7688": 118, "isic_0034084": 118, "ham_0001777": 118, "7689": 118, "isic_0033273": 118, "7690": 118, "isic_0034176": 118, "7691": 118, "isic_0033104": 118, "ham_0006496": 118, "isic_0032579": 118, "7693": 118, "isic_0033189": 118, "7694": 118, "isic_0032693": 118, "ham_0006700": 118, "7695": 118, "isic_0032734": 118, "7696": 118, "isic_0032659": 118, "7697": 118, "isic_0032478": 118, "ham_0003254": 118, "7698": 118, "isic_0032765": 118, "7699": 118, "isic_0033128": 118, "ham_0007348": 118, "7700": 118, "isic_0033115": 118, "7701": 118, "isic_0032625": 118, "7702": 118, "isic_0033867": 118, "ham_0004872": 118, "7703": 118, "isic_0033202": 118, "7704": 118, "isic_0032794": 118, "ham_0003133": 118, "7705": 118, "isic_0032801": 118, "7706": 118, "isic_0032974": 118, "ham_0002135": 118, "7707": 118, "isic_0033746": 118, "7708": 118, "isic_0033384": 118, "ham_0003002": 118, "7709": 118, "isic_0032830": 118, "7710": 118, "isic_0030126": 118, "ham_0005651": 118, "7712": 118, "isic_0032530": 118, "ham_0003676": 118, "7713": 118, "isic_0033249": 118, "7714": 118, "isic_0032650": 118, "ham_0002908": 118, "7715": 118, "isic_0034182": 118, "7716": 118, "isic_0034213": 118, "ham_0005194": 118, "7717": 118, "isic_0032561": 118, "7718": 118, "isic_0033839": 118, "7719": 118, "isic_0032858": 118, "ham_0007148": 118, "7720": 118, "isic_0033965": 118, "7721": 118, "isic_0031814": 118, "ham_0003243": 118, "7723": 118, "isic_0032601": 118, "ham_0001645": 118, "7724": 118, "isic_0032878": 118, "7725": 118, "isic_0033093": 118, "ham_0006799": 118, "7726": 118, "isic_0033501": 118, "isic_0032677": 118, "7728": 118, "isic_0032769": 118, "ham_0004444": 118, "7729": 118, "isic_0033922": 118, "7730": 118, "isic_0033108": 118, "7731": 118, "isic_0033940": 118, "ham_0002208": 118, "7732": 118, "isic_0033818": 118, "7733": 118, "isic_0034029": 118, "7734": 118, "isic_0032649": 118, "ham_0006567": 118, "7735": 118, "isic_0034109": 118, "7736": 118, "isic_0033439": 118, "7737": 118, "isic_0033214": 118, "ham_0005513": 118, "7738": 118, "isic_0033255": 118, "7739": 118, "isic_0033229": 118, "7740": 118, "isic_0032909": 118, "ham_0001943": 118, "7743": 118, "isic_0033134": 118, "7744": 118, "isic_0034301": 118, "7745": 118, "isic_0033914": 118, "ham_0003801": 118, "7746": 118, "isic_0033978": 118, "7747": 118, "isic_0033718": 118, "7748": 118, "isic_0034237": 118, "ham_0002170": 118, "7749": 118, "isic_0034032": 118, "7750": 118, "isic_0033075": 118, "7751": 118, "isic_0033406": 118, "ham_0006550": 118, "7752": 118, "isic_0033493": 118, "7753": 118, "isic_0033007": 118, "7754": 118, "isic_0034010": 118, "ham_0001720": 118, "7755": 118, "isic_0032819": 118, "7756": 118, "isic_0033451": 118, "ham_0003424": 118, "7757": 118, "isic_0033552": 118, "7758": 118, "isic_0034310": 118, "7759": 118, "isic_0032995": 118, "ham_0003346": 118, "7760": 118, "isic_0032754": 118, "7761": 118, "isic_0032714": 118, "7762": 118, "isic_0033083": 118, "ham_0003803": 118, "7763": 118, "isic_0033133": 118, "7764": 118, "isic_0033352": 118, "7765": 118, "isic_0032574": 118, "ham_0000970": 118, "7766": 118, "isic_0033398": 118, "7767": 118, "isic_0033244": 118, "7768": 118, "isic_0032582": 118, "ham_0004038": 118, "7769": 118, "isic_0033052": 118, "7770": 118, "isic_0032990": 118, "7771": 118, "isic_0033181": 118, "ham_0003097": 118, "7772": 118, "isic_0033661": 118, "7773": 118, "isic_0034004": 118, "7774": 118, "isic_0033645": 118, "ham_0006191": 118, "7775": 118, "isic_0033530": 118, "7777": 118, "isic_0032994": 118, "ham_0000772": 118, "isic_0033604": 118, "7779": 118, "isic_0033634": 118, "ham_0001905": 118, "7780": 118, "isic_0034226": 118, "7781": 118, "isic_0033116": 118, "7782": 118, "isic_0033136": 118, "ham_0007494": 118, "7783": 118, "isic_0033215": 118, "7784": 118, "isic_0033412": 118, "ham_0005185": 118, "7785": 118, "isic_0033514": 118, "7786": 118, "isic_0033876": 118, "7787": 118, "isic_0032737": 118, "ham_0006014": 118, "7788": 118, "isic_0033339": 118, "ham_0000316": 118, "7789": 118, "isic_0031482": 118, "ham_0005083": 118, "7790": 118, "isic_0032944": 118, "7791": 118, "isic_0033516": 118, "7792": 118, "isic_0032639": 118, "ham_0003018": 118, "7793": 118, "isic_0033525": 118, "7794": 118, "isic_0033519": 118, "ham_0001908": 118, "7795": 118, "isic_0032851": 118, "7796": 118, "isic_0033080": 118, "ham_0001667": 118, "7797": 118, "isic_0034129": 118, "7798": 118, "isic_0033010": 118, "ham_0004099": 118, "7799": 118, "isic_0034293": 118, "7800": 118, "isic_0033350": 118, "7801": 118, "isic_0033943": 118, "ham_0001839": 118, "7802": 118, "isic_0033434": 118, "7803": 118, "isic_0033688": 118, "ham_0004424": 118, "7804": 118, "isic_0033557": 118, "isic_0033013": 118, "ham_0006078": 118, "7806": 118, "isic_0032809": 118, "7807": 118, "isic_0032621": 118, "ham_0005760": 118, "7808": 118, "isic_0033328": 118, "7809": 118, "isic_0033768": 118, "ham_0000639": 118, "7810": 118, "isic_0033006": 118, "ham_0003744": 118, "7812": 118, "isic_0032518": 118, "7813": 118, "isic_0033548": 118, "7814": 118, "isic_0033433": 118, "ham_0007169": 118, "7815": 118, "isic_0032934": 118, "7816": 118, "isic_0033742": 118, "ham_0006628": 118, "7817": 118, "isic_0034127": 118, "isic_0033111": 118, "7819": 118, "isic_0033142": 118, "ham_0003447": 118, "7820": 118, "isic_0032703": 118, "7821": 118, "isic_0033168": 118, "7822": 118, "isic_0033077": 118, "ham_0007433": 118, "7823": 118, "isic_0033951": 118, "7824": 118, "isic_0033149": 118, "7825": 118, "isic_0033343": 118, "ham_0003003": 118, "7826": 118, "isic_0033502": 118, "7827": 118, "isic_0034285": 118, "ham_0001673": 118, "7828": 118, "isic_0033966": 118, "isic_0034244": 118, "ham_0006121": 118, "7830": 118, "isic_0032855": 118, "7831": 118, "isic_0032792": 118, "7832": 118, "isic_0034187": 118, "ham_0002476": 118, "7833": 118, "isic_0033179": 118, "ham_0002898": 118, "7835": 118, "isic_0034251": 118, "7836": 118, "isic_0033721": 118, "7837": 118, "isic_0034295": 118, "ham_0001509": 118, "7838": 118, "isic_0033929": 118, "7839": 118, "isic_0033044": 118, "7840": 118, "isic_0033787": 118, "ham_0006418": 118, "7841": 118, "isic_0033599": 118, "7842": 118, "isic_0033764": 118, "ham_0007299": 118, "7843": 118, "isic_0033934": 118, "isic_0032565": 118, "7845": 118, "isic_0033512": 118, "ham_0003623": 118, "7846": 118, "isic_0032788": 118, "7847": 118, "isic_0033221": 118, "ham_0005887": 118, "7848": 118, "isic_0033340": 118, "7849": 118, "isic_0032920": 118, "ham_0005198": 118, "7850": 118, "isic_0033673": 118, "7851": 118, "isic_0033737": 118, "ham_0004303": 118, "7852": 118, "isic_0033932": 118, "7853": 118, "isic_0033062": 118, "ham_0002759": 118, "7854": 118, "isic_0034261": 118, "7855": 118, "isic_0032758": 118, "ham_0006329": 118, "7856": 118, "isic_0033939": 118, "7857": 118, "isic_0032772": 118, "ham_0005496": 118, "7858": 118, "isic_0034041": 118, "7859": 118, "isic_0033598": 118, "7860": 118, "isic_0034021": 118, "7861": 118, "isic_0034220": 118, "ham_0002502": 118, "7862": 118, "isic_0032973": 118, "7863": 118, "isic_0033425": 118, "7864": 118, "isic_0033443": 118, "ham_0004118": 118, "7865": 118, "isic_0032593": 118, "7866": 118, "isic_0033935": 118, "7867": 118, "isic_0033288": 118, "ham_0000578": 118, "7868": 118, "isic_0033087": 118, "7869": 118, "isic_0033669": 118, "ham_0006182": 118, "7870": 118, "isic_0033789": 118, "7871": 118, "isic_0033419": 118, "7872": 118, "isic_0032338": 118, "ham_0004024": 118, "7873": 118, "isic_0034067": 118, "7874": 118, "isic_0031290": 118, "ham_0001872": 118, "7875": 118, "isic_0033224": 118, "ham_0001883": 118, "7876": 118, "isic_0033360": 118, "7877": 118, "isic_0033294": 118, "ham_0002431": 118, "7878": 118, "isic_0033030": 118, "isic_0032657": 118, "7880": 118, "isic_0032605": 118, "ham_0006334": 118, "7881": 118, "isic_0032779": 118, "7882": 118, "isic_0033950": 118, "7883": 118, "isic_0032886": 118, "ham_0006782": 118, "7884": 118, "isic_0032581": 118, "7885": 118, "isic_0032865": 118, "ham_0007519": 118, "7886": 118, "isic_0033726": 118, "7887": 118, "isic_0033167": 118, "ham_0006813": 118, "7888": 118, "isic_0033937": 118, "7889": 118, "isic_0033703": 118, "ham_0005594": 118, "7890": 118, "isic_0034245": 118, "7891": 118, "isic_0032708": 118, "ham_0003130": 118, "7892": 118, "isic_0033574": 118, "7893": 118, "isic_0032846": 118, "ham_0006675": 118, "7894": 118, "isic_0033816": 118, "7895": 118, "isic_0033672": 118, "7896": 118, "isic_0033435": 118, "ham_0006637": 118, "7897": 118, "isic_0034016": 118, "7898": 118, "isic_0033960": 118, "ham_0003535": 118, "7899": 118, "isic_0033259": 118, "7900": 118, "isic_0033403": 118, "7901": 118, "isic_0033954": 118, "ham_0002015": 118, "7902": 118, "isic_0033771": 118, "7903": 118, "isic_0034035": 118, "7904": 118, "isic_0033880": 118, "ham_0004149": 118, "7905": 118, "isic_0033994": 118, "7906": 118, "isic_0032755": 118, "7907": 118, "isic_0033724": 118, "ham_0005052": 118, "7908": 118, "isic_0033786": 118, "7909": 118, "isic_0034278": 118, "ham_0004375": 118, "7910": 118, "isic_0033102": 118, "7911": 118, "isic_0032494": 118, "ham_0004226": 118, "7912": 118, "isic_0032760": 118, "7913": 118, "isic_0034128": 118, "7914": 118, "isic_0034271": 118, "ham_0000443": 118, "7915": 118, "isic_0033564": 118, "ham_0003969": 118, "7916": 118, "isic_0032627": 118, "isic_0033845": 118, "ham_0001739": 118, "7918": 118, "isic_0032884": 118, "7919": 118, "isic_0033532": 118, "ham_0005209": 118, "7920": 118, "isic_0032713": 118, "7921": 118, "isic_0033541": 118, "ham_0005601": 118, "7922": 118, "isic_0032670": 118, "7923": 118, "isic_0033441": 118, "7924": 118, "isic_0034009": 118, "ham_0002915": 118, "7925": 118, "isic_0034305": 118, "7926": 118, "isic_0034097": 118, "7927": 118, "isic_0033707": 118, "ham_0002874": 118, "7928": 118, "isic_0033912": 118, "7929": 118, "isic_0032380": 118, "ham_0003248": 118, "7930": 118, "isic_0032663": 118, "ham_0000468": 118, "7934": 118, "isic_0032962": 118, "ham_0007216": 118, "7935": 118, "isic_0034272": 118, "ham_0002329": 118, "7936": 118, "isic_0032911": 118, "7937": 118, "isic_0033792": 118, "ham_0004043": 118, "7938": 118, "isic_0030492": 118, "7939": 118, "isic_0033926": 118, "7940": 118, "isic_0033021": 118, "ham_0002325": 118, "isic_0033835": 118, "7942": 118, "isic_0034122": 118, "ham_0002448": 118, "7943": 118, "isic_0033281": 118, "7944": 118, "isic_0033285": 118, "7945": 118, "isic_0033781": 118, "ham_0001211": 118, "7946": 118, "isic_0034247": 118, "ham_0006559": 118, "isic_0033455": 118, "7948": 118, "isic_0034056": 118, "7949": 118, "isic_0034069": 118, "ham_0003441": 118, "7950": 118, "isic_0032673": 118, "7951": 118, "isic_0033684": 118, "7952": 118, "isic_0033148": 118, "ham_0002519": 118, "7953": 118, "isic_0033109": 118, "7954": 118, "isic_0032986": 118, "7955": 118, "isic_0033909": 118, "ham_0001801": 118, "7956": 118, "isic_0033293": 118, "7957": 118, "isic_0033026": 118, "ham_0003057": 118, "7958": 118, "isic_0033774": 118, "7959": 118, "isic_0034191": 118, "ham_0001708": 118, "7960": 118, "isic_0033719": 118, "7961": 118, "isic_0033442": 118, "ham_0002417": 118, "7962": 118, "isic_0032943": 118, "7963": 118, "isic_0033723": 118, "ham_0004367": 118, "7964": 118, "isic_0033396": 118, "7965": 118, "isic_0034231": 118, "ham_0005312": 118, "7966": 118, "isic_0034033": 118, "7967": 118, "isic_0032752": 118, "ham_0007052": 118, "7968": 118, "isic_0033794": 118, "7969": 118, "isic_0033462": 118, "ham_0001175": 118, "7970": 118, "isic_0033191": 118, "7971": 118, "isic_0033508": 118, "ham_0004581": 118, "7972": 118, "isic_0033875": 118, "ham_0004582": 118, "7973": 118, "isic_0034200": 118, "ham_0004583": 118, "7974": 118, "isic_0032539": 118, "7975": 118, "isic_0032686": 118, "7976": 118, "isic_0034249": 118, "ham_0004584": 118, "7977": 118, "isic_0032881": 118, "ham_0004585": 118, "7978": 118, "isic_0033329": 118, "ham_0004586": 118, "7979": 118, "isic_0034181": 118, "ham_0004587": 118, "7980": 118, "isic_0033277": 118, "ham_0004588": 118, "7981": 118, "isic_0033197": 118, "ham_0004589": 118, "7982": 118, "isic_0032824": 118, "ham_0004590": 118, "7983": 118, "isic_0034209": 118, "ham_0001547": 118, "7984": 118, "isic_0034297": 118, "7985": 118, "isic_0034171": 118, "ham_0004172": 118, "7986": 118, "isic_0033996": 118, "7987": 118, "isic_0033448": 118, "ham_0002257": 118, "7988": 118, "isic_0034304": 118, "7989": 118, "isic_0033036": 118, "ham_0004189": 118, "7990": 118, "isic_0033015": 118, "ham_0006396": 118, "7991": 118, "isic_0033928": 118, "7992": 118, "isic_0034124": 118, "ham_0004599": 118, "7993": 118, "isic_0033861": 118, "7994": 118, "isic_0033955": 118, "ham_0000432": 118, "7995": 118, "isic_0033822": 118, "7996": 118, "isic_0032762": 118, "ham_0004000": 118, "7997": 118, "isic_0032594": 118, "7998": 118, "isic_0033147": 118, "7999": 118, "isic_0033407": 118, "ham_0001994": 118, "isic_0033734": 118, "isic_0033923": 118, "8002": 118, "isic_0033769": 118, "ham_0006284": 118, "8003": 118, "isic_0032904": 118, "8004": 118, "isic_0030447": 118, "ham_0003523": 118, "8006": 118, "isic_0034108": 118, "ham_0005997": 118, "8008": 118, "isic_0033740": 118, "8009": 118, "isic_0032519": 118, "ham_0005715": 118, "8010": 118, "isic_0034090": 118, "8011": 118, "isic_0032896": 118, "ham_0004063": 118, "8012": 118, "isic_0034166": 118, "8013": 118, "isic_0034217": 118, "ham_0003310": 118, "8014": 118, "isic_0032952": 118, "8015": 118, "isic_0033851": 118, "ham_0005489": 118, "8016": 118, "isic_0032966": 118, "ham_0004076": 118, "8017": 118, "isic_0033864": 118, "8018": 118, "isic_0034008": 118, "ham_0006610": 118, "8019": 118, "isic_0033250": 118, "8020": 118, "isic_0033177": 118, "ham_0006295": 118, "8021": 118, "isic_0033086": 118, "8022": 118, "isic_0032720": 118, "8023": 118, "isic_0032946": 118, "ham_0003649": 118, "8024": 118, "isic_0033153": 118, "8025": 118, "isic_0033314": 118, "ham_0001437": 118, "8026": 118, "isic_0033580": 118, "8027": 118, "isic_0033993": 118, "ham_0001948": 118, "8028": 118, "isic_0032926": 118, "8029": 118, "isic_0033049": 118, "8030": 118, "isic_0033463": 118, "ham_0007533": 118, "8031": 118, "isic_0033757": 118, "8032": 118, "isic_0032933": 118, "ham_0002595": 118, "8033": 118, "isic_0034063": 118, "ham_0002596": 118, "8034": 118, "isic_0033045": 118, "ham_0002597": 118, "8035": 118, "isic_0033873": 118, "ham_0002598": 118, "8036": 118, "isic_0033143": 118, "ham_0002599": 118, "8037": 118, "isic_0032588": 118, "ham_0002600": 118, "8038": 118, "isic_0032510": 118, "ham_0002601": 118, "8039": 118, "isic_0032798": 118, "ham_0002602": 118, "8040": 118, "isic_0032848": 118, "8041": 118, "isic_0033697": 118, "ham_0002603": 118, "8042": 118, "isic_0033656": 118, "ham_0002604": 118, "8043": 118, "isic_0034164": 118, "ham_0002605": 118, "8044": 118, "isic_0033228": 118, "ham_0002606": 118, "8045": 118, "isic_0032744": 118, "ham_0002607": 118, "8046": 118, "isic_0033033": 118, "ham_0001405": 118, "8047": 118, "isic_0033390": 118, "8048": 118, "isic_0033836": 118, "8049": 118, "isic_0033585": 118, "ham_0005972": 118, "8050": 118, "isic_0033319": 118, "8051": 118, "isic_0029393": 118, "ham_0001755": 118, "8052": 118, "isic_0029306": 118, "ham_0000897": 118, "8053": 118, "isic_0030537": 118, "ham_0003997": 118, "8055": 118, "isic_0029654": 118, "ham_0000312": 118, "8058": 118, "isic_0030023": 118, "ham_0001706": 118, "8059": 118, "isic_0029531": 118, "ham_0004412": 118, "8061": 118, "isic_0030961": 118, "8062": 118, "isic_0030626": 118, "ham_0001031": 118, "8063": 118, "isic_0031163": 118, "8064": 118, "isic_0032322": 118, "ham_0004564": 118, "8068": 118, "isic_0031053": 118, "ham_0001052": 118, "8069": 118, "isic_0032496": 118, "ham_0005578": 118, "8070": 118, "isic_0029775": 118, "ham_0002432": 118, "8071": 118, "isic_0030156": 118, "ham_0004954": 118, "8075": 118, "isic_0031411": 118, "ham_0004675": 118, "8077": 118, "isic_0031848": 118, "ham_0001136": 118, "8078": 118, "isic_0031970": 118, "ham_0005421": 118, "8083": 118, "isic_0032375": 118, "ham_0000279": 118, "8087": 118, "isic_0030362": 118, "ham_0000135": 118, "8088": 118, "isic_0031460": 118, "8089": 118, "isic_0031948": 118, "ham_0001276": 118, "8092": 118, "isic_0030543": 118, "ham_0001745": 118, "8094": 118, "isic_0031867": 118, "ham_0001012": 118, "8095": 118, "isic_0029581": 118, "ham_0000626": 118, "8099": 118, "isic_0029814": 118, "ham_0004485": 118, "8100": 118, "isic_0031481": 118, "8101": 118, "isic_0029704": 118, "ham_0003745": 118, "8105": 118, "isic_0029809": 118, "ham_0004014": 118, "8106": 118, "isic_0030771": 118, "ham_0001450": 118, "8107": 118, "isic_0029904": 118, "ham_0007079": 118, "8111": 118, "isic_0030284": 118, "ham_0003192": 118, "8114": 118, "isic_0029730": 118, "ham_0002907": 118, "8116": 118, "isic_0031206": 118, "ham_0007443": 118, "8125": 118, "isic_0030361": 118, "ham_0001470": 118, "8126": 118, "isic_0031796": 118, "ham_0000410": 118, "8127": 118, "isic_0031923": 118, "ham_0007195": 118, "8129": 118, "isic_0030305": 118, "ham_0007577": 118, "8135": 118, "isic_0030232": 118, "ham_0005092": 118, "8136": 118, "isic_0030243": 118, "ham_0000721": 118, "8137": 118, "isic_0032058": 118, "8139": 118, "isic_0030504": 118, "ham_0005014": 118, "8143": 118, "isic_0030841": 118, "ham_0000231": 118, "8144": 118, "isic_0031654": 118, "ham_0005428": 118, "8145": 118, "isic_0029334": 118, "ham_0002881": 118, "8149": 118, "isic_0030074": 118, "ham_0000140": 118, "8150": 118, "isic_0031703": 118, "ham_0005327": 118, "8155": 118, "isic_0031645": 118, "ham_0001037": 118, "8157": 118, "isic_0031726": 118, "8158": 118, "isic_0030455": 118, "ham_0000717": 118, "8166": 118, "isic_0029431": 118, "ham_0000167": 118, "8168": 118, "isic_0030264": 118, "ham_0007221": 118, "8174": 118, "isic_0030717": 118, "ham_0000431": 118, "8175": 118, "isic_0031521": 118, "ham_0001637": 118, "8180": 118, "isic_0032021": 118, "ham_0000335": 118, "isic_0030773": 118, "ham_0005840": 118, "8183": 118, "isic_0032260": 118, "8185": 118, "isic_0029664": 118, "ham_0006754": 118, "8186": 118, "isic_0030116": 118, "ham_0000182": 118, "8191": 118, "isic_0029572": 118, "ham_0006020": 118, "8195": 118, "isic_0030933": 118, "ham_0007385": 118, "8196": 118, "isic_0030268": 118, "ham_0004717": 118, "8199": 118, "isic_0029499": 118, "ham_0000397": 118, "8201": 118, "isic_0031956": 118, "ham_0001588": 118, "8203": 118, "isic_0032347": 118, "ham_0007585": 118, "8204": 118, "isic_0032407": 118, "ham_0001567": 118, "8206": 118, "isic_0030840": 118, "ham_0002154": 118, "8212": 118, "isic_0032291": 118, "ham_0000032": 118, "8213": 118, "isic_0030615": 118, "ham_0001236": 118, "8215": 118, "isic_0031917": 118, "ham_0002031": 118, "8217": 118, "isic_0031308": 118, "ham_0002187": 118, "8220": 118, "isic_0031079": 118, "ham_0003387": 118, "isic_0030225": 118, "ham_0005085": 118, "8226": 118, "isic_0029313": 118, "ham_0006041": 118, "8228": 118, "isic_0030508": 118, "8229": 118, "isic_0031194": 118, "ham_0000924": 118, "isic_0030597": 118, "ham_0002661": 118, "8233": 118, "isic_0029667": 118, "ham_0001142": 118, "8236": 118, "isic_0029566": 118, "ham_0004787": 118, "8237": 118, "isic_0030058": 118, "ham_0005794": 118, "8239": 118, "isic_0030990": 118, "ham_0004665": 118, "8244": 118, "isic_0029359": 118, "ham_0001137": 118, "8245": 118, "isic_0029746": 118, "8246": 118, "isic_0029450": 118, "ham_0004239": 118, "8249": 118, "isic_0031149": 118, "ham_0003833": 118, "8254": 118, "isic_0031360": 118, "ham_0000291": 118, "8259": 118, "isic_0029861": 118, "ham_0002300": 118, "isic_0032368": 118, "ham_0001715": 118, "8264": 118, "isic_0029504": 118, "8265": 118, "isic_0032492": 118, "ham_0004068": 118, "8266": 118, "isic_0029835": 118, "ham_0001512": 118, "8271": 118, "isic_0031447": 118, "ham_0000509": 118, "8275": 118, "isic_0031667": 118, "8277": 118, "isic_0031839": 118, "ham_0001027": 118, "8279": 118, "isic_0031502": 118, "ham_0001830": 118, "8283": 118, "isic_0031905": 118, "ham_0003320": 118, "8286": 118, "isic_0030367": 118, "8287": 118, "isic_0032227": 118, "ham_0000963": 118, "8288": 118, "isic_0031657": 118, "ham_0003828": 118, "8289": 118, "isic_0030077": 118, "8290": 118, "isic_0029865": 118, "8291": 118, "isic_0032003": 118, "ham_0000751": 118, "isic_0030466": 118, "ham_0004432": 118, "8295": 118, "isic_0030135": 118, "ham_0001297": 118, "8301": 118, "isic_0030941": 118, "8303": 118, "isic_0029938": 118, "ham_0001895": 118, "8304": 118, "isic_0029516": 118, "ham_0002547": 118, "8308": 118, "isic_0030066": 118, "ham_0007089": 118, "8309": 118, "isic_0031631": 118, "ham_0003742": 118, "8313": 118, "isic_0030588": 118, "ham_0002979": 118, "8315": 118, "isic_0029640": 118, "ham_0005284": 118, "8317": 118, "isic_0029724": 118, "8318": 118, "isic_0030057": 118, "ham_0001157": 118, "8321": 118, "isic_0032165": 118, "ham_0003345": 118, "8323": 118, "isic_0029666": 118, "ham_0002645": 118, "8327": 118, "isic_0031541": 118, "ham_0004007": 118, "8332": [118, 119], "isic_0030852": 118, "ham_0002628": 118, "8342": 118, "isic_0030652": 118, "isic_0031204": 118, "isic_0030179": 118, "ham_0001507": 118, "8345": 118, "isic_0030894": 118, "ham_0003284": 118, "8348": 118, "isic_0030610": 118, "ham_0001130": 118, "8351": 118, "isic_0031340": 118, "ham_0000996": 118, "8354": 118, "isic_0030065": 118, "ham_0001817": 118, "8357": 118, "isic_0029382": 118, "ham_0000275": 118, "8360": 118, "isic_0030093": 118, "8361": 118, "isic_0031857": 118, "ham_0000391": 118, "8363": 118, "isic_0031621": 118, "ham_0000597": 118, "8366": 118, "isic_0031822": 118, "8367": 118, "isic_0030654": 118, "isic_0031811": 118, "ham_0003113": 118, "8370": 118, "isic_0031984": 118, "ham_0006430": 118, "8372": 118, "isic_0030945": 118, "ham_0004443": 118, "isic_0029609": 118, "ham_0000211": 118, "8381": 118, "isic_0029661": 118, "ham_0001699": 118, "8382": 118, "isic_0031623": 118, "ham_0005625": 118, "8385": 118, "isic_0029493": 118, "ham_0005761": 118, "8389": 118, "isic_0031559": 118, "ham_0006760": 118, "8392": 118, "isic_0029482": 118, "8394": 118, "isic_0032305": 118, "ham_0006456": 118, "8398": 118, "isic_0031756": 118, "ham_0004054": 118, "8401": 118, "isic_0030127": 118, "ham_0004698": 118, "8409": 118, "isic_0031725": 118, "ham_0006706": 118, "8411": 118, "isic_0030397": 118, "ham_0005614": 118, "8415": 118, "isic_0032427": 118, "ham_0005818": 118, "8417": 118, "isic_0032355": 118, "ham_0005888": 118, "8418": 118, "isic_0031405": 118, "ham_0002333": 118, "8420": 118, "isic_0031092": 118, "ham_0006492": 118, "8422": 118, "isic_0029339": 118, "ham_0000418": 118, "8428": 118, "isic_0032184": 118, "ham_0004866": 118, "8429": 118, "isic_0031399": 118, "ham_0002746": 118, "8430": 118, "isic_0030621": 118, "ham_0001101": 118, "8436": 118, "isic_0031510": 118, "ham_0000525": 118, "8437": 118, "isic_0031727": 118, "ham_0005855": 118, "8439": 118, "isic_0031483": 118, "ham_0002298": 118, "8441": 118, "isic_0032274": 118, "ham_0006451": 118, "8443": 118, "isic_0032436": 118, "ham_0001207": 118, "8444": 118, "isic_0031603": 118, "ham_0002128": 118, "8449": 118, "isic_0029867": 118, "8450": 118, "isic_0031070": 118, "ham_0000632": 118, "8451": 118, "isic_0032176": 118, "ham_0001769": 118, "8457": 118, "isic_0029589": 118, "ham_0004069": 118, "8458": 118, "isic_0029641": 118, "ham_0002675": 118, "8460": 118, "isic_0031564": 118, "ham_0005090": 118, "8463": 118, "isic_0032141": 118, "ham_0003723": 118, "8466": 118, "isic_0031798": 118, "ham_0005051": 118, "8467": 118, "isic_0031015": 118, "ham_0007518": 118, "8468": 118, "isic_0031354": 118, "ham_0002823": 118, "8470": 118, "isic_0032163": 118, "ham_0001427": 118, "8472": 118, "isic_0030842": 118, "ham_0006855": 118, "8474": 118, "isic_0030967": 118, "ham_0005881": 118, "8481": 118, "isic_0030675": 118, "ham_0003568": 118, "8482": 118, "isic_0032474": 118, "ham_0003282": 118, "8483": 118, "isic_0030819": 118, "ham_0006302": 118, "8484": 118, "isic_0032015": 118, "ham_0005643": 118, "8486": 118, "isic_0031285": 118, "ham_0006025": 118, "8487": 118, "isic_0030532": 118, "ham_0002766": 118, "8488": 118, "isic_0029459": 118, "ham_0006884": 118, "8492": 118, "isic_0029528": 118, "ham_0003707": 118, "8493": 118, "isic_0030581": 118, "ham_0002916": 118, "8496": 118, "isic_0029438": 118, "ham_0002738": 118, "isic_0029994": 118, "ham_0007080": 118, "isic_0029926": 118, "ham_0004030": 118, "8500": 118, "isic_0031934": 118, "ham_0002003": 118, "8501": 118, "isic_0029583": 118, "ham_0003585": 118, "8504": 118, "isic_0030399": 118, "ham_0005870": 118, "8506": 118, "isic_0032136": 118, "ham_0001458": 118, "8508": 118, "isic_0031353": 118, "ham_0000168": 118, "8509": 118, "isic_0029693": 118, "ham_0002305": 118, "8512": 118, "isic_0031932": 118, "ham_0004291": 118, "8517": 118, "isic_0030592": 118, "ham_0006154": 118, "8518": 118, "isic_0031302": 118, "ham_0001846": 118, "8523": 118, "isic_0029457": 118, "8524": 118, "isic_0030525": 118, "ham_0007004": 118, "8526": 118, "isic_0030296": 118, "ham_0005795": 118, "isic_0030121": 118, "ham_0003088": 118, "8537": 118, "isic_0031126": 118, "ham_0003434": 118, "8538": 118, "isic_0029736": 118, "8539": 118, "isic_0031311": 118, "ham_0000150": 118, "8541": 118, "isic_0030816": 118, "ham_0002205": 118, "8542": 118, "isic_0030796": 118, "ham_0006793": 118, "8546": 118, "isic_0030790": 118, "ham_0001730": 118, "8548": 118, "isic_0030914": 118, "ham_0001406": 118, "8549": 118, "isic_0032300": 118, "ham_0007278": 118, "8556": 118, "isic_0032126": 118, "ham_0000045": 118, "8561": 118, "isic_0032067": 118, "ham_0007442": 118, "8567": 118, "isic_0032489": 118, "ham_0001327": 118, "8573": 118, "isic_0030733": 118, "ham_0006245": 118, "8574": 118, "isic_0030544": 118, "ham_0003562": 118, "8579": 118, "isic_0030962": 118, "8580": 118, "isic_0029978": 118, "ham_0006040": 118, "8582": 118, "isic_0029577": 118, "ham_0000886": 118, "8584": 118, "isic_0029993": 118, "ham_0005987": 118, "8586": 118, "isic_0031117": 118, "ham_0005176": 118, "8589": 118, "isic_0031046": 118, "ham_0002657": 118, "8591": 118, "isic_0029349": 118, "ham_0000771": 118, "8594": 118, "isic_0032047": 118, "ham_0005568": 118, "8595": 118, "isic_0032243": 118, "ham_0004701": 118, "8601": 118, "isic_0030328": 118, "ham_0001334": 118, "8604": 118, "isic_0030117": 118, "ham_0001361": 118, "8605": 118, "isic_0031363": 118, "8606": 118, "isic_0031220": 118, "ham_0001028": 118, "8607": 118, "isic_0029369": 118, "ham_0004505": 118, "8609": 118, "isic_0031942": 118, "ham_0003408": 118, "8615": 118, "isic_0029452": 118, "ham_0005429": 118, "8620": 118, "isic_0029773": 118, "ham_0003340": 118, "8623": 118, "isic_0032444": 118, "ham_0000949": 118, "8626": 118, "isic_0029645": 118, "ham_0000225": 118, "8630": 118, "isic_0030416": 118, "ham_0003026": 118, "8638": 118, "isic_0030180": 118, "ham_0000362": 118, "8639": 118, "isic_0031451": 118, "ham_0006401": 118, "8641": 118, "isic_0029544": 118, "ham_0007013": 118, "8643": 118, "isic_0031612": 118, "ham_0005873": 118, "8645": 118, "isic_0030115": 118, "ham_0003822": 118, "8649": 118, "isic_0029898": 118, "ham_0004324": 118, "8650": 118, "isic_0032112": 118, "ham_0003652": 118, "8658": 118, "isic_0031306": 118, "ham_0000063": 118, "8659": 118, "isic_0030704": 118, "ham_0005966": 118, "8661": 118, "isic_0029597": 118, "ham_0007133": 118, "8664": 118, "isic_0030082": 118, "8668": 118, "isic_0029679": 118, "ham_0000366": 118, "8670": 118, "isic_0030006": 118, "ham_0003546": 118, "8673": 118, "isic_0029432": 118, "ham_0002480": 118, "8682": 118, "isic_0030079": 118, "ham_0003241": 118, "8685": 118, "isic_0031596": 118, "ham_0002794": 118, "8687": 118, "isic_0029881": 118, "ham_0000217": 118, "8688": 118, "isic_0031115": 118, "8689": 118, "isic_0031919": 118, "ham_0004681": 118, "8690": 118, "isic_0030039": 118, "ham_0001737": 118, "8692": 118, "isic_0030535": 118, "ham_0001762": 118, "8694": 118, "isic_0031700": 118, "ham_0004127": 118, "8698": 118, "isic_0030209": 118, "ham_0000266": 118, "8699": 118, "isic_0031019": 118, "ham_0000287": 118, "8701": 118, "isic_0029959": 118, "ham_0007066": 118, "8702": 118, "isic_0029696": 118, "ham_0005183": 118, "8711": 118, "isic_0029975": 118, "ham_0005994": 118, "8713": 118, "isic_0031042": 118, "8714": 118, "isic_0031049": 118, "ham_0001688": 118, "8715": 118, "isic_0030219": 118, "ham_0006681": 118, "8716": 118, "isic_0030981": 118, "ham_0001552": 118, "8717": 118, "isic_0031710": 118, "ham_0005730": 118, "8719": 118, "isic_0031708": 118, "ham_0002865": 118, "8733": 118, "isic_0032251": 118, "ham_0001764": 118, "8739": 118, "isic_0032253": 118, "8740": 118, "isic_0029665": 118, "ham_0000347": 118, "8741": 118, "isic_0030966": 118, "ham_0004802": 118, "8748": 118, "isic_0029614": 118, "ham_0006684": 118, "isic_0032189": 118, "ham_0006028": 118, "8753": 118, "isic_0032281": 118, "ham_0004174": 118, "8754": 118, "isic_0030425": 118, "ham_0004946": 118, "8755": 118, "isic_0032145": 118, "ham_0003760": 118, "8760": 118, "isic_0030973": 118, "ham_0004923": 118, "8766": 118, "isic_0030444": 118, "8767": 118, "isic_0030645": 118, "ham_0003911": 118, "8769": 118, "isic_0032292": 118, "ham_0003685": 118, "8770": 118, "isic_0032107": 118, "ham_0003313": 118, "8771": 118, "isic_0031076": 118, "ham_0001961": 118, "isic_0032218": 118, "ham_0006094": 118, "8775": 118, "isic_0031838": 118, "ham_0002517": 118, "isic_0032028": 118, "ham_0002518": 118, "8777": 118, "isic_0030253": 118, "ham_0005670": 118, "8779": 118, "isic_0029733": 118, "ham_0005750": 118, "8780": 118, "isic_0031832": 118, "ham_0006972": 118, "8784": 118, "isic_0030340": 118, "8786": 118, "isic_0031278": 118, "ham_0001014": 118, "8787": 118, "isic_0030069": 118, "ham_0004833": 118, "8795": 118, "isic_0031924": 118, "ham_0002423": 118, "8798": 118, "isic_0030167": 118, "ham_0004372": 118, "8803": 118, "isic_0032175": 118, "ham_0000302": 118, "8804": 118, "isic_0032327": 118, "ham_0004806": 118, "8805": 118, "isic_0032423": 118, "8813": 118, "isic_0030873": 118, "ham_0005745": 118, "8814": 118, "isic_0031014": 118, "8819": 118, "isic_0032936": 118, "8821": 118, "isic_0030732": 118, "ham_0006366": 118, "8822": 118, "isic_0030802": 118, "ham_0004058": 118, "8823": 118, "isic_0030742": 118, "ham_0000603": 118, "8825": 118, "isic_0031374": 118, "8827": 118, "isic_0030422": 118, "ham_0005980": 118, "8828": 118, "isic_0031681": 118, "ham_0006069": 118, "8829": 118, "isic_0030313": 118, "ham_0003902": 118, "8831": 118, "isic_0030008": 118, "ham_0007317": 118, "8834": 118, "isic_0033232": 118, "8835": 118, "isic_0032405": 118, "ham_0001455": 118, "8836": 118, "isic_0031933": 118, "8837": 118, "isic_0029905": 118, "ham_0006420": 118, "8839": 118, "isic_0031081": 118, "ham_0006596": 118, "8842": 118, "isic_0029983": 118, "ham_0006619": 118, "8843": 118, "isic_0031662": 118, "ham_0006947": 118, "8846": 118, "isic_0031583": 118, "ham_0007374": 118, "8847": 118, "isic_0032109": 118, "8848": 118, "isic_0031031": 118, "8849": 118, "isic_0031742": 118, "ham_0001803": 118, "8851": 118, "isic_0031113": 118, "ham_0000707": 118, "8854": 118, "isic_0030792": 118, "ham_0000759": 118, "8855": 118, "isic_0032459": 118, "ham_0003590": 118, "8856": 118, "isic_0032195": 118, "ham_0007075": 118, "isic_0031813": 118, "ham_0003987": 118, "8861": 118, "isic_0030354": 118, "8862": 118, "isic_0031476": 118, "ham_0004170": 118, "8863": 118, "isic_0031754": 118, "ham_0003940": 118, "8867": 118, "isic_0029803": 118, "8868": 118, "isic_0029465": 118, "ham_0006323": 118, "8873": 118, "isic_0031894": 118, "ham_0006613": 118, "8874": 118, "isic_0031594": 118, "ham_0006835": 118, "8878": 118, "isic_0029855": 118, "ham_0003958": 118, "8879": 118, "isic_0029530": 118, "ham_0000267": 118, "8880": 118, "isic_0031960": 118, "ham_0004518": 118, "8884": 118, "isic_0029554": 118, "8886": 118, "isic_0031366": 118, "ham_0000014": 118, "isic_0031644": 118, "ham_0005925": 118, "8891": 118, "isic_0031802": 118, "ham_0003836": 118, "8895": 118, "isic_0030625": 118, "ham_0007342": 118, "8898": 118, "isic_0032233": 118, "ham_0006174": 118, "8905": 118, "isic_0030251": 118, "ham_0001989": 118, "8910": 118, "isic_0032144": 118, "ham_0007176": 118, "8911": 118, "isic_0030598": 118, "ham_0001891": 118, "8912": 118, "isic_0030740": 118, "ham_0002319": 118, "8913": 118, "isic_0030772": 118, "ham_0005086": 118, "8916": 118, "isic_0029479": 118, "ham_0005175": 118, "8917": 118, "isic_0032278": 118, "8918": 118, "isic_0030580": 118, "ham_0006702": 118, "isic_0030620": 118, "ham_0006409": 118, "8930": 118, "isic_0031871": 118, "ham_0006225": 118, "8935": 118, "isic_0031567": 118, "8938": 118, "isic_0030809": 118, "ham_0001609": 118, "8941": 118, "isic_0032311": 118, "8942": 118, "isic_0030920": 118, "8943": 118, "isic_0030370": 118, "ham_0000889": 118, "8945": 118, "isic_0030534": 118, "ham_0002647": 118, "isic_0032284": 118, "8948": 118, "isic_0031107": 118, "ham_0006725": 118, "8949": 118, "isic_0031314": 118, "ham_0000204": 118, "8953": 118, "isic_0031249": 118, "ham_0003223": 118, "8954": 118, "isic_0031121": 118, "ham_0006205": 118, "8955": 118, "isic_0032034": 118, "8956": 118, "isic_0030451": 118, "ham_0006905": 118, "8957": 118, "isic_0031301": 118, "ham_0000922": 118, "isic_0031111": 118, "8959": 118, "isic_0030833": 118, "ham_0000976": 118, "8965": 118, "isic_0032140": 118, "ham_0004337": 118, "8967": 118, "isic_0031982": 118, "ham_0002345": 118, "8969": 118, "isic_0029833": 118, "ham_0006664": 118, "8970": 118, "isic_0031806": 118, "ham_0003142": 118, "8971": 118, "isic_0030635": 118, "ham_0003640": 118, "8972": 118, "isic_0031991": 118, "ham_0007108": 118, "isic_0030817": 118, "ham_0000073": 118, "8975": 118, "isic_0029470": 118, "8976": 118, "isic_0030674": 118, "8978": 118, "isic_0032065": 118, "ham_0006924": 118, "8979": 118, "isic_0029749": 118, "ham_0001962": 118, "8983": 118, "isic_0030922": 118, "ham_0005197": 118, "8984": 118, "isic_0031192": 118, "ham_0006932": 118, "8987": 118, "isic_0031074": 118, "8992": 118, "isic_0030603": 118, "ham_0006921": 118, "8993": 118, "isic_0031085": 118, "ham_0005828": 118, "8994": 118, "isic_0030260": 118, "ham_0006821": 118, "8998": 118, "isic_0031462": 118, "ham_0002861": 118, "8999": 118, "isic_0031981": 118, "9002": 118, "isic_0032279": 118, "ham_0004991": 118, "9003": 118, "isic_0030198": 118, "ham_0005695": 118, "9009": 118, "isic_0032186": 118, "ham_0000104": 118, "9014": 118, "isic_0030923": 118, "9015": 118, "isic_0032340": 118, "ham_0001881": 118, "9020": 118, "isic_0032090": 118, "ham_0004479": 118, "9025": 118, "isic_0030401": 118, "ham_0002370": 118, "9031": 118, "isic_0032035": 118, "ham_0002228": 118, "isic_0032412": 118, "ham_0002234": 118, "isic_0031930": 118, "ham_0002271": 118, "9035": 118, "isic_0031131": 118, "9036": 118, "isic_0031473": 118, "9037": 118, "isic_0029671": 118, "ham_0003754": 118, "9038": 118, "isic_0031011": 118, "ham_0003919": 118, "9040": 118, "isic_0031134": 118, "ham_0001934": 118, "9046": 118, "isic_0030061": 118, "ham_0000836": 118, "9054": 118, "isic_0030960": 118, "9055": 118, "isic_0030311": 118, "9056": 118, "isic_0031875": 118, "ham_0002326": 118, "9059": 118, "isic_0032125": 118, "ham_0003305": 118, "9068": 118, "isic_0032471": 118, "ham_0003932": 118, "isic_0032148": 118, "ham_0000521": 118, "9072": 118, "isic_0031889": 118, "9073": 118, "isic_0030553": 118, "ham_0005848": 118, "9075": 118, "isic_0031573": 118, "ham_0006273": 118, "9079": 118, "isic_0031238": 118, "ham_0002238": 118, "9083": 118, "isic_0029771": 118, "ham_0004656": 118, "9089": 118, "isic_0031064": 118, "ham_0000798": 118, "isic_0029332": 118, "9094": 118, "isic_0031304": 118, "ham_0001125": 118, "9096": 118, "isic_0030856": 118, "9097": 118, "isic_0029476": 118, "9098": 118, "isic_0030456": 118, "ham_0000194": 118, "9101": 118, "isic_0030942": 118, "9102": 118, "isic_0031913": 118, "9103": 118, "isic_0031880": 118, "9104": 118, "isic_0029344": 118, "ham_0004638": 118, "9105": 118, "isic_0029812": 118, "ham_0005318": 118, "9106": 118, "isic_0030639": 118, "ham_0000815": 118, "9108": 118, "isic_0030694": 118, "ham_0002490": 118, "isic_0029390": 118, "ham_0001701": 118, "9115": 118, "isic_0029441": 118, "ham_0000500": 118, "9117": 118, "isic_0032310": 118, "ham_0007014": 118, "9121": 118, "isic_0030663": 118, "ham_0006104": 118, "9123": 118, "isic_0030151": 118, "ham_0004614": 118, "9125": 118, "isic_0030279": 118, "ham_0002936": 118, "9126": 118, "isic_0032344": 118, "9129": 118, "isic_0031866": 118, "ham_0003423": 118, "isic_0030033": 118, "ham_0002572": 118, "9133": 118, "isic_0031039": 118, "ham_0000778": 118, "9136": 118, "isic_0031611": 118, "ham_0003710": 118, "9138": 118, "isic_0032074": 118, "isic_0030978": 118, "ham_0002007": 118, "9142": 118, "isic_0030810": 118, "ham_0004956": 118, "isic_0030839": 118, "ham_0006926": 118, "9154": 118, "isic_0029862": 118, "ham_0006910": 118, "9156": 118, "isic_0030593": 118, "ham_0002685": 118, "9158": 118, "isic_0031045": 118, "ham_0001454": 118, "9160": 118, "isic_0031794": 118, "ham_0006616": 118, "9161": 118, "isic_0030176": 118, "ham_0005450": 118, "9163": 118, "isic_0031379": 118, "ham_0006241": 118, "9164": 118, "isic_0031599": 118, "ham_0003263": 118, "9171": 118, "isic_0031965": 118, "ham_0002511": 118, "9173": 118, "isic_0030140": 118, "ham_0006512": 118, "9175": 118, "isic_0030159": 118, "ham_0007208": 118, "9179": 118, "isic_0030847": 118, "ham_0005153": 118, "9181": 118, "isic_0032157": 118, "ham_0000353": 118, "9183": 118, "isic_0030434": 118, "ham_0005733": 118, "isic_0032236": 118, "ham_0006105": 118, "9185": 118, "isic_0030919": 118, "ham_0005008": 118, "9187": 118, "isic_0030210": 118, "ham_0004534": 118, "9190": 118, "isic_0029560": 118, "ham_0006129": 118, "9192": 118, "isic_0031809": 118, "ham_0004835": 118, "isic_0030912": 118, "ham_0001020": 118, "isic_0030940": 118, "ham_0002189": 118, "isic_0030263": 118, "ham_0003672": 118, "9201": 118, "isic_0029963": 118, "ham_0007025": 118, "9202": 118, "isic_0030937": 118, "ham_0005173": 118, "9203": 118, "isic_0029792": 118, "ham_0005250": 118, "9207": 118, "isic_0032018": 118, "ham_0006600": 118, "isic_0032333": 118, "ham_0001083": 118, "isic_0032328": 118, "ham_0006469": 118, "9222": 118, "isic_0030900": 118, "ham_0006262": 118, "9232": 118, "isic_0030155": 118, "ham_0005817": 118, "9236": 118, "isic_0032385": 118, "ham_0005712": 118, "9238": 118, "isic_0029328": 118, "ham_0001169": 118, "9245": 118, "isic_0030384": 118, "9246": 118, "isic_0029498": 118, "ham_0001356": 118, "9247": 118, "isic_0031829": 118, "ham_0006936": 118, "9249": 118, "isic_0031036": 118, "ham_0005254": 118, "9251": 118, "isic_0029650": 118, "ham_0001329": 118, "9253": 118, "isic_0029879": 118, "9254": 118, "isic_0029838": 118, "ham_0002364": 118, "9255": 118, "isic_0030182": 118, "ham_0000690": 118, "isic_0030019": 118, "ham_0006967": 118, "9271": 118, "isic_0030229": 118, "ham_0003579": 118, "9273": 118, "isic_0030485": 118, "ham_0002587": 118, "9276": 118, "isic_0031803": 118, "9277": 118, "isic_0032312": 118, "ham_0002795": 118, "9279": 118, "isic_0030977": 118, "ham_0005154": 118, "9284": 118, "isic_0031595": 118, "ham_0006645": 118, "9287": 118, "isic_0031071": 118, "ham_0003045": 118, "9288": 118, "isic_0031475": 118, "9289": 118, "isic_0031127": 118, "ham_0000144": 118, "9290": 118, "isic_0029794": 118, "ham_0006734": 118, "9292": 118, "isic_0029759": 118, "ham_0001765": 118, "9298": 118, "isic_0030348": 118, "9299": 118, "isic_0032042": 118, "9300": 118, "isic_0031602": 118, "ham_0006913": 118, "9301": 118, "isic_0030144": 118, "ham_0004996": 118, "9310": 118, "isic_0029920": 118, "ham_0004475": 118, "9314": 118, "isic_0031188": 118, "9315": 118, "isic_0030589": 118, "ham_0005829": 118, "9316": 118, "isic_0030091": 118, "9317": 118, "isic_0029668": 118, "ham_0001902": 118, "9323": 118, "isic_0030410": 118, "ham_0006553": 118, "9325": 118, "isic_0031750": 118, "ham_0007484": 118, "9326": 118, "isic_0030710": 118, "9327": 118, "isic_0030585": 118, "ham_0005720": 118, "9329": 118, "isic_0030567": 118, "ham_0003609": 118, "9331": 118, "isic_0030557": 118, "ham_0004646": 118, "9334": 118, "isic_0032026": 118, "ham_0002832": 118, "9338": 118, "isic_0030963": 118, "ham_0002833": 118, "9340": 118, "isic_0030336": 118, "ham_0006551": 118, "9341": 118, "isic_0031322": 118, "ham_0006411": 118, "9344": 118, "isic_0031985": 118, "ham_0000406": 118, "9345": 118, "isic_0030890": 118, "9346": 118, "isic_0030404": 118, "ham_0002084": 118, "9347": 118, "isic_0031896": 118, "ham_0003027": 118, "9349": 118, "isic_0032388": 118, "ham_0000378": 118, "isic_0031973": 118, "isic_0029786": 118, "ham_0007058": 118, "9359": 118, "isic_0032008": 118, "ham_0004667": 118, "9363": 118, "isic_0031317": 118, "9364": 118, "isic_0029592": 118, "ham_0006756": 118, "9367": 118, "isic_0030299": 118, "ham_0006554": 118, "9370": 118, "isic_0029895": 118, "ham_0004777": 118, "isic_0030059": 118, "ham_0005246": 118, "9376": 118, "isic_0032020": 118, "ham_0007437": 118, "9378": 118, "isic_0029970": 118, "9382": 118, "isic_0030358": 118, "ham_0005960": 118, "9384": 118, "isic_0029537": 118, "ham_0002147": 118, "9386": 118, "isic_0031668": 118, "ham_0000698": 118, "9387": 118, "isic_0030479": 118, "ham_0007566": 118, "9389": 118, "isic_0030300": 118, "ham_0002284": 118, "9391": 118, "isic_0030086": 118, "ham_0000229": 118, "isic_0031395": 118, "ham_0005974": 118, "9395": 118, "isic_0034265": 118, "ham_0005122": 118, "9396": 118, "isic_0033011": 118, "ham_0006459": 118, "9397": 118, "isic_0032706": 118, "ham_0000412": 118, "9398": 118, "isic_0033445": 118, "ham_0000765": 118, "9399": 118, "isic_0032697": 118, "ham_0002027": 118, "isic_0032589": 118, "ham_0006218": 118, "9401": 118, "isic_0032931": 118, "ham_0002553": 118, "9402": 118, "isic_0033140": 118, "ham_0003360": 118, "9403": 118, "isic_0033313": 118, "ham_0003362": 118, "9404": 118, "isic_0033234": 118, "ham_0003361": 118, "9405": 118, "isic_0033765": 118, "ham_0003366": 118, "9406": 118, "isic_0033903": 118, "ham_0003367": 118, "9407": 118, "isic_0032939": 118, "ham_0003358": 118, "9408": 118, "isic_0033682": 118, "ham_0003365": 118, "9409": 118, "isic_0033105": 118, "ham_0003356": 118, "9410": 118, "isic_0032979": 118, "ham_0003359": 118, "9411": 118, "isic_0033890": 118, "isic_0033381": 118, "ham_0003363": 118, "9413": 118, "isic_0033474": 118, "ham_0003364": 118, "9414": 118, "isic_0034270": 118, "ham_0003368": 118, "9415": 118, "isic_0032572": 118, "9416": 118, "isic_0032912": 118, "ham_0003357": 118, "9417": 118, "isic_0029808": 118, "ham_0003540": 118, "9418": 118, "isic_0031524": 118, "ham_0007206": 118, "isic_0034043": 118, "ham_0006625": 118, "9424": 118, "isic_0029401": 118, "ham_0001009": 118, "9425": 118, "isic_0033484": 118, "ham_0000556": 118, "9426": 118, "isic_0033540": 118, "9427": 118, "isic_0034279": 118, "9428": 118, "isic_0033589": 118, "ham_0006925": 118, "isic_0033888": 118, "9430": 118, "isic_0033338": 118, "9431": 118, "isic_0032880": 118, "ham_0001930": 118, "isic_0032600": 118, "9433": 118, "isic_0032791": 118, "isic_0032721": 118, "ham_0001916": 118, "9435": 118, "isic_0033537": 118, "9436": 118, "isic_0032837": 118, "ham_0002425": 118, "9437": 118, "isic_0032682": 118, "9438": 118, "isic_0033223": 118, "ham_0007596": 118, "9439": 118, "isic_0032764": 118, "9440": 118, "isic_0032907": 118, "ham_0003681": 118, "9441": 118, "isic_0033760": 118, "9442": 118, "isic_0033335": 118, "ham_0005313": 118, "9443": 118, "isic_0034053": 118, "ham_0001442": 118, "isic_0032930": 118, "ham_0000488": 118, "9445": 118, "isic_0032616": 118, "ham_0007376": 118, "9446": 118, "isic_0033614": 118, "ham_0007333": 118, "9447": 118, "isic_0033436": 118, "ham_0007184": 118, "9448": 118, "isic_0033572": 118, "ham_0003208": 118, "9449": 118, "isic_0033596": 118, "9450": 118, "isic_0034212": 118, "ham_0003755": 118, "isic_0033489": 118, "9452": 118, "isic_0033907": 118, "ham_0005316": 118, "9453": 118, "isic_0033139": 118, "9454": 118, "isic_0033225": 118, "ham_0001106": 118, "isic_0033615": 118, "9456": 118, "isic_0033418": 118, "ham_0000675": 118, "9457": 118, "isic_0034054": 118, "9458": 118, "isic_0033364": 118, "ham_0000214": 118, "isic_0034163": 118, "ham_0005263": 118, "9460": 118, "isic_0034277": 118, "9461": 118, "isic_0034147": 118, "9462": 118, "isic_0033247": 118, "9463": 118, "isic_0033918": 118, "9464": 118, "isic_0032889": 118, "9465": 118, "isic_0033132": 118, "ham_0004387": 118, "9466": 118, "isic_0033821": 118, "9467": 118, "isic_0033457": 118, "ham_0005434": 118, "9468": 118, "isic_0033588": 118, "ham_0003774": 118, "isic_0033144": 118, "9470": 118, "isic_0033916": 118, "ham_0005641": 118, "9471": 118, "isic_0032554": 118, "9472": 118, "isic_0033777": 118, "ham_0004854": 118, "9473": 118, "isic_0033078": 118, "isic_0034055": 118, "9475": 118, "isic_0033997": 118, "ham_0006353": 118, "9476": 118, "isic_0032712": 118, "9477": 118, "isic_0033164": 118, "9478": 118, "isic_0033395": 118, "ham_0004392": 118, "9479": 118, "isic_0033355": 118, "9480": 118, "isic_0033095": 118, "9481": 118, "isic_0033082": 118, "ham_0002876": 118, "9482": 118, "isic_0034098": 118, "9483": 118, "isic_0033040": 118, "ham_0007478": 118, "9484": 118, "isic_0034238": 118, "ham_0002712": 118, "9485": 118, "isic_0032543": 118, "ham_0002413": 118, "9486": 118, "isic_0033176": 118, "ham_0001490": 118, "isic_0032658": 118, "ham_0005717": 118, "9488": 118, "isic_0032868": 118, "ham_0004572": 118, "9489": 118, "isic_0032631": 118, "ham_0001834": 118, "9490": 118, "isic_0032528": 118, "ham_0003945": 118, "9491": 118, "isic_0034018": 118, "ham_0002569": 118, "isic_0033879": 118, "ham_0000007": 118, "9493": 118, "isic_0033211": 118, "ham_0005062": 118, "9494": 118, "isic_0033617": 118, "9495": 118, "isic_0033889": 118, "9496": 118, "isic_0033495": 118, "ham_0003968": 118, "9497": 118, "isic_0033161": 118, "9498": 118, "isic_0032796": 118, "9499": 118, "isic_0033346": 118, "ham_0004165": 118, "isic_0034219": 118, "9501": 118, "isic_0033098": 118, "ham_0004071": 118, "isic_0032607": 118, "9503": 118, "isic_0033584": 118, "ham_0003777": 118, "9504": 118, "isic_0033118": 118, "9505": 118, "isic_0032523": 118, "ham_0002755": 118, "9506": 118, "isic_0033159": 118, "9507": 118, "isic_0033542": 118, "ham_0001613": 118, "9508": 118, "isic_0032748": 118, "9509": 118, "isic_0034260": 118, "ham_0004705": 118, "9510": 118, "isic_0034027": 118, "ham_0005059": 118, "9511": 118, "isic_0032580": 118, "ham_0002724": 118, "9512": 118, "isic_0033692": 118, "9513": 118, "isic_0032575": 118, "ham_0002074": 118, "9514": 118, "isic_0032793": 118, "9515": 118, "isic_0033766": 118, "ham_0005115": 118, "9516": 118, "isic_0033008": 118, "9517": 118, "isic_0033543": 118, "ham_0000181": 118, "9518": 118, "isic_0034185": 118, "9519": 118, "isic_0033842": 118, "ham_0005353": 118, "9520": 118, "isic_0032923": 118, "9521": 118, "isic_0032935": 118, "ham_0004016": 118, "9522": 118, "isic_0034229": 118, "ham_0005689": 118, "9523": 118, "isic_0032828": 118, "ham_0005308": 118, "9525": 118, "isic_0033464": 118, "ham_0000650": 118, "9526": 118, "isic_0033577": 118, "ham_0004346": 118, "9527": 118, "isic_0033895": 118, "ham_0004348": 118, "9528": 118, "isic_0032678": 118, "ham_0004344": 118, "9529": 118, "isic_0033970": 118, "ham_0004350": 118, "9530": 118, "isic_0033896": 118, "ham_0004349": 118, "isic_0034250": 118, "ham_0004352": 118, "9532": 118, "isic_0033690": 118, "ham_0004347": 118, "9533": 118, "isic_0034193": 118, "ham_0004351": 118, "9534": 118, "isic_0033208": 118, "ham_0004345": 118, "isic_0032402": 118, "ham_0003809": 118, "9536": 118, "isic_0034309": 118, "ham_0003810": 118, "9537": 118, "isic_0032900": 118, "ham_0003811": 118, "isic_0033898": 118, "ham_0003812": 118, "9539": 118, "isic_0033173": 118, "ham_0003813": 118, "9540": 118, "isic_0032647": 118, "ham_0003814": 118, "9541": 118, "isic_0032800": 118, "ham_0003817": 118, "isic_0033622": 118, "ham_0003818": 118, "isic_0032655": 118, "ham_0003807": 118, "9547": 118, "isic_0033290": 118, "ham_0006233": 118, "isic_0034072": 118, "ham_0006237": 118, "9549": 118, "isic_0034177": 118, "ham_0006239": 118, "9550": 118, "isic_0033681": 118, "ham_0006235": 118, "9551": 118, "isic_0033741": 118, "ham_0006236": 118, "9552": 118, "isic_0033341": 118, "ham_0006234": 118, "9553": 118, "isic_0032849": 118, "ham_0006231": 118, "9554": 118, "isic_0033043": 118, "ham_0006232": 118, "isic_0032632": 118, "ham_0006230": 118, "9556": 118, "isic_0034302": 118, "ham_0004215": 118, "9557": 118, "isic_0032635": 118, "ham_0004185": 118, "9558": 118, "isic_0034114": 118, "ham_0004212": 118, "9559": 118, "isic_0032562": 118, "ham_0004191": 118, "9560": 118, "isic_0033826": 118, "ham_0004206": 118, "isic_0033421": 118, "ham_0004196": 118, "9562": 118, "isic_0033602": 118, "ham_0004201": 118, "9563": 118, "isic_0034248": 118, "ham_0004214": 118, "9564": 118, "isic_0033467": 118, "ham_0004197": 118, "isic_0033797": 118, "ham_0004205": 118, "9566": 118, "isic_0033772": 118, "ham_0004204": 118, "9567": 118, "isic_0033039": 118, "ham_0004190": 118, "9568": 118, "isic_0032996": 118, "ham_0004188": 118, "9569": 118, "isic_0032591": 118, "ham_0004182": 118, "9570": 118, "isic_0034228": 118, "ham_0004213": 118, "9571": 118, "isic_0033556": 118, "ham_0004199": 118, "9572": 118, "isic_0033892": 118, "ham_0004208": 118, "9573": 118, "isic_0032571": 118, "ham_0004181": 118, "isic_0033101": 118, "ham_0004194": 118, "isic_0033623": 118, "ham_0004202": 118, "9576": 118, "isic_0034075": 118, "ham_0004209": 118, "9577": 118, "isic_0032606": 118, "ham_0004183": 118, "9578": 118, "isic_0033066": 118, "ham_0004192": 118, "9579": 118, "isic_0033383": 118, "ham_0004195": 118, "9580": 118, "isic_0033858": 118, "ham_0004207": 118, "9581": 118, "isic_0034081": 118, "ham_0004210": 118, "9582": 118, "isic_0033072": 118, "ham_0004193": 118, "isic_0032759": 118, "ham_0004186": 118, "9584": 118, "isic_0033647": 118, "ham_0004203": 118, "9585": 118, "isic_0032634": 118, "ham_0004184": 118, "9586": 118, "isic_0032956": 118, "ham_0004187": 118, "9587": 118, "isic_0033481": 118, "ham_0004198": 118, "9588": 118, "isic_0034082": 118, "ham_0004211": 118, "isic_0033567": 118, "ham_0004200": 118, "9590": 118, "isic_0034312": 118, "ham_0004216": 118, "9591": 118, "isic_0033025": 118, "ham_0003236": 118, "9592": 118, "isic_0033053": 118, "9593": 118, "isic_0033374": 118, "ham_0006766": 118, "isic_0033877": 118, "ham_0004237": 118, "9595": 118, "isic_0032578": 118, "ham_0007460": 118, "9596": 118, "isic_0033841": 118, "ham_0000822": 118, "9597": 118, "isic_0033882": 118, "ham_0006644": 118, "9598": 118, "isic_0034266": 118, "ham_0004120": 118, "9599": 118, "isic_0033751": 118, "ham_0005257": 118, "isic_0033065": 118, "ham_0001619": 118, "9601": 118, "isic_0033375": 118, "ham_0001147": 118, "9602": 118, "isic_0033628": 118, "ham_0004508": 118, "9603": 118, "isic_0033733": 118, "ham_0002037": 118, "9604": 118, "isic_0032738": 118, "ham_0007191": 118, "9605": 118, "isic_0033353": 118, "ham_0001000": 118, "9606": 118, "isic_0034019": 118, "ham_0000627": 118, "9607": 118, "isic_0032852": 118, "ham_0002164": 118, "isic_0034080": 118, "ham_0000421": 118, "9609": 118, "isic_0034154": 118, "ham_0003561": 118, "9610": 118, "isic_0032789": 118, "ham_0004430": 118, "9611": 118, "isic_0033417": 118, "ham_0007301": 118, "9612": 118, "isic_0033782": 118, "ham_0003935": 118, "9613": 118, "isic_0033332": 118, "ham_0001118": 118, "9614": 118, "isic_0034130": 118, "ham_0007172": 118, "isic_0032945": 118, "ham_0003696": 118, "9616": 118, "isic_0033597": 118, "ham_0005439": 118, "9617": 118, "isic_0034045": 118, "ham_0002282": 118, "9618": 118, "isic_0033028": 118, "ham_0001139": 118, "9619": 118, "isic_0033809": 118, "ham_0003998": 118, "9620": 118, "isic_0033187": 118, "ham_0003034": 118, "9621": 118, "isic_0032814": 118, "ham_0001366": 118, "9622": 118, "isic_0033190": 118, "ham_0004670": 118, "isic_0033535": 118, "ham_0003017": 118, "9624": 118, "isic_0033330": 118, "ham_0005156": 118, "9625": 118, "isic_0033064": 118, "ham_0001209": 118, "isic_0033515": 118, "ham_0002402": 118, "9627": 118, "isic_0033735": 118, "ham_0001433": 118, "9628": 118, "isic_0033982": 118, "ham_0006643": 118, "9629": 118, "isic_0034195": 118, "ham_0003300": 118, "isic_0033620": 118, "9631": 118, "isic_0034040": 118, "ham_0003808": 118, "9632": 118, "isic_0029355": 118, "ham_0007069": 118, "9633": 118, "isic_0031259": 118, "ham_0006720": 118, "9635": 118, "isic_0031216": 118, "ham_0006861": 118, "9642": 118, "isic_0031769": 118, "isic_0031209": 118, "9645": 118, "isic_0032379": 118, "ham_0005522": 118, "9648": 118, "isic_0029368": 118, "9649": 118, "isic_0031105": 118, "ham_0002566": 118, "9653": 118, "isic_0031359": 118, "ham_0002408": 118, "9656": 118, "isic_0031454": 118, "9657": 118, "isic_0030038": 118, "ham_0001956": 118, "9659": 118, "isic_0030909": 118, "ham_0000258": 118, "9660": 118, "isic_0031323": 118, "isic_0031791": 118, "ham_0004742": 118, "9662": 118, "isic_0031488": 118, "ham_0001633": 118, "9665": 118, "isic_0031148": 118, "ham_0005091": 118, "9667": 118, "isic_0031222": 118, "ham_0004857": 118, "isic_0032102": 118, "ham_0002554": 118, "isic_0032273": 118, "ham_0006283": 118, "9678": 118, "isic_0031299": 118, "ham_0003384": 118, "9679": 118, "isic_0031547": 118, "ham_0000102": 118, "9684": 118, "isic_0032221": 118, "isic_0030693": 118, "ham_0005314": 118, "isic_0031649": 118, "ham_0003322": 118, "9687": 118, "isic_0029417": 118, "ham_0002644": 118, "akiec": 118, "isic_0029915": 118, "ham_0006002": 118, "9689": 118, "isic_0029360": 118, "ham_0000549": 118, "9690": 118, "isic_0029659": 118, "ham_0000673": 118, "9692": 118, "isic_0030586": 118, "ham_0006875": 118, "9694": 118, "isic_0031040": 118, "ham_0006898": 118, "9698": 118, "isic_0031929": 118, "ham_0001499": 118, "9699": 118, "isic_0032173": 118, "ham_0001694": 118, "9700": 118, "isic_0033456": 118, "ham_0002615": 118, "isic_0030408": 118, "ham_0002061": 118, "9702": 118, "isic_0032329": 118, "ham_0005027": 118, "9705": 118, "isic_0031198": 118, "ham_0003422": 118, "isic_0031191": 118, "ham_0005931": 118, "9708": 118, "isic_0030242": 118, "isic_0031119": 118, "ham_0004243": 118, "9711": 118, "isic_0030297": 118, "ham_0001621": 118, "isic_0030714": 118, "ham_0003989": 118, "9716": 118, "isic_0029634": 118, "ham_0003971": 118, "isic_0031918": 118, "ham_0003141": 118, "9721": 118, "isic_0030803": 118, "ham_0004012": 118, "isic_0030602": 118, "ham_0007555": 118, "isic_0031874": 118, "ham_0001922": 118, "9729": 118, "isic_0032437": 118, "ham_0007601": 118, "isic_0030076": 118, "ham_0007085": 118, "9735": 118, "isic_0030191": 118, "ham_0003161": 118, "isic_0031043": 118, "ham_0006217": 118, "9742": 118, "isic_0032455": 118, "ham_0001337": 118, "9746": 118, "isic_0030794": 118, "ham_0002185": 118, "isic_0031738": 118, "ham_0005766": 118, "isic_0029930": 118, "ham_0005889": 118, "9749": 118, "isic_0032349": 118, "ham_0003086": 118, "9752": 118, "isic_0029362": 118, "ham_0005413": 118, "isic_0030991": 118, "ham_0001453": 118, "isic_0029541": 118, "ham_0004636": 118, "9757": 118, "isic_0030827": 118, "ham_0001173": 118, "9760": 118, "isic_0031940": 118, "ham_0001234": 118, "9761": 118, "isic_0029582": 118, "ham_0003501": 118, "isic_0031044": 118, "ham_0006135": 118, "9768": 118, "isic_0031852": 118, "ham_0004441": 118, "isic_0031609": 118, "ham_0004363": 118, "9772": 118, "isic_0032422": 118, "ham_0004384": 118, "isic_0030826": 118, "9774": 118, "isic_0031012": 118, "ham_0005389": 118, "9775": 118, "isic_0029533": 118, "isic_0029563": 118, "ham_0003146": 118, "9780": 118, "isic_0030491": 118, "ham_0002441": 118, "9781": 118, "isic_0029715": 118, "ham_0000859": 118, "9782": 118, "isic_0029860": 118, "ham_0001967": 118, "isic_0030341": 118, "ham_0004558": 118, "9785": 118, "isic_0029315": 118, "ham_0004780": 118, "isic_0029811": 118, "ham_0003157": 118, "9793": 118, "isic_0031743": 118, "ham_0005505": 118, "9795": 118, "isic_0029932": 118, "ham_0004722": 118, "9801": 118, "isic_0030375": 118, "ham_0007037": 118, "9802": 118, "isic_0030175": 118, "ham_0003051": 118, "9803": 118, "isic_0031335": 118, "ham_0000501": 118, "9805": 118, "isic_0031692": 118, "ham_0007131": 118, "9806": 118, "isic_0032203": 118, "ham_0005954": 118, "9807": 118, "isic_0029371": 118, "ham_0005264": 118, "isic_0031659": 118, "9814": 118, "isic_0030707": 118, "ham_0001890": 118, "9816": 118, "isic_0031211": 118, "ham_0004563": 118, "9817": 118, "isic_0030953": 118, "ham_0005924": 118, "9819": 118, "isic_0030821": 118, "ham_0006604": 118, "isic_0031292": 118, "ham_0007008": 118, "9822": 118, "isic_0031570": 118, "ham_0001178": 118, "isic_0032277": 118, "ham_0001624": 118, "isic_0033494": 118, "9837": 118, "isic_0032371": 118, "ham_0006483": 118, "9840": 118, "isic_0029610": 118, "ham_0005459": 118, "isic_0033413": 118, "9842": 118, "isic_0030785": 118, "ham_0004609": 118, "isic_0029840": 118, "ham_0004809": 118, "isic_0030143": 118, "ham_0005978": 118, "9846": 118, "isic_0032154": 118, "ham_0002307": 118, "9848": 118, "isic_0032356": 118, "ham_0000982": 118, "9850": 118, "isic_0029567": 118, "ham_0000954": 118, "isic_0030387": 118, "ham_0005650": 118, "9854": 118, "isic_0031381": 118, "isic_0029851": 118, "ham_0000769": 118, "9856": 118, "isic_0029573": 118, "ham_0006879": 118, "9862": 118, "isic_0030280": 118, "ham_0003633": 118, "9864": 118, "isic_0031578": 118, "9865": 118, "isic_0032397": 118, "isic_0030245": 118, "isic_0030487": 118, "ham_0000688": 118, "9869": 118, "isic_0032238": 118, "9870": 118, "isic_0031672": 118, "ham_0004439": 118, "9871": 118, "isic_0030986": 118, "isic_0031431": 118, "9873": 118, "isic_0029598": 118, "ham_0003401": 118, "isic_0029781": 118, "ham_0002646": 118, "9879": 118, "isic_0032897": 118, "ham_0000462": 118, "isic_0030730": 118, "ham_0004592": 118, "9887": 118, "isic_0030549": 118, "ham_0002094": 118, "9888": 118, "isic_0032014": 118, "ham_0007349": 118, "isic_0029462": 118, "9894": 118, "isic_0031421": 118, "ham_0004976": 118, "9896": 118, "isic_0030591": 118, "ham_0000005": 118, "9900": 118, "isic_0029638": 118, "9902": 118, "isic_0031286": 118, "ham_0000909": 118, "9913": 118, "isic_0030158": 118, "ham_0005255": 118, "9914": 118, "isic_0029900": 118, "ham_0005551": 118, "9915": 118, "isic_0029549": 118, "ham_0005718": 118, "9916": 118, "isic_0033000": 118, "ham_0006442": 118, "9920": 118, "isic_0033295": 118, "9921": 118, "isic_0031228": 118, "ham_0006524": 118, "isic_0030142": 118, "ham_0006434": 118, "isic_0031823": 118, "ham_0006301": 118, "9928": 118, "isic_0029460": 118, "ham_0000545": 118, "9934": 118, "isic_0030844": 118, "ham_0003107": 118, "9935": 118, "isic_0031993": 118, "ham_0006887": 118, "isic_0029500": 118, "isic_0032404": 118, "ham_0007038": 118, "isic_0031927": 118, "ham_0001277": 118, "isic_0030344": 118, "ham_0007199": 118, "9944": 118, "isic_0032135": 118, "ham_0003144": 118, "9957": 118, "isic_0030463": 118, "ham_0004655": 118, "isic_0029827": 118, "ham_0002699": 118, "isic_0032206": 118, "ham_0001302": 118, "9966": 118, "isic_0032199": 118, "ham_0000361": 118, "isic_0033869": 118, "isic_0030825": 118, "ham_0004060": 118, "9970": 118, "isic_0029713": 118, "ham_0006036": 118, "9971": 118, "isic_0033866": 118, "ham_0000239": 118, "9973": 118, "isic_0030036": 118, "isic_0031506": 118, "ham_0006902": 118, "isic_0029830": 118, "ham_0006024": 118, "isic_0031108": 118, "isic_0030133": 118, "ham_0001152": 118, "isic_0033811": 118, "ham_0004282": 118, "isic_0030877": 118, "ham_0000193": 118, "isic_0033358": 118, "isic_0030655": 118, "ham_0000356": 118, "10000": 118, "isic_0033151": 118, "10001": 118, "isic_0031922": 118, "ham_0000020": 118, "10002": 118, "isic_0032947": 118, "10003": 118, "isic_0029309": 118, "ham_0005579": 118, "10005": 118, "isic_0033705": 118, "ham_0001576": 118, "10009": 118, "isic_0031430": 118, "ham_0005705": 118, "10010": 118, "isic_0033084": 118, "ham_0002867": 118, "10011": 118, "isic_0033550": 118, "10012": 118, "isic_0033536": 118, "10013": 118, "isic_0032854": 118, "10014": 118, "isic_0032258": 118, "10015": 118, "coverag": [118, 244], "chest_xrai": 118, "360_dataset": 118, "rice_image_dataset": 118, "pistachio_image_dataset": 118, "durum_wheat_dataset": 118, "seg_train": 118, "roi": [118, 224], "classid": 118, "fish_dataset": 118, "shrimp": 118, "10253": 118, "19_radiography_dataset": 118, "grassknot": 118, "asl": 118, "alphabet": [118, 218, 221, 253], "asl_alphabet_train": 118, "vipoooool": 118, "diseas": 118, "blood": 118, "alessiocorrado99": 118, "animals10": 118, "oddrational": 118, "sachinpatel21": 118, "az": 118, "handwritten": 118, "a_z": 118, "gti": 118, "upm": 118, "leapgestrecog": 118, "paramaggarw": 118, "mastercategori": 118, "alexattia": 118, "simpson": 118, "kermany2018": 118, "oct2017": 118, "slothkong": 118, "tanlikesmath": 118, "diabet": 118, "retinopathi": 118, "resized_train": 118, "trainlabel": 118, "jboysen": 118, "mri": 118, "alzheim": 118, "asdasdasasda": 118, "prasunroi": 118, "natural_imag": 118, "shaunthesheep": 118, "catsvsdog": 118, "petimag": 118, "rsna": 118, "boneag": 118, "techsash": 118, "landlord": 118, "handwrit": 118, "train_v2": 118, "written_name_train_v2": 118, "ocular": 118, "odir5k": 118, "odir": 118, "5k": [118, 128], "full_df": 118, "xhlulu": 118, "140k": 118, "fake": 118, "real_vs_fak": 118, "mbkinaci": 118, "train_zip": 118, "masoudnickparvar": 118, "tumor": 118, "fournierp": 118, "captcha": 118, "chrisfilo": 118, "nipunarora8": 118, "ethnic": 118, "kvpratama": 118, "pokemon": 118, "ravirajsinh45": 118, "casting_512x512": 118, "mohamedhanyyi": 118, "ctscan": 118, "thedownhil": 118, "engrav": 118, "dataset_upd": 118, "ihelon": 118, "lego": 118, "minifigur": 118, "class_id": [118, 329], "lung": 118, "ct": 118, "2d_imag": 118, "2d_mask": 118, "aryashah2k": 118, "ultrasound": 118, "dataset_busi_with_gt": 118, "benign": 118, "ruizgara": 118, "socof": 118, "kritikseth": 118, "jenny18": 118, "honei": 118, "bee_img": 118, "bee_data": 118, "health": 118, "iamsouravbanerje": 118, "nih": 118, "sample_label": 118, "afhq": 118, "awsaf49": 118, "coco2017": 118, "bulentsiyah": 118, "drone": 118, "semantic_drone_dataset": 118, "original_imag": [118, 267], "label_images_semant": 118, "labelmap_fil": [118, 262, 267, 307, 312, 362, 368], "class_dict_seg": 118, "plameneduardo": 118, "sarscov2": 118, "dansbeck": 118, "cityscapes_data": 118, "dasmehdixtr": 118, "uav": 118, "dataset_xml_format": 118, "drone_dataset_yolo": 118, "dataset_txt": 118, "minhhuy2810": 118, "labelledric": 118, "anoka": 118, "kuzushiji": 118, "olgabelitskaya": 118, "diyer22": 118, "retail": 118, "jangedoo": 118, "utkfac": 118, "arnaud58": 118, "landscap": 118, "joosthazelzet": 118, "flower_imag": 118, "flower_label": 118, "ananthu017": 118, "emot": 118, "fer": 118, "caltech256": 118, "256_objectcategori": 118, "soumikrakshit": 118, "leukemia": 118, "nmc_leukemia": 118, "training_data": 118, "fold_0": 118, "colon": [118, 445], "histopatholog": 118, "lung_colon_image_set": 118, "lung_image_set": 118, "drgfreeman": 118, "rockpaperscissor": 118, "rp": 118, "cv": 118, "pankrzysiu": 118, "cifar10": [118, 445], "koryakinp": 118, "nancyalaswad90": 118, "clorichel": 118, "smeschk": 118, "andyczhao": 118, "covidx": 118, "cxr2": 118, "nodoubttom": 118, "cancer9": 118, "classesis": 118, "isic": 118, "collabor": 118, "vencerlanz09": 118, "datast": 118, "kmkarakaya": 118, "bk": 118, "kfc": 118, "mcdonald": 118, "starbuck": 118, "logos3": 118, "shubhamgoel27": 118, "dermnet": 118, "nikhilpandey360": 118, "cxr_png": 118, "vbookshelf": 118, "rice_leaf_diseas": 118, "khoongweihao": 118, "xray_dataset_covid19": 118, "hojjatk": 118, "fatiimaezzahra": 118, "famou": [118, 137], "icon": 118, "women": 118, "bryanb": 118, "abstract": [118, 194, 198, 200, 201, 219, 223, 229, 254, 292, 294, 391, 392, 393], "abstract_galleri": 118, "hasibalmuzdadid": 118, "15k": 118, "ifigotin": 118, "imagenetmini": 118, "mini": 118, "sshikamaru": 118, "glaucoma": 118, "fundus_train_val_data": 118, "fundus_scanes_sort": 118, "retin": 118, "training_set": 118, "rfmid_training_label": 118, "disease_risk": 118, "oxfordiiit": 118, "bengaliai": 118, "numta": 118, "sayangoswami": 118, "reddit": 118, "meme": 118, "jehanbhathena": 118, "weather": 118, "kumaresanmanickavelu": 118, "lyft": 118, "udac": 118, "dataa": 118, "camerargb": 118, "cameraseg": 118, "fedesoriano": 118, "cifar100": 118, "doom": 118, "animal_cross": 118, "animal_crossing_dataset": 118, "total_awards_receiv": 118, "cactus3": 118, "basicshap": 118, "agrigorev": 118, "images_compress": 118, "odins0n": 118, "ucf": 118, "crime": 118, "hgunraj": 118, "covidxct": 118, "3a_imag": 118, "val_covidx_ct": 118, "dhruvildav": 118, "tunguz": 118, "mayse": 118, "genuss": 118, "sanikam": 118, "misrakahm": 118, "ambarish": 118, "breakhi": 118, "aelchimminut": 118, "fruits262": 118, "brsdincer": 118, "valentynsichkar": 118, "aalborgunivers": 118, "aau": 118, "rainsnow": 118, "kaggle_coco": 118, "aaurainsnow": 118, "kostastoki": 118, "sachinkumar413": 118, "mistag": 118, "arthropod": 118, "taxonomi": 118, "artaxor": 118, "stl10": 118, "train_imag": 118, "pharmaceut": 118, "drug": 118, "vitamin": 118, "imageclassescombinedwithcocoannot": 118, "images_raw": 118, "anshtanwar": 118, "facial": 118, "million": 118, "1m_faces_00_01_02_03": 118, "1m_faces_00": 118, "images40": 118, "moth": 118, "meetnagadia": 118, "antoreepjana": 118, "mahmoudreda55": 118, "frabbisw": 118, "face_ag": 118, "guie": 118, "images_224": 118, "zippyz": 118, "breed": 118, "oxford": 118, "muhammedtausif": 118, "sell": 118, "kneroma": 118, "tacotrashdataset": 118, "meta_df": 118, "img_fil": 118, "cat_nam": 118, "preetviradiya": 118, "brian": 118, "benjaminwarn": 118, "trainlabels19": 118, "id_cod": 118, "diagnosi": 118, "luisblanch": 118, "covidct": 118, "anujm": 118, "data1a": 118, "indian": 118, "actor": 118, "bollywood": 118, "vikramtiwari": 118, "pix2pix": 118, "taco": 118, "roboflow_yolo": [118, 345], "balraj98": 118, "deepglob": 118, "kwentar": 118, "utkarshsaxenadn": 118, "robikscub": 118, "textocr": 118, "train_val_imag": 118, "ashfakyeafi": 118, "trafic_data": 118, "mostafaabla": 118, "garbage_classif": 118, "franciscoescobar": 118, "gavinarmstrong": 118, "sprayer": 118, "docknet": 118, "aaronyin": 118, "oneshotpokemon": 118, "shot": 118, "arashn": 118, "ayuraj": 118, "asl_dataset": 118, "balabaskar": 118, "tom": 118, "jerri": 118, "tom_and_jerri": 118, "nafin59": 118, "monkeypox": 118, "lesion": 118, "trolukovich": 118, "food11": 118, "mrgeisling": 118, "fingerspel": 118, "spell": 118, "dataset5": 118, "massachusett": 118, "test_label": 118, "kutaykutlu": 118, "pothol": 118, "pothole_image_data": 118, "raddar": 118, "indiana": 118, "univers": 118, "images_norm": 118, "indiana_project": 118, "cat_dog": 118, "meetnaren": 118, "goodread": 118, "kondwani": 118, "eye_diseas": 118, "niten19": 118, "faceshap": 118, "rishianand": 118, "devanagari": 118, "pkdarabi": 118, "cardetect": 118, "datasetclassif": 118, "piterfm": 118, "ukrain": 118, "russia": 118, "war": 118, "oryx": 118, "img_russia": 118, "swaroopkml": 118, "tustunkok": 118, "turkish": 118, "die9origephit": 118, "nike": 118, "adida": 118, "aniruddhsharma": 118, "crack": 118, "pavement": 118, "arpitjain007": 118, "mdwaquarazam": 118, "akash2907": 118, "train_data": 118, "niteshfr": 118, "chessman": 118, "anshulmehtakaggl": 118, "usharengaraju": 118, "grassclov": 118, "biomass_data": 118, "biomass_train_data": 118, "image_file_nam": 118, "label_typ": 118, "farjanakabirsamanta": 118, "vaishnaviasonawan": 118, "l3llff": 118, "sharansmenon": 118, "animals141": 118, "wonder": 118, "world": 118, "wanderdust": 118, "toward": 118, "melanoma": 118, "shashwatwork": 118, "knee": 118, "osteoarthr": 118, "sadhliroomyprim": 118, "coco_tokyo": 118, "japan": 118, "linchundan": 118, "fundusimage1000": 118, "1000imag": 118, "rashikrahmanpritom": 118, "ahemateja19bec1025": 118, "traffic_data": 118, "maedemaftouni": 118, "curated_data": 118, "lplenka": 118, "coco_train_anno": 118, "rhtsingh": 118, "130k": 118, "512x512": 118, "embed": 118, "anasmohammedtahir": 118, "covidqu": 118, "d4rklucif3r": 118, "williamscott701": 118, "memot": 118, "7k": 118, "memotion_dataset_7k": 118, "overall_senti": 118, "gunavenkatdoddi": 118, "soumendraprasad": 118, "fifa": 118, "england": [118, 119], "karimabdulnabi": 118, "classification10": 118, "my_data": 118, "akhiljethwa": 118, "blood_canc": 118, "dionisiusdh": 118, "indonesian": 118, "batik": 118, "motif": 118, "subinium": 118, "emojiimag": 118, "acmeai": 118, "tech": 118, "odataset": 118, "coco_motorcycl": 118, "nitishabharathi": 118, "harshalhond": 118, "eliasdabba": 118, "emoji": 118, "codepoint": 118, "lgmoneda": 118, "br": 118, "coin": 118, "coco_labelme_classif": 118, "tapakah68": 118, "yandextoloka": 118, "watermet": 118, "yusufberksardoan": 118, "jtiptj": 118, "pneumoniacovid19tuberculosi": 118, "vijaykumar1799": 118, "trip": 118, "ford": 118, "alifrahman": 118, "vitaminc": 118, "smoker": 118, "mad": 118, "segmentation_full_body_mads_dataset_1192_img": 118, "mpwolk": 118, "cusersmarildownloadsdeadjpg": 118, "lsind18": 118, "gemston": 118, "golden": 118, "football_golden_foot": 118, "fantach": 118, "neu": 118, "brand_nam": 118, "salmaneunu": 118, "metamorph": 118, "adhoppin": 118, "datatset": 118, "carlosrunn": 118, "pizza_not_pizza": 118, "maciejgronczynski": 118, "biggest": 118, "genderfac": 118, "cricket": 118, "legend": 118, "mksaad": 118, "wider": 118, "wider_train": 118, "insect": 118, "train_label": 118, "wwymak": 118, "arcdataset": 118, "parkinson": 118, "ivanfel": 118, "pollen": 118, "pollendataset": 118, "pollen_data": 118, "pollen_carri": 118, "birdy654": 118, "cifak": 118, "theoviel": 118, "abdomin": 118, "trauma": 118, "coloradokb": 118, "dandelionimag": 118, "ayanzadeh93": 118, "colorclassif": 118, "vijaygiitk": 118, "samuelcortinha": 118, "chihuahua": 118, "highresolut": 118, "portrait": 118, "edoardoba": 118, "vishesh1412": 118, "celebr": 118, "mcagriaksoi": 118, "amateur": 118, "unman": 118, "database1": 118, "dataclusterlab": 118, "dataclust": 118, "capsur": 118, "fernando2rad": 118, "44c": 118, "roydatasci": 118, "driving_log": 118, "stoicstat": 118, "appreg": 119, "skill": [119, 137, 445], "corona": 119, "nlp": [119, 418], "corona_nlp_test": 119, "corona_nlp_train": 119, "corona_nlp": 119, "hold": [119, 198, 217, 292, 398, 431], "data_path": [119, 124, 128, 129, 131, 134, 136, 197, 209, 220], "latin1": 119, "import_kwarg": 119, "dm_dataset": 119, "44955": 119, "ann_typ": [119, 187, 196, 197, 209, 210, 211, 212, 214, 220, 227, 229, 230, 233, 250, 282, 286, 287, 288, 292, 293, 374, 397, 398, 445], "41157": 119, "breakdown": 119, "tweet": 119, "token": [119, 379], "who": [119, 445], "neutral": 119, "originaltweet": 119, "corona_nlp_target": 119, "worth": 119, "evalu": [119, 124, 433], "peek": 119, "row_idx": 119, "menyrbi": 119, "phil_gahan": 119, "chrisitv": 119, "co": 119, "ifz9fan2pa": 119, "xx6ghgfzcc": 119, "i2nlzdxno8": 119, "london": 119, "ideal": 119, "astype_annot": [119, 418], "encompass": 119, "reflect": [119, 329], "lai": 119, "groundwork": 119, "begin": [119, 229, 374], "therebi": 119, "dispers": 119, "tabularvalid": [119, 419, 445], "dominance_ratio_thr": [119, 245, 419], "topk_bin": [119, 245, 419], "compute_statist": [119, 220, 237, 245, 419], "accordingli": 119, "show_stat": 119, "len_missing_ann_item": 119, "len_broken_ann_item": 119, "df_defined_label": 119, "from_dict": 119, "df_defined_capt": 119, "10958": 119, "12369": 119, "uneven": 119, "focu": 119, "hate": 119, "groceri": 119, "swear": 119, "i\u00e2": 119, "x92m": 119, "swath": 119, "panic": 119, "buyer": 119, "coronaviru": 119, "coronavirusuk": 119, "anxieti": 119, "panicbuyinguk": 119, "moron": 119, "portsmouth": 119, "inconsist": [119, 134, 198], "philgahan": 119, "im": 119, "refined_corona_nlp": 119, "especi": 120, "ozg": [121, 414, 416], "unel": [121, 414, 416], "burak": [121, 414, 416], "ozkalayci": [121, 414, 416], "cevahir": [121, 414, 416], "cigla": [121, 414, 416], "proceed": [121, 137, 414, 416], "ieee": [121, 414, 416], "cvf": [121, 414, 416], "workshop": [121, 414, 416], "kirillov": 121, "alexand": 121, "et": [121, 137, 217], "arxiv": [121, 197, 412], "preprint": 121, "2304": 121, "02643": 121, "concept": [122, 126], "projectcli": [122, 124, 125, 126, 128, 130, 133, 134, 135, 136, 138], "ws_datum": 122, "c02ec1959c48d65d9558bad15108fe546ed2e4d": 122, "680d0437b86a99cc1e3b402bd47b87d3700b8387": 122, "anytim": 122, "a0fdbbc6da25e5104ff927a321216affbb31fb75": 122, "e8e9c55b20992e48adf85f77753b52aba600abac": 122, "tbd": 123, "trade": 124, "captur": 124, "characterist": 124, "componenet": 124, "simpli": [124, 132, 133, 135, 136], "psuedo": 125, "facilit": [126, 128], "enter": [126, 218, 221, 253, 437], "metafil": 126, "catalog": 127, "recommand": 127, "20k": 128, "funcion": 128, "shorten": 128, "output_path": 128, "worri": 128, "unclear": 129, "proper": 131, "hl_op": [131, 133, 443, 445], "from_subset": [131, 220], "to_subset": [131, 220], "resplit": 131, "discrep": 132, "variat": 132, "pinpoint": 132, "streamlin": 132, "consolid": [132, 133], "essenc": 132, "cornerston": 132, "cohes": 132, "label_confus": 132, "pythoncli": 132, "latest": [133, 445], "foundat": 133, "becom": [133, 135, 196], "increasingli": [133, 135], "massiv": 133, "scatter": 133, "florenc": 133, "flod": 133, "9m": 133, "lvi": 133, "object365": 133, "merc": 133, "merge_report": 133, "eurosat_path": 133, "uc_merced_path": 133, "occur": [134, 433, 445], "paid": 134, "segementationvalid": 134, "appar": 135, "improv": [135, 396, 397, 445], "volum": 135, "grow": [135, 433], "tailor": 135, "filtered_result": 135, "fuction": 135, "1024": [135, 209, 217, 220, 244, 400, 401, 402], "filter_func": [135, 197, 209, 217, 220], "media_a": [135, 188, 197, 209, 210, 211, 212, 217, 220, 227, 229, 230, 254, 282, 292, 374, 391, 392, 393, 397, 398, 427], "isinst": [135, 188, 209, 217, 220, 221, 374, 433], "bbox_siz": [135, 209, 217, 220], "accept": [135, 200, 201, 209, 217, 218, 220, 221, 229, 253, 382], "topk_result": 136, "hash_kei": [136, 194, 196, 198, 209, 211, 212, 217, 229, 230, 282, 286, 292, 374], "query_path": 136, "query_id": [136, 193], "query_str": 136, "topk_num": 136, "fractaldb": 137, "vit": 137, "mathmat": 137, "IFS": 137, "privaci": 137, "gen_img_count": 137, "gen_img_shap": 137, "pthon": 137, "synthetic_data": 137, "fractalimagegener": [137, 412], "generate_dataset": [137, 219, 412], "congratul": 137, "nakashima": 137, "kodai": 137, "aaai": 137, "intellig": 137, "vol": 137, "aggreg": [138, 220], "get_non_project_command": 141, "get_project_command": [141, 158], "comparisonmethod": 142, "enum": [142, 162, 182, 184, 187, 188, 198, 200, 209, 211, 212, 217, 218, 220, 227, 233, 237, 262, 267, 270, 272, 282, 292, 301, 303, 311, 312, 317, 322, 329, 330, 337, 338, 362, 367, 368, 374, 387, 391, 392, 393, 405, 410, 418, 427, 433], "build_pars": [142, 143, 144, 145, 150, 151, 152, 153, 154, 155, 156, 157, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 180], "parser_ctor": [142, 143, 144, 145, 150, 151, 152, 153, 154, 155, 156, 157, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 180], "get_sensitive_arg": [142, 143, 144, 145, 150, 151, 152, 153, 154, 155, 156, 157, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 180], "compare_command": 142, "convert_command": 143, "detect_format_command": 144, "build_get_subpars": 145, "subpars": [145, 181], "_subparsersact": 145, "idatasetdownload": [145, 147, 148, 149], "build_describe_subpars": 145, "download_command": 145, "describe_downloads_command": 145, "report_format": [147, 148, 149], "get_command_descript": [147, 148, 149], "describe_command_descript": [147, 148, 149], "make_all_paths_absolut": 148, "kaggledatasetdownload": 148, "tfdsdatasetdownload": 149, "get_extractor": 149, "idataset": [149, 171, 182, 187, 196, 197, 200, 209, 210, 211, 212, 215, 216, 217, 220, 226, 227, 229, 230, 231, 233, 235, 236, 237, 238, 245, 249, 250, 251, 252, 253, 258, 266, 283, 287, 289, 297, 300, 302, 304, 305, 318, 319, 324, 327, 328, 329, 330, 341, 358, 363, 372, 375, 386, 396, 397, 398, 407, 408, 418, 419, 443], "explain_command": 150, "explore_command": 151, "filter_command": 152, "generate_command": 153, "info_command": [154, 168, 175, 177], "merge_command": 155, "patch_command": 156, "prune_command": 157, "cliexcept": [160, 162, 163, 164, 171, 183], "datumaroerror": [160, 162, 163, 164, 171, 183, 196, 209, 212, 214, 220, 221, 253, 254, 282, 292, 374, 382, 385], "multilineformatt": [160, 162, 163, 171, 181], "keep_natur": [160, 162, 163, 171, 181], "helpformatt": [160, 162, 163, 171, 181], "projectnotfounderror": [160, 162, 163, 171, 214], "add_command": [160, 175], "join_cli_arg": [160, 163, 181], "load_project": [160, 162, 163, 164, 171, 184], "readonli": [160, 162, 163, 164, 171, 184, 233], "on_error_do": [160, 163, 209, 220, 437], "callback": [160, 162, 163, 164, 171, 209, 218, 220, 437], "ignore_error": [160, 163, 209, 220, 437], "scope_add": [160, 162, 163, 164, 171, 437], "contextmanag": [160, 162, 163, 164, 171, 209, 221, 413, 433, 437], "scope": [160, 162, 163, 164, 171, 188, 209, 220, 221, 374, 433], "func": [160, 162, 163, 164, 171, 209, 220, 221, 433, 437], "arg_nam": [160, 162, 163, 164, 171, 209, 220, 437], "show_video_import_warn": [160, 163, 181], "create_command": 161, "filtermod": [162, 184], "items_annot": [162, 184], "i_a": [162, 184], "a_i": [162, 184], "annotations_item": [162, 184], "make_filter_arg": [162, 184], "list_opt": [162, 184], "projectbuildtarget": [162, 233], "crudproxi": [162, 233], "buildtarget": [162, 205, 233], "main_target": [162, 233], "base_stag": [162, 233], "add_target": [162, 233], "add_stag": [162, 233], "prev": [162, 233], "remove_target": [162, 233], "remove_stag": [162, 233], "add_transform_stag": [162, 233], "add_inference_stag": [162, 233], "add_filter_stag": [162, 233], "expr": [162, 197, 209, 220, 233], "add_convert_stag": [162, 233], "add_explore_stag": [162, 233], "make_target_nam": [162, 233], "split_target_nam": [162, 233], "strip_target_nam": [162, 233], "make_pipelin": [162, 233], "export_command": 162, "generate_next_file_nam": [162, 171, 184], "basedir": [162, 171, 184, 215], "make_file_nam": [162, 434], "lowercas": [162, 434], "hyphen": [162, 434], "generate_next_nam": [163, 434], "suffix": [163, 220, 225, 230, 434], "occurr": [163, 434], "name_abc": [163, 434], "name_bas": [163, 434], "name_base1": [163, 434], "name_base5": [163, 434], "name_base6": [163, 434], "import_command": 163, "remove_command": [164, 175], "checkout_command": 166, "commit_command": 167, "log_command": 169, "status_command": 170, "conflictingcategorieserror": [171, 212, 214, 229], "datasetmergeerror": [171, 201, 212, 214, 227, 229], "wrongrevpatherror": [171, 183], "compute_ann_statist": [171, 231], "compute_image_statist": [171, 231], "dump_json_fil": [171, 422], "sort_kei": [171, 422], "allow_numpi": [171, 422], "indent": [171, 422], "append_newlin": [171, 422], "parse_full_revpath": [171, 184], "ctx_project": [171, 184], "stats_command": 171, "str_to_bool": 171, "ye": 171, "valueerror": [171, 198, 220, 237, 382, 431, 433], "transform_command": 172, "validate_command": 173, "build_add_pars": 175, "get_add_sensitive_arg": 175, "build_remove_pars": 175, "get_remove_sensitive_arg": 175, "build_run_pars": 175, "get_run_sensitive_arg": 175, "run_command": 175, "build_info_pars": [175, 177], "get_info_sensitive_arg": [175, 177], "build_migrate_pars": 176, "get_migrate_sensitive_arg": 176, "migrate_command": 176, "build_split_video_pars": 178, "get_split_video_sensitive_arg": 178, "split_video_command": 178, "format_command": 180, "add_subpars": 181, "builder": [181, 445], "required_count": 181, "nmin": 181, "nmax": 181, "at_least": 181, "make_subcommands_help": 181, "help_line_start": 181, "distancecomparevisu": [182, 220], "outputformat": [182, 220], "default_format": [182, 220], "update_label_confus": [182, 220], "label_diff": [182, 220], "update_bbox_confus": [182, 220], "diff": [182, 220, 233], "update_polygon_confus": [182, 220], "update_mask_confus": [182, 220], "draw_text_with_background": [182, 220], "thick": [182, 220], "bgcolor": [182, 220], "draw_detection_roi": [182, 220], "get_a_label": [182, 220], "get_b_label": [182, 220], "draw_bbox": [182, 220], "get_label_diff_fil": [182, 220], "save_item_label_diff": [182, 220], "item_a": [182, 203, 220], "item_b": [182, 203, 220], "save_item_bbox_diff": [182, 220], "save_as_tensorboard": [182, 220], "save_conf_matrix": [182, 220], "conf_matrix": [182, 220], "parse_dataset_pathspec": 184, "parse_revspec": 184, "third": 184, "split_local_revpath": 184, "withing": 184, "imatchercontext": [187, 200, 201, 229], "abc": [187, 188, 194, 200, 219, 223, 254, 292, 294, 391, 392, 393], "get_any_label_nam": [187, 200, 226, 227, 229, 230], "imergercontext": [187, 200, 201, 226, 227, 229, 230], "merge_info": [187, 200, 226, 227, 229, 230], "merge_categori": [187, 200, 226, 227, 229, 230], "merge_media_typ": [187, 200, 226, 227, 229, 230], "mediael": [187, 188, 196, 197, 200, 209, 210, 211, 212, 216, 217, 220, 224, 226, 227, 229, 230, 250, 254, 256, 282, 286, 292, 296, 374, 391, 392, 393, 397, 398, 443], "datasetitemstorag": [187, 200, 209, 211, 212, 227, 229, 230], "_noth": [187, 188, 196, 198, 200, 201, 203, 209, 212, 214, 217, 220, 227, 229, 230, 282, 292, 374, 391, 392, 393, 397, 398, 400], "noth": [187, 188, 196, 198, 200, 201, 203, 209, 212, 214, 217, 220, 225, 227, 229, 230, 282, 292, 374, 391, 392, 393, 397, 398, 400, 433], "_type": [187, 188, 198, 200, 201, 209, 217, 227, 282, 292, 374, 391, 392, 393, 398], "as_dict": [187, 188, 198, 200, 209, 211, 212, 217, 224, 227, 254, 282, 292, 374, 381, 391, 392, 393, 397, 398], "field_nam": [187, 188, 198, 200, 209, 217, 227, 292, 374, 391, 392, 393], "is_empti": [187, 211, 212, 227, 229, 230], "get_annotated_item": [187, 197, 209, 211, 212, 220, 227, 229, 230], "get_datasetitem_by_path": [187, 197, 209, 211, 212, 220, 227, 229, 230], "get_annot": [187, 197, 209, 211, 212, 220, 227, 229, 230], "datasetitemstoragedatasetview": [187, 209, 211, 212, 229], "constant": [187, 196, 197, 209, 210, 211, 212, 220, 227, 229, 230, 233, 236, 282, 287, 288, 374, 397, 398, 419], "is_stream": [187, 196, 197, 209, 210, 211, 212, 220, 221, 227, 228, 229, 230, 271, 282, 287, 288, 302, 304, 366, 374, 397, 398], "demand": [187, 196, 197, 209, 210, 211, 212, 220, 221, 227, 228, 229, 230, 271, 282, 287, 288, 302, 304, 366, 374, 397, 398], "nullcrypt": [187, 208, 209, 211, 212, 215, 224, 227, 254, 282, 292, 374, 427], "anydata": [187, 209, 211, 212, 224, 227, 254, 282, 292], "from_self": [187, 209, 211, 212, 224, 227, 254, 282, 292], "is_encrypt": [187, 209, 211, 212, 224, 227, 254, 282, 292, 445], "set_crypt": [187, 197, 209, 211, 212, 217, 224, 227, 254, 282, 292, 374, 391, 392, 393], "mediatyp": [187, 209, 211, 212, 224, 227, 254, 282, 286, 292, 295, 296], "has_data": [187, 209, 211, 212, 224, 227, 254, 282, 292], "iobas": [187, 209, 211, 212, 224, 227, 254, 282, 292, 374, 427], "abstractmethod": [187, 188], "funcobj": [187, 188], "metaclass": [187, 188], "abcmeta": [187, 188], "instanti": [187, 188, 218, 221, 253], "overridden": [187, 188], "my_abstract_method": [187, 188], "imodelinterpret": [188, 384, 391, 392, 393, 400, 401, 402], "inp": [188, 384, 391, 392, 393, 400, 401, 402], "prepinfo": [188, 209, 220, 222, 384, 391, 392, 393, 400, 401, 402], "pred": [188, 197, 209, 220, 222, 229, 384, 391, 392, 393, 400, 401, 402, 422], "typevar": [188, 221, 374, 433], "constraint": [188, 221, 374, 433, 445], "contravari": [188, 221, 374, 433], "_final": [188, 221, 374, 433], "_immut": [188, 221, 374, 433], "_typevarlik": [188, 221, 374, 433], "primarili": [188, 221, 374, 433], "longest": [188, 221, 374, 433], "latter": [188, 221, 374, 433], "signatur": [188, 221, 252, 253, 290, 374, 433], "overload": [188, 209, 220, 221, 374, 433], "subclass": [188, 200, 201, 221, 229, 374, 433, 435], "issubclass": [188, 221, 374, 433], "typeerror": [188, 221, 374, 382, 433], "pep": [188, 196, 200, 201, 221, 229, 374, 433], "invari": [188, 221, 374, 433], "introspect": [188, 221, 374, 433], "__name__": [188, 221, 374, 433], "__constraints__": [188, 221, 374, 433], "__covariant__": [188, 221, 374, 433], "__contravariant__": [188, 221, 374, 433], "hashinfer": [191, 192, 194], "text_model": 191, "dataitem": [192, 235], "select_uninferenced_dataset": 193, "calculate_ham": 193, "b1": 193, "b2": 193, "vector": [193, 198], "match_query_subset": 193, "check_and_convert_to_list": 193, "match_num_item_for_clust": 194, "dataset_len": 194, "cluster_num_item_list": 194, "prunebas": 194, "num_cent": 194, "database_kei": 194, "item_list": [194, 432], "randomselect": 194, "clusteredrandom": 194, "queryclust": 194, "ndrselect": 194, "allowed_task_nam": 196, "multiclasscl": 196, "allowed_tracking_loss_typ": 196, "bbox_refin": 196, "ema_loss_dyn": 196, "loss_dyn": 196, "mean_loss_dyn": 196, "seri": [196, 198, 217, 282, 292, 398, 418], "mean_loss_dyns_per_label": 196, "ema_datafram": 196, "top_k": 196, "noisylabelcandid": 196, "descend": 196, "mean_plot_styl": 196, "mean_plot_color": 196, "intenum": [196, 198, 200, 209, 211, 212, 217, 218, 221, 224, 229, 230, 253, 254, 282, 286, 292, 356, 374, 376, 380, 381, 382, 385, 397, 398, 433, 445], "super_resolution_annot": [196, 198, 209, 211, 212, 217, 229, 230, 282, 286, 292, 374], "depth_annot": [196, 198, 209, 211, 212, 217, 229, 230, 282, 286, 292, 374], "feature_vector": [196, 198, 209, 211, 212, 217, 229, 230, 282, 286, 292, 374], "rotated_bbox": [196, 198, 209, 211, 212, 217, 229, 230, 282, 286, 292, 374, 445], "dataseterror": [196, 209, 212, 214, 220, 227, 341], "labelgroup": [196, 198, 209, 212, 229, 230, 282, 374], "grouptyp": [196, 198, 209, 212, 229, 230, 282, 374, 445], "add_label_group": [196, 198, 209, 212, 229, 230, 282, 374], "dataclass": [196, 381, 394, 397, 398], "repr": [196, 200, 201, 229], "eq": [196, 200, 201, 229, 318], "unsafe_hash": [196, 200, 201, 229], "match_arg": [196, 200, 201, 229], "kw_onli": [196, 200, 201, 229], "dunder": [196, 200, 201, 229], "__annotations__": [196, 221], "__repr__": 196, "rich": 196, "__hash__": 196, "__match_args__": 196, "keyword": [196, 198, 200, 201, 220, 229, 230, 433, 445], "__slots__": 196, "defaultdict": [196, 230], "default_factori": [196, 230], "__getitem__": [196, 230, 445], "shallow": [196, 209, 211, 229, 230, 374], "__missing__": [196, 230], "_missing_typ": 196, "num_mask": 197, "mask_siz": 197, "batch_siz": [197, 209, 220, 236, 244, 379, 386, 397, 398], "explan": 197, "black": [197, 445], "pdf": 197, "07421": 197, "normalize_sali": 197, "salienc": 197, "generate_mask": 197, "generate_masked_dataset": 197, "eager": [197, 209, 220], "dataset_bas": [197, 209, 220, 250, 443], "conveni": [197, 209, 220, 221], "builtin": [197, 209, 220, 389, 446], "lazi": [197, 209, 220, 445], "wrapper": [197, 209, 220, 221], "around": [197, 209, 220], "define_info": [197, 209, 212, 220], "datasetsubset": [197, 209, 220, 443], "get_label_cat_nam": [197, 209, 220], "get_subset_info": [197, 209, 220], "get_info": [197, 209, 220], "get_categories_info": [197, 209, 220], "datasetpatch": [197, 209, 212, 220, 443], "run_model": [197, 209, 220], "modeltransform": [197, 209, 220, 236, 386, 396, 397, 398, 443, 445], "append_annot": [197, 209, 220, 236, 397, 398], "parallel": [197, 209, 220, 236, 396, 397, 398], "is_modifi": [197, 209, 220], "is_eag": [197, 209, 220], "is_bound": [197, 209, 220], "bind": [197, 209, 220], "speific": [197, 209, 220], "progress_report": [197, 207, 209, 215, 220, 221, 282, 374, 443], "progressreport": [197, 207, 209, 215, 220, 221, 232, 282, 374, 443], "error_polici": [197, 207, 209, 215, 220, 221, 282, 374], "exporterrorpolici": [197, 209, 215, 220, 443], "importerrorpolici": [197, 207, 209, 220, 221, 282, 374, 443], "earger": [197, 209, 220], "from_byt": [197, 209, 217, 224, 227, 254, 282, 292, 374, 391, 392, 393], "has_siz": [197, 209, 217, 224, 227, 254, 282, 292, 374, 391, 392, 393], "dot": [197, 209, 217, 221, 224, 227, 254, 282, 292, 374, 391, 392, 393], "take_bi": [197, 422], "abcdefg": [197, 422], "to_str": [198, 217, 282], "from_str": [198, 282], "featurevector": [198, 235], "inverse_colormap": [198, 229, 282, 431], "include_background": [198, 229, 282, 431], "as_class_mask": [198, 217, 292, 398], "ignore_index": [198, 217, 292, 398, 431], "scalar": [198, 217, 292, 398, 400, 431], "indexmaskimag": [198, 217, 292, 398], "as_instance_mask": [198, 217, 292, 398], "instance_id": [198, 217, 292, 398], "get_area": [198, 200, 201, 217, 282, 292, 374, 398], "rlemask": [198, 282, 292, 443], "extractedmask": [198, 445], "index_mask": [198, 431], "foreground": [198, 431], "randint": 198, "mask1": [198, 431], "mask2": 198, "tolist": 198, "compiledmask": [198, 443], "class_mask": 198, "instance_mask": 198, "oppos": 198, "from_instance_mask": 198, "instance_label": 198, "instance_count": 198, "get_instance_label": 198, "lazy_extract": 198, "z": [198, 282, 292, 431], "render": [198, 292], "as_polygon": [198, 201, 217, 282, 292, 374, 398], "get_point": [198, 217, 282, 292], "_point": [198, 282, 292], "rx": [198, 282, 292], "ry": [198, 282, 292], "rz": [198, 282, 292], "sx": [198, 282, 292], "sz": [198, 282, 292], "__attrs_post_init__": [198, 200, 201, 217, 229, 282, 292, 398], "formula": [198, 217, 282, 292, 398], "__eq__": [198, 217, 282, 292, 398], "_get_shoelace_area": [198, 217, 282, 292, 398], "rotatedbbox": 198, "cx": 198, "cy": 198, "angl": [198, 217, 282, 292], "from_rectangl": 198, "get_rotated_bbox": 198, "pointscategori": [198, 229, 282, 443], "joint": [198, 229, 282, 423], "absent": [198, 200, 217, 282, 292], "x0": [198, 200, 217, 282, 292, 423], "y0": [198, 200, 217, 282, 292, 423], "_imageannot": 198, "encapsul": [198, 217, 218, 221, 253, 282, 292], "c_x": [198, 217, 282, 292, 417], "c_y": [198, 217, 282, 292, 417], "num_point": [198, 217, 282, 292], "tabularcategori": [198, 209], "tabledtyp": [198, 209, 224, 358], "get_semantic_seg_mask": 198, "match_segments_pair": [200, 201, 229], "a_segm": 200, "b_segm": 200, "segment_i": [200, 201, 423], "dist_thresh": 200, "label_match": [200, 201], "match_segments_more_than_pair": 200, "annotationmatch": [200, 201, 229], "match_annot": [200, 201, 203, 220], "labelmatch": [200, 201, 229], "shapematch": [200, 201, 229], "merger": [200, 220, 221, 225, 226, 227, 229, 230, 253, 273, 285, 345, 377], "cluster_dist": [200, 201, 229], "match_seg": [200, 201, 229], "bboxmatch": [200, 201, 229], "polygonmatch": [200, 201, 229], "maskmatch": [200, 201, 229], "pointsmatch": [200, 201, 229], "sigma": [200, 201, 229, 423], "instance_map": [200, 201, 229], "linematch": [200, 201, 229], "captionsmatch": [200, 201, 229], "cuboid3dmatch": [200, 201, 229], "imageannotationmatch": [200, 201, 229], "hashkeymatch": [200, 201, 229], "featurevectormatch": [200, 201, 229], "rotatedbboxmatch": [200, 201, 229], "tabularmatch": [200, 201, 229], "approximate_lin": [200, 423], "approxim": [200, 398, 423, 431, 433], "numebr": [200, 423], "new_point": [200, 423], "attrib": [200, 201, 229], "cmp": [200, 201, 229], "on_setattr": [200, 201, 229], "ib": [200, 201, 229], "awai": [200, 201, 229], "though": [200, 201, 229], "noun": [200, 201, 229], "syntact": [200, 201, 229], "backport": [200, 201, 229], "undeprec": [200, 201, 229], "maybe_cl": [200, 201, 229], "repr_n": [200, 201, 229], "weakref_slot": [200, 201, 229], "auto_attrib": [200, 201, 229], "cache_hash": [200, 201, 229], "auto_exc": [200, 201, 229], "auto_detect": [200, 201, 229], "collect_by_mro": [200, 201, 229], "getstate_setst": [200, 201, 229], "field_transform": [200, 201, 229], "pointless": [200, 201, 229], "notabl": [200, 201, 229], "__lt__": [200, 201, 229], "__le__": [200, 201, 229], "__gt__": [200, 201, 229], "__ge__": [200, 201, 229], "__eq": [200, 201, 229], "__ne__": [200, 201, 229], "anymor": [200, 201, 229], "inject": [200, 201, 229], "__attrs_init__": [200, 201, 229], "__attrs_pre_init__": [200, 201, 229], "complianc": [200, 201, 229], "uncompar": [200, 201, 229], "__attrs_init_subclass__": [200, 201, 229], "favor": [200, 201, 218, 221, 229, 253], "bbox_iou": [200, 423], "max_bbox": [200, 229, 423], "_shape": [200, 201, 229, 423], "mean_bbox": [200, 201, 423], "annotationmerg": [201, 220, 225, 229], "merge_clust": [201, 229], "labelmerg": [201, 229], "bboxmerg": [201, 229], "_shapemerg": [201, 229], "rotatedbboxmerg": [201, 229], "polygonmerg": [201, 229], "maskmerg": [201, 229], "pointsmerg": [201, 229], "linemerg": [201, 229], "captionsmerg": [201, 229], "cuboid3dmerg": [201, 229], "imageannotationmerg": [201, 229], "ellipsemerg": [201, 229], "hashkeymerg": [201, 229], "featurevectormerg": [201, 229], "failedlabelvotingerror": [201, 214], "tabularmerg": [201, 229], "plugin_typ": [202, 223], "cliplugin": [202, 209, 210, 212, 215, 219, 220, 221, 222, 223, 226, 227, 229, 230, 234, 236, 237, 245, 253, 305, 374, 387, 396, 397, 398, 407, 408, 410, 414, 415, 416, 418, 443], "remove_plugin_typ": 202, "parse_cmdlin": [202, 221, 397, 398], "distancecompar": [203, 220], "iou_threshold": [203, 220, 431], "match_label": [203, 220], "match_polygon": [203, 220], "match_mask": [203, 220], "match_box": [203, 220], "match_point": [203, 220], "match_lin": [203, 220], "equalitycompar": [203, 220], "match_imag": [203, 220], "ignored_field": [203, 220], "ignored_attr": [203, 220], "ignored_item_attr": [203, 220], "compare_dataset": [203, 220], "save_compare_report": [203, 220], "report_dir": [203, 220], "tablecompar": [203, 220], "high_level_t": [203, 220], "mid_level_t": [203, 220], "low_level_t": [203, 220], "comparison_dict": [203, 220], "fallback": [204, 205, 423], "ctor": 204, "allow_fallback": 204, "schemabuild": 204, "mutabl": [204, 205], "allow_intern": 204, "yaml_represent": 204, "dumper": 204, "dictconfig": 204, "is_gener": [205, 209], "buildstag": 205, "has_stag": 205, "find_stag": 205, "get_stag": 205, "treeconfig": [205, 233], "projectconfig": 205, "pipelineconfig": [205, 233], "projectlayout": 205, "aux_dir": 205, "cache_dir": 205, "index_dir": 205, "working_tree_dir": 205, "head_fil": 205, "tmp_dir": 205, "models_dir": 205, "plugins_dir": [205, 209, 213, 220], "conf_fil": 205, "treelayout": 205, "sources_dir": 205, "report_item_error": [207, 209, 215, 221], "report_annotation_error": [207, 209, 215, 221], "noreturn": [207, 209, 215, 218, 221, 253], "failingimporterrorpolici": [207, 221, 443], "importcontext": [207, 209, 210, 212, 221, 247, 248, 249, 250, 258, 260, 261, 262, 264, 265, 266, 267, 275, 276, 278, 282, 287, 288, 297, 302, 303, 304, 305, 307, 308, 315, 318, 319, 324, 325, 326, 327, 328, 329, 330, 333, 334, 340, 341, 343, 344, 346, 347, 351, 358, 360, 363, 364, 366, 370, 371, 372, 374], "nullimportcontext": [207, 221], "fernet_key_len": 208, "key_prefix": 208, "key_prefix_len": 208, "is_null_crypt": 208, "new_mod": 209, "ctx": [209, 210, 212, 215, 220, 247, 248, 249, 250, 251, 258, 260, 261, 262, 264, 265, 266, 267, 275, 276, 278, 282, 283, 287, 288, 289, 297, 300, 302, 303, 304, 305, 307, 308, 315, 318, 319, 324, 325, 326, 327, 328, 329, 330, 333, 334, 340, 341, 343, 344, 346, 347, 351, 358, 360, 363, 364, 366, 370, 371, 372, 374], "_datasetbas": [209, 210, 212, 374], "subsetbas": [209, 210, 212, 221, 228, 250, 258, 260, 261, 262, 264, 265, 266, 267, 271, 275, 276, 278, 282, 297, 302, 303, 304, 305, 307, 315, 319, 327, 328, 329, 330, 333, 334, 340, 343, 346, 347, 351, 360, 366, 370, 371, 372, 374, 443], "datasetimporterror": [209, 214, 221, 253, 282, 374], "updated_item": [209, 212], "itemstatu": [209, 211, 212, 443], "updated_subset": [209, 212], "datasetpatchwrapp": [209, 212], "datasetstorag": [209, 212, 445], "has_updated_item": [209, 212], "use_lazy_import": [209, 213, 220], "datasetbaseregistri": [209, 213, 220, 234], "importerregistri": [209, 213, 220, 234], "launcherregistri": [209, 213, 220, 234], "exporterregistri": [209, 213, 220, 234], "generatorregistri": [209, 213, 220, 234], "transformregistri": [209, 213, 220, 234], "validatorregistri": [209, 213, 220, 234], "load_plugin": [209, 213, 220], "register_plugin": [209, 213, 220], "make_extractor": [209, 213, 216, 220], "make_import": [209, 213, 220], "make_launch": [209, 213, 220], "make_export": [209, 213, 220], "make_transform": [209, 213, 220], "is_format_known": [209, 213, 220], "rejection_callback": [209, 213, 218, 220], "rejectionreason": [209, 213, 218, 220], "release_builtin_plugin": [209, 213, 220], "exportcontext": [209, 215, 220, 249, 251, 258, 266, 283, 287, 289, 297, 300, 302, 304, 305, 318, 319, 324, 327, 328, 329, 330, 341, 358, 363, 372], "default_image_ext": [209, 215, 220, 249, 251, 258, 262, 266, 267, 270, 279, 283, 287, 289, 297, 300, 302, 303, 304, 305, 311, 316, 318, 319, 324, 327, 328, 329, 330, 337, 341, 346, 348, 352, 353, 358, 361, 362, 363, 367, 372, 375], "save_dataset_meta": [209, 215, 220, 249, 251, 258, 266, 283, 287, 289, 297, 300, 302, 304, 305, 318, 319, 324, 327, 328, 329, 330, 341, 358, 363, 372], "can_stream": [209, 215, 220, 221, 253, 270, 273, 283, 285, 345, 367, 375], "itemtransform": [209, 212, 217, 220, 236, 418, 443], "unexpect": [209, 212, 217, 220, 236, 418], "wrap_item": [209, 212, 217, 220, 236, 418], "model_dir": [209, 220, 222, 378, 389, 395], "bgr": [209, 220, 222, 254, 427, 431], "pseudo": [209, 220, 222, 378], "type_check": [209, 220, 222, 378, 381, 382, 385, 395], "multipleformatsmatcherror": [209, 214], "nomatchingformatserror": [209, 214], "nullprogressreport": [209, 232, 443], "desc": [209, 232], "report_statu": [209, 232], "__len__": [209, 232, 445], "children": [209, 232], "streamdataset": 209, "streamdatasetstorag": [209, 212], "stacked_transform": [209, 212], "streameditemerror": [209, 214], "unknownformaterror": [209, 214], "userfunctionannotationsfilt": [209, 217, 220], "filtered_item": [209, 217, 220], "userfunctiondatasetfilt": [209, 217, 220], "xpathannotationsfilt": [209, 217, 220], "xpathdatasetfilt": [209, 217, 220], "some_gener": [209, 221, 433], "setup": [209, 221, 223, 433], "cleanup": [209, 221, 433], "__doc__": [209, 211, 221], "deepcopi": 209, "memo": 209, "_nil": 209, "load_hash_kei": [209, 432], "logging_dis": [209, 430], "max_level": [209, 430], "stub": [209, 220, 439], "goe": [209, 220, 433], "rmtree": 209, "pathlik": 209, "shutil": 209, "behaviour": 209, "couldn": 209, "categoriesredefinederror": [212, 214], "datasetinfosredefinederror": [212, 214], "mediatypeerror": [212, 214, 282], "notavailableerror": [212, 214], "repeateditemerror": [212, 214], "streamsubset": 212, "is_method_redefin": [212, 422], "method_nam": [212, 422], "base_class": [212, 422], "immutableobjecterror": 214, "vcserror": 214, "readonlydataseterror": 214, "readonlyprojecterror": 214, "unknownreferror": 214, "missingobjecterror": 214, "mismatchingobjecterror": 214, "unsavedchangeserror": 214, "foreignchangeserror": 214, "emptycommiterror": 214, "pathoutsidesourceerror": 214, "sourceurlinsideprojecterror": 214, "unexpectedurlerror": 214, "missingsourcehasherror": 214, "pipelineerror": 214, "invalidpipelineerror": 214, "emptypipelineerror": 214, "multiplepipelineheadserror": 214, "missingpipelineheaderror": 214, "invalidstageerror": 214, "unknownstageerror": 214, "migrationerror": 214, "oldprojecterror": 214, "projectalreadyexist": 214, "vcsalreadyexist": [214, 445], "unknownsourceerror": 214, "unknowntargeterror": 214, "sourceexistserror": 214, "datasetexporterror": 214, "itemexporterror": 214, "__cause__": 214, "annotationexporterror": 214, "invalidannotationerror": [214, 374, 445], "invalidfielderror": 214, "invalidfieldtypeerror": 214, "missingfielderror": 214, "undeclaredlabelerror": [214, 374], "itemimporterror": 214, "annotationimporterror": 214, "datasetnotfounderror": [214, 221], "annotationtypeerror": 214, "mediashapeerror": 214, "datasetqualityerror": [214, 229], "annotationstoocloseerror": [214, 229], "wronggrouperror": [214, 229], "mismatchingimageinfoerror": [214, 227], "mismatchingmediapatherror": [214, 227], "mismatchingmediaerror": [214, 227], "mismatchingattributeserror": [214, 227], "nomatchingannerror": [214, 229], "nomatchingitemerror": [214, 229], "failedattrvotingerror": [214, 229], "videomergeerror": [214, 227], "datasetvalidationerror": [214, 245, 419], "to_dict": [214, 419], "datasetitemvalidationerror": 214, "caption_nam": 214, "attr_nam": 214, "redundancy_typ": 214, "upper_bound": 214, "lower_bound": 214, "failingexporterrorpolici": [215, 443], "nullexportcontext": 215, "exportcontextcompon": 215, "images_dir": [215, 260, 264, 265, 272, 275, 280, 282, 283, 284, 287, 289, 290, 301, 312, 318, 319, 322, 341, 356, 362, 368, 372], "pcd_dir": [215, 282, 283, 284, 287, 289, 290, 317], "video_dir": [215, 282, 283, 284, 287, 289, 290], "find_image_ext": 215, "make_image_filenam": 215, "make_pcd_filenam": 215, "make_pcd_extra_image_filenam": 215, "idx": [215, 224, 227, 254, 255, 256, 282, 292], "make_video_filenam": 215, "save_imag": [215, 327, 427], "fname": 215, "save_point_cloud": 215, "save_video": 215, "tfdsdatasetmetadata": 216, "tfdssubsetremotemetadata": 216, "tfdsdatasetremotemetadata": 216, "tfdsdataset": 216, "tfds_ds_name": 216, "query_remote_metadata": 216, "datasetitemencod": 217, "categoriesinfo": 217, "elementbas": 217, "encode_imag": [217, 254, 427], "encode_annotation_bas": 217, "encode_label_object": 217, "encode_mask_object": 217, "encode_bbox_object": 217, "encode_points_object": 217, "encode_polygon_object": 217, "encode_polyline_object": 217, "encode_caption_object": 217, "encode_ellipse_object": 217, "encode_annot": 217, "encoded_item": 217, "formatdetectionconfid": [218, 221, 249, 253, 258, 265, 266, 273, 275, 285, 287, 291, 297, 302, 304, 313, 326, 345, 346, 349, 377], "extreme_low": [218, 221, 253], "imagedir": [218, 221, 253], "seem": [218, 221, 253], "medium": [218, 221, 253], "detectedformat": 218, "formatrequirementsunmet": [218, 221, 253], "failed_altern": 218, "_formatreject": 218, "statement": [218, 221, 253], "met": [218, 221, 253], "formatdetectioncontext": [218, 221, 247, 248, 249, 253, 258, 260, 261, 262, 265, 266, 267, 273, 275, 276, 278, 285, 287, 291, 297, 299, 302, 304, 305, 308, 313, 315, 318, 319, 325, 326, 329, 333, 334, 340, 341, 345, 346, 349, 363, 364, 370, 371, 372, 377], "formatdetectionunsupport": [218, 221, 253], "raise_unsupport": [218, 221, 253], "root_path": [218, 221, 249, 250, 253], "formatdetector": [218, 221, 253], "_is_": [218, 221, 253], "signal": [218, 221, 253], "requirement_desc": [218, 221, 253], "require_fil": [218, 221, 253], "exclude_fnam": [218, 221, 253], "glob": [218, 221, 253], "unmet": [218, 221, 253], "require_files_it": [218, 221, 253], "probe_text_fil": [218, 221, 253], "is_binary_fil": [218, 221, 253], "bufferedread": [218, 221, 253], "textio": [218, 221, 253], "rerais": [218, 221, 253], "abandon": [218, 221, 253], "require_ani": [218, 221, 253], "apply_format_detector": 218, "dataset_root_path": 218, "rejectioncallback": 218, "protocol": [218, 259, 380, 381, 382, 385, 396, 397, 398], "detect_dataset_format": 218, "decid": [218, 229, 433], "datasetgener": [219, 223, 412], "imagegener": [219, 412], "first_dataset": 220, "second_dataset": 220, "comparison_report": 220, "get_merg": [220, 225], "tasktyp": [220, 237, 245, 419], "validation_result": [220, 237], "generate_report": [220, 237, 245, 419], "unionmerg": [220, 225, 229, 230, 445], "bust": [220, 225, 229, 230], "magic": [220, 225, 230], "item_1": [220, 225, 229], "exactmerg": [220, 225, 227], "parse_str_enum_valu": [220, 422], "enum_class": [220, 422], "unknown_member_error": [220, 422], "detect_confid": [221, 253, 302, 304, 313, 324, 328, 339], "get_file_extens": [221, 247, 248, 249, 253, 258, 260, 261, 262, 265, 266, 267, 273, 275, 276, 278, 285, 297, 299, 302, 303, 304, 305, 308, 313, 315, 318, 319, 323, 324, 325, 327, 328, 329, 330, 333, 334, 339, 340, 341, 344, 345, 346, 349, 351, 358, 360, 363, 364, 370, 371, 372, 377], "find_sourc": [221, 247, 248, 249, 253, 258, 260, 261, 262, 265, 266, 267, 273, 275, 276, 278, 285, 297, 299, 302, 303, 304, 308, 313, 315, 318, 319, 323, 324, 325, 327, 328, 329, 330, 333, 334, 339, 340, 341, 344, 345, 346, 349, 351, 358, 360, 363, 364, 370, 371, 372, 377], "find_sources_with_param": [221, 249, 253, 305], "extra_param": [221, 249, 253, 305], "get_extractor_merg": [221, 253, 273, 285, 345, 377], "extractormerg": [221, 228, 253, 271, 273, 285, 345, 377], "spawn": [221, 253, 273, 285, 345, 377], "with_subset_dir": [221, 445], "input_cl": 221, "cli_plugin": [221, 389, 397, 398, 443], "iglob": 221, "pathnam": 221, "dir_fd": 221, "wildcard": 221, "la": 221, "fnmatch": 221, "__module__": 221, "__qualname__": 221, "__dict__": 221, "update_wrapp": 221, "invok": [221, 433], "launcherwithmodelinterpret": [222, 235, 381, 382, 385, 389], "model_interpreter_path": [222, 380, 381, 382, 385, 397, 398], "lazyplugin": [223, 234], "get_plugin_cl": 223, "get_lazy_plugin": [223, 409], "import_path": 223, "plugin_nam": 223, "extra_dep": 223, "extra_dep_nam": 223, "dep": 223, "aclaunch": [223, 445], "get_extra_dep": 223, "plugin_cl": 223, "media_el": [224, 254, 282, 286, 292], "byte_imag": [224, 254, 282, 286, 292], "point_cloud": [224, 252, 253, 254, 282, 284, 286, 290, 292], "multiframe_imag": [224, 254, 282, 286, 292], "roi_imag": [224, 254, 282, 286, 292], "mosaic_imag": [224, 254, 282, 286, 292], "table_row": [224, 254, 282, 286, 292], "fromfilemixin": [224, 374], "fromdatamixin": 224, "imagefromfil": [224, 374], "bgra": [224, 374], "hwc": [224, 254, 374, 427, 431], "get_data_as_dtyp": [224, 374], "imagefromdata": 224, "imagefromnumpi": [224, 282, 292], "imagefrombyt": 224, "get_frame_data": [224, 227, 282, 292], "durat": [224, 227, 282, 292, 382], "inaccur": [224, 227, 282, 292], "frame_s": [224, 227, 282, 292], "extra_imag": [224, 227, 252, 253, 254, 282, 292], "pointcloudfromfil": 224, "extra_images_fn": 224, "pointcloudfromdata": 224, "pointcloudfrombyt": 224, "multiframeimag": [224, 227], "roiimag": [224, 445], "from_imag": 224, "roiimagefromfil": 224, "roiimagefromdata": 224, "roiimagefrombyt": 224, "roiimagefromnumpi": 224, "mosaicimag": [224, 445], "from_image_roi_pair": 224, "mosaicimagefromdata": 224, "mosaicimagefromimageroipair": 224, "from_csv": 224, "from_datafram": 224, "from_list": 224, "nativ": [224, 433], "tablefromcsv": 224, "dictionai": [224, 358], "utf": 224, "tablefromdatafram": 224, "tablefromlistofdict": 224, "from_data": 224, "tablerowfromdata": 224, "merge_ann_typ": [226, 227, 229, 230], "save_merge_report": [226, 227, 229, 230], "merge_item": [227, 229], "existing_item": 227, "current_item": 227, "check_identic": 228, "raise_error_on_empti": 228, "ignored_attribut": 229, "close_dist": 229, "enrol": 229, "add_item_error": 229, "get_ann_sourc": 229, "merge_annot": 229, "match_item": 229, "rememb": [229, 374], "insert": [229, 374], "od": [229, 374], "popitem": [229, 374], "lifo": [229, 374], "fifo": [229, 374], "move_to_end": [229, 374], "keyerror": [229, 374], "lack": [229, 374], "pop": [229, 374], "setdefault": [229, 374], "fromkei": [229, 374], "ensure_cl": [229, 424], "find_inst": [229, 346, 348, 418, 423], "instance_ann": [229, 423], "mean_std": 231, "find_unique_imag": 231, "item_hash": 231, "match_class": 231, "match_items_by_id": 231, "match_items_by_image_hash": 231, "simpleprogressreport": [232, 443], "tqdmprogressreport": [232, 443], "projectsourcedataset": 233, "ignoremod": 233, "rewrit": 233, "crudentri": 233, "projectsourc": 233, "_datasourcebas": 233, "buildstagetyp": 233, "head_nod": 233, "get_slic": 233, "projectbuild": 233, "gitwrapp": 233, "repo": 233, "gittre": 233, "gitstatu": 233, "base_dir": [233, 353], "prepend": 233, "displac": 233, "status": 233, "is_ref": 233, "has_commit": 233, "get_tre": 233, "write_tre": 233, "base_path": 233, "include_fil": 233, "rev_pars": 233, "expand": 233, "hash_len": 233, "is_hash": 233, "dvcwrapper": 233, "dvcerror": 233, "no_commit": 233, "is_cach": 233, "obj_hash": 233, "obj_path": 233, "ruamel": 233, "tox": 233, "yaml_pars": 233, "get_hash_from_dvcfil": 233, "file_hash_len": 233, "dir_hash_suffix": 233, "dir_hash_len": 233, "is_file_hash": 233, "is_dir_hash": 233, "write_obj": 233, "allow_link": 233, "remove_cache_obj": 233, "build_target": 233, "is_working_tre": 233, "source_data_dir": 233, "diffstatu": 233, "find_project_dir": 233, "migrate_from_v1_to_v2": 233, "skip_import_error": 233, "head_rev": 233, "get_rev": 233, "is_rev_cach": 233, "is_obj_cach": 233, "objectid": 233, "cache_path": 233, "validate_source_nam": 233, "compute_source_hash": 233, "data_dir": 233, "dvcfile": 233, "no_cach": 233, "refresh_source_hash": 233, "no_hash": 233, "cost": [233, 244], "add_sourc": 233, "remove_sourc": 233, "keep_data": 233, "untouch": 233, "allow_empti": 233, "allow_foreign": 233, "pointer": 233, "rev_a": 233, "rev_b": 233, "target_nam": 233, "model_data_dir": 233, "make_model": 233, "add_model": 233, "remove_model": 233, "unregist": 234, "pluginregistri": [234, 443], "batch_regist": 234, "runningstats1d": 235, "feat": 235, "cov": 235, "featureaccumul": 235, "get_activation_stat": 235, "featureaccumulatorbylabel": 235, "searcher": [235, 445], "compute_covariate_shift": 235, "fid": 235, "compute_label_shift": 235, "color_cycl": 238, "bbox_linewidth": 238, "text_y_offset": 238, "show_plot_titl": 238, "exceed": [238, 382], "assgin": 238, "offset": [238, 254, 292, 293, 294, 295, 296], "transpar": 238, "hide": 238, "draw_only_imag": 238, "overdraw": 238, "n_sampl": 238, "bboxoverlaps2d": 244, "giou": 244, "dataawareanchorgener": 244, "img_siz": 244, "stride": 244, "pos_thr": 244, "neg_thr": 244, "awar": [244, 433, 445], "recept": 244, "get_shift": 244, "tensor": [244, 445], "get_anchor": 244, "base_s": 244, "get_loss": 244, "learning_r": 244, "num_it": 244, "minibatch": 244, "statsdata": 245, "missing_attribut": 245, "missing_label": 245, "clsstatsdata": 245, "multiple_label": 245, "detstatsdata": 245, "invalid_valu": 245, "negative_length": 245, "segstatsdata": 245, "tblstatsdata": 245, "broken_annot": 245, "clsstat": 245, "dominance_thr": 245, "topk_bins_ratio": 245, "_baseannstat": 245, "detstat": 245, "segstat": 245, "tblstat": 245, "configurablevalid": [245, 445], "default_few_samples_thr": 245, "default_imbalance_ratio_thr": 245, "default_far_from_mean_thr": 245, "default_dominance_ratio_thr": 245, "default_topk_bin": 245, "all_warn": 245, "task_stat": 245, "ade20k2017path": 247, "mask_pattern": [247, 248], "_parts_": [247, 248], "ade20k2017bas": 247, "ade20k2017import": 247, "ade20k2020path": 248, "instance_": 248, "ade20k2020bas": 248, "ade20k2020import": 248, "arrowbas": [249, 250], "file_path": [249, 250], "lookup": [249, 250], "arrowexport": [249, 251], "available_image_ext": [249, 251], "arrowimport": [249, 253], "arrowsubsetbas": 250, "datumaroarrow": [252, 253], "datumaro_arrow": [252, 253], "mp_timeout": [252, 253, 290], "id_field": [252, 253], "subset_field": [252, 253], "image_field": [252, 253], "structtyp": [252, 253], "struct": [252, 253], "has_byt": [252, 253], "fixed_size_list": [252, 253], "uint16": [252, 253], "point_cloud_field": [252, 253], "media_field": [252, 253], "check_signatur": [252, 253, 290], "check_schema": [252, 253], "check_vers": [252, 253], "create_schema_with_metadata": [252, 253], "datasetitemmapp": [254, 255, 292, 295], "forward": [254, 255, 256, 292, 293, 294, 295, 296], "table_path": [254, 255, 256], "mediamapp": [254, 256, 292, 296], "media_struct": [254, 256], "structscalar": [254, 256], "annotationlistmapp": [254, 292, 293], "backward_map": [254, 292, 293], "labelmapp": [254, 292, 293], "maskmapp": [254, 292, 293], "pointsmapp": [254, 292, 293], "polygonmapp": [254, 292, 293], "polylinemapp": [254, 292, 293], "bboxmapp": [254, 292, 293], "captionmapp": [254, 292, 293], "cuboid3dmapp": [254, 292, 293], "ellipsemapp": [254, 292, 293], "_byte": [254, 292, 293, 294, 295, 296], "dictmapp": [254, 292, 294], "imagemapp": [254, 256, 292, 296], "mediaelementmapp": [254, 256, 292, 296], "available_schem": [254, 256], "backward_extra_imag": [254, 256], "image_struct": [254, 256], "extra_image_idx": [254, 256], "magic_path": [254, 256, 292, 296], "media_dict": [254, 256], "pointcloudmapp": [254, 256, 292, 296], "b64_prefix": [254, 256], "b64_encod": [254, 256], "decode_imag": [254, 427], "image_byt": [254, 427], "dtypelik": [254, 427], "load_imag": [254, 427, 445], "avapath": 258, "annotation_dir": [258, 297, 319, 322, 363], "annotation_ext": [258, 282, 284, 290], "annotation_prefix": 258, "ava_": 258, "annotation_vers": 258, "_v2": 258, "label_list": 258, "proposal_ext": 258, "avabas": 258, "avaimport": 258, "avaexport": 258, "buffer": [259, 435], "bratspath": 260, "data_ext": 260, "bratsbas": 260, "bratsimport": 260, "bratsnumpypath": 261, "ids_fil": 261, "boxes_fil": 261, "labels_fil": [261, 265, 305, 327, 329, 330, 363, 372], "data_suffix": 261, "label_suffix": 261, "bratsnumpybas": 261, "bratsnumpyimport": 261, "camvidpath": 262, "segm_dir": 262, "mask_ext": [262, 282, 284, 290, 312, 322, 338], "parse_label_map": [262, 267, 312, 355, 368], "write_label_map": [262, 267, 312, 368], "make_camvid_categori": 262, "camvidbas": 262, "camvidimport": 262, "labelmaptyp": [262, 267, 311, 337, 367], "camvidexport": 262, "save_segm": [262, 367], "save_segm_list": [262, 367], "segm_list": [262, 367], "save_label_map": [262, 267, 311, 367], "aligncelebapath": 264, "celebapath": [264, 265], "landmarks_fil": [264, 265, 319, 363], "landmarks_head": 264, "lefteye_x": 264, "lefteye_i": 264, "righteye_x": 264, "righteye_i": 264, "nose_x": 264, "nose_i": 264, "leftmouth_x": 264, "leftmouth_i": 264, "rightmouth_x": 264, "rightmouth_i": 264, "aligncelebabas": 264, "split_annot": [264, 265], "aligncelebaimport": 264, "celebaimport": [264, 265], "path_cl": [264, 265, 283, 285, 287, 289, 291], "bboxes_fil": [265, 363], "attrs_fil": 265, "subsets_fil": 265, "bboxes_head": 265, "x_1": 265, "y_1": 265, "celebabas": 265, "cifarpath": 266, "meta_10_fil": 266, "meta_100_fil": 266, "train_file_prefix": 266, "data_batch_": 266, "useless_fil": 266, "cifarbas": 266, "cifarimport": 266, "cifarexport": 266, "cityscapespath": 267, "gt_fine_dir": 267, "imgs_fine_dir": 267, "original_image_dir": 267, "instances_imag": 267, "gt_instance_mask_suffix": 267, "color_imag": 267, "labelids_imag": 267, "label_train_ids_suffix": 267, "_gtfine_labeltrainid": 267, "cityscapesbas": [267, 445], "cityscapesimport": 267, "cityscapesexport": 267, "save_mask": [267, 311, 361], "dirpathextract": 269, "find_rootpath": 269, "find_images_dir": 269, "rootpath": [269, 282, 374], "roboflowdirpathextract": 269, "mmdetdirpathextract": 269, "cocoimageinfobas": 269, "_cocobas": [269, 271, 326, 343], "cococaptionsbas": 269, "cocoinstancesbas": [269, 307], "cocopersonkeypointsbas": 269, "cocolabelsbas": 269, "cocopanopticbas": 269, "cocostuffbas": 269, "segmentationmod": 270, "temporarywrit": 270, "cocotask": [270, 272], "ann_dir": 270, "reset": 270, "_writer": 270, "add_item": 270, "add_ann": 270, "min_ann_id": 270, "cocoexport": 270, "segmentation_mod": 270, "crop_cov": 270, "merge_imag": 270, "cocoinstancesexport": 270, "cocoimageinfoexport": 270, "cocopersonkeypointsexport": 270, "cococaptionsexport": 270, "cocolabelsexport": 270, "cocopanopticexport": 270, "cocostuffexport": 270, "cocotaskmergedbas": 271, "cocoextractormerg": 271, "cocoimportertyp": 272, "cocopath": 272, "annotations_dir": [272, 282, 284, 290, 318, 341, 362, 368, 372], "panoptic_ext": 272, "cocoimport": [273, 326], "cocoimageinfoimport": 273, "cococaptionsimport": 273, "cocoinstancesimport": 273, "cocopersonkeypointsimport": 273, "cocolabelsimport": 273, "cocopanopticimport": 273, "cocostuffimport": 273, "cocopagemapp": [274, 421, 445], "__iter__": [274, 282, 286], "get_item_dict": [274, 282, 286, 421], "get_anns_dict": [274, 421], "iter_item_id": [274, 282, 286], "stream_parse_categories_data": 274, "cocopagemapperimpl": 274, "commonsemanticsegmentationpath": 275, "masks_dir": [275, 282, 284, 290, 318, 330, 341], "make_categori": [275, 355], "commonsemanticsegmentationbas": 275, "commonsemanticsegmentationimport": 275, "commonsemanticsegment": 275, "commonsemanticsegmentationwithsubsetdirsimport": [275, 445], "common_semantic_segmentation_with_subset_dir": 275, "commonsuperresolutionpath": 276, "hr_images_dir": 276, "lr_images_dir": 276, "upsampled_images_dir": 276, "commonsuperresolutionbas": 276, "commonsuperresolutionimport": 276, "cvatbas": 278, "cvatimport": 278, "find_subset": 278, "meta_root": 278, "xmlannotationwrit": 279, "open_root": 279, "write_meta": 279, "open_track": 279, "open_box": 279, "open_polygon": 279, "open_polylin": 279, "open_point": 279, "open_mask": 279, "open_tag": 279, "add_attribut": 279, "close_box": 279, "close_polygon": 279, "close_polylin": 279, "close_point": 279, "close_mask": 279, "close_tag": 279, "close_imag": 279, "close_track": 279, "close_root": 279, "cvatexport": 279, "use_track": 279, "cvatpath": 280, "builtin_attr": [280, 317, 367], "supported_import_shap": 280, "supported_export_shap": 280, "datumarobas": [282, 287, 288], "legacy_vers": 282, "legaci": 282, "current_datumaro_format_vers": 282, "allowed_vers": 282, "datumpagemapp": [282, 286, 421], "datumaropath": [282, 283, 284, 285], "jsonread": 282, "streamjsonread": 282, "parse_json_fil": [282, 422], "jsonwrit": 283, "write_categori": 283, "datumaroexport": [283, 287, 289], "create_writ": [283, 287, 289], "_subsetwrit": [283, 287, 289], "datumaroimport": [285, 287, 291], "datumpagemapperimpl": 286, "datumarobinarybas": [287, 288, 445], "datumarobinaryexport": [287, 289], "no_media_encrypt": [287, 289], "max_blob_s": [287, 289, 290], "1048576": [287, 289, 290], "serial": [287, 289], "datumarobinarypath": [287, 289, 290, 291], "datumarobinaryimport": [287, 291], "encryptionact": 289, "option_str": 289, "dest": 289, "signature_len": 290, "secret_key_fil": 290, "annotationmapp": [292, 293], "rlemaskmapp": [292, 293], "_shapemapp": [292, 293], "stringmapp": [292, 294], "intlistmapp": [292, 294], "listmapp": [292, 294], "floatlistmapp": [292, 294], "media_path_prefix": [292, 295, 296], "backward_dict": [292, 293, 296], "forward_optional_label": [292, 293], "backward_optional_label": [292, 293], "parse_ann_typ": [292, 293], "magic_size_for_non": [292, 296], "1597": [292, 296], "videoframemapp": [292, 296], "videomapp": [292, 296], "magic_end_frame_for_non": [292, 296], "4294967295": [292, 296], "dotaformat": 297, "dotabas": 297, "dotaimport": 297, "dotaexport": 297, "icdarwordrecognitionbas": 299, "_icdarbas": 299, "icdartextlocalizationbas": 299, "icdartextsegmentationbas": 299, "icdarwordrecognitionimport": 299, "icdartextlocalizationimport": 299, "icdartextsegmentationimport": 299, "icdarwordrecognitionexport": 300, "icdartextlocalizationexport": 300, "icdartextsegmentationexport": 300, "icdartask": 301, "word_recognit": 301, "text_loc": 301, "text_segment": 301, "icdarpath": 301, "gt_ext": 301, "imagedirimport": 302, "imagedirbas": 302, "imagedirexport": 302, "imagezippath": 303, "default_archive_nam": 303, "default_compress": 303, "imagezipbas": 303, "imagezipimport": 303, "imagezipexport": 303, "imagenetpath": 304, "image_dir_no_label": 304, "no_label": [304, 363, 372], "sep_token": 304, "imagenetbas": 304, "min_depth": [304, 374, 427, 434], "max_depth": [304, 374, 427, 434], "imagenetimport": 304, "label_0_1": 304, "label_0_2": 304, "contains_only_imag": 304, "imagenetwithsubsetdirsimport": [304, 445], "imagenetexport": 304, "use_subset_dir": 304, "imagenetwithsubsetdirsexport": 304, "imagenettxtpath": 305, "imagenettxtbas": 305, "imagenettxtimport": 305, "imagenettxtexport": 305, "kaggleimagecsvbas": [307, 445], "kaggleimagetxtbas": [307, 445], "kaggleimagemaskbas": [307, 445], "kagglevocbas": [307, 445], "ann_extens": 307, "kaggleyolobas": [307, 445], "kagglecocobas": [307, 445], "kineticsbas": 308, "kineticsimport": 308, "kittisegmentationbas": 310, "_kittibas": 310, "kittidetectionbas": 310, "kittiexport": 311, "get_label": [311, 337, 367], "kittisegmentationexport": 311, "kittidetectionexport": 311, "kittitask": 312, "kittipath": 312, "instances_dir": [312, 322, 368], "labels_dir": 312, "semantic_rgb_dir": 312, "semantic_dir": 312, "default_trunc": 312, "default_occlud": 312, "default_scor": 312, "kittiimport": 313, "kittidetectionimport": 313, "kittisegmentationimport": 313, "kittirawbas": 315, "kittirawimport": 315, "kittirawexport": 316, "allow_attr": 316, "kittirawpath": 317, "img_dir_prefix": 317, "image_": 317, "special_attr": [317, 353], "anno_fil": 317, "name_mapping_fil": 317, "posest": 317, "unset": 317, "interp": 317, "occlusionst": 317, "truncationst": 317, "labelmepath": 318, "attr_import_escap": 318, "doublequot": 318, "backslash": 318, "attr_export_escap": 318, "labelmebas": 318, "labelmeimport": 318, "labelmeexport": 318, "lfwpath": 319, "pairs_fil": 319, "people_fil": 319, "lfwbase": 319, "get_image_nam": 319, "lfwimport": 319, "lfwexport": 319, "mapillaryvistasinstancesbas": 321, "_mapillaryvistasbas": 321, "mapillaryvistaspanopticbas": 321, "parse_config_fil": 322, "config_path": [322, 343, 374], "make_mapillary_instance_categori": 322, "mapillaryvistastask": 322, "mapillaryvistaspath": 322, "panoptic_dir": 322, "polygon_dir": 322, "class_dir": 322, "config_fil": 322, "panoptic_config": 322, "class_by_dir": 322, "mapillaryvistasimport": 323, "mapillaryvistasinstancesimport": 323, "mapillaryvistaspanopticimport": 323, "market1501path": 324, "query_dir": 324, "bbox_dir": 324, "_c": 324, "list_prefix": 324, "images_": 324, "unknown_id": 324, "market1501bas": 324, "market1501import": 324, "market1501export": 324, "marspath": 325, "subset_dir_pattern": 325, "bbox_": 325, "image_dir_pattern": 325, "image_name_postfix": 325, "marsbas": 325, "marsimport": 325, "mmdetcocoimport": 326, "mmdetcocobas": 326, "mnistpath": 327, "test_labels_fil": 327, "test_images_fil": 327, "images_fil": 327, "none_label": [327, 328], "mnistbas": 327, "mnistimport": 327, "mnistexport": 327, "save_annot": 327, "save_label": [327, 328], "mnistcsvpath": 328, "mnistcsvbas": 328, "mnistcsvimport": 328, "mnistcsvexport": 328, "save_in_csv": 328, "motlabel": 329, "motpath": 329, "seqinfo_fil": 329, "gt_filenam": 329, "det_filenam": 329, "motseqbas": 329, "is_gt": 329, "motseqimport": 329, "motseqgtexport": 329, "motspath": 330, "max_inst": 330, "motslabel": 330, "motspngextractor": 330, "motsimport": 330, "motspngexport": 330, "mpiijsonpath": 333, "headboxes_fil": 333, "visibility_fil": 333, "pos_gt_fil": 333, "mpiijsonbas": 333, "mpiijsonimport": 333, "mpiibas": 334, "mpiiimport": 334, "mvtecclassificationbas": 336, "_mvtecbas": 336, "mvtecsegmentationbas": 336, "mvtecdetectionbas": 336, "mvtecexport": 337, "mvtecclassificationexport": 337, "mvtecsegmentationexport": 337, "mvtecdetectionexport": 337, "mvtectask": 338, "mvtecpath": 338, "mask_dir": 338, "mask_postfix": 338, "_mask": 338, "mvtecimport": 339, "mvtecclassificationimport": 339, "mvtecdetectionimport": 339, "mvtecsegmentationimport": 339, "nyudepthv2bas": 340, "nyudepthv2import": 340, "unsupportedsubsetnameerror": 341, "unsupportedboxiderror": 341, "unsupportedmaskpatherror": 341, "openimagespath": 341, "full_image_description_file_nam": 341, "subset_image_description_file_pattern": 341, "v5_class_description_file_nam": 341, "v5_class_description_bbox_file_nam": 341, "boxabl": 341, "hierarchy_file_nam": 341, "label_description_file_suffix": 341, "bbox_description_file_suffix": 341, "mask_description_file_suffix": 341, "image_description_field": 341, "imageid": [341, 406], "originalurl": 341, "originallandingurl": 341, "authorprofileurl": 341, "author": [341, 418], "originals": 341, "originalmd5": 341, "thumbnail300kurl": 341, "label_description_field": 341, "labelnam": 341, "bbox_description_field": 341, "xmin": 341, "xmax": 341, "ymin": 341, "ymax": 341, "isocclud": 341, "istrunc": 341, "isgroupof": 341, "isdepict": 341, "isinsid": 341, "bbox_boolean_attribut": 341, "datumaro_nam": 341, "oid_nam": 341, "mask_description_field": 341, "maskpath": 341, "boxid": 341, "boxxmin": 341, "boxxmax": 341, "boxymin": 341, "boxymax": 341, "predictedi": 341, "openimagesbas": 341, "image_meta": [341, 427], "openimagesimport": 341, "possible_annotation_pattern": 341, "openimagesexport": 341, "roboflowcocobas": 343, "roboflowvocbas": 343, "vocbas": [343, 366], "roboflowyolobas": 343, "yoloultralyticsbas": [343, 374], "roboflowyoloobbbas": 343, "roboflowcreatemlbas": 343, "createml": [343, 345, 445], "roboflowmulticlassbas": 343, "roboflowtfrecordimport": 344, "roboflowtfrecordbas": 344, "tfdetectionapibas": [344, 360], "roboflowcocoimport": 345, "ann_file_nam": 345, "roboflowvocimport": 345, "roboflow_voc": 345, "format_ext": 345, "ann_dir_nam": 345, "roboflowyoloimport": 345, "roboflowyoloobbimport": 345, "roboflow_yolo_obb": 345, "roboflowcreatemlimport": 345, "roboflow_create_ml": 345, "roboflowmulticlassimport": 345, "roboflow_multiclass": 345, "segmentanythingbas": [346, 347], "segmentanythingimport": [346, 349], "segmentanythingexport": [346, 348], "find_instance_ann": [346, 348], "get_annotation_info": [346, 348], "img_width": [346, 348, 418], "img_height": [346, 348, 418], "parse_field": 347, "superviselypointcloudbas": 351, "superviselypointcloudimport": 351, "superviselypointcloudexport": 352, "pointcloudpath": 353, "annnotation_dir": 353, "point_cloud_dir": 353, "related_images_dir": 353, "key_id_fil": 353, "meta_fil": [353, 374, 376], "synthiarandbas": 355, "_synthiabas": 355, "synthiasfbas": 355, "synthiaalbas": 355, "synthiaformattyp": 356, "synthia_rand": [356, 357], "synthia_sf": [356, 357], "synthia_": [356, 357], "synthiarandpath": 356, "labels_segm_dir": 356, "gttxt": [356, 357], "semantic_segm_dir": 356, "meta_fold": [356, 357], "synthiasfpath": 356, "rgbleft": [356, 357], "gtleft": [356, 357], "depth_dir": 356, "depthleft": [356, 357], "synthiaalpath": 356, "semseg": [356, 357], "synthiarandimport": 357, "_synthiaimport": 357, "synthiasfimport": [357, 445], "synthiaalimport": [357, 445], "tabulardatabas": [358, 445], "inferenc": 358, "string_to_dict": 358, "input_str": 358, "tabulardataimport": 358, "tabulardataexport": 358, "regardless": 358, "export_ext": 358, "_min": 360, "_max": 360, "tfrecord_importer_typ": 360, "tfrecordimportertyp": [360, 362], "tfdetectionapiimport": 360, "int64_featur": 361, "int64_list_featur": 361, "bytes_featur": 361, "bytes_list_featur": 361, "float_list_featur": 361, "tfdetectionapiexport": 361, "detectionapipath": 362, "image_ext_format": 362, "vggface2path": 363, "images_dir_no_label": [363, 372], "vggface2bas": 363, "vggface2import": 363, "vggface2export": 363, "videoframesimport": 364, "videoframesbas": 364, "videokeyframesimport": 364, "videokeyframesbas": 364, "voctask": [366, 368], "voc_importer_typ": 366, "vocimportertyp": [366, 368], "vocclassificationbas": 366, "vocdetectionbas": 366, "vocsegmentationbas": 366, "vocinstancesegmentationbas": 366, "voclayoutbas": 366, "vocactionbas": 366, "voc_instance_segment": [367, 368], "vocexport": 367, "make_dir": 367, "save_subset": 367, "save_action_list": 367, "action_list": 367, "save_class_list": 367, "class_list": 367, "save_clsdet_list": 367, "clsdet_list": 367, "save_layout_list": 367, "layout_list": 367, "vocclassificationexport": 367, "vocdetectionexport": 367, "vocsegmentationexport": 367, "vocinstancesegmentationexport": [367, 445], "voclayoutexport": 367, "vocactionexport": 367, "voclabel": 368, "vocpos": 368, "frontal": 368, "vocbodypart": 368, "vocact": 368, "playinginstru": 368, "ridingbik": 368, "ridinghors": 368, "takingphoto": 368, "usingcomput": 368, "generate_colormap": [368, 431], "vocpath": 368, "segmentation_dir": 368, "subsets_dir": 368, "segm_ext": 368, "task_dir": 368, "labelmapconfig": 368, "make_voc_label_map": 368, "feet": 368, "parse_meta_fil": [368, 374, 432], "write_meta_fil": 368, "make_voc_categori": 368, "vocimport": 369, "_vocimport": 369, "vocclassificationimport": 369, "vocdetectionimport": 369, "vocsegmentationimport": 369, "vocinstancesegmentationimport": [369, 445], "voclayoutimport": 369, "vocactionimport": 369, "vottcsvpath": 370, "anno_file_suffix": [370, 371], "vottcsvbas": 370, "vottcsvimport": 370, "vottjsonpath": 371, "vottjsonbas": 371, "vottjsonimport": 371, "widerfacepath": 372, "subset_dir": 372, "wider_": 372, "bbox_attribut": 372, "default_label": 372, "widerfacebas": 372, "widerfaceimport": 372, "widerfaceexport": 372, "yolostrictbas": 374, "parse_image_info": 374, "name_from_path": 374, "_obj": 374, "yololoosebas": 374, "yololoosepath": [374, 376], "names_fil": [374, 376], "yolopath": [374, 376], "reserved_config_kei": [374, 376], "yoloultralyticspath": [374, 376], "extract_subset_name_from_par": [374, 434], "find_fil": [374, 434], "dirpath": [374, 427, 434], "has_meta_fil": [374, 432], "load_image_meta_fil": [374, 427], "image_meta_path": [374, 427], "comment": [374, 418, 427], "localize_path": 374, "split_path": [374, 434], "yoloexport": 375, "add_path_prefix": 375, "yoloultralyticsexport": 375, "must_subset_nam": 375, "yoloformattyp": [376, 377], "yolo_strict": [376, 377], "yolo_loos": [376, 377], "yoloimport": 377, "sub_import": 377, "_yolostrictimport": 377, "_yololooseimport": 377, "_yoloultralyticsimport": 377, "explorerlaunch": 378, "output_lay": [378, 389, 395], "infer_text": 378, "use_prompt": 378, "infer_item": 378, "frameworkconverterfactori": 379, "create_convert": 379, "frameworkconvert": 379, "to_framework": 379, "dmtorchdataset": 379, "target_transform": 379, "vocab": 379, "_multiframeworkdataset": 379, "dmtfdataset": 379, "output_signatur": 379, "datasetv2": 379, "drop_remaind": 379, "ovmslaunch": [380, 382, 397, 398, 445], "model_vers": [380, 381, 382, 385, 397, 398], "tls_config": [380, 381, 382, 385, 396, 397, 398], "tlsconfig": [380, 381, 382, 385, 396, 397, 398], "launcherfordedicatedinferenceserv": [380, 381, 382, 385, 397, 398], "grpcclient": [380, 382, 397, 398], "httpclient": [380, 382, 397, 398], "model_serv": [380, 382, 397, 398], "tritonlaunch": [380, 385, 397, 398, 445], "inferenceservercli": [380, 385, 397, 398], "client_key_path": [381, 382, 397, 398], "client_cert_path": [381, 382, 397, 398], "server_cert_path": [381, 382, 397, 398], "tl": [381, 382, 397, 398], "as_grpc_cr": [381, 397, 398], "channelcredenti": [381, 397, 398], "tclient": [381, 382, 385], "prediction_service_stub": 382, "model_service_stub": 382, "servingcli": 382, "predictrequest": 382, "input_nam": 382, "output_nam": 382, "unsupport": [382, 445], "connectionerror": 382, "timeouterror": 382, "modelnotfound": 382, "invalidinputerror": 382, "badresponseerror": 382, "malform": [382, 445], "get_model_metadata": 382, "modelmetadatarequest": 382, "get_model_statu": 382, "modelstatusrequest": 382, "client_kei": 382, "server_cert": 382, "make_grpc_cli": 382, "minim": [382, 398, 431], "crt": 382, "make_http_cli": 382, "facedetectionmodelinterpret": 384, "conf_threshold": 384, "missingannotationdetect": [386, 445], "label_agnostic_match": 386, "accomplish": 386, "follw": 386, "ground_truth_annot": 386, "model_predict": 386, "oversamplingmethod": 387, "undersamplingmethod": 387, "Near": 387, "block_shap": 387, "varianc": 387, "hash_dim": 387, "sim_threshold": 387, "collid": 387, "openvinomodelinfo": 389, "builtinopenvinomodelinfo": 389, "downloadable_model": 389, "clip_text_vit": 389, "b_32": 389, "clip_visual_vit": 389, "googlenet": 389, "v4": 389, "create_from_model_nam": 389, "compile_model_config": 389, "_openvinoimport": 389, "otxatssmodelinterpret": 391, "h_model": [391, 392, 393, 394, 400, 401, 402], "w_model": [391, 392, 393, 394, 400, 401, 402], "create_bboxes_with_resc": [391, 392, 393, 394], "r_scale": [391, 392, 393, 394], "rescale_img_keeping_aspect_ratio": [391, 392, 393, 394], "rescaledimag": [391, 392, 393, 394], "rescal": [391, 392, 393, 394, 413], "otxssdmodelinterpret": 392, "otxyoloxmodelinterpret": 393, "gen_hash_kei": 394, "factor": 394, "shiftlaunch": 395, "mask_threshold": [396, 397, 400, 401], "amgmask": [397, 400], "iou_pr": [397, 400], "concaten": [397, 400], "amgpoint": [397, 400], "extract_contour": [398, 431], "toler": [398, 431], "area_threshold": [398, 431], "samdecoderforamginterpret": 400, "onnx_mask_input": [400, 401], "float32": [400, 401, 445], "onnx_has_mask_input": [400, 401], "samdecoderforbboxinterpret": 401, "samencoderinterpret": 402, "samplingmethod": [405, 408], "inferenceresultanalyz": [405, 406], "ira": 405, "get_sampl": [405, 406], "sampleentropi": 406, "classprob": 406, "randomk": 406, "randomsampl": [407, 444], "labelrandomsampl": [407, 444], "relevancysampl": 408, "ab": 412, "2103": 412, "13023": 412, "ifsfunct": 413, "rng": 413, "prev_x": 413, "prev_i": 413, "num_param": 413, "add_param": 413, "proba": 413, "process_nan": 413, "image_x": 413, "image_i": 413, "pad_x": 413, "pad_i": 413, "draw_point": 413, "rgb2lab": 413, "fill_background": 413, "suppress_computation_warn": 413, "tranform": [414, 416], "reposit": [414, 416], "3x2": [414, 416], "discard": [414, 416], "mergetil": 415, "understood": 415, "lossi": 415, "lost": 415, "edg": 415, "revert": 415, "x1y1x2y2_to_cxcywh": 417, "cxcywh_to_x1y1x2y2": 417, "clip_x1y1x2y2": 417, "max_x": 417, "max_i": 417, "min_x": 417, "min_i": 417, "x1y1x2y2_to_xywh": 417, "xywh_to_x1y1x2y2": 417, "cropcoveredseg": 418, "crop_seg": 418, "segment_ann": 418, "mergeinstanceseg": 418, "include_polygon": 418, "merge_seg": 418, "polygonstomask": 418, "convert_polygon": 418, "img_h": 418, "img_w": 418, "boxestomask": 418, "convert_bbox": 418, "boxestopolygon": 418, "convert_mask": 418, "shapestobox": 418, "convert_shap": 418, "reindexannot": [418, 445], "reindex_each_item": 418, "mapsubset": 418, "randomsplit": 418, "idfromimagenam": 418, "doulb": 418, "_extra": 418, "_id_": 418, "remaplabel": [418, 444], "defaultact": 418, "projectinfo": 418, "dst_info": 418, "projectlabel": [418, 444], "project_label": [418, 444], "annstolabel": 418, "bboxvaluesdecr": 418, "resizetransform": [418, 444], "removeitem": [418, 444], "remove_item": [418, 444], "removeannot": [418, 444, 445], "remove_annot": [418, 444], "removeattribut": [418, 444], "remove_attribut": [418, 444], "remove_unnecessary_char": 418, "update_caption_valu": 418, "update_label_valu": 418, "fill_missing_valu": 418, "cap_far_from_mean": 418, "far_from_mean_capt": 418, "cap_outli": 418, "find_outli": 418, "astypeannot": [418, 445], "numer": 418, "punctuat": 418, "textual": 418, "predefin": 418, "check_outli": 418, "numeric_col": 418, "check_missing_valu": 418, "float_col": 418, "countable_col": 418, "find_closest_valu": 418, "target_valu": 418, "refine_tabular_media": 418, "task_typ": 419, "_taskvalid": 419, "unevenli": 419, "segmentationvalid": 419, "tabularvalidationstat": 419, "create_with_dataset": 419, "get_img_id": 421, "jsonsectionpagemapp": [421, 445], "type_conv": 422, "to_snake_cas": 422, "filter_dict": 422, "exclude_kei": 422, "substitut": [422, 433], "unescap": 422, "optional_arg_decor": 422, "fn": 422, "parse_json": 422, "dump_json": 422, "to_dict_from_streaming_json": 422, "find_group_lead": 423, "ep": 423, "percentag": 423, "make_label_id_map": 423, "src_label": 423, "map_id": 423, "id_map": [423, 431], "not_empti": 424, "has_length": 424, "default_if_non": 424, "get_datumaro_cache_dir": 425, "_cache_dir": 425, "datumaro_cache_dir": 425, "to_byt": 426, "imagebackend": 427, "imagecolorchannel": 427, "color_bgr": 427, "grai": 427, "decode_by_cv2": 427, "decode_by_pil": 427, "decode_image_context": 427, "image_backend": 427, "image_color_channel": 427, "imagecolorscal": [427, 445], "img_data": 427, "assert": 427, "copyto_imag": 427, "src_crypter": 427, "dst_crypter": 427, "create_dir": 427, "find_imag": 427, "is_imag": 427, "lazy_imag": 427, "imagecach": [427, 428], "imagemeta": 427, "save_image_meta_fil": 427, "capac": 428, "get_inst": 428, "lazy_import": 429, "catch_log": 430, "invert_colormap": 431, "check_is_mask": 431, "unpaint_mask": 431, "painted_mask": 431, "default_id": 431, "paint_mask": 431, "hw": 431, "max_index": 431, "remap_mask": 431, "map_fn": 431, "make_index_mask": 431, "binary_mask": 431, "incompat": 431, "bool_": 431, "make_binary_mask": 431, "bgr2index": 431, "index2bgr": 431, "load_mask": 431, "lazy_mask": 431, "mask_to_rl": 431, "mask_to_rle_pi": 431, "mask_to_polygon": 431, "mask_to_bbox": 431, "crop_covered_seg": 431, "ratio_toler": 431, "return_mask": 431, "1d": 431, "handicap": 431, "rles_to_mask": 431, "rle_to_mask": 431, "rle_uncompress": 431, "uncompress": 431, "find_mask_bbox": 431, "merge_mask": 431, "explos": 431, "is_meta_fil": 432, "has_hashkey_fil": 432, "get_meta_fil": 432, "get_hashkey_fil": 432, "save_meta_fil": 432, "parse_hashkey_fil": 432, "save_hashkey_fil": 432, "consumer_gener": 433, "producer_gener": 433, "queue_siz": 433, "enqueue_timeout": 433, "join_timeout": 433, "consum": 433, "enqueu": 433, "queue": 433, "notifi": 433, "rlock": 433, "acquir": 433, "runtimeerror": 433, "awaken": 433, "notify_al": 433, "fraction": 433, "thereof": 433, "unlock": 433, "realli": 433, "reacquir": 433, "wait_for": 433, "predic": 433, "wake": 433, "op": 433, "notifyal": 433, "put_nowait": 433, "producermessag": 433, "maxsiz": 433, "infinit": 433, "task_don": 433, "formerli": 433, "fetch": 433, "tell": 433, "gotten": 433, "unfinish": 433, "unblock": 433, "qsize": 433, "risk": 433, "queu": 433, "shrink": 433, "get_nowait": 433, "daemon": 433, "threadgroup": 433, "decim": 433, "arrang": 433, "taken": 433, "unhandl": 433, "is_al": 433, "aliv": 433, "ed": 433, "caus": 433, "deadlock": 433, "nonzero": 433, "native_id": 433, "get_native_id": 433, "program": 433, "isdaemon": 433, "setdaemon": 433, "getnam": 433, "setnam": 433, "check_instruction_set": 434, "import_foreign_modul": 434, "copytre": 434, "suppress_output": 434, "stdout": 434, "stderr": 434, "catch_output": 434, "dir_item": 434, "truncate_ext": 434, "is_subpath": 434, "subpath": 434, "get_all_file_extens": 434, "ignore_dir": 434, "restrictedunpickl": 435, "fix_import": 435, "ascii": 435, "unpickl": 435, "find_class": 435, "pickleload": 435, "safe_numpi": 435, "_reconstruct": 435, "restricted_load": 435, "get_samples_path": 436, "on_exit_do": 437, "__enter__": 437, "as_curr": 437, "telemetri": [439, 440], "send_ev": 439, "send_error": 439, "start_sess": 439, "end_sess": 439, "force_shutdown": 439, "send_stack_trac": 439, "init_telemetry_sess": 440, "app_nam": 440, "app_vers": 440, "close_telemetry_sess": 440, "send_version_info": 440, "send_command_success_info": 440, "sensitive_arg": 440, "send_command_failure_info": 440, "send_command_exception_info": 440, "send_error_info": 440, "check_import": 441, "import_tf": 441, "has_featur": 441, "byteimag": 443, "loss_dynamics_analyz": 443, "media_manag": 443, "mediamanag": [443, 445], "random_sampl": 444, "overwritten": 445, "lxml": 445, "relax": 445, "mmdetect": 445, "maco": 445, "entrypoint": 445, "toggl": 445, "backend": 445, "boost": 445, "algortihm": 445, "protobuf": 445, "importerror": 445, "gitpython": 445, "errata": 445, "hyperlink": 445, "unbound": 445, "arrow": 445, "multiframework": 445, "etre": 445, "defusedxml": 445, "announc": 445, "vc": 445, "migrat": 445, "v2023": 445, "yolov5": 445, "yolov7": 445, "v3": 445, "3rd": 445, "parti": 445, "atss": 445, "refactor": 445, "modelinterpret": 445, "writabl": 445, "test_visu": 445, "cocobas": 445, "mi": 445, "cocoroboflowimport": 445, "autosummari": 445, "enrich": 445, "juypter": 445, "rand": 445, "stackedtransform": 445, "imgsfin": 445, "sphinx": 445, "usecas": 445, "abbrevi": 445, "prettifi": 445, "negat": 445, "ava": 445, "mvtec": 445, "cyclic": 445, "changelog": 445, "event": 447, "cli_command": 447, "_result": 447, "sanit": 447, "isip": 447, "consent": 447, "localappdata": 447, "shapes_to_box": 448}, "objects": {"": [[139, 0, 0, "-", "datumaro"]], "datumaro": [[140, 0, 0, "-", "cli"], [185, 0, 0, "-", "components"], [239, 0, 0, "-", "errors"], [240, 0, 0, "-", "ops"], [241, 0, 0, "-", "plugins"], [420, 0, 0, "-", "project"], [421, 0, 0, "-", "rust_api"], [422, 0, 0, "-", "util"], [442, 0, 0, "-", "version"]], "datumaro.cli": [[141, 0, 0, "-", "commands"], [174, 0, 0, "-", "contexts"], [179, 0, 0, "-", "helpers"], [181, 0, 0, "-", "util"]], "datumaro.cli.commands": [[142, 0, 0, "-", "compare"], [143, 0, 0, "-", "convert"], [144, 0, 0, "-", "detect_format"], [145, 0, 0, "-", "download"], [146, 0, 0, "-", "downloaders"], [150, 0, 0, "-", "explain"], [151, 0, 0, "-", "explore"], [152, 0, 0, "-", "filter"], [153, 0, 0, "-", "generate"], [141, 3, 1, "", "get_non_project_commands"], [141, 3, 1, "", "get_project_commands"], [154, 0, 0, "-", "info"], [155, 0, 0, "-", "merge"], [156, 0, 0, "-", "patch"], [157, 0, 0, "-", "prune"], [158, 0, 0, "-", "require_project"], [171, 0, 0, "-", "stats"], [172, 0, 0, "-", "transform"], [173, 0, 0, "-", "validate"]], "datumaro.cli.commands.compare": [[142, 1, 1, "", "ComparisonMethod"], [142, 3, 1, "", "build_parser"], [142, 3, 1, "", "compare_command"], [142, 3, 1, "", "get_sensitive_args"]], "datumaro.cli.commands.compare.ComparisonMethod": [[142, 2, 1, "", "distance"], [142, 2, 1, "", "equality"], [142, 2, 1, "", "table"]], "datumaro.cli.commands.convert": [[143, 3, 1, "", "build_parser"], [143, 3, 1, "", "convert_command"], [143, 3, 1, "", "get_sensitive_args"]], "datumaro.cli.commands.detect_format": [[144, 3, 1, "", "build_parser"], [144, 3, 1, "", "detect_format_command"], [144, 3, 1, "", "get_sensitive_args"]], "datumaro.cli.commands.download": [[145, 3, 1, "", "build_describe_subparser"], [145, 3, 1, "", "build_get_subparser"], [145, 3, 1, "", "build_parser"], [145, 3, 1, "", "describe_downloads_command"], [145, 3, 1, "", "download_command"], [145, 3, 1, "", "get_sensitive_args"]], "datumaro.cli.commands.downloaders": [[147, 0, 0, "-", "downloader"], [148, 0, 0, "-", "kaggle"], [149, 0, 0, "-", "tfds"]], "datumaro.cli.commands.downloaders.downloader": [[147, 1, 1, "", "IDatasetDownloader"]], "datumaro.cli.commands.downloaders.downloader.IDatasetDownloader": [[147, 4, 1, "", "describe"], [147, 4, 1, "", "describe_command_description"], [147, 4, 1, "", "download"], [147, 4, 1, "", "get_command_description"]], "datumaro.cli.commands.downloaders.kaggle": [[148, 1, 1, "", "KaggleDatasetDownloader"], [148, 3, 1, "", "make_all_paths_absolute"]], "datumaro.cli.commands.downloaders.kaggle.KaggleDatasetDownloader": [[148, 4, 1, "", "describe"], [148, 4, 1, "", "describe_command_description"], [148, 4, 1, "", "download"], [148, 4, 1, "", "get_command_description"]], "datumaro.cli.commands.downloaders.tfds": [[149, 1, 1, "", "TfdsDatasetDownloader"]], "datumaro.cli.commands.downloaders.tfds.TfdsDatasetDownloader": [[149, 4, 1, "", "describe"], [149, 4, 1, "", "describe_command_description"], [149, 4, 1, "", "download"], [149, 4, 1, "", "get_command_description"], [149, 4, 1, "", "get_extractor"]], "datumaro.cli.commands.explain": [[150, 3, 1, "", "build_parser"], [150, 3, 1, "", "explain_command"], [150, 3, 1, "", "get_sensitive_args"]], "datumaro.cli.commands.explore": [[151, 3, 1, "", "build_parser"], [151, 3, 1, "", "explore_command"], [151, 3, 1, "", "get_sensitive_args"]], "datumaro.cli.commands.filter": [[152, 3, 1, "", "build_parser"], [152, 3, 1, "", "filter_command"], [152, 3, 1, "", "get_sensitive_args"]], "datumaro.cli.commands.generate": [[153, 3, 1, "", "build_parser"], [153, 3, 1, "", "generate_command"], [153, 3, 1, "", "get_sensitive_args"]], "datumaro.cli.commands.info": [[154, 3, 1, "", "build_parser"], [154, 3, 1, "", "get_sensitive_args"], [154, 3, 1, "", "info_command"]], "datumaro.cli.commands.merge": [[155, 3, 1, "", "build_parser"], [155, 3, 1, "", "get_sensitive_args"], [155, 3, 1, "", "merge_command"]], "datumaro.cli.commands.patch": [[156, 3, 1, "", "build_parser"], [156, 3, 1, "", "get_sensitive_args"], [156, 3, 1, "", "patch_command"]], "datumaro.cli.commands.prune": [[157, 3, 1, "", "build_parser"], [157, 3, 1, "", "get_sensitive_args"], [157, 3, 1, "", "prune_command"]], "datumaro.cli.commands.require_project": [[158, 3, 1, "", "get_project_commands"], [159, 0, 0, "-", "modification"], [165, 0, 0, "-", "versioning"]], "datumaro.cli.commands.require_project.modification": [[160, 0, 0, "-", "add"], [161, 0, 0, "-", "create"], [162, 0, 0, "-", "export"], [163, 0, 0, "-", "import_"], [164, 0, 0, "-", "remove"]], "datumaro.cli.commands.require_project.modification.add": [[160, 5, 1, "", "CliException"], [160, 1, 1, "", "MultilineFormatter"], [160, 5, 1, "", "ProjectNotFoundError"], [160, 3, 1, "", "add_command"], [160, 3, 1, "", "build_parser"], [160, 3, 1, "", "get_sensitive_args"], [160, 3, 1, "", "join_cli_args"], [160, 3, 1, "", "load_project"], [160, 3, 1, "", "on_error_do"], [160, 3, 1, "", "scope_add"], [160, 3, 1, "", "scoped"], [160, 3, 1, "", "show_video_import_warning"]], "datumaro.cli.commands.require_project.modification.add.ProjectNotFoundError": [[160, 2, 1, "", "path"]], "datumaro.cli.commands.require_project.modification.create": [[161, 3, 1, "", "build_parser"], [161, 3, 1, "", "create_command"], [161, 3, 1, "", "get_sensitive_args"]], "datumaro.cli.commands.require_project.modification.export": [[162, 5, 1, "", "CliException"], [162, 1, 1, "", "FilterModes"], [162, 1, 1, "", "MultilineFormatter"], [162, 1, 1, "", "ProjectBuildTargets"], [162, 5, 1, "", "ProjectNotFoundError"], [162, 3, 1, "", "build_parser"], [162, 3, 1, "", "export_command"], [162, 3, 1, "", "generate_next_file_name"], [162, 3, 1, "", "get_sensitive_args"], [162, 3, 1, "", "load_project"], [162, 3, 1, "", "make_file_name"], [162, 3, 1, "", "scope_add"], [162, 3, 1, "", "scoped"]], "datumaro.cli.commands.require_project.modification.export.FilterModes": [[162, 2, 1, "", "a"], [162, 2, 1, "", "a_i"], [162, 2, 1, "", "annotations"], [162, 2, 1, "", "annotations_items"], [162, 2, 1, "", "i"], [162, 2, 1, "", "i_a"], [162, 2, 1, "", "items"], [162, 2, 1, "", "items_annotations"], [162, 4, 1, "", "list_options"], [162, 4, 1, "", "make_filter_args"], [162, 4, 1, "", "parse"]], "datumaro.cli.commands.require_project.modification.export.ProjectBuildTargets": [[162, 2, 1, "", "BASE_STAGE"], [162, 2, 1, "", "MAIN_TARGET"], [162, 4, 1, "", "add_convert_stage"], [162, 4, 1, "", "add_explore_stage"], [162, 4, 1, "", "add_filter_stage"], [162, 4, 1, "", "add_inference_stage"], [162, 4, 1, "", "add_stage"], [162, 4, 1, "", "add_target"], [162, 4, 1, "", "add_transform_stage"], [162, 4, 1, "", "make_pipeline"], [162, 4, 1, "", "make_target_name"], [162, 4, 1, "", "remove_stage"], [162, 4, 1, "", "remove_target"], [162, 4, 1, "", "split_target_name"], [162, 4, 1, "", "strip_target_name"]], "datumaro.cli.commands.require_project.modification.export.ProjectNotFoundError": [[162, 2, 1, "", "path"]], "datumaro.cli.commands.require_project.modification.import_": [[163, 5, 1, "", "CliException"], [163, 1, 1, "", "MultilineFormatter"], [163, 5, 1, "", "ProjectNotFoundError"], [163, 3, 1, "", "build_parser"], [163, 3, 1, "", "generate_next_name"], [163, 3, 1, "", "get_sensitive_args"], [163, 3, 1, "", "import_command"], [163, 3, 1, "", "join_cli_args"], [163, 3, 1, "", "load_project"], [163, 3, 1, "", "on_error_do"], [163, 3, 1, "", "scope_add"], [163, 3, 1, "", "scoped"], [163, 3, 1, "", "show_video_import_warning"]], "datumaro.cli.commands.require_project.modification.import_.ProjectNotFoundError": [[163, 2, 1, "", "path"]], "datumaro.cli.commands.require_project.modification.remove": [[164, 5, 1, "", "CliException"], [164, 3, 1, "", "build_parser"], [164, 3, 1, "", "get_sensitive_args"], [164, 3, 1, "", "load_project"], [164, 3, 1, "", "remove_command"], [164, 3, 1, "", "scope_add"], [164, 3, 1, "", "scoped"]], "datumaro.cli.commands.require_project.versioning": [[166, 0, 0, "-", "checkout"], [167, 0, 0, "-", "commit"], [168, 0, 0, "-", "info"], [169, 0, 0, "-", "log"], [170, 0, 0, "-", "status"]], "datumaro.cli.commands.require_project.versioning.checkout": [[166, 3, 1, "", "build_parser"], [166, 3, 1, "", "checkout_command"], [166, 3, 1, "", "get_sensitive_args"]], "datumaro.cli.commands.require_project.versioning.commit": [[167, 3, 1, "", "build_parser"], [167, 3, 1, "", "commit_command"], [167, 3, 1, "", "get_sensitive_args"]], "datumaro.cli.commands.require_project.versioning.info": [[168, 3, 1, "", "build_parser"], [168, 3, 1, "", "get_sensitive_args"], [168, 3, 1, "", "info_command"]], "datumaro.cli.commands.require_project.versioning.log": [[169, 3, 1, "", "build_parser"], [169, 3, 1, "", "get_sensitive_args"], [169, 3, 1, "", "log_command"]], "datumaro.cli.commands.require_project.versioning.status": [[170, 3, 1, "", "build_parser"], [170, 3, 1, "", "get_sensitive_args"], [170, 3, 1, "", "status_command"]], "datumaro.cli.commands.stats": [[171, 5, 1, "", "CliException"], [171, 5, 1, "", "ConflictingCategoriesError"], [171, 1, 1, "", "MultilineFormatter"], [171, 5, 1, "", "ProjectNotFoundError"], [171, 5, 1, "", "WrongRevpathError"], [171, 3, 1, "", "build_parser"], [171, 3, 1, "", "compute_ann_statistics"], [171, 3, 1, "", "compute_image_statistics"], [171, 3, 1, "", "dump_json_file"], [171, 3, 1, "", "generate_next_file_name"], [171, 3, 1, "", "get_sensitive_args"], [171, 3, 1, "", "load_project"], [171, 3, 1, "", "parse_full_revpath"], [171, 3, 1, "", "scope_add"], [171, 3, 1, "", "scoped"], [171, 3, 1, "", "stats_command"], [171, 3, 1, "", "str_to_bool"]], "datumaro.cli.commands.stats.ConflictingCategoriesError": [[171, 2, 1, "", "sources"]], "datumaro.cli.commands.stats.ProjectNotFoundError": [[171, 2, 1, "", "path"]], "datumaro.cli.commands.transform": [[172, 3, 1, "", "build_parser"], [172, 3, 1, "", "get_sensitive_args"], [172, 3, 1, "", "transform_command"]], "datumaro.cli.commands.validate": [[173, 3, 1, "", "build_parser"], [173, 3, 1, "", "get_sensitive_args"], [173, 3, 1, "", "validate_command"]], "datumaro.cli.contexts": [[175, 0, 0, "-", "model"], [176, 0, 0, "-", "project"], [177, 0, 0, "-", "source"], [178, 0, 0, "-", "util"]], "datumaro.cli.contexts.model": [[175, 3, 1, "", "add_command"], [175, 3, 1, "", "build_add_parser"], [175, 3, 1, "", "build_info_parser"], [175, 3, 1, "", "build_parser"], [175, 3, 1, "", "build_remove_parser"], [175, 3, 1, "", "build_run_parser"], [175, 3, 1, "", "get_add_sensitive_args"], [175, 3, 1, "", "get_info_sensitive_args"], [175, 3, 1, "", "get_remove_sensitive_args"], [175, 3, 1, "", "get_run_sensitive_args"], [175, 3, 1, "", "get_sensitive_args"], [175, 3, 1, "", "info_command"], [175, 3, 1, "", "remove_command"], [175, 3, 1, "", "run_command"]], "datumaro.cli.contexts.project": [[176, 3, 1, "", "build_migrate_parser"], [176, 3, 1, "", "build_parser"], [176, 3, 1, "", "get_migrate_sensitive_args"], [176, 3, 1, "", "get_sensitive_args"], [176, 3, 1, "", "migrate_command"]], "datumaro.cli.contexts.source": [[177, 3, 1, "", "build_info_parser"], [177, 3, 1, "", "build_parser"], [177, 3, 1, "", "get_info_sensitive_args"], [177, 3, 1, "", "get_sensitive_args"], [177, 3, 1, "", "info_command"]], "datumaro.cli.contexts.util": [[178, 3, 1, "", "build_parser"], [178, 3, 1, "", "build_split_video_parser"], [178, 3, 1, "", "get_sensitive_args"], [178, 3, 1, "", "get_split_video_sensitive_args"], [178, 3, 1, "", "split_video_command"]], "datumaro.cli.helpers": [[180, 0, 0, "-", "format"]], "datumaro.cli.helpers.format": [[180, 3, 1, "", "build_parser"], [180, 3, 1, "", "format_command"], [180, 3, 1, "", "get_sensitive_args"]], "datumaro.cli.util": [[181, 1, 1, "", "MultilineFormatter"], [181, 3, 1, "", "add_subparser"], [181, 3, 1, "", "at_least"], [182, 0, 0, "-", "compare"], [183, 0, 0, "-", "errors"], [181, 3, 1, "", "join_cli_args"], [181, 3, 1, "", "make_subcommands_help"], [184, 0, 0, "-", "project"], [181, 3, 1, "", "required_count"], [181, 3, 1, "", "show_video_import_warning"]], "datumaro.cli.util.compare": [[182, 1, 1, "", "DistanceCompareVisualizer"]], "datumaro.cli.util.compare.DistanceCompareVisualizer": [[182, 2, 1, "", "DEFAULT_FORMAT"], [182, 1, 1, "", "OutputFormat"], [182, 4, 1, "", "draw_bbox"], [182, 4, 1, "", "draw_detection_roi"], [182, 4, 1, "", "draw_text_with_background"], [182, 4, 1, "", "get_a_label"], [182, 4, 1, "", "get_b_label"], [182, 4, 1, "", "get_label_diff_file"], [182, 4, 1, "", "save"], [182, 4, 1, "", "save_as_tensorboard"], [182, 4, 1, "", "save_conf_matrix"], [182, 4, 1, "", "save_item_bbox_diff"], [182, 4, 1, "", "save_item_label_diff"], [182, 4, 1, "", "update_bbox_confusion"], [182, 4, 1, "", "update_label_confusion"], [182, 4, 1, "", "update_mask_confusion"], [182, 4, 1, "", "update_polygon_confusion"]], "datumaro.cli.util.compare.DistanceCompareVisualizer.OutputFormat": [[182, 2, 1, "", "simple"], [182, 2, 1, "", "tensorboard"]], "datumaro.cli.util.errors": [[183, 5, 1, "", "CliException"], [183, 5, 1, "", "WrongRevpathError"]], "datumaro.cli.util.project": [[184, 1, 1, "", "FilterModes"], [184, 3, 1, "", "generate_next_file_name"], [184, 3, 1, "", "load_project"], [184, 3, 1, "", "parse_dataset_pathspec"], [184, 3, 1, "", "parse_full_revpath"], [184, 3, 1, "", "parse_revspec"], [184, 3, 1, "", "split_local_revpath"]], "datumaro.cli.util.project.FilterModes": [[184, 2, 1, "", "a"], [184, 2, 1, "", "a_i"], [184, 2, 1, "", "annotations"], [184, 2, 1, "", "annotations_items"], [184, 2, 1, "", "i"], [184, 2, 1, "", "i_a"], [184, 2, 1, "", "items"], [184, 2, 1, "", "items_annotations"], [184, 4, 1, "", "list_options"], [184, 4, 1, "", "make_filter_args"], [184, 4, 1, "", "parse"]], "datumaro.components": [[186, 0, 0, "-", "abstracts"], [189, 0, 0, "-", "algorithms"], [198, 0, 0, "-", "annotation"], [199, 0, 0, "-", "annotations"], [202, 0, 0, "-", "cli_plugin"], [203, 0, 0, "-", "comparator"], [204, 0, 0, "-", "config"], [205, 0, 0, "-", "config_model"], [206, 0, 0, "-", "contexts"], [208, 0, 0, "-", "crypter"], [209, 0, 0, "-", "dataset"], [210, 0, 0, "-", "dataset_base"], [211, 0, 0, "-", "dataset_item_storage"], [212, 0, 0, "-", "dataset_storage"], [213, 0, 0, "-", "environment"], [214, 0, 0, "-", "errors"], [215, 0, 0, "-", "exporter"], [216, 0, 0, "-", "extractor_tfds"], [217, 0, 0, "-", "filter"], [218, 0, 0, "-", "format_detection"], [219, 0, 0, "-", "generator"], [220, 0, 0, "-", "hl_ops"], [221, 0, 0, "-", "importer"], [222, 0, 0, "-", "launcher"], [223, 0, 0, "-", "lazy_plugin"], [224, 0, 0, "-", "media"], [225, 0, 0, "-", "merge"], [231, 0, 0, "-", "operations"], [232, 0, 0, "-", "progress_reporting"], [233, 0, 0, "-", "project"], [234, 0, 0, "-", "registry"], [235, 0, 0, "-", "shift_analyzer"], [236, 0, 0, "-", "transformer"], [237, 0, 0, "-", "validator"], [238, 0, 0, "-", "visualizer"]], "datumaro.components.abstracts": [[187, 0, 0, "-", "merger"], [188, 0, 0, "-", "model_interpreter"]], "datumaro.components.abstracts.merger": [[187, 1, 1, "", "ABC"], [187, 1, 1, "", "Annotation"], [187, 1, 1, "", "DatasetItemStorage"], [187, 1, 1, "", "DatasetItemStorageDatasetView"], [187, 1, 1, "", "IDataset"], [187, 1, 1, "", "IMatcherContext"], [187, 1, 1, "", "IMergerContext"], [187, 1, 1, "", "MediaElement"], [187, 3, 1, "", "abstractmethod"]], "datumaro.components.abstracts.merger.Annotation": [[187, 4, 1, "", "as_dict"], [187, 2, 1, "", "attributes"], [187, 2, 1, "", "group"], [187, 2, 1, "", "id"], [187, 2, 1, "", "object_id"], [187, 6, 1, "", "type"], [187, 4, 1, "", "wrap"]], "datumaro.components.abstracts.merger.DatasetItemStorage": [[187, 4, 1, "", "get"], [187, 4, 1, "", "get_annotated_items"], [187, 4, 1, "", "get_annotations"], [187, 4, 1, "", "get_datasetitem_by_path"], [187, 4, 1, "", "get_subset"], [187, 4, 1, "", "is_empty"], [187, 4, 1, "", "put"], [187, 4, 1, "", "remove"], [187, 4, 1, "", "subsets"]], "datumaro.components.abstracts.merger.DatasetItemStorageDatasetView": [[187, 1, 1, "", "Subset"], [187, 4, 1, "", "ann_types"], [187, 4, 1, "", "categories"], [187, 4, 1, "", "get"], [187, 4, 1, "", "get_subset"], [187, 4, 1, "", "infos"], [187, 4, 1, "", "media_type"], [187, 4, 1, "", "subsets"]], "datumaro.components.abstracts.merger.DatasetItemStorageDatasetView.Subset": [[187, 4, 1, "", "ann_types"], [187, 4, 1, "", "categories"], [187, 4, 1, "", "get"], [187, 4, 1, "", "get_subset"], [187, 4, 1, "", "infos"], [187, 4, 1, "", "media_type"], [187, 4, 1, "", "put"], [187, 4, 1, "", "remove"], [187, 4, 1, "", "subsets"]], "datumaro.components.abstracts.merger.IDataset": [[187, 4, 1, "", "ann_types"], [187, 4, 1, "", "categories"], [187, 4, 1, "", "get"], [187, 4, 1, "", "get_subset"], [187, 4, 1, "", "infos"], [187, 6, 1, "", "is_stream"], [187, 4, 1, "", "media_type"], [187, 4, 1, "", "subsets"]], "datumaro.components.abstracts.merger.IMatcherContext": [[187, 4, 1, "", "get_any_label_name"]], "datumaro.components.abstracts.merger.IMergerContext": [[187, 4, 1, "", "merge"], [187, 4, 1, "", "merge_categories"], [187, 4, 1, "", "merge_infos"], [187, 4, 1, "", "merge_media_types"]], "datumaro.components.abstracts.merger.MediaElement": [[187, 4, 1, "", "as_dict"], [187, 6, 1, "", "bytes"], [187, 6, 1, "", "data"], [187, 4, 1, "", "from_self"], [187, 6, 1, "", "has_data"], [187, 6, 1, "", "is_encrypted"], [187, 4, 1, "", "save"], [187, 4, 1, "", "set_crypter"], [187, 6, 1, "", "type"]], "datumaro.components.abstracts.model_interpreter": [[188, 1, 1, "", "ABC"], [188, 1, 1, "", "Annotation"], [188, 1, 1, "", "DatasetItem"], [188, 1, 1, "", "IModelInterpreter"], [188, 1, 1, "", "TypeVar"], [188, 3, 1, "", "abstractmethod"]], "datumaro.components.abstracts.model_interpreter.Annotation": [[188, 4, 1, "", "as_dict"], [188, 2, 1, "", "attributes"], [188, 2, 1, "", "group"], [188, 2, 1, "", "id"], [188, 2, 1, "", "object_id"], [188, 6, 1, "", "type"], [188, 4, 1, "", "wrap"]], "datumaro.components.abstracts.model_interpreter.DatasetItem": [[188, 2, 1, "", "annotations"], [188, 2, 1, "", "attributes"], [188, 2, 1, "", "id"], [188, 2, 1, "", "media"], [188, 4, 1, "", "media_as"], [188, 2, 1, "", "subset"], [188, 4, 1, "", "wrap"]], "datumaro.components.abstracts.model_interpreter.IModelInterpreter": [[188, 4, 1, "", "get_categories"], [188, 4, 1, "", "postprocess"], [188, 4, 1, "", "preprocess"]], "datumaro.components.algorithms": [[190, 0, 0, "-", "hash_key_inference"], [195, 0, 0, "-", "noisy_label_detection"], [197, 0, 0, "-", "rise"]], "datumaro.components.algorithms.hash_key_inference": [[191, 0, 0, "-", "base"], [192, 0, 0, "-", "explorer"], [193, 0, 0, "-", "hashkey_util"], [194, 0, 0, "-", "prune"]], "datumaro.components.algorithms.hash_key_inference.base": [[191, 1, 1, "", "HashInference"]], "datumaro.components.algorithms.hash_key_inference.base.HashInference": [[191, 6, 1, "", "model"], [191, 6, 1, "", "text_model"]], "datumaro.components.algorithms.hash_key_inference.explorer": [[192, 1, 1, "", "Explorer"]], "datumaro.components.algorithms.hash_key_inference.explorer.Explorer": [[192, 4, 1, "", "explore_topk"]], "datumaro.components.algorithms.hash_key_inference.hashkey_util": [[193, 3, 1, "", "calculate_hamming"], [193, 3, 1, "", "check_and_convert_to_list"], [193, 3, 1, "", "match_query_subset"], [193, 3, 1, "", "select_uninferenced_dataset"]], "datumaro.components.algorithms.hash_key_inference.prune": [[194, 1, 1, "", "Centroid"], [194, 1, 1, "", "ClusteredRandom"], [194, 1, 1, "", "Entropy"], [194, 1, 1, "", "NDRSelect"], [194, 1, 1, "", "Prune"], [194, 1, 1, "", "PruneBase"], [194, 1, 1, "", "QueryClust"], [194, 1, 1, "", "RandomSelect"], [194, 3, 1, "", "match_num_item_for_cluster"]], "datumaro.components.algorithms.hash_key_inference.prune.Centroid": [[194, 4, 1, "", "base"]], "datumaro.components.algorithms.hash_key_inference.prune.ClusteredRandom": [[194, 4, 1, "", "base"]], "datumaro.components.algorithms.hash_key_inference.prune.Entropy": [[194, 4, 1, "", "base"]], "datumaro.components.algorithms.hash_key_inference.prune.NDRSelect": [[194, 4, 1, "", "base"]], "datumaro.components.algorithms.hash_key_inference.prune.Prune": [[194, 4, 1, "", "get_pruned"]], "datumaro.components.algorithms.hash_key_inference.prune.PruneBase": [[194, 4, 1, "", "base"]], "datumaro.components.algorithms.hash_key_inference.prune.QueryClust": [[194, 4, 1, "", "base"]], "datumaro.components.algorithms.hash_key_inference.prune.RandomSelect": [[194, 4, 1, "", "base"]], "datumaro.components.algorithms.noisy_label_detection": [[196, 0, 0, "-", "loss_dynamics_analyzer"]], "datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer": [[196, 1, 1, "", "AnnotationType"], [196, 5, 1, "", "DatasetError"], [196, 1, 1, "", "IDataset"], [196, 1, 1, "", "LabelCategories"], [196, 1, 1, "", "LossDynamicsAnalyzer"], [196, 1, 1, "", "NoisyLabelCandidate"], [196, 3, 1, "", "dataclass"], [196, 1, 1, "", "defaultdict"], [196, 3, 1, "", "field"]], "datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.AnnotationType": [[196, 2, 1, "", "bbox"], [196, 2, 1, "", "caption"], [196, 2, 1, "", "cuboid_3d"], [196, 2, 1, "", "depth_annotation"], [196, 2, 1, "", "ellipse"], [196, 2, 1, "", "feature_vector"], [196, 2, 1, "", "hash_key"], [196, 2, 1, "", "label"], [196, 2, 1, "", "mask"], [196, 2, 1, "", "points"], [196, 2, 1, "", "polygon"], [196, 2, 1, "", "polyline"], [196, 2, 1, "", "rotated_bbox"], [196, 2, 1, "", "super_resolution_annotation"], [196, 2, 1, "", "tabular"], [196, 2, 1, "", "unknown"]], "datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.IDataset": [[196, 4, 1, "", "ann_types"], [196, 4, 1, "", "categories"], [196, 4, 1, "", "get"], [196, 4, 1, "", "get_subset"], [196, 4, 1, "", "infos"], [196, 6, 1, "", "is_stream"], [196, 4, 1, "", "media_type"], [196, 4, 1, "", "subsets"]], "datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.LabelCategories": [[196, 1, 1, "", "Category"], [196, 1, 1, "", "LabelGroup"], [196, 4, 1, "", "add"], [196, 4, 1, "", "add_label_group"], [196, 4, 1, "", "find"], [196, 4, 1, "", "from_iterable"], [196, 2, 1, "", "items"], [196, 2, 1, "", "label_groups"]], "datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.LabelCategories.Category": [[196, 2, 1, "", "attributes"], [196, 2, 1, "", "name"], [196, 2, 1, "", "parent"]], "datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.LabelCategories.LabelGroup": [[196, 2, 1, "", "group_type"], [196, 2, 1, "", "labels"], [196, 2, 1, "", "name"]], "datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.LossDynamicsAnalyzer": [[196, 2, 1, "", "allowed_task_names"], [196, 2, 1, "", "allowed_tracking_loss_types"], [196, 6, 1, "", "alpha"], [196, 6, 1, "", "ema_dataframe"], [196, 4, 1, "", "get_top_k_cands"], [196, 6, 1, "", "mean_loss_dyns"], [196, 6, 1, "", "mean_loss_dyns_per_label"], [196, 4, 1, "", "plot_ema_loss_dynamics"]], "datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.NoisyLabelCandidate": [[196, 2, 1, "", "ann_id"], [196, 2, 1, "", "id"], [196, 2, 1, "", "label_id"], [196, 2, 1, "", "metric"], [196, 2, 1, "", "subset"]], "datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.defaultdict": [[196, 4, 1, "", "copy"], [196, 2, 1, "", "default_factory"]], "datumaro.components.algorithms.rise": [[197, 1, 1, "", "Dataset"], [197, 1, 1, "", "DatasetItem"], [197, 1, 1, "", "Image"], [197, 1, 1, "", "RISE"], [197, 3, 1, "", "take_by"]], "datumaro.components.algorithms.rise.Dataset": [[197, 4, 1, "", "ann_types"], [197, 4, 1, "", "bind"], [197, 4, 1, "", "categories"], [197, 4, 1, "", "clone"], [197, 6, 1, "", "data_path"], [197, 4, 1, "", "define_categories"], [197, 4, 1, "", "define_infos"], [197, 4, 1, "", "detect"], [197, 6, 1, "", "env"], [197, 4, 1, "", "export"], [197, 4, 1, "", "filter"], [197, 4, 1, "", "flush_changes"], [197, 6, 1, "", "format"], [197, 4, 1, "", "from_extractors"], [197, 4, 1, "", "from_iterable"], [197, 4, 1, "", "get"], [197, 4, 1, "", "get_annotated_items"], [197, 4, 1, "", "get_annotations"], [197, 4, 1, "", "get_categories_info"], [197, 4, 1, "", "get_datasetitem_by_path"], [197, 4, 1, "", "get_infos"], [197, 4, 1, "", "get_label_cat_names"], [197, 4, 1, "", "get_patch"], [197, 4, 1, "", "get_subset"], [197, 4, 1, "", "get_subset_info"], [197, 4, 1, "", "import_from"], [197, 4, 1, "", "infos"], [197, 4, 1, "", "init_cache"], [197, 6, 1, "", "is_bound"], [197, 6, 1, "", "is_cache_initialized"], [197, 6, 1, "", "is_eager"], [197, 6, 1, "", "is_modified"], [197, 6, 1, "", "is_stream"], [197, 4, 1, "", "load"], [197, 4, 1, "", "media_type"], [197, 6, 1, "", "options"], [197, 4, 1, "", "put"], [197, 4, 1, "", "remove"], [197, 4, 1, "", "run_model"], [197, 4, 1, "", "save"], [197, 4, 1, "", "select"], [197, 4, 1, "", "subsets"], [197, 4, 1, "", "transform"], [197, 4, 1, "", "update"]], "datumaro.components.algorithms.rise.DatasetItem": [[197, 2, 1, "", "annotations"], [197, 2, 1, "", "attributes"], [197, 2, 1, "", "id"], [197, 2, 1, "", "media"], [197, 4, 1, "", "media_as"], [197, 2, 1, "", "subset"], [197, 4, 1, "", "wrap"]], "datumaro.components.algorithms.rise.Image": [[197, 6, 1, "", "ext"], [197, 4, 1, "", "from_bytes"], [197, 4, 1, "", "from_file"], [197, 4, 1, "", "from_numpy"], [197, 6, 1, "", "has_size"], [197, 4, 1, "", "set_crypter"], [197, 6, 1, "", "size"]], "datumaro.components.algorithms.rise.RISE": [[197, 4, 1, "", "apply"], [197, 4, 1, "", "generate_masked_dataset"], [197, 4, 1, "", "generate_masks"], [197, 4, 1, "", "normalize_saliency"]], "datumaro.components.annotation": [[198, 1, 1, "", "Annotation"], [198, 1, 1, "", "AnnotationType"], [198, 1, 1, "", "Annotations"], [198, 1, 1, "", "Bbox"], [198, 1, 1, "", "Caption"], [198, 1, 1, "", "Categories"], [198, 7, 1, "", "Colormap"], [198, 1, 1, "", "CompiledMask"], [198, 1, 1, "", "Cuboid3d"], [198, 1, 1, "", "DepthAnnotation"], [198, 1, 1, "", "Ellipse"], [198, 1, 1, "", "ExtractedMask"], [198, 1, 1, "", "FeatureVector"], [198, 1, 1, "", "GroupType"], [198, 1, 1, "", "HashKey"], [198, 1, 1, "", "Label"], [198, 1, 1, "", "LabelCategories"], [198, 1, 1, "", "Mask"], [198, 1, 1, "", "MaskCategories"], [198, 1, 1, "", "Points"], [198, 1, 1, "", "PointsCategories"], [198, 1, 1, "", "PolyLine"], [198, 1, 1, "", "Polygon"], [198, 1, 1, "", "RleMask"], [198, 1, 1, "", "RotatedBbox"], [198, 1, 1, "", "Shape"], [198, 1, 1, "", "SuperResolutionAnnotation"], [198, 1, 1, "", "Tabular"], [198, 1, 1, "", "TabularCategories"]], "datumaro.components.annotation.Annotation": [[198, 4, 1, "", "as_dict"], [198, 2, 1, "", "attributes"], [198, 2, 1, "", "group"], [198, 2, 1, "", "id"], [198, 2, 1, "", "object_id"], [198, 6, 1, "", "type"], [198, 4, 1, "", "wrap"]], "datumaro.components.annotation.AnnotationType": [[198, 2, 1, "", "bbox"], [198, 2, 1, "", "caption"], [198, 2, 1, "", "cuboid_3d"], [198, 2, 1, "", "depth_annotation"], [198, 2, 1, "", "ellipse"], [198, 2, 1, "", "feature_vector"], [198, 2, 1, "", "hash_key"], [198, 2, 1, "", "label"], [198, 2, 1, "", "mask"], [198, 2, 1, "", "points"], [198, 2, 1, "", "polygon"], [198, 2, 1, "", "polyline"], [198, 2, 1, "", "rotated_bbox"], [198, 2, 1, "", "super_resolution_annotation"], [198, 2, 1, "", "tabular"], [198, 2, 1, "", "unknown"]], "datumaro.components.annotation.Annotations": [[198, 4, 1, "", "get_semantic_seg_mask"]], "datumaro.components.annotation.Bbox": [[198, 4, 1, "", "__init__"], [198, 2, 1, "", "_type"], [198, 4, 1, "id23", "as_polygon"], [198, 4, 1, "id21", "get_area"], [198, 4, 1, "id22", "get_bbox"], [198, 6, 1, "id20", "h"], [198, 4, 1, "id24", "iou"], [198, 6, 1, "id19", "w"], [198, 4, 1, "id25", "wrap"], [198, 6, 1, "id17", "x"], [198, 6, 1, "id18", "y"]], "datumaro.components.annotation.Caption": [[198, 2, 1, "", "caption"]], "datumaro.components.annotation.Categories": [[198, 2, 1, "", "attributes"]], "datumaro.components.annotation.CompiledMask": [[198, 6, 1, "", "class_mask"], [198, 4, 1, "", "extract"], [198, 4, 1, "", "from_instance_masks"], [198, 4, 1, "", "get_instance_labels"], [198, 6, 1, "", "instance_count"], [198, 6, 1, "", "instance_mask"], [198, 4, 1, "", "lazy_extract"]], "datumaro.components.annotation.Cuboid3d": [[198, 4, 1, "", "__init__"], [198, 2, 1, "", "_points"], [198, 2, 1, "", "_type"], [198, 2, 1, "id11", "label"], [198, 6, 1, "id12", "position"], [198, 6, 1, "id13", "rotation"], [198, 6, 1, "id14", "scale"]], "datumaro.components.annotation.Ellipse": [[198, 4, 1, "", "as_polygon"], [198, 6, 1, "", "c_x"], [198, 6, 1, "", "c_y"], [198, 4, 1, "", "get_area"], [198, 4, 1, "", "get_bbox"], [198, 4, 1, "", "get_points"], [198, 6, 1, "", "h"], [198, 4, 1, "", "iou"], [198, 6, 1, "", "w"], [198, 4, 1, "", "wrap"], [198, 6, 1, "", "x1"], [198, 6, 1, "", "x2"], [198, 6, 1, "", "y1"], [198, 6, 1, "", "y2"]], "datumaro.components.annotation.ExtractedMask": [[198, 6, 1, "", "image"], [198, 2, 1, "id1", "index"], [198, 2, 1, "id0", "index_mask"]], "datumaro.components.annotation.FeatureVector": [[198, 2, 1, "", "attributes"], [198, 2, 1, "", "group"], [198, 2, 1, "", "id"], [198, 2, 1, "", "object_id"], [198, 2, 1, "", "vector"]], "datumaro.components.annotation.GroupType": [[198, 2, 1, "", "EXCLUSIVE"], [198, 2, 1, "", "INCLUSIVE"], [198, 2, 1, "", "RESTRICTED"], [198, 4, 1, "", "from_str"], [198, 4, 1, "", "to_str"]], "datumaro.components.annotation.HashKey": [[198, 2, 1, "", "hash_key"]], "datumaro.components.annotation.Label": [[198, 2, 1, "", "label"]], "datumaro.components.annotation.LabelCategories": [[198, 1, 1, "", "Category"], [198, 1, 1, "", "LabelGroup"], [198, 4, 1, "", "add"], [198, 4, 1, "", "add_label_group"], [198, 4, 1, "", "find"], [198, 4, 1, "", "from_iterable"], [198, 2, 1, "", "items"], [198, 2, 1, "", "label_groups"]], "datumaro.components.annotation.LabelCategories.Category": [[198, 2, 1, "", "attributes"], [198, 2, 1, "", "name"], [198, 2, 1, "", "parent"]], "datumaro.components.annotation.LabelCategories.LabelGroup": [[198, 2, 1, "", "group_type"], [198, 2, 1, "", "labels"], [198, 2, 1, "", "name"]], "datumaro.components.annotation.Mask": [[198, 4, 1, "", "as_class_mask"], [198, 4, 1, "", "as_instance_mask"], [198, 4, 1, "", "get_area"], [198, 4, 1, "", "get_bbox"], [198, 6, 1, "", "image"], [198, 2, 1, "", "label"], [198, 4, 1, "", "paint"], [198, 2, 1, "", "z_order"]], "datumaro.components.annotation.MaskCategories": [[198, 2, 1, "", "colormap"], [198, 4, 1, "", "generate"], [198, 6, 1, "", "inverse_colormap"]], "datumaro.components.annotation.Points": [[198, 1, 1, "", "Visibility"], [198, 4, 1, "", "__attrs_post_init__"], [198, 2, 1, "", "_type"], [198, 4, 1, "id42", "get_area"], [198, 4, 1, "id43", "get_bbox"], [198, 2, 1, "id41", "visibility"]], "datumaro.components.annotation.Points.Visibility": [[198, 2, 1, "id38", "absent"], [198, 2, 1, "id39", "hidden"], [198, 2, 1, "id40", "visible"]], "datumaro.components.annotation.PointsCategories": [[198, 1, 1, "", "Category"], [198, 4, 1, "", "add"], [198, 4, 1, "", "from_iterable"], [198, 2, 1, "", "items"]], "datumaro.components.annotation.PointsCategories.Category": [[198, 2, 1, "", "joints"], [198, 2, 1, "", "labels"]], "datumaro.components.annotation.PolyLine": [[198, 2, 1, "", "_type"], [198, 4, 1, "id9", "as_polygon"], [198, 4, 1, "id10", "get_area"]], "datumaro.components.annotation.Polygon": [[198, 4, 1, "", "__attrs_post_init__"], [198, 4, 1, "", "__eq__"], [198, 4, 1, "", "_get_shoelace_area"], [198, 2, 1, "", "_type"], [198, 4, 1, "id16", "as_polygon"], [198, 4, 1, "id15", "get_area"]], "datumaro.components.annotation.RleMask": [[198, 4, 1, "", "get_area"], [198, 4, 1, "", "get_bbox"], [198, 6, 1, "", "image"], [198, 6, 1, "", "rle"]], "datumaro.components.annotation.RotatedBbox": [[198, 4, 1, "", "__init__"], [198, 2, 1, "", "_type"], [198, 4, 1, "id35", "as_polygon"], [198, 6, 1, "id27", "cx"], [198, 6, 1, "id28", "cy"], [198, 4, 1, "id26", "from_rectangle"], [198, 4, 1, "id32", "get_area"], [198, 4, 1, "id33", "get_bbox"], [198, 4, 1, "id34", "get_rotated_bbox"], [198, 6, 1, "id30", "h"], [198, 4, 1, "id36", "iou"], [198, 6, 1, "id31", "r"], [198, 6, 1, "id29", "w"], [198, 4, 1, "id37", "wrap"]], "datumaro.components.annotation.Shape": [[198, 4, 1, "id6", "as_polygon"], [198, 4, 1, "id5", "get_area"], [198, 4, 1, "id7", "get_bbox"], [198, 4, 1, "id8", "get_points"], [198, 2, 1, "id3", "label"], [198, 2, 1, "id2", "points"], [198, 2, 1, "id4", "z_order"]], "datumaro.components.annotation.Tabular": [[198, 2, 1, "", "values"]], "datumaro.components.annotation.TabularCategories": [[198, 1, 1, "", "Category"], [198, 4, 1, "", "add"], [198, 4, 1, "", "find"], [198, 4, 1, "", "from_iterable"], [198, 2, 1, "", "items"]], "datumaro.components.annotation.TabularCategories.Category": [[198, 2, 1, "", "dtype"], [198, 2, 1, "", "labels"], [198, 2, 1, "", "name"]], "datumaro.components.annotations": [[200, 0, 0, "-", "matcher"], [201, 0, 0, "-", "merger"]], "datumaro.components.annotations.matcher": [[200, 1, 1, "", "Annotation"], [200, 1, 1, "", "AnnotationMatcher"], [200, 1, 1, "", "BboxMatcher"], [200, 1, 1, "", "CaptionsMatcher"], [200, 1, 1, "", "Cuboid3dMatcher"], [200, 1, 1, "", "FeatureVectorMatcher"], [200, 1, 1, "", "HashKeyMatcher"], [200, 1, 1, "", "IMatcherContext"], [200, 1, 1, "", "IMergerContext"], [200, 1, 1, "", "ImageAnnotationMatcher"], [200, 1, 1, "", "LabelMatcher"], [200, 1, 1, "", "LineMatcher"], [200, 1, 1, "", "MaskMatcher"], [200, 3, 1, "", "OKS"], [200, 1, 1, "", "Points"], [200, 1, 1, "", "PointsMatcher"], [200, 1, 1, "", "PolygonMatcher"], [200, 1, 1, "", "RotatedBboxMatcher"], [200, 1, 1, "", "ShapeMatcher"], [200, 1, 1, "", "TabularMatcher"], [200, 3, 1, "", "approximate_line"], [200, 3, 1, "", "attrib"], [200, 3, 1, "", "attrs"], [200, 3, 1, "", "bbox_iou"], [200, 3, 1, "", "match_segments_more_than_pair"], [200, 3, 1, "", "match_segments_pair"], [200, 3, 1, "", "max_bbox"], [200, 3, 1, "", "mean_bbox"], [200, 3, 1, "", "segment_iou"]], "datumaro.components.annotations.matcher.Annotation": [[200, 4, 1, "", "as_dict"], [200, 2, 1, "", "attributes"], [200, 2, 1, "", "group"], [200, 2, 1, "", "id"], [200, 2, 1, "", "object_id"], [200, 6, 1, "", "type"], [200, 4, 1, "", "wrap"]], "datumaro.components.annotations.matcher.AnnotationMatcher": [[200, 4, 1, "", "match_annotations"]], "datumaro.components.annotations.matcher.CaptionsMatcher": [[200, 4, 1, "", "match_annotations"]], "datumaro.components.annotations.matcher.Cuboid3dMatcher": [[200, 4, 1, "", "distance"]], "datumaro.components.annotations.matcher.FeatureVectorMatcher": [[200, 4, 1, "", "match_annotations"]], "datumaro.components.annotations.matcher.HashKeyMatcher": [[200, 4, 1, "", "match_annotations"]], "datumaro.components.annotations.matcher.IMatcherContext": [[200, 4, 1, "", "get_any_label_name"]], "datumaro.components.annotations.matcher.IMergerContext": [[200, 4, 1, "", "merge"], [200, 4, 1, "", "merge_categories"], [200, 4, 1, "", "merge_infos"], [200, 4, 1, "", "merge_media_types"]], "datumaro.components.annotations.matcher.ImageAnnotationMatcher": [[200, 4, 1, "", "match_annotations"]], "datumaro.components.annotations.matcher.LabelMatcher": [[200, 4, 1, "", "distance"], [200, 4, 1, "", "match_annotations"]], "datumaro.components.annotations.matcher.LineMatcher": [[200, 4, 1, "", "distance"]], "datumaro.components.annotations.matcher.Points": [[200, 1, 1, "", "Visibility"], [200, 4, 1, "", "__attrs_post_init__"], [200, 2, 1, "", "_type"], [200, 4, 1, "id4", "get_area"], [200, 4, 1, "id5", "get_bbox"], [200, 2, 1, "id3", "visibility"]], "datumaro.components.annotations.matcher.Points.Visibility": [[200, 2, 1, "id0", "absent"], [200, 2, 1, "id1", "hidden"], [200, 2, 1, "id2", "visible"]], "datumaro.components.annotations.matcher.PointsMatcher": [[200, 4, 1, "", "distance"], [200, 2, 1, "", "sigma"]], "datumaro.components.annotations.matcher.RotatedBboxMatcher": [[200, 4, 1, "", "distance"], [200, 2, 1, "", "sigma"]], "datumaro.components.annotations.matcher.ShapeMatcher": [[200, 4, 1, "", "distance"], [200, 4, 1, "", "label_matcher"], [200, 4, 1, "", "match_annotations"]], "datumaro.components.annotations.matcher.TabularMatcher": [[200, 4, 1, "", "match_annotations"]], "datumaro.components.annotations.merger": [[201, 1, 1, "", "AnnotationMatcher"], [201, 1, 1, "", "AnnotationMerger"], [201, 1, 1, "", "Bbox"], [201, 1, 1, "", "BboxMatcher"], [201, 1, 1, "", "BboxMerger"], [201, 1, 1, "", "CaptionsMatcher"], [201, 1, 1, "", "CaptionsMerger"], [201, 1, 1, "", "Cuboid3dMatcher"], [201, 1, 1, "", "Cuboid3dMerger"], [201, 1, 1, "", "EllipseMerger"], [201, 5, 1, "", "FailedLabelVotingError"], [201, 1, 1, "", "FeatureVectorMatcher"], [201, 1, 1, "", "FeatureVectorMerger"], [201, 1, 1, "", "HashKeyMatcher"], [201, 1, 1, "", "HashKeyMerger"], [201, 1, 1, "", "ImageAnnotationMatcher"], [201, 1, 1, "", "ImageAnnotationMerger"], [201, 1, 1, "", "Label"], [201, 1, 1, "", "LabelMatcher"], [201, 1, 1, "", "LabelMerger"], [201, 1, 1, "", "LineMatcher"], [201, 1, 1, "", "LineMerger"], [201, 1, 1, "", "MaskMatcher"], [201, 1, 1, "", "MaskMerger"], [201, 1, 1, "", "PointsMatcher"], [201, 1, 1, "", "PointsMerger"], [201, 1, 1, "", "PolygonMatcher"], [201, 1, 1, "", "PolygonMerger"], [201, 1, 1, "", "RotatedBboxMatcher"], [201, 1, 1, "", "RotatedBboxMerger"], [201, 1, 1, "", "ShapeMatcher"], [201, 1, 1, "", "TabularMatcher"], [201, 1, 1, "", "TabularMerger"], [201, 3, 1, "", "attrib"], [201, 3, 1, "", "attrs"], [201, 3, 1, "", "mean_bbox"], [201, 3, 1, "", "segment_iou"]], "datumaro.components.annotations.merger.AnnotationMatcher": [[201, 4, 1, "", "match_annotations"]], "datumaro.components.annotations.merger.AnnotationMerger": [[201, 4, 1, "", "merge_clusters"]], "datumaro.components.annotations.merger.Bbox": [[201, 4, 1, "", "__init__"], [201, 2, 1, "", "_type"], [201, 4, 1, "id6", "as_polygon"], [201, 4, 1, "id4", "get_area"], [201, 4, 1, "id5", "get_bbox"], [201, 6, 1, "id3", "h"], [201, 4, 1, "id7", "iou"], [201, 6, 1, "id2", "w"], [201, 4, 1, "id8", "wrap"], [201, 6, 1, "id0", "x"], [201, 6, 1, "id1", "y"]], "datumaro.components.annotations.merger.CaptionsMatcher": [[201, 4, 1, "", "match_annotations"]], "datumaro.components.annotations.merger.Cuboid3dMatcher": [[201, 4, 1, "", "distance"]], "datumaro.components.annotations.merger.Cuboid3dMerger": [[201, 4, 1, "", "merge_cluster"]], "datumaro.components.annotations.merger.FailedLabelVotingError": [[201, 2, 1, "", "ann"], [201, 2, 1, "", "item_id"], [201, 2, 1, "", "votes"]], "datumaro.components.annotations.merger.FeatureVectorMatcher": [[201, 4, 1, "", "match_annotations"]], "datumaro.components.annotations.merger.HashKeyMatcher": [[201, 4, 1, "", "match_annotations"]], "datumaro.components.annotations.merger.ImageAnnotationMatcher": [[201, 4, 1, "", "match_annotations"]], "datumaro.components.annotations.merger.Label": [[201, 2, 1, "", "label"]], "datumaro.components.annotations.merger.LabelMatcher": [[201, 4, 1, "", "distance"], [201, 4, 1, "", "match_annotations"]], "datumaro.components.annotations.merger.LabelMerger": [[201, 4, 1, "", "merge_clusters"]], "datumaro.components.annotations.merger.LineMatcher": [[201, 4, 1, "", "distance"]], "datumaro.components.annotations.merger.PointsMatcher": [[201, 4, 1, "", "distance"], [201, 2, 1, "", "sigma"]], "datumaro.components.annotations.merger.RotatedBboxMatcher": [[201, 4, 1, "", "distance"], [201, 2, 1, "", "sigma"]], "datumaro.components.annotations.merger.ShapeMatcher": [[201, 4, 1, "", "distance"], [201, 4, 1, "", "label_matcher"], [201, 4, 1, "", "match_annotations"]], "datumaro.components.annotations.merger.TabularMatcher": [[201, 4, 1, "", "match_annotations"]], "datumaro.components.cli_plugin": [[202, 1, 1, "", "CliPlugin"], [202, 3, 1, "", "plugin_types"], [202, 3, 1, "", "remove_plugin_type"]], "datumaro.components.cli_plugin.CliPlugin": [[202, 2, 1, "", "NAME"], [202, 4, 1, "", "build_cmdline_parser"], [202, 4, 1, "", "parse_cmdline"]], "datumaro.components.comparator": [[203, 1, 1, "", "DistanceComparator"], [203, 1, 1, "", "EqualityComparator"], [203, 1, 1, "", "TableComparator"]], "datumaro.components.comparator.DistanceComparator": [[203, 4, 1, "", "match_annotations"], [203, 4, 1, "", "match_boxes"], [203, 4, 1, "", "match_labels"], [203, 4, 1, "", "match_lines"], [203, 4, 1, "", "match_masks"], [203, 4, 1, "", "match_points"], [203, 4, 1, "", "match_polygons"]], "datumaro.components.comparator.EqualityComparator": [[203, 4, 1, "", "compare_datasets"], [203, 2, 1, "", "errors"], [203, 2, 1, "", "match_images"], [203, 4, 1, "", "save_compare_report"]], "datumaro.components.comparator.TableComparator": [[203, 4, 1, "", "compare_datasets"], [203, 4, 1, "", "save_compare_report"]], "datumaro.components.config": [[204, 1, 1, "", "Config"], [204, 1, 1, "", "DictConfig"], [204, 1, 1, "", "Schema"], [204, 1, 1, "", "SchemaBuilder"]], "datumaro.components.config.Config": [[204, 4, 1, "", "dump"], [204, 4, 1, "", "get"], [204, 4, 1, "", "items"], [204, 4, 1, "", "keys"], [204, 4, 1, "", "parse"], [204, 4, 1, "", "remove"], [204, 4, 1, "", "set"], [204, 4, 1, "", "update"], [204, 4, 1, "", "values"], [204, 4, 1, "", "yaml_representer"]], "datumaro.components.config.DictConfig": [[204, 4, 1, "", "set"]], "datumaro.components.config.Schema": [[204, 1, 1, "", "Item"], [204, 4, 1, "", "get"], [204, 4, 1, "", "items"], [204, 4, 1, "", "keys"], [204, 4, 1, "", "values"]], "datumaro.components.config.SchemaBuilder": [[204, 4, 1, "", "add"], [204, 4, 1, "", "build"]], "datumaro.components.config_model": [[205, 1, 1, "", "BuildStage"], [205, 1, 1, "", "BuildTarget"], [205, 1, 1, "", "Model"], [205, 1, 1, "", "PipelineConfig"], [205, 1, 1, "", "ProjectConfig"], [205, 1, 1, "", "ProjectLayout"], [205, 1, 1, "", "Source"], [205, 1, 1, "", "TreeConfig"], [205, 1, 1, "", "TreeLayout"]], "datumaro.components.config_model.BuildTarget": [[205, 4, 1, "", "find_stage"], [205, 4, 1, "", "get_stage"], [205, 6, 1, "", "has_stages"], [205, 6, 1, "", "head"], [205, 6, 1, "", "root"]], "datumaro.components.config_model.ProjectLayout": [[205, 2, 1, "", "aux_dir"], [205, 2, 1, "", "cache_dir"], [205, 2, 1, "", "conf_file"], [205, 2, 1, "", "head_file"], [205, 2, 1, "", "index_dir"], [205, 2, 1, "", "models_dir"], [205, 2, 1, "", "plugins_dir"], [205, 2, 1, "", "tmp_dir"], [205, 2, 1, "", "working_tree_dir"]], "datumaro.components.config_model.Source": [[205, 6, 1, "", "is_generated"]], "datumaro.components.config_model.TreeLayout": [[205, 2, 1, "", "conf_file"], [205, 2, 1, "", "sources_dir"]], "datumaro.components.contexts": [[207, 0, 0, "-", "importer"]], "datumaro.components.contexts.importer": [[207, 1, 1, "", "FailingImportErrorPolicy"], [207, 1, 1, "", "ImportContext"], [207, 1, 1, "", "ImportErrorPolicy"], [207, 1, 1, "", "NullImportContext"]], "datumaro.components.contexts.importer.ImportContext": [[207, 2, 1, "", "error_policy"], [207, 2, 1, "", "progress_reporter"]], "datumaro.components.contexts.importer.ImportErrorPolicy": [[207, 4, 1, "", "fail"], [207, 4, 1, "", "report_annotation_error"], [207, 4, 1, "", "report_item_error"]], "datumaro.components.contexts.importer.NullImportContext": [[207, 2, 1, "", "error_policy"], [207, 2, 1, "", "progress_reporter"]], "datumaro.components.crypter": [[208, 1, 1, "", "Crypter"], [208, 1, 1, "", "NullCrypter"]], "datumaro.components.crypter.Crypter": [[208, 2, 1, "", "FERNET_KEY_LEN"], [208, 2, 1, "", "KEY_PREFIX"], [208, 2, 1, "", "KEY_PREFIX_LEN"], [208, 4, 1, "", "decrypt"], [208, 4, 1, "", "encrypt"], [208, 4, 1, "", "gen_key"], [208, 4, 1, "", "handshake"], [208, 6, 1, "", "is_null_crypter"], [208, 6, 1, "", "key"]], "datumaro.components.crypter.NullCrypter": [[208, 4, 1, "", "decrypt"], [208, 4, 1, "", "encrypt"], [208, 4, 1, "", "handshake"], [208, 6, 1, "", "key"]], "datumaro.components.dataset": [[209, 1, 1, "", "Annotation"], [209, 1, 1, "", "AnnotationType"], [209, 1, 1, "", "Dataset"], [209, 1, 1, "", "DatasetBase"], [209, 5, 1, "", "DatasetImportError"], [209, 1, 1, "", "DatasetItem"], [209, 1, 1, "", "DatasetItemStorageDatasetView"], [209, 1, 1, "", "DatasetPatch"], [209, 1, 1, "", "DatasetStorage"], [209, 1, 1, "", "DatasetSubset"], [209, 5, 1, "", "DatumaroError"], [209, 1, 1, "", "Environment"], [209, 1, 1, "", "ExportContext"], [209, 1, 1, "", "ExportErrorPolicy"], [209, 1, 1, "", "Exporter"], [209, 1, 1, "", "IDataset"], [209, 1, 1, "", "Image"], [209, 1, 1, "", "ImportContext"], [209, 1, 1, "", "ImportErrorPolicy"], [209, 1, 1, "", "ItemTransform"], [209, 1, 1, "", "LabelCategories"], [209, 1, 1, "", "Launcher"], [209, 1, 1, "", "MediaElement"], [209, 1, 1, "", "ModelTransform"], [209, 5, 1, "", "MultipleFormatsMatchError"], [209, 5, 1, "", "NoMatchingFormatsError"], [209, 1, 1, "", "NullProgressReporter"], [209, 1, 1, "", "ProgressReporter"], [209, 1, 1, "", "Source"], [209, 1, 1, "", "StreamDataset"], [209, 1, 1, "", "StreamDatasetStorage"], [209, 5, 1, "", "StreamedItemError"], [209, 1, 1, "", "TabularCategories"], [209, 1, 1, "", "Transform"], [209, 5, 1, "", "UnknownFormatError"], [209, 1, 1, "", "UserFunctionAnnotationsFilter"], [209, 1, 1, "", "UserFunctionDatasetFilter"], [209, 1, 1, "", "XPathAnnotationsFilter"], [209, 1, 1, "", "XPathDatasetFilter"], [209, 3, 1, "", "contextmanager"], [209, 3, 1, "", "copy"], [209, 3, 1, "", "deepcopy"], [209, 3, 1, "", "eager_mode"], [209, 3, 1, "", "load_hash_key"], [209, 3, 1, "", "logging_disabled"], [209, 3, 1, "", "on_error_do"], [209, 3, 1, "", "overload"], [209, 3, 1, "", "rmtree"], [209, 3, 1, "", "scoped"]], "datumaro.components.dataset.Annotation": [[209, 4, 1, "", "as_dict"], [209, 2, 1, "", "attributes"], [209, 2, 1, "", "group"], [209, 2, 1, "", "id"], [209, 2, 1, "", "object_id"], [209, 6, 1, "", "type"], [209, 4, 1, "", "wrap"]], "datumaro.components.dataset.AnnotationType": [[209, 2, 1, "", "bbox"], [209, 2, 1, "", "caption"], [209, 2, 1, "", "cuboid_3d"], [209, 2, 1, "", "depth_annotation"], [209, 2, 1, "", "ellipse"], [209, 2, 1, "", "feature_vector"], [209, 2, 1, "", "hash_key"], [209, 2, 1, "", "label"], [209, 2, 1, "", "mask"], [209, 2, 1, "", "points"], [209, 2, 1, "", "polygon"], [209, 2, 1, "", "polyline"], [209, 2, 1, "", "rotated_bbox"], [209, 2, 1, "", "super_resolution_annotation"], [209, 2, 1, "", "tabular"], [209, 2, 1, "", "unknown"]], "datumaro.components.dataset.Dataset": [[209, 4, 1, "", "ann_types"], [209, 4, 1, "", "bind"], [209, 4, 1, "", "categories"], [209, 4, 1, "", "clone"], [209, 6, 1, "", "data_path"], [209, 4, 1, "", "define_categories"], [209, 4, 1, "", "define_infos"], [209, 4, 1, "", "detect"], [209, 6, 1, "", "env"], [209, 4, 1, "", "export"], [209, 4, 1, "", "filter"], [209, 4, 1, "", "flush_changes"], [209, 6, 1, "", "format"], [209, 4, 1, "", "from_extractors"], [209, 4, 1, "", "from_iterable"], [209, 4, 1, "", "get"], [209, 4, 1, "", "get_annotated_items"], [209, 4, 1, "", "get_annotations"], [209, 4, 1, "", "get_categories_info"], [209, 4, 1, "", "get_datasetitem_by_path"], [209, 4, 1, "", "get_infos"], [209, 4, 1, "", "get_label_cat_names"], [209, 4, 1, "", "get_patch"], [209, 4, 1, "", "get_subset"], [209, 4, 1, "", "get_subset_info"], [209, 4, 1, "", "import_from"], [209, 4, 1, "", "infos"], [209, 4, 1, "", "init_cache"], [209, 6, 1, "", "is_bound"], [209, 6, 1, "", "is_cache_initialized"], [209, 6, 1, "", "is_eager"], [209, 6, 1, "", "is_modified"], [209, 6, 1, "", "is_stream"], [209, 4, 1, "", "load"], [209, 4, 1, "", "media_type"], [209, 6, 1, "", "options"], [209, 4, 1, "", "put"], [209, 4, 1, "", "remove"], [209, 4, 1, "", "run_model"], [209, 4, 1, "", "save"], [209, 4, 1, "", "select"], [209, 4, 1, "", "subsets"], [209, 4, 1, "", "transform"], [209, 4, 1, "", "update"]], "datumaro.components.dataset.DatasetBase": [[209, 4, 1, "", "ann_types"], [209, 4, 1, "", "media_type"]], "datumaro.components.dataset.DatasetItem": [[209, 2, 1, "", "annotations"], [209, 2, 1, "", "attributes"], [209, 2, 1, "", "id"], [209, 2, 1, "", "media"], [209, 4, 1, "", "media_as"], [209, 2, 1, "", "subset"], [209, 4, 1, "", "wrap"]], "datumaro.components.dataset.DatasetItemStorageDatasetView": [[209, 1, 1, "", "Subset"], [209, 4, 1, "", "ann_types"], [209, 4, 1, "", "categories"], [209, 4, 1, "", "get"], [209, 4, 1, "", "get_subset"], [209, 4, 1, "", "infos"], [209, 4, 1, "", "media_type"], [209, 4, 1, "", "subsets"]], "datumaro.components.dataset.DatasetItemStorageDatasetView.Subset": [[209, 4, 1, "", "ann_types"], [209, 4, 1, "", "categories"], [209, 4, 1, "", "get"], [209, 4, 1, "", "get_subset"], [209, 4, 1, "", "infos"], [209, 4, 1, "", "media_type"], [209, 4, 1, "", "put"], [209, 4, 1, "", "remove"], [209, 4, 1, "", "subsets"]], "datumaro.components.dataset.DatasetPatch": [[209, 1, 1, "", "DatasetPatchWrapper"], [209, 4, 1, "", "as_dataset"], [209, 6, 1, "", "updated_subsets"]], "datumaro.components.dataset.DatasetPatch.DatasetPatchWrapper": [[209, 4, 1, "", "subsets"]], "datumaro.components.dataset.DatasetStorage": [[209, 4, 1, "", "ann_types"], [209, 4, 1, "", "categories"], [209, 4, 1, "", "define_categories"], [209, 4, 1, "", "define_infos"], [209, 4, 1, "", "flush_changes"], [209, 4, 1, "", "get"], [209, 4, 1, "", "get_annotated_items"], [209, 4, 1, "", "get_annotations"], [209, 4, 1, "", "get_datasetitem_by_path"], [209, 4, 1, "", "get_patch"], [209, 4, 1, "", "get_subset"], [209, 4, 1, "", "has_updated_items"], [209, 4, 1, "", "infos"], [209, 4, 1, "", "init_cache"], [209, 4, 1, "", "is_cache_initialized"], [209, 4, 1, "", "media_type"], [209, 4, 1, "", "put"], [209, 4, 1, "", "remove"], [209, 4, 1, "", "subsets"], [209, 4, 1, "", "transform"], [209, 4, 1, "", "update"]], "datumaro.components.dataset.DatasetSubset": [[209, 4, 1, "", "ann_types"], [209, 4, 1, "", "as_dataset"], [209, 4, 1, "", "categories"], [209, 4, 1, "", "get"], [209, 4, 1, "", "get_annotated_items"], [209, 4, 1, "", "get_annotations"], [209, 4, 1, "", "get_subset"], [209, 4, 1, "", "infos"], [209, 4, 1, "", "media_type"], [209, 4, 1, "", "put"], [209, 4, 1, "", "remove"], [209, 4, 1, "", "subsets"]], "datumaro.components.dataset.Environment": [[209, 4, 1, "", "detect_dataset"], [209, 6, 1, "", "exporters"], [209, 6, 1, "", "extractors"], [209, 6, 1, "", "generators"], [209, 6, 1, "", "importers"], [209, 4, 1, "", "is_format_known"], [209, 6, 1, "", "launchers"], [209, 4, 1, "", "load_plugins"], [209, 4, 1, "", "make_exporter"], [209, 4, 1, "", "make_extractor"], [209, 4, 1, "", "make_importer"], [209, 4, 1, "", "make_launcher"], [209, 4, 1, "", "make_transform"], [209, 4, 1, "", "merge"], [209, 4, 1, "", "register_plugins"], [209, 4, 1, "", "release_builtin_plugins"], [209, 6, 1, "", "transforms"], [209, 6, 1, "", "validators"]], "datumaro.components.dataset.ExportContext": [[209, 2, 1, "", "error_policy"], [209, 2, 1, "", "progress_reporter"]], "datumaro.components.dataset.ExportErrorPolicy": [[209, 4, 1, "", "fail"], [209, 4, 1, "", "report_annotation_error"], [209, 4, 1, "", "report_item_error"]], "datumaro.components.dataset.Exporter": [[209, 2, 1, "", "DEFAULT_IMAGE_EXT"], [209, 4, 1, "", "apply"], [209, 4, 1, "", "build_cmdline_parser"], [209, 6, 1, "", "can_stream"], [209, 4, 1, "", "convert"], [209, 4, 1, "", "patch"]], "datumaro.components.dataset.IDataset": [[209, 4, 1, "", "ann_types"], [209, 4, 1, "", "categories"], [209, 4, 1, "", "get"], [209, 4, 1, "", "get_subset"], [209, 4, 1, "", "infos"], [209, 6, 1, "", "is_stream"], [209, 4, 1, "", "media_type"], [209, 4, 1, "", "subsets"]], "datumaro.components.dataset.Image": [[209, 6, 1, "", "ext"], [209, 4, 1, "", "from_bytes"], [209, 4, 1, "", "from_file"], [209, 4, 1, "", "from_numpy"], [209, 6, 1, "", "has_size"], [209, 4, 1, "", "set_crypter"], [209, 6, 1, "", "size"]], "datumaro.components.dataset.ImportContext": [[209, 2, 1, "", "error_policy"], [209, 2, 1, "", "progress_reporter"]], "datumaro.components.dataset.ImportErrorPolicy": [[209, 4, 1, "", "fail"], [209, 4, 1, "", "report_annotation_error"], [209, 4, 1, "", "report_item_error"]], "datumaro.components.dataset.ItemTransform": [[209, 4, 1, "", "transform_item"]], "datumaro.components.dataset.LabelCategories": [[209, 1, 1, "", "Category"], [209, 1, 1, "", "LabelGroup"], [209, 4, 1, "", "add"], [209, 4, 1, "", "add_label_group"], [209, 4, 1, "", "find"], [209, 4, 1, "", "from_iterable"], [209, 2, 1, "", "items"], [209, 2, 1, "", "label_groups"]], "datumaro.components.dataset.LabelCategories.Category": [[209, 2, 1, "", "attributes"], [209, 2, 1, "", "name"], [209, 2, 1, "", "parent"]], "datumaro.components.dataset.LabelCategories.LabelGroup": [[209, 2, 1, "", "group_type"], [209, 2, 1, "", "labels"], [209, 2, 1, "", "name"]], "datumaro.components.dataset.Launcher": [[209, 4, 1, "", "categories"], [209, 4, 1, "", "infer"], [209, 4, 1, "", "infos"], [209, 4, 1, "", "launch"], [209, 4, 1, "", "postprocess"], [209, 4, 1, "", "preprocess"], [209, 4, 1, "", "type_check"]], "datumaro.components.dataset.MediaElement": [[209, 4, 1, "", "as_dict"], [209, 6, 1, "", "bytes"], [209, 6, 1, "", "data"], [209, 4, 1, "", "from_self"], [209, 6, 1, "", "has_data"], [209, 6, 1, "", "is_encrypted"], [209, 4, 1, "", "save"], [209, 4, 1, "", "set_crypter"], [209, 6, 1, "", "type"]], "datumaro.components.dataset.ModelTransform": [[209, 4, 1, "", "categories"], [209, 4, 1, "", "get_subset"], [209, 4, 1, "", "infos"], [209, 4, 1, "", "transform_item"]], "datumaro.components.dataset.MultipleFormatsMatchError": [[209, 2, 1, "", "formats"]], "datumaro.components.dataset.NullProgressReporter": [[209, 6, 1, "", "interval"], [209, 4, 1, "", "iter"], [209, 6, 1, "", "period"], [209, 4, 1, "", "report_status"], [209, 4, 1, "", "split"], [209, 4, 1, "", "start"]], "datumaro.components.dataset.ProgressReporter": [[209, 4, 1, "", "finish"], [209, 6, 1, "", "interval"], [209, 4, 1, "", "iter"], [209, 6, 1, "", "period"], [209, 4, 1, "", "report_status"], [209, 4, 1, "", "split"], [209, 4, 1, "", "start"]], "datumaro.components.dataset.Source": [[209, 6, 1, "", "is_generated"]], "datumaro.components.dataset.StreamDataset": [[209, 4, 1, "", "from_extractors"], [209, 6, 1, "", "is_eager"]], "datumaro.components.dataset.StreamDatasetStorage": [[209, 4, 1, "", "categories"], [209, 4, 1, "", "flush_changes"], [209, 4, 1, "", "get"], [209, 4, 1, "", "get_annotated_items"], [209, 4, 1, "", "get_annotations"], [209, 4, 1, "", "get_datasetitem_by_path"], [209, 4, 1, "", "get_patch"], [209, 4, 1, "", "get_subset"], [209, 4, 1, "", "infos"], [209, 4, 1, "", "init_cache"], [209, 4, 1, "", "is_cache_initialized"], [209, 6, 1, "", "is_stream"], [209, 4, 1, "", "put"], [209, 4, 1, "", "remove"], [209, 6, 1, "", "stacked_transform"], [209, 6, 1, "", "subset_names"], [209, 4, 1, "", "subsets"], [209, 4, 1, "", "transform"], [209, 4, 1, "", "update"]], "datumaro.components.dataset.TabularCategories": [[209, 1, 1, "", "Category"], [209, 4, 1, "", "add"], [209, 4, 1, "", "find"], [209, 4, 1, "", "from_iterable"], [209, 2, 1, "", "items"]], "datumaro.components.dataset.TabularCategories.Category": [[209, 2, 1, "", "dtype"], [209, 2, 1, "", "labels"], [209, 2, 1, "", "name"]], "datumaro.components.dataset.Transform": [[209, 4, 1, "", "categories"], [209, 4, 1, "", "infos"], [209, 4, 1, "", "media_type"], [209, 4, 1, "", "subsets"], [209, 4, 1, "", "wrap_item"]], "datumaro.components.dataset.UnknownFormatError": [[209, 2, 1, "", "format"]], "datumaro.components.dataset.UserFunctionAnnotationsFilter": [[209, 4, 1, "", "transform_item"]], "datumaro.components.dataset.UserFunctionDatasetFilter": [[209, 4, 1, "", "transform_item"]], "datumaro.components.dataset.XPathAnnotationsFilter": [[209, 4, 1, "", "transform_item"]], "datumaro.components.dataset.XPathDatasetFilter": [[209, 4, 1, "", "transform_item"]], "datumaro.components.dataset_base": [[210, 1, 1, "", "DatasetBase"], [210, 1, 1, "", "DatasetItem"], [210, 1, 1, "", "IDataset"], [210, 1, 1, "", "SubsetBase"]], "datumaro.components.dataset_base.DatasetBase": [[210, 4, 1, "", "ann_types"], [210, 4, 1, "", "media_type"]], "datumaro.components.dataset_base.DatasetItem": [[210, 2, 1, "", "annotations"], [210, 2, 1, "", "attributes"], [210, 2, 1, "", "id"], [210, 2, 1, "", "media"], [210, 4, 1, "", "media_as"], [210, 2, 1, "", "subset"], [210, 4, 1, "", "wrap"]], "datumaro.components.dataset_base.IDataset": [[210, 4, 1, "", "ann_types"], [210, 4, 1, "", "categories"], [210, 4, 1, "", "get"], [210, 4, 1, "", "get_subset"], [210, 4, 1, "", "infos"], [210, 6, 1, "", "is_stream"], [210, 4, 1, "", "media_type"], [210, 4, 1, "", "subsets"]], "datumaro.components.dataset_base.SubsetBase": [[210, 4, 1, "", "categories"], [210, 4, 1, "", "get"], [210, 4, 1, "", "infos"], [210, 6, 1, "", "subset"]], "datumaro.components.dataset_item_storage": [[211, 1, 1, "", "AnnotationType"], [211, 1, 1, "", "DatasetItem"], [211, 1, 1, "", "DatasetItemStorage"], [211, 1, 1, "", "DatasetItemStorageDatasetView"], [211, 1, 1, "", "Enum"], [211, 1, 1, "", "IDataset"], [211, 1, 1, "", "ItemStatus"], [211, 1, 1, "", "MediaElement"], [211, 1, 1, "", "auto"], [211, 3, 1, "", "copy"]], "datumaro.components.dataset_item_storage.AnnotationType": [[211, 2, 1, "", "bbox"], [211, 2, 1, "", "caption"], [211, 2, 1, "", "cuboid_3d"], [211, 2, 1, "", "depth_annotation"], [211, 2, 1, "", "ellipse"], [211, 2, 1, "", "feature_vector"], [211, 2, 1, "", "hash_key"], [211, 2, 1, "", "label"], [211, 2, 1, "", "mask"], [211, 2, 1, "", "points"], [211, 2, 1, "", "polygon"], [211, 2, 1, "", "polyline"], [211, 2, 1, "", "rotated_bbox"], [211, 2, 1, "", "super_resolution_annotation"], [211, 2, 1, "", "tabular"], [211, 2, 1, "", "unknown"]], "datumaro.components.dataset_item_storage.DatasetItem": [[211, 2, 1, "", "annotations"], [211, 2, 1, "", "attributes"], [211, 2, 1, "", "id"], [211, 2, 1, "", "media"], [211, 4, 1, "", "media_as"], [211, 2, 1, "", "subset"], [211, 4, 1, "", "wrap"]], "datumaro.components.dataset_item_storage.DatasetItemStorage": [[211, 4, 1, "", "get"], [211, 4, 1, "", "get_annotated_items"], [211, 4, 1, "", "get_annotations"], [211, 4, 1, "", "get_datasetitem_by_path"], [211, 4, 1, "", "get_subset"], [211, 4, 1, "", "is_empty"], [211, 4, 1, "", "put"], [211, 4, 1, "", "remove"], [211, 4, 1, "", "subsets"]], "datumaro.components.dataset_item_storage.DatasetItemStorageDatasetView": [[211, 1, 1, "", "Subset"], [211, 4, 1, "", "ann_types"], [211, 4, 1, "", "categories"], [211, 4, 1, "", "get"], [211, 4, 1, "", "get_subset"], [211, 4, 1, "", "infos"], [211, 4, 1, "", "media_type"], [211, 4, 1, "", "subsets"]], "datumaro.components.dataset_item_storage.DatasetItemStorageDatasetView.Subset": [[211, 4, 1, "", "ann_types"], [211, 4, 1, "", "categories"], [211, 4, 1, "", "get"], [211, 4, 1, "", "get_subset"], [211, 4, 1, "", "infos"], [211, 4, 1, "", "media_type"], [211, 4, 1, "", "put"], [211, 4, 1, "", "remove"], [211, 4, 1, "", "subsets"]], "datumaro.components.dataset_item_storage.Enum": [[211, 2, 1, "", "name"], [211, 2, 1, "", "value"]], "datumaro.components.dataset_item_storage.IDataset": [[211, 4, 1, "", "ann_types"], [211, 4, 1, "", "categories"], [211, 4, 1, "", "get"], [211, 4, 1, "", "get_subset"], [211, 4, 1, "", "infos"], [211, 6, 1, "", "is_stream"], [211, 4, 1, "", "media_type"], [211, 4, 1, "", "subsets"]], "datumaro.components.dataset_item_storage.ItemStatus": [[211, 2, 1, "", "added"], [211, 2, 1, "", "modified"], [211, 2, 1, "", "removed"]], "datumaro.components.dataset_item_storage.MediaElement": [[211, 4, 1, "", "as_dict"], [211, 6, 1, "", "bytes"], [211, 6, 1, "", "data"], [211, 4, 1, "", "from_self"], [211, 6, 1, "", "has_data"], [211, 6, 1, "", "is_encrypted"], [211, 4, 1, "", "save"], [211, 4, 1, "", "set_crypter"], [211, 6, 1, "", "type"]], "datumaro.components.dataset_item_storage.auto": [[211, 2, 1, "", "value"]], "datumaro.components.dataset_storage": [[212, 1, 1, "", "AnnotationType"], [212, 5, 1, "", "CategoriesRedefinedError"], [212, 5, 1, "", "ConflictingCategoriesError"], [212, 1, 1, "", "DatasetBase"], [212, 5, 1, "", "DatasetInfosRedefinedError"], [212, 1, 1, "", "DatasetItem"], [212, 1, 1, "", "DatasetItemStorage"], [212, 1, 1, "", "DatasetItemStorageDatasetView"], [212, 1, 1, "", "DatasetPatch"], [212, 1, 1, "", "DatasetStorage"], [212, 1, 1, "", "IDataset"], [212, 1, 1, "", "ItemStatus"], [212, 1, 1, "", "ItemTransform"], [212, 1, 1, "", "LabelCategories"], [212, 1, 1, "", "MediaElement"], [212, 5, 1, "", "MediaTypeError"], [212, 5, 1, "", "NotAvailableError"], [212, 5, 1, "", "RepeatedItemError"], [212, 1, 1, "", "StreamDatasetStorage"], [212, 1, 1, "", "StreamSubset"], [212, 1, 1, "", "Transform"], [212, 3, 1, "", "is_method_redefined"]], "datumaro.components.dataset_storage.AnnotationType": [[212, 2, 1, "", "bbox"], [212, 2, 1, "", "caption"], [212, 2, 1, "", "cuboid_3d"], [212, 2, 1, "", "depth_annotation"], [212, 2, 1, "", "ellipse"], [212, 2, 1, "", "feature_vector"], [212, 2, 1, "", "hash_key"], [212, 2, 1, "", "label"], [212, 2, 1, "", "mask"], [212, 2, 1, "", "points"], [212, 2, 1, "", "polygon"], [212, 2, 1, "", "polyline"], [212, 2, 1, "", "rotated_bbox"], [212, 2, 1, "", "super_resolution_annotation"], [212, 2, 1, "", "tabular"], [212, 2, 1, "", "unknown"]], "datumaro.components.dataset_storage.ConflictingCategoriesError": [[212, 2, 1, "", "sources"]], "datumaro.components.dataset_storage.DatasetBase": [[212, 4, 1, "", "ann_types"], [212, 4, 1, "", "media_type"]], "datumaro.components.dataset_storage.DatasetItem": [[212, 2, 1, "", "annotations"], [212, 2, 1, "", "attributes"], [212, 2, 1, "", "id"], [212, 2, 1, "", "media"], [212, 4, 1, "", "media_as"], [212, 2, 1, "", "subset"], [212, 4, 1, "", "wrap"]], "datumaro.components.dataset_storage.DatasetItemStorage": [[212, 4, 1, "", "get"], [212, 4, 1, "", "get_annotated_items"], [212, 4, 1, "", "get_annotations"], [212, 4, 1, "", "get_datasetitem_by_path"], [212, 4, 1, "", "get_subset"], [212, 4, 1, "", "is_empty"], [212, 4, 1, "", "put"], [212, 4, 1, "", "remove"], [212, 4, 1, "", "subsets"]], "datumaro.components.dataset_storage.DatasetItemStorageDatasetView": [[212, 1, 1, "", "Subset"], [212, 4, 1, "", "ann_types"], [212, 4, 1, "", "categories"], [212, 4, 1, "", "get"], [212, 4, 1, "", "get_subset"], [212, 4, 1, "", "infos"], [212, 4, 1, "", "media_type"], [212, 4, 1, "", "subsets"]], "datumaro.components.dataset_storage.DatasetItemStorageDatasetView.Subset": [[212, 4, 1, "", "ann_types"], [212, 4, 1, "", "categories"], [212, 4, 1, "", "get"], [212, 4, 1, "", "get_subset"], [212, 4, 1, "", "infos"], [212, 4, 1, "", "media_type"], [212, 4, 1, "", "put"], [212, 4, 1, "", "remove"], [212, 4, 1, "", "subsets"]], "datumaro.components.dataset_storage.DatasetPatch": [[212, 1, 1, "", "DatasetPatchWrapper"], [212, 4, 1, "", "as_dataset"], [212, 6, 1, "", "updated_subsets"]], "datumaro.components.dataset_storage.DatasetPatch.DatasetPatchWrapper": [[212, 4, 1, "", "subsets"]], "datumaro.components.dataset_storage.DatasetStorage": [[212, 4, 1, "", "ann_types"], [212, 4, 1, "", "categories"], [212, 4, 1, "", "define_categories"], [212, 4, 1, "", "define_infos"], [212, 4, 1, "", "flush_changes"], [212, 4, 1, "", "get"], [212, 4, 1, "", "get_annotated_items"], [212, 4, 1, "", "get_annotations"], [212, 4, 1, "", "get_datasetitem_by_path"], [212, 4, 1, "", "get_patch"], [212, 4, 1, "", "get_subset"], [212, 4, 1, "", "has_updated_items"], [212, 4, 1, "", "infos"], [212, 4, 1, "", "init_cache"], [212, 4, 1, "", "is_cache_initialized"], [212, 4, 1, "", "media_type"], [212, 4, 1, "", "put"], [212, 4, 1, "", "remove"], [212, 4, 1, "", "subsets"], [212, 4, 1, "", "transform"], [212, 4, 1, "", "update"]], "datumaro.components.dataset_storage.IDataset": [[212, 4, 1, "", "ann_types"], [212, 4, 1, "", "categories"], [212, 4, 1, "", "get"], [212, 4, 1, "", "get_subset"], [212, 4, 1, "", "infos"], [212, 6, 1, "", "is_stream"], [212, 4, 1, "", "media_type"], [212, 4, 1, "", "subsets"]], "datumaro.components.dataset_storage.ItemStatus": [[212, 2, 1, "", "added"], [212, 2, 1, "", "modified"], [212, 2, 1, "", "removed"]], "datumaro.components.dataset_storage.ItemTransform": [[212, 4, 1, "", "transform_item"]], "datumaro.components.dataset_storage.LabelCategories": [[212, 1, 1, "", "Category"], [212, 1, 1, "", "LabelGroup"], [212, 4, 1, "", "add"], [212, 4, 1, "", "add_label_group"], [212, 4, 1, "", "find"], [212, 4, 1, "", "from_iterable"], [212, 2, 1, "", "items"], [212, 2, 1, "", "label_groups"]], "datumaro.components.dataset_storage.LabelCategories.Category": [[212, 2, 1, "", "attributes"], [212, 2, 1, "", "name"], [212, 2, 1, "", "parent"]], "datumaro.components.dataset_storage.LabelCategories.LabelGroup": [[212, 2, 1, "", "group_type"], [212, 2, 1, "", "labels"], [212, 2, 1, "", "name"]], "datumaro.components.dataset_storage.MediaElement": [[212, 4, 1, "", "as_dict"], [212, 6, 1, "", "bytes"], [212, 6, 1, "", "data"], [212, 4, 1, "", "from_self"], [212, 6, 1, "", "has_data"], [212, 6, 1, "", "is_encrypted"], [212, 4, 1, "", "save"], [212, 4, 1, "", "set_crypter"], [212, 6, 1, "", "type"]], "datumaro.components.dataset_storage.RepeatedItemError": [[212, 2, 1, "", "item_id"]], "datumaro.components.dataset_storage.StreamDatasetStorage": [[212, 4, 1, "", "categories"], [212, 4, 1, "", "flush_changes"], [212, 4, 1, "", "get"], [212, 4, 1, "", "get_annotated_items"], [212, 4, 1, "", "get_annotations"], [212, 4, 1, "", "get_datasetitem_by_path"], [212, 4, 1, "", "get_patch"], [212, 4, 1, "", "get_subset"], [212, 4, 1, "", "infos"], [212, 4, 1, "", "init_cache"], [212, 4, 1, "", "is_cache_initialized"], [212, 6, 1, "", "is_stream"], [212, 4, 1, "", "put"], [212, 4, 1, "", "remove"], [212, 6, 1, "", "stacked_transform"], [212, 6, 1, "", "subset_names"], [212, 4, 1, "", "subsets"], [212, 4, 1, "", "transform"], [212, 4, 1, "", "update"]], "datumaro.components.dataset_storage.StreamSubset": [[212, 4, 1, "", "ann_types"], [212, 4, 1, "", "categories"], [212, 4, 1, "", "get"], [212, 4, 1, "", "get_subset"], [212, 4, 1, "", "infos"], [212, 6, 1, "", "is_stream"], [212, 4, 1, "", "media_type"], [212, 4, 1, "", "subsets"]], "datumaro.components.dataset_storage.Transform": [[212, 4, 1, "", "categories"], [212, 4, 1, "", "infos"], [212, 4, 1, "", "media_type"], [212, 4, 1, "", "subsets"], [212, 4, 1, "", "wrap_item"]], "datumaro.components.environment": [[213, 1, 1, "", "Environment"]], "datumaro.components.environment.Environment": [[213, 4, 1, "", "detect_dataset"], [213, 6, 1, "", "exporters"], [213, 6, 1, "", "extractors"], [213, 6, 1, "", "generators"], [213, 6, 1, "", "importers"], [213, 4, 1, "", "is_format_known"], [213, 6, 1, "", "launchers"], [213, 4, 1, "", "load_plugins"], [213, 4, 1, "", "make_exporter"], [213, 4, 1, "", "make_extractor"], [213, 4, 1, "", "make_importer"], [213, 4, 1, "", "make_launcher"], [213, 4, 1, "", "make_transform"], [213, 4, 1, "", "merge"], [213, 4, 1, "", "register_plugins"], [213, 4, 1, "", "release_builtin_plugins"], [213, 6, 1, "", "transforms"], [213, 6, 1, "", "validators"]], "datumaro.components.errors": [[214, 5, 1, "", "AnnotationExportError"], [214, 5, 1, "", "AnnotationImportError"], [214, 5, 1, "", "AnnotationTypeError"], [214, 5, 1, "", "AnnotationsTooCloseError"], [214, 5, 1, "", "AttributeDefinedButNotFound"], [214, 5, 1, "", "BrokenAnnotation"], [214, 5, 1, "", "CategoriesRedefinedError"], [214, 5, 1, "", "ConflictingCategoriesError"], [214, 5, 1, "", "DatasetError"], [214, 5, 1, "", "DatasetExportError"], [214, 5, 1, "", "DatasetImportError"], [214, 5, 1, "", "DatasetInfosRedefinedError"], [214, 5, 1, "", "DatasetItemValidationError"], [214, 5, 1, "", "DatasetMergeError"], [214, 5, 1, "", "DatasetNotFoundError"], [214, 5, 1, "", "DatasetQualityError"], [214, 5, 1, "", "DatasetValidationError"], [214, 5, 1, "", "DatumaroError"], [214, 5, 1, "", "EmptyCaption"], [214, 5, 1, "", "EmptyCommitError"], [214, 5, 1, "", "EmptyLabel"], [214, 5, 1, "", "EmptyPipelineError"], [214, 5, 1, "", "FailedAttrVotingError"], [214, 5, 1, "", "FailedLabelVotingError"], [214, 5, 1, "", "FarFromAttrMean"], [214, 5, 1, "", "FarFromCaptionMean"], [214, 5, 1, "", "FarFromLabelMean"], [214, 5, 1, "", "FewSamplesInAttribute"], [214, 5, 1, "", "FewSamplesInCaption"], [214, 5, 1, "", "FewSamplesInLabel"], [214, 5, 1, "", "ForeignChangesError"], [214, 5, 1, "", "ImbalancedAttribute"], [214, 5, 1, "", "ImbalancedCaptions"], [214, 5, 1, "", "ImbalancedDistInAttribute"], [214, 5, 1, "", "ImbalancedDistInCaption"], [214, 5, 1, "", "ImbalancedDistInLabel"], [214, 5, 1, "", "ImbalancedLabels"], [214, 5, 1, "", "ImmutableObjectError"], [214, 5, 1, "", "InvalidAnnotationError"], [214, 5, 1, "", "InvalidFieldError"], [214, 5, 1, "", "InvalidFieldTypeError"], [214, 5, 1, "", "InvalidPipelineError"], [214, 5, 1, "", "InvalidStageError"], [214, 5, 1, "", "InvalidValue"], [214, 5, 1, "", "ItemExportError"], [214, 5, 1, "", "ItemImportError"], [214, 5, 1, "", "LabelDefinedButNotFound"], [214, 5, 1, "", "MediaShapeError"], [214, 5, 1, "", "MediaTypeError"], [214, 5, 1, "", "MigrationError"], [214, 5, 1, "", "MismatchingAttributesError"], [214, 5, 1, "", "MismatchingImageInfoError"], [214, 5, 1, "", "MismatchingMediaError"], [214, 5, 1, "", "MismatchingMediaPathError"], [214, 5, 1, "", "MismatchingObjectError"], [214, 5, 1, "", "MissingAnnotation"], [214, 5, 1, "", "MissingAttribute"], [214, 5, 1, "", "MissingFieldError"], [214, 5, 1, "", "MissingLabelCategories"], [214, 5, 1, "", "MissingObjectError"], [214, 5, 1, "", "MissingPipelineHeadError"], [214, 5, 1, "", "MissingSourceHashError"], [214, 5, 1, "", "MultiLabelAnnotations"], [214, 5, 1, "", "MultipleFormatsMatchError"], [214, 5, 1, "", "MultiplePipelineHeadsError"], [214, 5, 1, "", "NegativeLength"], [214, 5, 1, "", "NoMatchingAnnError"], [214, 5, 1, "", "NoMatchingFormatsError"], [214, 5, 1, "", "NoMatchingItemError"], [214, 5, 1, "", "NotAvailableError"], [214, 5, 1, "", "OldProjectError"], [214, 5, 1, "", "OnlyOneAttributeValue"], [214, 5, 1, "", "OnlyOneLabel"], [214, 5, 1, "", "OutlierInCaption"], [214, 5, 1, "", "PathOutsideSourceError"], [214, 5, 1, "", "PipelineError"], [214, 5, 1, "", "ProjectAlreadyExists"], [214, 5, 1, "", "ProjectNotFoundError"], [214, 5, 1, "", "ReadonlyDatasetError"], [214, 5, 1, "", "ReadonlyProjectError"], [214, 5, 1, "", "RedundanciesInCaption"], [214, 5, 1, "", "RepeatedItemError"], [214, 5, 1, "", "SourceExistsError"], [214, 5, 1, "", "SourceUrlInsideProjectError"], [214, 5, 1, "", "StreamedItemError"], [214, 5, 1, "", "UndeclaredLabelError"], [214, 5, 1, "", "UndefinedAttribute"], [214, 5, 1, "", "UndefinedLabel"], [214, 5, 1, "", "UnexpectedUrlError"], [214, 5, 1, "", "UnknownFormatError"], [214, 5, 1, "", "UnknownRefError"], [214, 5, 1, "", "UnknownSourceError"], [214, 5, 1, "", "UnknownStageError"], [214, 5, 1, "", "UnknownTargetError"], [214, 5, 1, "", "UnsavedChangesError"], [214, 5, 1, "", "VcsAlreadyExists"], [214, 5, 1, "", "VcsError"], [214, 5, 1, "", "VideoMergeError"], [214, 5, 1, "", "WrongGroupError"]], "datumaro.components.errors.AnnotationExportError": [[214, 2, 1, "", "item_id"]], "datumaro.components.errors.AnnotationImportError": [[214, 2, 1, "", "item_id"]], "datumaro.components.errors.AnnotationsTooCloseError": [[214, 2, 1, "", "a"], [214, 2, 1, "", "b"], [214, 2, 1, "", "distance"], [214, 2, 1, "", "item_id"]], "datumaro.components.errors.AttributeDefinedButNotFound": [[214, 2, 1, "", "attr_name"], [214, 2, 1, "", "label_name"]], "datumaro.components.errors.BrokenAnnotation": [[214, 2, 1, "", "ann_type"]], "datumaro.components.errors.ConflictingCategoriesError": [[214, 2, 1, "", "sources"]], "datumaro.components.errors.DatasetItemValidationError": [[214, 2, 1, "", "item_id"], [214, 2, 1, "", "subset"], [214, 4, 1, "", "to_dict"]], "datumaro.components.errors.DatasetMergeError": [[214, 2, 1, "", "sources"]], "datumaro.components.errors.DatasetNotFoundError": [[214, 2, 1, "", "format"], [214, 2, 1, "", "path"], [214, 2, 1, "", "template"]], "datumaro.components.errors.DatasetValidationError": [[214, 2, 1, "", "severity"], [214, 4, 1, "", "to_dict"]], "datumaro.components.errors.EmptyCaption": [[214, 2, 1, "", "caption_name"]], "datumaro.components.errors.EmptyLabel": [[214, 2, 1, "", "label_name"]], "datumaro.components.errors.FailedAttrVotingError": [[214, 2, 1, "", "ann"], [214, 2, 1, "", "attr"], [214, 2, 1, "", "item_id"], [214, 2, 1, "", "votes"]], "datumaro.components.errors.FailedLabelVotingError": [[214, 2, 1, "", "ann"], [214, 2, 1, "", "item_id"], [214, 2, 1, "", "votes"]], "datumaro.components.errors.FarFromAttrMean": [[214, 2, 1, "", "ann_id"], [214, 2, 1, "", "attr_name"], [214, 2, 1, "", "attr_value"], [214, 2, 1, "", "label_name"], [214, 2, 1, "", "mean"], [214, 2, 1, "", "prop"], [214, 2, 1, "", "val"]], "datumaro.components.errors.FarFromCaptionMean": [[214, 2, 1, "", "caption_name"], [214, 2, 1, "", "lower_bound"], [214, 2, 1, "", "mean"], [214, 2, 1, "", "upper_bound"], [214, 2, 1, "", "val"]], "datumaro.components.errors.FarFromLabelMean": [[214, 2, 1, "", "ann_id"], [214, 2, 1, "", "label_name"], [214, 2, 1, "", "mean"], [214, 2, 1, "", "prop"], [214, 2, 1, "", "val"]], "datumaro.components.errors.FewSamplesInAttribute": [[214, 2, 1, "", "attr_name"], [214, 2, 1, "", "attr_value"], [214, 2, 1, "", "count"], [214, 2, 1, "", "label_name"]], "datumaro.components.errors.FewSamplesInCaption": [[214, 2, 1, "", "caption_name"], [214, 2, 1, "", "count"]], "datumaro.components.errors.FewSamplesInLabel": [[214, 2, 1, "", "count"], [214, 2, 1, "", "label_name"]], "datumaro.components.errors.ImbalancedAttribute": [[214, 2, 1, "", "attr_name"], [214, 2, 1, "", "label_name"]], "datumaro.components.errors.ImbalancedDistInAttribute": [[214, 2, 1, "", "attr_name"], [214, 2, 1, "", "attr_value"], [214, 2, 1, "", "label_name"], [214, 2, 1, "", "prop"]], "datumaro.components.errors.ImbalancedDistInCaption": [[214, 2, 1, "", "caption_name"]], "datumaro.components.errors.ImbalancedDistInLabel": [[214, 2, 1, "", "label_name"], [214, 2, 1, "", "prop"]], "datumaro.components.errors.InvalidFieldError": [[214, 2, 1, "", "name"]], "datumaro.components.errors.InvalidFieldTypeError": [[214, 2, 1, "", "actual"], [214, 2, 1, "", "expected"]], "datumaro.components.errors.InvalidValue": [[214, 2, 1, "", "ann_id"], [214, 2, 1, "", "prop"]], "datumaro.components.errors.ItemExportError": [[214, 2, 1, "", "item_id"]], "datumaro.components.errors.ItemImportError": [[214, 2, 1, "", "item_id"]], "datumaro.components.errors.LabelDefinedButNotFound": [[214, 2, 1, "", "label_name"]], "datumaro.components.errors.MismatchingAttributesError": [[214, 2, 1, "", "a"], [214, 2, 1, "", "b"], [214, 2, 1, "", "item_id"], [214, 2, 1, "", "key"]], "datumaro.components.errors.MismatchingImageInfoError": [[214, 2, 1, "", "a"], [214, 2, 1, "", "b"], [214, 2, 1, "", "item_id"]], "datumaro.components.errors.MismatchingMediaError": [[214, 2, 1, "", "a"], [214, 2, 1, "", "b"], [214, 2, 1, "", "item_id"]], "datumaro.components.errors.MismatchingMediaPathError": [[214, 2, 1, "", "a"], [214, 2, 1, "", "b"], [214, 2, 1, "", "item_id"]], "datumaro.components.errors.MissingAnnotation": [[214, 2, 1, "", "ann_type"]], "datumaro.components.errors.MissingAttribute": [[214, 2, 1, "", "attr_name"], [214, 2, 1, "", "label_name"]], "datumaro.components.errors.MultipleFormatsMatchError": [[214, 2, 1, "", "formats"]], "datumaro.components.errors.NegativeLength": [[214, 2, 1, "", "ann_id"], [214, 2, 1, "", "prop"], [214, 2, 1, "", "val"]], "datumaro.components.errors.NoMatchingAnnError": [[214, 2, 1, "", "ann"], [214, 2, 1, "", "item_id"]], "datumaro.components.errors.NoMatchingItemError": [[214, 2, 1, "", "item_id"]], "datumaro.components.errors.OnlyOneAttributeValue": [[214, 2, 1, "", "attr_name"], [214, 2, 1, "", "label_name"], [214, 2, 1, "", "value"]], "datumaro.components.errors.OnlyOneLabel": [[214, 2, 1, "", "label_name"]], "datumaro.components.errors.OutlierInCaption": [[214, 2, 1, "", "caption_name"], [214, 2, 1, "", "lower_bound"], [214, 2, 1, "", "upper_bound"], [214, 2, 1, "", "val"]], "datumaro.components.errors.ProjectAlreadyExists": [[214, 2, 1, "", "path"]], "datumaro.components.errors.ProjectNotFoundError": [[214, 2, 1, "", "path"]], "datumaro.components.errors.RedundanciesInCaption": [[214, 2, 1, "", "caption_name"], [214, 2, 1, "", "count"], [214, 2, 1, "", "redundancy_type"]], "datumaro.components.errors.RepeatedItemError": [[214, 2, 1, "", "item_id"]], "datumaro.components.errors.SourceExistsError": [[214, 2, 1, "", "name"]], "datumaro.components.errors.UndeclaredLabelError": [[214, 2, 1, "", "id"]], "datumaro.components.errors.UndefinedAttribute": [[214, 2, 1, "", "attr_name"], [214, 2, 1, "", "label_name"]], "datumaro.components.errors.UndefinedLabel": [[214, 2, 1, "", "label_name"]], "datumaro.components.errors.UnknownFormatError": [[214, 2, 1, "", "format"]], "datumaro.components.errors.UnknownRefError": [[214, 2, 1, "", "ref"]], "datumaro.components.errors.UnknownSourceError": [[214, 2, 1, "", "name"]], "datumaro.components.errors.UnknownTargetError": [[214, 2, 1, "", "name"]], "datumaro.components.errors.UnsavedChangesError": [[214, 2, 1, "", "paths"]], "datumaro.components.errors.VcsAlreadyExists": [[214, 2, 1, "", "path"]], "datumaro.components.errors.VideoMergeError": [[214, 2, 1, "", "item_id"]], "datumaro.components.errors.WrongGroupError": [[214, 2, 1, "", "expected"], [214, 2, 1, "", "found"], [214, 2, 1, "", "group"], [214, 2, 1, "", "item_id"]], "datumaro.components.exporter": [[215, 1, 1, "", "ExportContext"], [215, 1, 1, "", "ExportContextComponent"], [215, 1, 1, "", "ExportErrorPolicy"], [215, 1, 1, "", "Exporter"], [215, 1, 1, "", "FailingExportErrorPolicy"], [215, 1, 1, "", "NullExportContext"]], "datumaro.components.exporter.ExportContext": [[215, 2, 1, "", "error_policy"], [215, 2, 1, "", "progress_reporter"]], "datumaro.components.exporter.ExportContextComponent": [[215, 6, 1, "", "crypter"], [215, 4, 1, "", "find_image_ext"], [215, 6, 1, "", "images_dir"], [215, 4, 1, "", "make_image_filename"], [215, 4, 1, "", "make_pcd_extra_image_filename"], [215, 4, 1, "", "make_pcd_filename"], [215, 4, 1, "", "make_video_filename"], [215, 6, 1, "", "pcd_dir"], [215, 6, 1, "", "save_dir"], [215, 4, 1, "", "save_image"], [215, 6, 1, "", "save_media"], [215, 4, 1, "", "save_point_cloud"], [215, 4, 1, "", "save_video"], [215, 6, 1, "", "source_path"]], "datumaro.components.exporter.ExportErrorPolicy": [[215, 4, 1, "", "fail"], [215, 4, 1, "", "report_annotation_error"], [215, 4, 1, "", "report_item_error"]], "datumaro.components.exporter.Exporter": [[215, 2, 1, "", "DEFAULT_IMAGE_EXT"], [215, 4, 1, "", "apply"], [215, 4, 1, "", "build_cmdline_parser"], [215, 6, 1, "", "can_stream"], [215, 4, 1, "", "convert"], [215, 4, 1, "", "patch"]], "datumaro.components.exporter.NullExportContext": [[215, 2, 1, "", "error_policy"], [215, 2, 1, "", "progress_reporter"]], "datumaro.components.extractor_tfds": [[216, 1, 1, "", "TfdsDataset"], [216, 1, 1, "", "TfdsDatasetMetadata"], [216, 1, 1, "", "TfdsDatasetRemoteMetadata"], [216, 1, 1, "", "TfdsSubsetRemoteMetadata"]], "datumaro.components.extractor_tfds.TfdsDataset": [[216, 4, 1, "", "make_extractor"], [216, 6, 1, "", "metadata"], [216, 4, 1, "", "query_remote_metadata"]], "datumaro.components.extractor_tfds.TfdsDatasetMetadata": [[216, 2, 1, "", "default_output_format"], [216, 2, 1, "", "home_url"], [216, 2, 1, "", "human_name"], [216, 2, 1, "", "media_type"]], "datumaro.components.extractor_tfds.TfdsDatasetRemoteMetadata": [[216, 2, 1, "", "description"], [216, 2, 1, "", "download_size"], [216, 2, 1, "", "num_classes"], [216, 2, 1, "", "subsets"], [216, 2, 1, "", "version"]], "datumaro.components.extractor_tfds.TfdsSubsetRemoteMetadata": [[216, 2, 1, "", "num_items"]], "datumaro.components.filter": [[217, 1, 1, "", "Annotation"], [217, 1, 1, "", "AnnotationType"], [217, 1, 1, "", "Bbox"], [217, 1, 1, "", "Caption"], [217, 1, 1, "", "DatasetItemEncoder"], [217, 1, 1, "", "Ellipse"], [217, 1, 1, "", "HashKey"], [217, 1, 1, "", "Image"], [217, 1, 1, "", "ItemTransform"], [217, 1, 1, "", "Label"], [217, 1, 1, "", "Mask"], [217, 1, 1, "", "Points"], [217, 1, 1, "", "PolyLine"], [217, 1, 1, "", "Polygon"], [217, 1, 1, "", "UserFunctionAnnotationsFilter"], [217, 1, 1, "", "UserFunctionDatasetFilter"], [217, 1, 1, "", "XPathAnnotationsFilter"], [217, 1, 1, "", "XPathDatasetFilter"]], "datumaro.components.filter.Annotation": [[217, 4, 1, "", "as_dict"], [217, 2, 1, "", "attributes"], [217, 2, 1, "", "group"], [217, 2, 1, "", "id"], [217, 2, 1, "", "object_id"], [217, 6, 1, "", "type"], [217, 4, 1, "", "wrap"]], "datumaro.components.filter.AnnotationType": [[217, 2, 1, "", "bbox"], [217, 2, 1, "", "caption"], [217, 2, 1, "", "cuboid_3d"], [217, 2, 1, "", "depth_annotation"], [217, 2, 1, "", "ellipse"], [217, 2, 1, "", "feature_vector"], [217, 2, 1, "", "hash_key"], [217, 2, 1, "", "label"], [217, 2, 1, "", "mask"], [217, 2, 1, "", "points"], [217, 2, 1, "", "polygon"], [217, 2, 1, "", "polyline"], [217, 2, 1, "", "rotated_bbox"], [217, 2, 1, "", "super_resolution_annotation"], [217, 2, 1, "", "tabular"], [217, 2, 1, "", "unknown"]], "datumaro.components.filter.Bbox": [[217, 4, 1, "", "__init__"], [217, 2, 1, "", "_type"], [217, 4, 1, "id6", "as_polygon"], [217, 4, 1, "id4", "get_area"], [217, 4, 1, "id5", "get_bbox"], [217, 6, 1, "id3", "h"], [217, 4, 1, "id7", "iou"], [217, 6, 1, "id2", "w"], [217, 4, 1, "id8", "wrap"], [217, 6, 1, "id0", "x"], [217, 6, 1, "id1", "y"]], "datumaro.components.filter.Caption": [[217, 2, 1, "", "caption"]], "datumaro.components.filter.DatasetItemEncoder": [[217, 4, 1, "", "encode"], [217, 4, 1, "", "encode_annotation"], [217, 4, 1, "", "encode_annotation_base"], [217, 4, 1, "", "encode_bbox_object"], [217, 4, 1, "", "encode_caption_object"], [217, 4, 1, "", "encode_ellipse_object"], [217, 4, 1, "", "encode_image"], [217, 4, 1, "", "encode_label_object"], [217, 4, 1, "", "encode_mask_object"], [217, 4, 1, "", "encode_points_object"], [217, 4, 1, "", "encode_polygon_object"], [217, 4, 1, "", "encode_polyline_object"], [217, 4, 1, "", "to_string"]], "datumaro.components.filter.Ellipse": [[217, 4, 1, "", "as_polygon"], [217, 6, 1, "", "c_x"], [217, 6, 1, "", "c_y"], [217, 4, 1, "", "get_area"], [217, 4, 1, "", "get_bbox"], [217, 4, 1, "", "get_points"], [217, 6, 1, "", "h"], [217, 4, 1, "", "iou"], [217, 6, 1, "", "w"], [217, 4, 1, "", "wrap"], [217, 6, 1, "", "x1"], [217, 6, 1, "", "x2"], [217, 6, 1, "", "y1"], [217, 6, 1, "", "y2"]], "datumaro.components.filter.HashKey": [[217, 2, 1, "", "hash_key"]], "datumaro.components.filter.Image": [[217, 6, 1, "", "ext"], [217, 4, 1, "", "from_bytes"], [217, 4, 1, "", "from_file"], [217, 4, 1, "", "from_numpy"], [217, 6, 1, "", "has_size"], [217, 4, 1, "", "set_crypter"], [217, 6, 1, "", "size"]], "datumaro.components.filter.ItemTransform": [[217, 4, 1, "", "transform_item"]], "datumaro.components.filter.Label": [[217, 2, 1, "", "label"]], "datumaro.components.filter.Mask": [[217, 4, 1, "", "as_class_mask"], [217, 4, 1, "", "as_instance_mask"], [217, 4, 1, "", "get_area"], [217, 4, 1, "", "get_bbox"], [217, 6, 1, "", "image"], [217, 2, 1, "", "label"], [217, 4, 1, "", "paint"], [217, 2, 1, "", "z_order"]], "datumaro.components.filter.Points": [[217, 1, 1, "", "Visibility"], [217, 4, 1, "", "__attrs_post_init__"], [217, 2, 1, "", "_type"], [217, 4, 1, "id13", "get_area"], [217, 4, 1, "id14", "get_bbox"], [217, 2, 1, "id12", "visibility"]], "datumaro.components.filter.Points.Visibility": [[217, 2, 1, "id9", "absent"], [217, 2, 1, "id10", "hidden"], [217, 2, 1, "id11", "visible"]], "datumaro.components.filter.PolyLine": [[217, 2, 1, "", "_type"], [217, 4, 1, "id15", "as_polygon"], [217, 4, 1, "id16", "get_area"]], "datumaro.components.filter.Polygon": [[217, 4, 1, "", "__attrs_post_init__"], [217, 4, 1, "", "__eq__"], [217, 4, 1, "", "_get_shoelace_area"], [217, 2, 1, "", "_type"], [217, 4, 1, "id18", "as_polygon"], [217, 4, 1, "id17", "get_area"]], "datumaro.components.filter.UserFunctionAnnotationsFilter": [[217, 4, 1, "", "transform_item"]], "datumaro.components.filter.UserFunctionDatasetFilter": [[217, 4, 1, "", "transform_item"]], "datumaro.components.filter.XPathAnnotationsFilter": [[217, 4, 1, "", "transform_item"]], "datumaro.components.filter.XPathDatasetFilter": [[217, 4, 1, "", "transform_item"]], "datumaro.components.format_detection": [[218, 1, 1, "", "DetectedFormat"], [218, 1, 1, "", "FormatDetectionConfidence"], [218, 1, 1, "", "FormatDetectionContext"], [218, 5, 1, "", "FormatDetectionUnsupported"], [218, 7, 1, "", "FormatDetector"], [218, 5, 1, "", "FormatRequirementsUnmet"], [218, 1, 1, "", "RejectionCallback"], [218, 1, 1, "", "RejectionReason"], [218, 3, 1, "", "apply_format_detector"], [218, 3, 1, "", "detect_dataset_format"]], "datumaro.components.format_detection.DetectedFormat": [[218, 2, 1, "", "confidence"], [218, 2, 1, "", "name"]], "datumaro.components.format_detection.FormatDetectionConfidence": [[218, 2, 1, "", "EXTREME_LOW"], [218, 2, 1, "", "LOW"], [218, 2, 1, "", "MEDIUM"], [218, 2, 1, "", "NONE"]], "datumaro.components.format_detection.FormatDetectionContext": [[218, 4, 1, "", "alternative"], [218, 4, 1, "", "fail"], [218, 4, 1, "", "probe_text_file"], [218, 4, 1, "", "raise_unsupported"], [218, 4, 1, "", "require_any"], [218, 4, 1, "", "require_file"], [218, 4, 1, "", "require_files"], [218, 4, 1, "", "require_files_iter"], [218, 6, 1, "", "root_path"]], "datumaro.components.format_detection.FormatDetectionUnsupported": [[218, 6, 1, "", "reason"]], "datumaro.components.format_detection.FormatRequirementsUnmet": [[218, 6, 1, "", "reason"]], "datumaro.components.format_detection.RejectionReason": [[218, 2, 1, "", "detection_unsupported"], [218, 2, 1, "", "insufficient_confidence"], [218, 2, 1, "", "unmet_requirements"]], "datumaro.components.generator": [[219, 1, 1, "", "DatasetGenerator"]], "datumaro.components.generator.DatasetGenerator": [[219, 4, 1, "", "generate"], [219, 4, 1, "", "generate_dataset"]], "datumaro.components.hl_ops": [[220, 1, 1, "", "Dataset"], [220, 5, 1, "", "DatasetError"], [220, 1, 1, "", "DistanceComparator"], [220, 1, 1, "", "DistanceCompareVisualizer"], [220, 1, 1, "", "Environment"], [220, 1, 1, "", "EqualityComparator"], [220, 1, 1, "", "Exporter"], [220, 1, 1, "", "HLOps"], [220, 1, 1, "", "IDataset"], [220, 1, 1, "", "Launcher"], [220, 1, 1, "", "ModelTransform"], [220, 1, 1, "", "TableComparator"], [220, 1, 1, "", "TaskType"], [220, 1, 1, "", "Transform"], [220, 1, 1, "", "UserFunctionAnnotationsFilter"], [220, 1, 1, "", "UserFunctionDatasetFilter"], [220, 1, 1, "", "Validator"], [220, 1, 1, "", "XPathAnnotationsFilter"], [220, 1, 1, "", "XPathDatasetFilter"], [220, 3, 1, "", "get_merger"], [220, 3, 1, "", "on_error_do"], [220, 3, 1, "", "overload"], [220, 3, 1, "", "parse_str_enum_value"], [220, 3, 1, "", "scoped"]], "datumaro.components.hl_ops.Dataset": [[220, 4, 1, "", "ann_types"], [220, 4, 1, "", "bind"], [220, 4, 1, "", "categories"], [220, 4, 1, "", "clone"], [220, 6, 1, "", "data_path"], [220, 4, 1, "", "define_categories"], [220, 4, 1, "", "define_infos"], [220, 4, 1, "", "detect"], [220, 6, 1, "", "env"], [220, 4, 1, "", "export"], [220, 4, 1, "", "filter"], [220, 4, 1, "", "flush_changes"], [220, 6, 1, "", "format"], [220, 4, 1, "", "from_extractors"], [220, 4, 1, "", "from_iterable"], [220, 4, 1, "", "get"], [220, 4, 1, "", "get_annotated_items"], [220, 4, 1, "", "get_annotations"], [220, 4, 1, "", "get_categories_info"], [220, 4, 1, "", "get_datasetitem_by_path"], [220, 4, 1, "", "get_infos"], [220, 4, 1, "", "get_label_cat_names"], [220, 4, 1, "", "get_patch"], [220, 4, 1, "", "get_subset"], [220, 4, 1, "", "get_subset_info"], [220, 4, 1, "", "import_from"], [220, 4, 1, "", "infos"], [220, 4, 1, "", "init_cache"], [220, 6, 1, "", "is_bound"], [220, 6, 1, "", "is_cache_initialized"], [220, 6, 1, "", "is_eager"], [220, 6, 1, "", "is_modified"], [220, 6, 1, "", "is_stream"], [220, 4, 1, "", "load"], [220, 4, 1, "", "media_type"], [220, 6, 1, "", "options"], [220, 4, 1, "", "put"], [220, 4, 1, "", "remove"], [220, 4, 1, "", "run_model"], [220, 4, 1, "", "save"], [220, 4, 1, "", "select"], [220, 4, 1, "", "subsets"], [220, 4, 1, "", "transform"], [220, 4, 1, "", "update"]], "datumaro.components.hl_ops.DistanceComparator": [[220, 4, 1, "", "match_annotations"], [220, 4, 1, "", "match_boxes"], [220, 4, 1, "", "match_labels"], [220, 4, 1, "", "match_lines"], [220, 4, 1, "", "match_masks"], [220, 4, 1, "", "match_points"], [220, 4, 1, "", "match_polygons"]], "datumaro.components.hl_ops.DistanceCompareVisualizer": [[220, 2, 1, "", "DEFAULT_FORMAT"], [220, 1, 1, "", "OutputFormat"], [220, 4, 1, "", "draw_bbox"], [220, 4, 1, "", "draw_detection_roi"], [220, 4, 1, "", "draw_text_with_background"], [220, 4, 1, "", "get_a_label"], [220, 4, 1, "", "get_b_label"], [220, 4, 1, "", "get_label_diff_file"], [220, 4, 1, "", "save"], [220, 4, 1, "", "save_as_tensorboard"], [220, 4, 1, "", "save_conf_matrix"], [220, 4, 1, "", "save_item_bbox_diff"], [220, 4, 1, "", "save_item_label_diff"], [220, 4, 1, "", "update_bbox_confusion"], [220, 4, 1, "", "update_label_confusion"], [220, 4, 1, "", "update_mask_confusion"], [220, 4, 1, "", "update_polygon_confusion"]], "datumaro.components.hl_ops.DistanceCompareVisualizer.OutputFormat": [[220, 2, 1, "", "simple"], [220, 2, 1, "", "tensorboard"]], "datumaro.components.hl_ops.Environment": [[220, 4, 1, "", "detect_dataset"], [220, 6, 1, "", "exporters"], [220, 6, 1, "", "extractors"], [220, 6, 1, "", "generators"], [220, 6, 1, "", "importers"], [220, 4, 1, "", "is_format_known"], [220, 6, 1, "", "launchers"], [220, 4, 1, "", "load_plugins"], [220, 4, 1, "", "make_exporter"], [220, 4, 1, "", "make_extractor"], [220, 4, 1, "", "make_importer"], [220, 4, 1, "", "make_launcher"], [220, 4, 1, "", "make_transform"], [220, 4, 1, "", "merge"], [220, 4, 1, "", "register_plugins"], [220, 4, 1, "", "release_builtin_plugins"], [220, 6, 1, "", "transforms"], [220, 6, 1, "", "validators"]], "datumaro.components.hl_ops.EqualityComparator": [[220, 4, 1, "", "compare_datasets"], [220, 2, 1, "", "errors"], [220, 2, 1, "", "match_images"], [220, 4, 1, "", "save_compare_report"]], "datumaro.components.hl_ops.Exporter": [[220, 2, 1, "", "DEFAULT_IMAGE_EXT"], [220, 4, 1, "", "apply"], [220, 4, 1, "", "build_cmdline_parser"], [220, 6, 1, "", "can_stream"], [220, 4, 1, "", "convert"], [220, 4, 1, "", "patch"]], "datumaro.components.hl_ops.HLOps": [[220, 4, 1, "", "aggregate"], [220, 4, 1, "", "compare"], [220, 4, 1, "", "export"], [220, 4, 1, "", "filter"], [220, 4, 1, "", "merge"], [220, 4, 1, "", "run_model"], [220, 4, 1, "", "transform"], [220, 4, 1, "", "validate"]], "datumaro.components.hl_ops.IDataset": [[220, 4, 1, "", "ann_types"], [220, 4, 1, "", "categories"], [220, 4, 1, "", "get"], [220, 4, 1, "", "get_subset"], [220, 4, 1, "", "infos"], [220, 6, 1, "", "is_stream"], [220, 4, 1, "", "media_type"], [220, 4, 1, "", "subsets"]], "datumaro.components.hl_ops.Launcher": [[220, 4, 1, "", "categories"], [220, 4, 1, "", "infer"], [220, 4, 1, "", "infos"], [220, 4, 1, "", "launch"], [220, 4, 1, "", "postprocess"], [220, 4, 1, "", "preprocess"], [220, 4, 1, "", "type_check"]], "datumaro.components.hl_ops.ModelTransform": [[220, 4, 1, "", "categories"], [220, 4, 1, "", "get_subset"], [220, 4, 1, "", "infos"], [220, 4, 1, "", "transform_item"]], "datumaro.components.hl_ops.TableComparator": [[220, 4, 1, "", "compare_datasets"], [220, 4, 1, "", "save_compare_report"]], "datumaro.components.hl_ops.TaskType": [[220, 2, 1, "", "classification"], [220, 2, 1, "", "detection"], [220, 2, 1, "", "segmentation"], [220, 2, 1, "", "tabular"]], "datumaro.components.hl_ops.Transform": [[220, 4, 1, "", "categories"], [220, 4, 1, "", "infos"], [220, 4, 1, "", "media_type"], [220, 4, 1, "", "subsets"], [220, 4, 1, "", "wrap_item"]], "datumaro.components.hl_ops.UserFunctionAnnotationsFilter": [[220, 4, 1, "", "transform_item"]], "datumaro.components.hl_ops.UserFunctionDatasetFilter": [[220, 4, 1, "", "transform_item"]], "datumaro.components.hl_ops.Validator": [[220, 4, 1, "", "compute_statistics"], [220, 4, 1, "", "generate_reports"], [220, 4, 1, "", "validate"]], "datumaro.components.hl_ops.XPathAnnotationsFilter": [[220, 4, 1, "", "transform_item"]], "datumaro.components.hl_ops.XPathDatasetFilter": [[220, 4, 1, "", "transform_item"]], "datumaro.components.importer": [[221, 1, 1, "", "CliPlugin"], [221, 5, 1, "", "DatasetImportError"], [221, 5, 1, "", "DatasetNotFoundError"], [221, 1, 1, "", "ExtractorMerger"], [221, 1, 1, "", "FailingImportErrorPolicy"], [221, 1, 1, "", "FormatDetectionConfidence"], [221, 1, 1, "", "FormatDetectionContext"], [221, 1, 1, "", "ImportContext"], [221, 1, 1, "", "ImportErrorPolicy"], [221, 1, 1, "", "Importer"], [221, 1, 1, "", "NullImportContext"], [221, 1, 1, "", "TypeVar"], [221, 3, 1, "", "contextmanager"], [221, 3, 1, "", "iglob"], [221, 3, 1, "", "with_subset_dirs"], [221, 3, 1, "", "wraps"]], "datumaro.components.importer.CliPlugin": [[221, 2, 1, "", "NAME"], [221, 4, 1, "", "build_cmdline_parser"], [221, 4, 1, "", "parse_cmdline"]], "datumaro.components.importer.DatasetNotFoundError": [[221, 2, 1, "", "format"], [221, 2, 1, "", "path"], [221, 2, 1, "", "template"]], "datumaro.components.importer.ExtractorMerger": [[221, 4, 1, "", "categories"], [221, 4, 1, "", "get"], [221, 4, 1, "", "infos"], [221, 6, 1, "", "is_stream"]], "datumaro.components.importer.FormatDetectionConfidence": [[221, 2, 1, "", "EXTREME_LOW"], [221, 2, 1, "", "LOW"], [221, 2, 1, "", "MEDIUM"], [221, 2, 1, "", "NONE"]], "datumaro.components.importer.FormatDetectionContext": [[221, 4, 1, "", "alternative"], [221, 4, 1, "", "fail"], [221, 4, 1, "", "probe_text_file"], [221, 4, 1, "", "raise_unsupported"], [221, 4, 1, "", "require_any"], [221, 4, 1, "", "require_file"], [221, 4, 1, "", "require_files"], [221, 4, 1, "", "require_files_iter"], [221, 6, 1, "", "root_path"]], "datumaro.components.importer.ImportContext": [[221, 2, 1, "", "error_policy"], [221, 2, 1, "", "progress_reporter"]], "datumaro.components.importer.ImportErrorPolicy": [[221, 4, 1, "", "fail"], [221, 4, 1, "", "report_annotation_error"], [221, 4, 1, "", "report_item_error"]], "datumaro.components.importer.Importer": [[221, 2, 1, "", "DETECT_CONFIDENCE"], [221, 6, 1, "", "can_stream"], [221, 4, 1, "", "detect"], [221, 4, 1, "", "find_sources"], [221, 4, 1, "", "find_sources_with_params"], [221, 4, 1, "", "get_extractor_merger"], [221, 4, 1, "", "get_file_extensions"]], "datumaro.components.importer.NullImportContext": [[221, 2, 1, "", "error_policy"], [221, 2, 1, "", "progress_reporter"]], "datumaro.components.launcher": [[222, 1, 1, "", "Launcher"], [222, 1, 1, "", "LauncherWithModelInterpreter"]], "datumaro.components.launcher.Launcher": [[222, 4, 1, "", "categories"], [222, 4, 1, "", "infer"], [222, 4, 1, "", "infos"], [222, 4, 1, "", "launch"], [222, 4, 1, "", "postprocess"], [222, 4, 1, "", "preprocess"], [222, 4, 1, "", "type_check"]], "datumaro.components.launcher.LauncherWithModelInterpreter": [[222, 4, 1, "", "categories"], [222, 4, 1, "", "postprocess"], [222, 4, 1, "", "preprocess"]], "datumaro.components.lazy_plugin": [[223, 1, 1, "", "LazyPlugin"], [223, 3, 1, "", "extra_deps"], [223, 3, 1, "", "get_extra_deps"], [223, 3, 1, "", "get_lazy_plugin"]], "datumaro.components.lazy_plugin.LazyPlugin": [[223, 2, 1, "", "NAME"], [223, 4, 1, "", "get_plugin_cls"]], "datumaro.components.media": [[224, 1, 1, "", "FromDataMixin"], [224, 1, 1, "", "FromFileMixin"], [224, 1, 1, "", "Image"], [224, 1, 1, "", "ImageFromBytes"], [224, 1, 1, "", "ImageFromData"], [224, 1, 1, "", "ImageFromFile"], [224, 1, 1, "", "ImageFromNumpy"], [224, 1, 1, "", "MediaElement"], [224, 1, 1, "", "MediaType"], [224, 1, 1, "", "MosaicImage"], [224, 1, 1, "", "MosaicImageFromData"], [224, 1, 1, "", "MosaicImageFromImageRoIPairs"], [224, 1, 1, "", "MultiframeImage"], [224, 1, 1, "", "PointCloud"], [224, 1, 1, "", "PointCloudFromBytes"], [224, 1, 1, "", "PointCloudFromData"], [224, 1, 1, "", "PointCloudFromFile"], [224, 1, 1, "", "RoIImage"], [224, 1, 1, "", "RoIImageFromBytes"], [224, 1, 1, "", "RoIImageFromData"], [224, 1, 1, "", "RoIImageFromFile"], [224, 1, 1, "", "RoIImageFromNumpy"], [224, 1, 1, "", "Table"], [224, 1, 1, "", "TableFromCSV"], [224, 1, 1, "", "TableFromDataFrame"], [224, 1, 1, "", "TableFromListOfDict"], [224, 1, 1, "", "TableRow"], [224, 1, 1, "", "TableRowFromData"], [224, 1, 1, "", "Video"], [224, 1, 1, "", "VideoFrame"]], "datumaro.components.media.FromDataMixin": [[224, 6, 1, "", "bytes"], [224, 6, 1, "", "data"], [224, 6, 1, "", "has_data"]], "datumaro.components.media.FromFileMixin": [[224, 6, 1, "", "bytes"], [224, 6, 1, "", "has_data"], [224, 6, 1, "", "path"]], "datumaro.components.media.Image": [[224, 6, 1, "", "ext"], [224, 4, 1, "", "from_bytes"], [224, 4, 1, "", "from_file"], [224, 4, 1, "", "from_numpy"], [224, 6, 1, "", "has_size"], [224, 4, 1, "", "set_crypter"], [224, 6, 1, "", "size"]], "datumaro.components.media.ImageFromBytes": [[224, 6, 1, "", "data"], [224, 4, 1, "", "get_data_as_dtype"]], "datumaro.components.media.ImageFromData": [[224, 4, 1, "", "save"]], "datumaro.components.media.ImageFromFile": [[224, 6, 1, "", "data"], [224, 4, 1, "", "get_data_as_dtype"], [224, 4, 1, "", "save"], [224, 4, 1, "", "set_crypter"], [224, 6, 1, "", "size"]], "datumaro.components.media.ImageFromNumpy": [[224, 6, 1, "", "data"], [224, 4, 1, "", "get_data_as_dtype"], [224, 6, 1, "", "has_size"]], "datumaro.components.media.MediaElement": [[224, 4, 1, "", "as_dict"], [224, 6, 1, "", "bytes"], [224, 6, 1, "", "data"], [224, 4, 1, "", "from_self"], [224, 6, 1, "", "has_data"], [224, 6, 1, "", "is_encrypted"], [224, 4, 1, "", "save"], [224, 4, 1, "", "set_crypter"], [224, 6, 1, "", "type"]], "datumaro.components.media.MediaType": [[224, 2, 1, "", "BYTE_IMAGE"], [224, 2, 1, "", "IMAGE"], [224, 2, 1, "", "MEDIA_ELEMENT"], [224, 2, 1, "", "MOSAIC_IMAGE"], [224, 2, 1, "", "MULTIFRAME_IMAGE"], [224, 2, 1, "", "NONE"], [224, 2, 1, "", "POINT_CLOUD"], [224, 2, 1, "", "ROI_IMAGE"], [224, 2, 1, "", "TABLE_ROW"], [224, 2, 1, "", "VIDEO"], [224, 2, 1, "", "VIDEO_FRAME"], [224, 6, 1, "", "media"]], "datumaro.components.media.MosaicImage": [[224, 4, 1, "", "from_bytes"], [224, 4, 1, "", "from_file"], [224, 4, 1, "", "from_image_roi_pairs"], [224, 4, 1, "", "from_numpy"]], "datumaro.components.media.MosaicImageFromData": [[224, 4, 1, "", "save"]], "datumaro.components.media.MosaicImageFromImageRoIPairs": [[224, 4, 1, "", "as_dict"]], "datumaro.components.media.MultiframeImage": [[224, 6, 1, "", "data"], [224, 6, 1, "", "ext"], [224, 6, 1, "", "path"]], "datumaro.components.media.PointCloud": [[224, 6, 1, "", "extra_images"], [224, 4, 1, "", "from_bytes"], [224, 4, 1, "", "from_file"]], "datumaro.components.media.PointCloudFromBytes": [[224, 6, 1, "", "data"]], "datumaro.components.media.PointCloudFromData": [[224, 4, 1, "", "save"]], "datumaro.components.media.PointCloudFromFile": [[224, 6, 1, "", "data"], [224, 4, 1, "", "save"]], "datumaro.components.media.RoIImage": [[224, 4, 1, "", "as_dict"], [224, 4, 1, "", "from_bytes"], [224, 4, 1, "", "from_file"], [224, 4, 1, "", "from_image"], [224, 4, 1, "", "from_numpy"], [224, 6, 1, "", "roi"], [224, 4, 1, "", "save"]], "datumaro.components.media.RoIImageFromBytes": [[224, 6, 1, "", "data"]], "datumaro.components.media.RoIImageFromFile": [[224, 6, 1, "", "data"]], "datumaro.components.media.RoIImageFromNumpy": [[224, 6, 1, "", "data"]], "datumaro.components.media.Table": [[224, 6, 1, "", "columns"], [224, 4, 1, "", "dtype"], [224, 4, 1, "", "features"], [224, 4, 1, "", "from_csv"], [224, 4, 1, "", "from_dataframe"], [224, 4, 1, "", "from_list"], [224, 4, 1, "", "save"], [224, 6, 1, "", "shape"]], "datumaro.components.media.TableFromCSV": [[224, 6, 1, "", "data"], [224, 4, 1, "", "select"]], "datumaro.components.media.TableFromDataFrame": [[224, 6, 1, "", "data"]], "datumaro.components.media.TableRow": [[224, 4, 1, "", "data"], [224, 4, 1, "", "from_data"], [224, 6, 1, "", "has_data"], [224, 6, 1, "", "index"], [224, 6, 1, "", "path"], [224, 6, 1, "", "table"]], "datumaro.components.media.TableRowFromData": [[224, 6, 1, "", "data"]], "datumaro.components.media.Video": [[224, 4, 1, "", "close"], [224, 6, 1, "", "ext"], [224, 6, 1, "", "frame_size"], [224, 4, 1, "", "get_frame_data"], [224, 6, 1, "", "length"], [224, 6, 1, "", "path"], [224, 4, 1, "", "save"]], "datumaro.components.media.VideoFrame": [[224, 4, 1, "", "as_dict"], [224, 4, 1, "", "from_self"], [224, 6, 1, "", "index"], [224, 6, 1, "", "path"], [224, 6, 1, "", "size"], [224, 6, 1, "", "video"]], "datumaro.components.merge": [[226, 0, 0, "-", "base"], [227, 0, 0, "-", "exact_merge"], [228, 0, 0, "-", "extractor_merger"], [225, 3, 1, "", "get_merger"], [229, 0, 0, "-", "intersect_merge"], [230, 0, 0, "-", "union_merge"]], "datumaro.components.merge.base": [[226, 1, 1, "", "Merger"]], "datumaro.components.merge.base.Merger": [[226, 4, 1, "", "get_any_label_name"], [226, 4, 1, "", "merge_ann_types"], [226, 4, 1, "", "merge_categories"], [226, 4, 1, "", "merge_infos"], [226, 4, 1, "", "merge_media_types"], [226, 4, 1, "", "save_merge_report"]], "datumaro.components.merge.exact_merge": [[227, 1, 1, "", "Annotation"], [227, 1, 1, "", "DatasetItem"], [227, 1, 1, "", "DatasetItemStorage"], [227, 5, 1, "", "DatasetMergeError"], [227, 1, 1, "", "ExactMerge"], [227, 1, 1, "", "IDataset"], [227, 1, 1, "", "Image"], [227, 1, 1, "", "MediaElement"], [227, 1, 1, "", "Merger"], [227, 5, 1, "", "MismatchingAttributesError"], [227, 5, 1, "", "MismatchingImageInfoError"], [227, 5, 1, "", "MismatchingMediaError"], [227, 5, 1, "", "MismatchingMediaPathError"], [227, 1, 1, "", "MultiframeImage"], [227, 1, 1, "", "PointCloud"], [227, 1, 1, "", "Video"], [227, 5, 1, "", "VideoMergeError"]], "datumaro.components.merge.exact_merge.Annotation": [[227, 4, 1, "", "as_dict"], [227, 2, 1, "", "attributes"], [227, 2, 1, "", "group"], [227, 2, 1, "", "id"], [227, 2, 1, "", "object_id"], [227, 6, 1, "", "type"], [227, 4, 1, "", "wrap"]], "datumaro.components.merge.exact_merge.DatasetItem": [[227, 2, 1, "", "annotations"], [227, 2, 1, "", "attributes"], [227, 2, 1, "", "id"], [227, 2, 1, "", "media"], [227, 4, 1, "", "media_as"], [227, 2, 1, "", "subset"], [227, 4, 1, "", "wrap"]], "datumaro.components.merge.exact_merge.DatasetItemStorage": [[227, 4, 1, "", "get"], [227, 4, 1, "", "get_annotated_items"], [227, 4, 1, "", "get_annotations"], [227, 4, 1, "", "get_datasetitem_by_path"], [227, 4, 1, "", "get_subset"], [227, 4, 1, "", "is_empty"], [227, 4, 1, "", "put"], [227, 4, 1, "", "remove"], [227, 4, 1, "", "subsets"]], "datumaro.components.merge.exact_merge.DatasetMergeError": [[227, 2, 1, "", "sources"]], "datumaro.components.merge.exact_merge.ExactMerge": [[227, 4, 1, "", "merge"], [227, 4, 1, "", "merge_items"]], "datumaro.components.merge.exact_merge.IDataset": [[227, 4, 1, "", "ann_types"], [227, 4, 1, "", "categories"], [227, 4, 1, "", "get"], [227, 4, 1, "", "get_subset"], [227, 4, 1, "", "infos"], [227, 6, 1, "", "is_stream"], [227, 4, 1, "", "media_type"], [227, 4, 1, "", "subsets"]], "datumaro.components.merge.exact_merge.Image": [[227, 6, 1, "", "ext"], [227, 4, 1, "", "from_bytes"], [227, 4, 1, "", "from_file"], [227, 4, 1, "", "from_numpy"], [227, 6, 1, "", "has_size"], [227, 4, 1, "", "set_crypter"], [227, 6, 1, "", "size"]], "datumaro.components.merge.exact_merge.MediaElement": [[227, 4, 1, "", "as_dict"], [227, 6, 1, "", "bytes"], [227, 6, 1, "", "data"], [227, 4, 1, "", "from_self"], [227, 6, 1, "", "has_data"], [227, 6, 1, "", "is_encrypted"], [227, 4, 1, "", "save"], [227, 4, 1, "", "set_crypter"], [227, 6, 1, "", "type"]], "datumaro.components.merge.exact_merge.Merger": [[227, 4, 1, "", "get_any_label_name"], [227, 4, 1, "", "merge_ann_types"], [227, 4, 1, "", "merge_categories"], [227, 4, 1, "", "merge_infos"], [227, 4, 1, "", "merge_media_types"], [227, 4, 1, "", "save_merge_report"]], "datumaro.components.merge.exact_merge.MismatchingAttributesError": [[227, 2, 1, "", "a"], [227, 2, 1, "", "b"], [227, 2, 1, "", "item_id"], [227, 2, 1, "", "key"]], "datumaro.components.merge.exact_merge.MismatchingImageInfoError": [[227, 2, 1, "", "a"], [227, 2, 1, "", "b"], [227, 2, 1, "", "item_id"]], "datumaro.components.merge.exact_merge.MismatchingMediaError": [[227, 2, 1, "", "a"], [227, 2, 1, "", "b"], [227, 2, 1, "", "item_id"]], "datumaro.components.merge.exact_merge.MismatchingMediaPathError": [[227, 2, 1, "", "a"], [227, 2, 1, "", "b"], [227, 2, 1, "", "item_id"]], "datumaro.components.merge.exact_merge.MultiframeImage": [[227, 6, 1, "", "data"], [227, 6, 1, "", "ext"], [227, 6, 1, "", "path"]], "datumaro.components.merge.exact_merge.PointCloud": [[227, 6, 1, "", "extra_images"], [227, 4, 1, "", "from_bytes"], [227, 4, 1, "", "from_file"]], "datumaro.components.merge.exact_merge.Video": [[227, 4, 1, "", "close"], [227, 6, 1, "", "ext"], [227, 6, 1, "", "frame_size"], [227, 4, 1, "", "get_frame_data"], [227, 6, 1, "", "length"], [227, 6, 1, "", "path"], [227, 4, 1, "", "save"]], "datumaro.components.merge.exact_merge.VideoMergeError": [[227, 2, 1, "", "item_id"]], "datumaro.components.merge.extractor_merger": [[228, 1, 1, "", "ExtractorMerger"], [228, 3, 1, "", "check_identicalness"]], "datumaro.components.merge.extractor_merger.ExtractorMerger": [[228, 4, 1, "", "categories"], [228, 4, 1, "", "get"], [228, 4, 1, "", "infos"], [228, 6, 1, "", "is_stream"]], "datumaro.components.merge.intersect_merge": [[229, 1, 1, "", "AnnotationMerger"], [229, 1, 1, "", "AnnotationType"], [229, 5, 1, "", "AnnotationsTooCloseError"], [229, 1, 1, "", "BboxMerger"], [229, 1, 1, "", "CaptionsMerger"], [229, 5, 1, "", "ConflictingCategoriesError"], [229, 1, 1, "", "Cuboid3dMerger"], [229, 1, 1, "", "DatasetItem"], [229, 1, 1, "", "DatasetItemStorage"], [229, 1, 1, "", "DatasetItemStorageDatasetView"], [229, 1, 1, "", "EllipseMerger"], [229, 5, 1, "", "FailedAttrVotingError"], [229, 1, 1, "", "FeatureVectorMerger"], [229, 1, 1, "", "HashKeyMerger"], [229, 1, 1, "", "IDataset"], [229, 1, 1, "", "ImageAnnotationMerger"], [229, 1, 1, "", "IntersectMerge"], [229, 1, 1, "", "LabelCategories"], [229, 1, 1, "", "LabelMerger"], [229, 1, 1, "", "LineMerger"], [229, 1, 1, "", "MaskCategories"], [229, 1, 1, "", "MaskMerger"], [229, 1, 1, "", "Merger"], [229, 5, 1, "", "NoMatchingAnnError"], [229, 5, 1, "", "NoMatchingItemError"], [229, 1, 1, "", "OrderedDict"], [229, 1, 1, "", "PointsCategories"], [229, 1, 1, "", "PointsMerger"], [229, 1, 1, "", "PolygonMerger"], [229, 1, 1, "", "RotatedBboxMerger"], [229, 1, 1, "", "TabularMerger"], [229, 5, 1, "", "WrongGroupError"], [229, 3, 1, "", "attrib"], [229, 3, 1, "", "attrs"], [229, 3, 1, "", "ensure_cls"], [229, 3, 1, "", "find"], [229, 3, 1, "", "find_instances"], [229, 3, 1, "", "max_bbox"]], "datumaro.components.merge.intersect_merge.AnnotationMerger": [[229, 4, 1, "", "merge_clusters"]], "datumaro.components.merge.intersect_merge.AnnotationType": [[229, 2, 1, "", "bbox"], [229, 2, 1, "", "caption"], [229, 2, 1, "", "cuboid_3d"], [229, 2, 1, "", "depth_annotation"], [229, 2, 1, "", "ellipse"], [229, 2, 1, "", "feature_vector"], [229, 2, 1, "", "hash_key"], [229, 2, 1, "", "label"], [229, 2, 1, "", "mask"], [229, 2, 1, "", "points"], [229, 2, 1, "", "polygon"], [229, 2, 1, "", "polyline"], [229, 2, 1, "", "rotated_bbox"], [229, 2, 1, "", "super_resolution_annotation"], [229, 2, 1, "", "tabular"], [229, 2, 1, "", "unknown"]], "datumaro.components.merge.intersect_merge.AnnotationsTooCloseError": [[229, 2, 1, "", "a"], [229, 2, 1, "", "b"], [229, 2, 1, "", "distance"], [229, 2, 1, "", "item_id"]], "datumaro.components.merge.intersect_merge.ConflictingCategoriesError": [[229, 2, 1, "", "sources"]], "datumaro.components.merge.intersect_merge.Cuboid3dMerger": [[229, 4, 1, "", "merge_cluster"]], "datumaro.components.merge.intersect_merge.DatasetItem": [[229, 2, 1, "", "annotations"], [229, 2, 1, "", "attributes"], [229, 2, 1, "", "id"], [229, 2, 1, "", "media"], [229, 4, 1, "", "media_as"], [229, 2, 1, "", "subset"], [229, 4, 1, "", "wrap"]], "datumaro.components.merge.intersect_merge.DatasetItemStorage": [[229, 4, 1, "", "get"], [229, 4, 1, "", "get_annotated_items"], [229, 4, 1, "", "get_annotations"], [229, 4, 1, "", "get_datasetitem_by_path"], [229, 4, 1, "", "get_subset"], [229, 4, 1, "", "is_empty"], [229, 4, 1, "", "put"], [229, 4, 1, "", "remove"], [229, 4, 1, "", "subsets"]], "datumaro.components.merge.intersect_merge.DatasetItemStorageDatasetView": [[229, 1, 1, "", "Subset"], [229, 4, 1, "", "ann_types"], [229, 4, 1, "", "categories"], [229, 4, 1, "", "get"], [229, 4, 1, "", "get_subset"], [229, 4, 1, "", "infos"], [229, 4, 1, "", "media_type"], [229, 4, 1, "", "subsets"]], "datumaro.components.merge.intersect_merge.DatasetItemStorageDatasetView.Subset": [[229, 4, 1, "", "ann_types"], [229, 4, 1, "", "categories"], [229, 4, 1, "", "get"], [229, 4, 1, "", "get_subset"], [229, 4, 1, "", "infos"], [229, 4, 1, "", "media_type"], [229, 4, 1, "", "put"], [229, 4, 1, "", "remove"], [229, 4, 1, "", "subsets"]], "datumaro.components.merge.intersect_merge.FailedAttrVotingError": [[229, 2, 1, "", "ann"], [229, 2, 1, "", "attr"], [229, 2, 1, "", "item_id"], [229, 2, 1, "", "votes"]], "datumaro.components.merge.intersect_merge.IDataset": [[229, 4, 1, "", "ann_types"], [229, 4, 1, "", "categories"], [229, 4, 1, "", "get"], [229, 4, 1, "", "get_subset"], [229, 4, 1, "", "infos"], [229, 6, 1, "", "is_stream"], [229, 4, 1, "", "media_type"], [229, 4, 1, "", "subsets"]], "datumaro.components.merge.intersect_merge.IntersectMerge": [[229, 1, 1, "", "Conf"], [229, 4, 1, "", "add_item_error"], [229, 4, 1, "", "get_ann_source"], [229, 4, 1, "", "get_any_label_name"], [229, 4, 1, "", "match_items"], [229, 4, 1, "", "merge"], [229, 4, 1, "", "merge_annotations"], [229, 4, 1, "", "merge_categories"], [229, 4, 1, "", "merge_items"]], "datumaro.components.merge.intersect_merge.LabelCategories": [[229, 1, 1, "", "Category"], [229, 1, 1, "", "LabelGroup"], [229, 4, 1, "", "add"], [229, 4, 1, "", "add_label_group"], [229, 4, 1, "", "find"], [229, 4, 1, "", "from_iterable"], [229, 2, 1, "", "items"], [229, 2, 1, "", "label_groups"]], "datumaro.components.merge.intersect_merge.LabelCategories.Category": [[229, 2, 1, "", "attributes"], [229, 2, 1, "", "name"], [229, 2, 1, "", "parent"]], "datumaro.components.merge.intersect_merge.LabelCategories.LabelGroup": [[229, 2, 1, "", "group_type"], [229, 2, 1, "", "labels"], [229, 2, 1, "", "name"]], "datumaro.components.merge.intersect_merge.LabelMerger": [[229, 4, 1, "", "merge_clusters"]], "datumaro.components.merge.intersect_merge.MaskCategories": [[229, 2, 1, "", "colormap"], [229, 4, 1, "", "generate"], [229, 6, 1, "", "inverse_colormap"]], "datumaro.components.merge.intersect_merge.Merger": [[229, 4, 1, "", "get_any_label_name"], [229, 4, 1, "", "merge_ann_types"], [229, 4, 1, "", "merge_categories"], [229, 4, 1, "", "merge_infos"], [229, 4, 1, "", "merge_media_types"], [229, 4, 1, "", "save_merge_report"]], "datumaro.components.merge.intersect_merge.NoMatchingAnnError": [[229, 2, 1, "", "ann"], [229, 2, 1, "", "item_id"]], "datumaro.components.merge.intersect_merge.NoMatchingItemError": [[229, 2, 1, "", "item_id"]], "datumaro.components.merge.intersect_merge.OrderedDict": [[229, 4, 1, "", "clear"], [229, 4, 1, "", "copy"], [229, 4, 1, "", "fromkeys"], [229, 4, 1, "", "items"], [229, 4, 1, "", "keys"], [229, 4, 1, "", "move_to_end"], [229, 4, 1, "", "pop"], [229, 4, 1, "", "popitem"], [229, 4, 1, "", "setdefault"], [229, 4, 1, "", "update"], [229, 4, 1, "", "values"]], "datumaro.components.merge.intersect_merge.PointsCategories": [[229, 1, 1, "", "Category"], [229, 4, 1, "", "add"], [229, 4, 1, "", "from_iterable"], [229, 2, 1, "", "items"]], "datumaro.components.merge.intersect_merge.PointsCategories.Category": [[229, 2, 1, "", "joints"], [229, 2, 1, "", "labels"]], "datumaro.components.merge.intersect_merge.WrongGroupError": [[229, 2, 1, "", "expected"], [229, 2, 1, "", "found"], [229, 2, 1, "", "group"], [229, 2, 1, "", "item_id"]], "datumaro.components.merge.union_merge": [[230, 1, 1, "", "AnnotationType"], [230, 1, 1, "", "DatasetItem"], [230, 1, 1, "", "DatasetItemStorage"], [230, 1, 1, "", "IDataset"], [230, 1, 1, "", "LabelCategories"], [230, 1, 1, "", "Merger"], [230, 1, 1, "", "UnionMerge"], [230, 1, 1, "", "defaultdict"]], "datumaro.components.merge.union_merge.AnnotationType": [[230, 2, 1, "", "bbox"], [230, 2, 1, "", "caption"], [230, 2, 1, "", "cuboid_3d"], [230, 2, 1, "", "depth_annotation"], [230, 2, 1, "", "ellipse"], [230, 2, 1, "", "feature_vector"], [230, 2, 1, "", "hash_key"], [230, 2, 1, "", "label"], [230, 2, 1, "", "mask"], [230, 2, 1, "", "points"], [230, 2, 1, "", "polygon"], [230, 2, 1, "", "polyline"], [230, 2, 1, "", "rotated_bbox"], [230, 2, 1, "", "super_resolution_annotation"], [230, 2, 1, "", "tabular"], [230, 2, 1, "", "unknown"]], "datumaro.components.merge.union_merge.DatasetItem": [[230, 2, 1, "", "annotations"], [230, 2, 1, "", "attributes"], [230, 2, 1, "", "id"], [230, 2, 1, "", "media"], [230, 4, 1, "", "media_as"], [230, 2, 1, "", "subset"], [230, 4, 1, "", "wrap"]], "datumaro.components.merge.union_merge.DatasetItemStorage": [[230, 4, 1, "", "get"], [230, 4, 1, "", "get_annotated_items"], [230, 4, 1, "", "get_annotations"], [230, 4, 1, "", "get_datasetitem_by_path"], [230, 4, 1, "", "get_subset"], [230, 4, 1, "", "is_empty"], [230, 4, 1, "", "put"], [230, 4, 1, "", "remove"], [230, 4, 1, "", "subsets"]], "datumaro.components.merge.union_merge.IDataset": [[230, 4, 1, "", "ann_types"], [230, 4, 1, "", "categories"], [230, 4, 1, "", "get"], [230, 4, 1, "", "get_subset"], [230, 4, 1, "", "infos"], [230, 6, 1, "", "is_stream"], [230, 4, 1, "", "media_type"], [230, 4, 1, "", "subsets"]], "datumaro.components.merge.union_merge.LabelCategories": [[230, 1, 1, "", "Category"], [230, 1, 1, "", "LabelGroup"], [230, 4, 1, "", "add"], [230, 4, 1, "", "add_label_group"], [230, 4, 1, "", "find"], [230, 4, 1, "", "from_iterable"], [230, 2, 1, "", "items"], [230, 2, 1, "", "label_groups"]], "datumaro.components.merge.union_merge.LabelCategories.Category": [[230, 2, 1, "", "attributes"], [230, 2, 1, "", "name"], [230, 2, 1, "", "parent"]], "datumaro.components.merge.union_merge.LabelCategories.LabelGroup": [[230, 2, 1, "", "group_type"], [230, 2, 1, "", "labels"], [230, 2, 1, "", "name"]], "datumaro.components.merge.union_merge.Merger": [[230, 4, 1, "", "get_any_label_name"], [230, 4, 1, "", "merge_ann_types"], [230, 4, 1, "", "merge_categories"], [230, 4, 1, "", "merge_infos"], [230, 4, 1, "", "merge_media_types"], [230, 4, 1, "", "save_merge_report"]], "datumaro.components.merge.union_merge.UnionMerge": [[230, 4, 1, "", "merge"], [230, 4, 1, "", "merge_categories"]], "datumaro.components.merge.union_merge.defaultdict": [[230, 4, 1, "", "copy"], [230, 2, 1, "", "default_factory"]], "datumaro.components.operations": [[231, 3, 1, "", "compute_ann_statistics"], [231, 3, 1, "", "compute_image_statistics"], [231, 3, 1, "", "find_unique_images"], [231, 3, 1, "", "match_classes"], [231, 3, 1, "", "match_items_by_id"], [231, 3, 1, "", "match_items_by_image_hash"], [231, 3, 1, "", "mean_std"]], "datumaro.components.progress_reporting": [[232, 1, 1, "", "NullProgressReporter"], [232, 1, 1, "", "ProgressReporter"], [232, 1, 1, "", "SimpleProgressReporter"], [232, 1, 1, "", "TQDMProgressReporter"]], "datumaro.components.progress_reporting.NullProgressReporter": [[232, 6, 1, "", "interval"], [232, 4, 1, "", "iter"], [232, 6, 1, "", "period"], [232, 4, 1, "", "report_status"], [232, 4, 1, "", "split"], [232, 4, 1, "", "start"]], "datumaro.components.progress_reporting.ProgressReporter": [[232, 4, 1, "", "finish"], [232, 6, 1, "", "interval"], [232, 4, 1, "", "iter"], [232, 6, 1, "", "period"], [232, 4, 1, "", "report_status"], [232, 4, 1, "", "split"], [232, 4, 1, "", "start"]], "datumaro.components.progress_reporting.SimpleProgressReporter": [[232, 4, 1, "", "finish"], [232, 6, 1, "", "interval"], [232, 6, 1, "", "period"], [232, 4, 1, "", "report_status"], [232, 4, 1, "", "split"], [232, 4, 1, "", "start"]], "datumaro.components.progress_reporting.TQDMProgressReporter": [[232, 4, 1, "", "finish"], [232, 6, 1, "", "interval"], [232, 6, 1, "", "period"], [232, 4, 1, "", "report_status"], [232, 4, 1, "", "split"], [232, 4, 1, "", "start"]], "datumaro.components.project": [[233, 1, 1, "", "BuildStageType"], [233, 1, 1, "", "CrudProxy"], [233, 1, 1, "", "DiffStatus"], [233, 1, 1, "", "DvcWrapper"], [233, 1, 1, "", "GitWrapper"], [233, 1, 1, "", "IgnoreMode"], [233, 1, 1, "", "Pipeline"], [233, 1, 1, "", "Project"], [233, 1, 1, "", "ProjectBuildTargets"], [233, 1, 1, "", "ProjectBuilder"], [233, 1, 1, "", "ProjectSourceDataset"], [233, 1, 1, "", "ProjectSources"], [233, 1, 1, "", "Tree"]], "datumaro.components.project.BuildStageType": [[233, 2, 1, "", "convert"], [233, 2, 1, "", "explore"], [233, 2, 1, "", "filter"], [233, 2, 1, "", "inference"], [233, 2, 1, "", "project"], [233, 2, 1, "", "source"], [233, 2, 1, "", "transform"]], "datumaro.components.project.CrudProxy": [[233, 4, 1, "", "get"], [233, 4, 1, "", "items"]], "datumaro.components.project.DiffStatus": [[233, 2, 1, "", "added"], [233, 2, 1, "", "foreign_modified"], [233, 2, 1, "", "missing"], [233, 2, 1, "", "modified"], [233, 2, 1, "", "removed"]], "datumaro.components.project.DvcWrapper": [[233, 2, 1, "", "DIR_HASH_LEN"], [233, 2, 1, "", "DIR_HASH_SUFFIX"], [233, 5, 1, "", "DvcError"], [233, 2, 1, "", "FILE_HASH_LEN"], [233, 4, 1, "", "add"], [233, 4, 1, "", "checkout"], [233, 4, 1, "", "close"], [233, 4, 1, "", "get_hash_from_dvcfile"], [233, 4, 1, "", "ignore"], [233, 4, 1, "", "init"], [233, 6, 1, "", "initialized"], [233, 4, 1, "", "is_cached"], [233, 4, 1, "", "is_dir_hash"], [233, 4, 1, "", "is_file_hash"], [233, 4, 1, "", "is_hash"], [233, 4, 1, "", "module"], [233, 4, 1, "", "obj_path"], [233, 4, 1, "", "remove_cache_obj"], [233, 4, 1, "", "write_obj"], [233, 2, 1, "", "yaml"], [233, 2, 1, "", "yaml_parser"]], "datumaro.components.project.GitWrapper": [[233, 2, 1, "", "GitStatus"], [233, 2, 1, "", "GitTree"], [233, 2, 1, "", "HASH_LEN"], [233, 4, 1, "", "add"], [233, 6, 1, "", "branch"], [233, 4, 1, "", "checkout"], [233, 4, 1, "", "close"], [233, 4, 1, "", "commit"], [233, 4, 1, "", "get_tree"], [233, 4, 1, "", "has_commits"], [233, 6, 1, "", "head"], [233, 4, 1, "", "ignore"], [233, 4, 1, "", "init"], [233, 6, 1, "", "initialized"], [233, 4, 1, "", "is_hash"], [233, 4, 1, "", "is_ref"], [233, 4, 1, "", "log"], [233, 4, 1, "", "module"], [233, 4, 1, "", "rev_parse"], [233, 4, 1, "", "status"], [233, 4, 1, "", "write_tree"]], "datumaro.components.project.IgnoreMode": [[233, 2, 1, "", "append"], [233, 2, 1, "", "remove"], [233, 2, 1, "", "rewrite"]], "datumaro.components.project.Pipeline": [[233, 4, 1, "", "get_slice"], [233, 6, 1, "", "head"], [233, 6, 1, "", "head_node"]], "datumaro.components.project.Project": [[233, 4, 1, "", "add_model"], [233, 4, 1, "", "add_source"], [233, 6, 1, "", "branch"], [233, 4, 1, "", "cache_path"], [233, 4, 1, "", "checkout"], [233, 4, 1, "", "close"], [233, 4, 1, "", "commit"], [233, 4, 1, "", "compute_source_hash"], [233, 6, 1, "", "config"], [233, 4, 1, "", "diff"], [233, 6, 1, "", "env"], [233, 4, 1, "", "find_project_dir"], [233, 4, 1, "", "get_rev"], [233, 4, 1, "", "has_commits"], [233, 6, 1, "", "head"], [233, 6, 1, "", "head_rev"], [233, 4, 1, "", "history"], [233, 4, 1, "", "import_source"], [233, 4, 1, "", "init"], [233, 4, 1, "", "is_obj_cached"], [233, 4, 1, "", "is_ref"], [233, 4, 1, "", "is_rev_cached"], [233, 4, 1, "", "make_model"], [233, 4, 1, "", "migrate_from_v1_to_v2"], [233, 4, 1, "", "model_data_dir"], [233, 6, 1, "", "models"], [233, 6, 1, "", "readonly"], [233, 4, 1, "", "refresh_source_hash"], [233, 4, 1, "", "remove_cache_obj"], [233, 4, 1, "", "remove_model"], [233, 4, 1, "", "remove_source"], [233, 4, 1, "", "save"], [233, 4, 1, "", "source_data_dir"], [233, 4, 1, "", "status"], [233, 4, 1, "", "validate_source_name"], [233, 6, 1, "", "working_tree"]], "datumaro.components.project.ProjectBuildTargets": [[233, 2, 1, "", "BASE_STAGE"], [233, 2, 1, "", "MAIN_TARGET"], [233, 4, 1, "", "add_convert_stage"], [233, 4, 1, "", "add_explore_stage"], [233, 4, 1, "", "add_filter_stage"], [233, 4, 1, "", "add_inference_stage"], [233, 4, 1, "", "add_stage"], [233, 4, 1, "", "add_target"], [233, 4, 1, "", "add_transform_stage"], [233, 4, 1, "", "make_pipeline"], [233, 4, 1, "", "make_target_name"], [233, 4, 1, "", "remove_stage"], [233, 4, 1, "", "remove_target"], [233, 4, 1, "", "split_target_name"], [233, 4, 1, "", "strip_target_name"]], "datumaro.components.project.ProjectBuilder": [[233, 4, 1, "", "make_dataset"]], "datumaro.components.project.ProjectSourceDataset": [[233, 4, 1, "", "ann_types"], [233, 4, 1, "", "categories"], [233, 6, 1, "", "config"], [233, 4, 1, "", "get"], [233, 4, 1, "", "get_subset"], [233, 4, 1, "", "infos"], [233, 4, 1, "", "media_type"], [233, 6, 1, "", "readonly"], [233, 4, 1, "", "save"], [233, 4, 1, "", "subsets"]], "datumaro.components.project.Tree": [[233, 6, 1, "", "build_targets"], [233, 4, 1, "", "clone"], [233, 6, 1, "", "config"], [233, 4, 1, "", "dump"], [233, 6, 1, "", "env"], [233, 6, 1, "", "is_working_tree"], [233, 4, 1, "", "make_dataset"], [233, 4, 1, "", "make_pipeline"], [233, 6, 1, "", "rev"], [233, 4, 1, "", "save"], [233, 4, 1, "", "source_data_dir"], [233, 6, 1, "", "sources"]], "datumaro.components.registry": [[234, 1, 1, "", "DatasetBaseRegistry"], [234, 1, 1, "", "ExporterRegistry"], [234, 1, 1, "", "GeneratorRegistry"], [234, 1, 1, "", "ImporterRegistry"], [234, 1, 1, "", "LauncherRegistry"], [234, 1, 1, "", "PluginRegistry"], [234, 1, 1, "", "Registry"], [234, 1, 1, "", "TransformRegistry"], [234, 1, 1, "", "ValidatorRegistry"]], "datumaro.components.registry.ImporterRegistry": [[234, 4, 1, "", "register"]], "datumaro.components.registry.PluginRegistry": [[234, 4, 1, "", "batch_register"], [234, 4, 1, "", "get"]], "datumaro.components.registry.Registry": [[234, 4, 1, "", "get"], [234, 4, 1, "", "items"], [234, 4, 1, "", "register"], [234, 4, 1, "", "unregister"]], "datumaro.components.shift_analyzer": [[235, 1, 1, "", "FeatureAccumulator"], [235, 1, 1, "", "FeatureAccumulatorByLabel"], [235, 1, 1, "", "RunningStats1D"], [235, 1, 1, "", "ShiftAnalyzer"]], "datumaro.components.shift_analyzer.FeatureAccumulator": [[235, 4, 1, "", "get_activation_stats"]], "datumaro.components.shift_analyzer.FeatureAccumulatorByLabel": [[235, 4, 1, "", "get_activation_stats"]], "datumaro.components.shift_analyzer.RunningStats1D": [[235, 4, 1, "", "add"], [235, 6, 1, "", "cov"], [235, 6, 1, "", "mean"]], "datumaro.components.shift_analyzer.ShiftAnalyzer": [[235, 4, 1, "", "compute_covariate_shift"], [235, 4, 1, "", "compute_label_shift"]], "datumaro.components.transformer": [[236, 1, 1, "", "ItemTransform"], [236, 1, 1, "", "ModelTransform"], [236, 1, 1, "", "Transform"]], "datumaro.components.transformer.ItemTransform": [[236, 4, 1, "", "transform_item"]], "datumaro.components.transformer.ModelTransform": [[236, 4, 1, "", "categories"], [236, 4, 1, "", "get_subset"], [236, 4, 1, "", "infos"], [236, 4, 1, "", "transform_item"]], "datumaro.components.transformer.Transform": [[236, 4, 1, "", "categories"], [236, 4, 1, "", "infos"], [236, 4, 1, "", "media_type"], [236, 4, 1, "", "subsets"], [236, 4, 1, "", "wrap_item"]], "datumaro.components.validator": [[237, 1, 1, "", "Severity"], [237, 1, 1, "", "TaskType"], [237, 1, 1, "", "Validator"]], "datumaro.components.validator.Severity": [[237, 2, 1, "", "error"], [237, 2, 1, "", "info"], [237, 2, 1, "", "warning"]], "datumaro.components.validator.TaskType": [[237, 2, 1, "", "classification"], [237, 2, 1, "", "detection"], [237, 2, 1, "", "segmentation"], [237, 2, 1, "", "tabular"]], "datumaro.components.validator.Validator": [[237, 4, 1, "", "compute_statistics"], [237, 4, 1, "", "generate_reports"], [237, 4, 1, "", "validate"]], "datumaro.components.visualizer": [[238, 1, 1, "", "Visualizer"]], "datumaro.components.visualizer.Visualizer": [[238, 6, 1, "", "draw_only_image"], [238, 4, 1, "", "get_random_items"], [238, 4, 1, "", "vis_gallery"], [238, 4, 1, "", "vis_one_sample"]], "datumaro.plugins": [[242, 0, 0, "-", "accuracy_checker_plugin"], [244, 0, 0, "-", "anchor_generator"], [245, 0, 0, "-", "configurable_validator"], [246, 0, 0, "-", "data_formats"], [378, 0, 0, "-", "explorer"], [379, 0, 0, "-", "framework_converter"], [380, 0, 0, "-", "inference_server_plugin"], [386, 0, 0, "-", "missing_annotation_detection"], [387, 0, 0, "-", "ndr"], [388, 0, 0, "-", "openvino_plugin"], [396, 0, 0, "-", "sam_transforms"], [403, 0, 0, "-", "sampler"], [409, 0, 0, "-", "specs"], [410, 0, 0, "-", "splitter"], [411, 0, 0, "-", "synthetic_data"], [414, 0, 0, "-", "tiling"], [418, 0, 0, "-", "transforms"], [419, 0, 0, "-", "validators"]], "datumaro.plugins.accuracy_checker_plugin": [[243, 0, 0, "-", "details"]], "datumaro.plugins.anchor_generator": [[244, 1, 1, "", "BboxOverlaps2D"], [244, 1, 1, "", "DataAwareAnchorGenerator"]], "datumaro.plugins.anchor_generator.DataAwareAnchorGenerator": [[244, 4, 1, "", "get_anchors"], [244, 4, 1, "", "get_loss"], [244, 4, 1, "", "get_shifts"], [244, 4, 1, "", "initialize"], [244, 4, 1, "", "optimize"]], "datumaro.plugins.configurable_validator": [[245, 1, 1, "", "ClsStats"], [245, 1, 1, "", "ClsStatsData"], [245, 1, 1, "", "ConfigurableValidator"], [245, 1, 1, "", "DetStats"], [245, 1, 1, "", "DetStatsData"], [245, 1, 1, "", "SegStats"], [245, 1, 1, "", "SegStatsData"], [245, 1, 1, "", "StatsData"], [245, 1, 1, "", "TblStats"], [245, 1, 1, "", "TblStatsData"]], "datumaro.plugins.configurable_validator.ClsStatsData": [[245, 2, 1, "", "multiple_label"]], "datumaro.plugins.configurable_validator.ConfigurableValidator": [[245, 2, 1, "", "ALL_WARNINGS"], [245, 2, 1, "", "DEFAULT_DOMINANCE_RATIO_THR"], [245, 2, 1, "", "DEFAULT_FAR_FROM_MEAN_THR"], [245, 2, 1, "", "DEFAULT_FEW_SAMPLES_THR"], [245, 2, 1, "", "DEFAULT_IMBALANCE_RATIO_THR"], [245, 2, 1, "", "DEFAULT_TOPK_BINS"], [245, 4, 1, "", "build_cmdline_parser"], [245, 4, 1, "", "compute_statistics"], [245, 4, 1, "", "generate_reports"]], "datumaro.plugins.configurable_validator.DetStatsData": [[245, 2, 1, "", "invalid_value"], [245, 2, 1, "", "negative_length"]], "datumaro.plugins.configurable_validator.SegStatsData": [[245, 2, 1, "", "invalid_value"]], "datumaro.plugins.configurable_validator.StatsData": [[245, 2, 1, "", "categories"], [245, 2, 1, "", "missing_attribute"], [245, 2, 1, "", "missing_label"], [245, 2, 1, "", "undefined_attribute"], [245, 2, 1, "", "undefined_label"]], "datumaro.plugins.configurable_validator.TblStatsData": [[245, 2, 1, "", "broken_annotations"], [245, 2, 1, "", "categories"], [245, 2, 1, "", "empty_caption"], [245, 2, 1, "", "empty_label"], [245, 2, 1, "", "missing_annotations"]], "datumaro.plugins.data_formats": [[247, 0, 0, "-", "ade20k2017"], [248, 0, 0, "-", "ade20k2020"], [249, 0, 0, "-", "arrow"], [257, 0, 0, "-", "ava"], [260, 0, 0, "-", "brats"], [261, 0, 0, "-", "brats_numpy"], [262, 0, 0, "-", "camvid"], [263, 0, 0, "-", "celeba"], [266, 0, 0, "-", "cifar"], [267, 0, 0, "-", "cityscapes"], [268, 0, 0, "-", "coco"], [275, 0, 0, "-", "common_semantic_segmentation"], [276, 0, 0, "-", "common_super_resolution"], [277, 0, 0, "-", "cvat"], [281, 0, 0, "-", "datumaro"], [287, 0, 0, "-", "datumaro_binary"], [297, 0, 0, "-", "dota"], [298, 0, 0, "-", "icdar"], [302, 0, 0, "-", "image_dir"], [303, 0, 0, "-", "image_zip"], [304, 0, 0, "-", "imagenet"], [305, 0, 0, "-", "imagenet_txt"], [306, 0, 0, "-", "kaggle"], [308, 0, 0, "-", "kinetics"], [309, 0, 0, "-", "kitti"], [314, 0, 0, "-", "kitti_raw"], [318, 0, 0, "-", "labelme"], [319, 0, 0, "-", "lfw"], [320, 0, 0, "-", "mapillary_vistas"], [324, 0, 0, "-", "market1501"], [325, 0, 0, "-", "mars"], [326, 0, 0, "-", "mmdet"], [327, 0, 0, "-", "mnist"], [328, 0, 0, "-", "mnist_csv"], [329, 0, 0, "-", "mot"], [330, 0, 0, "-", "mots"], [331, 0, 0, "-", "mpii"], [335, 0, 0, "-", "mvtec"], [340, 0, 0, "-", "nyu_depth_v2"], [341, 0, 0, "-", "open_images"], [342, 0, 0, "-", "roboflow"], [346, 0, 0, "-", "segment_anything"], [350, 0, 0, "-", "sly_pointcloud"], [354, 0, 0, "-", "synthia"], [358, 0, 0, "-", "tabular"], [359, 0, 0, "-", "tf_detection_api"], [363, 0, 0, "-", "vgg_face2"], [364, 0, 0, "-", "video"], [365, 0, 0, "-", "voc"], [370, 0, 0, "-", "vott_csv"], [371, 0, 0, "-", "vott_json"], [372, 0, 0, "-", "widerface"], [373, 0, 0, "-", "yolo"]], "datumaro.plugins.data_formats.ade20k2017": [[247, 1, 1, "", "Ade20k2017Base"], [247, 1, 1, "", "Ade20k2017Importer"], [247, 1, 1, "", "Ade20k2017Path"]], "datumaro.plugins.data_formats.ade20k2017.Ade20k2017Base": [[247, 4, 1, "", "categories"]], "datumaro.plugins.data_formats.ade20k2017.Ade20k2017Importer": [[247, 4, 1, "", "detect"], [247, 4, 1, "", "find_sources"], [247, 4, 1, "", "get_file_extensions"]], "datumaro.plugins.data_formats.ade20k2017.Ade20k2017Path": [[247, 2, 1, "", "MASK_PATTERN"]], "datumaro.plugins.data_formats.ade20k2020": [[248, 1, 1, "", "Ade20k2020Base"], [248, 1, 1, "", "Ade20k2020Importer"], [248, 1, 1, "", "Ade20k2020Path"]], "datumaro.plugins.data_formats.ade20k2020.Ade20k2020Base": [[248, 4, 1, "", "categories"]], "datumaro.plugins.data_formats.ade20k2020.Ade20k2020Importer": [[248, 4, 1, "", "detect"], [248, 4, 1, "", "find_sources"], [248, 4, 1, "", "get_file_extensions"]], "datumaro.plugins.data_formats.ade20k2020.Ade20k2020Path": [[248, 2, 1, "", "MASK_PATTERN"]], "datumaro.plugins.data_formats.arrow": [[249, 1, 1, "", "ArrowBase"], [249, 1, 1, "", "ArrowExporter"], [249, 1, 1, "", "ArrowImporter"], [250, 0, 0, "-", "base"], [251, 0, 0, "-", "exporter"], [252, 0, 0, "-", "format"], [253, 0, 0, "-", "importer"], [254, 0, 0, "-", "mapper"]], "datumaro.plugins.data_formats.arrow.ArrowBase": [[249, 4, 1, "", "categories"], [249, 4, 1, "", "get"], [249, 4, 1, "", "get_subset"], [249, 4, 1, "", "infos"], [249, 6, 1, "", "lookup"], [249, 4, 1, "", "subsets"]], "datumaro.plugins.data_formats.arrow.ArrowExporter": [[249, 2, 1, "", "AVAILABLE_IMAGE_EXTS"], [249, 2, 1, "", "DEFAULT_IMAGE_EXT"], [249, 4, 1, "", "build_cmdline_parser"], [249, 4, 1, "", "patch"]], "datumaro.plugins.data_formats.arrow.ArrowImporter": [[249, 4, 1, "", "detect"], [249, 4, 1, "", "find_sources"], [249, 4, 1, "", "find_sources_with_params"], [249, 4, 1, "", "get_file_extensions"]], "datumaro.plugins.data_formats.arrow.base": [[250, 1, 1, "", "ArrowBase"], [250, 1, 1, "", "ArrowSubsetBase"], [250, 1, 1, "", "Metadata"]], "datumaro.plugins.data_formats.arrow.base.ArrowBase": [[250, 4, 1, "", "categories"], [250, 4, 1, "", "get"], [250, 4, 1, "", "get_subset"], [250, 4, 1, "", "infos"], [250, 6, 1, "", "lookup"], [250, 4, 1, "", "subsets"]], "datumaro.plugins.data_formats.arrow.base.ArrowSubsetBase": [[250, 4, 1, "", "get"]], "datumaro.plugins.data_formats.arrow.base.Metadata": [[250, 2, 1, "", "categories"], [250, 2, 1, "", "infos"], [250, 2, 1, "", "media_type"]], "datumaro.plugins.data_formats.arrow.exporter": [[251, 1, 1, "", "ArrowExporter"]], "datumaro.plugins.data_formats.arrow.exporter.ArrowExporter": [[251, 2, 1, "", "AVAILABLE_IMAGE_EXTS"], [251, 2, 1, "", "DEFAULT_IMAGE_EXT"], [251, 4, 1, "", "build_cmdline_parser"], [251, 4, 1, "", "patch"]], "datumaro.plugins.data_formats.arrow.format": [[252, 1, 1, "", "DatumaroArrow"]], "datumaro.plugins.data_formats.arrow.format.DatumaroArrow": [[252, 2, 1, "", "ID_FIELD"], [252, 2, 1, "", "IMAGE_FIELD"], [252, 2, 1, "", "MEDIA_FIELD"], [252, 2, 1, "", "MP_TIMEOUT"], [252, 2, 1, "", "POINT_CLOUD_FIELD"], [252, 2, 1, "", "SCHEMA"], [252, 2, 1, "", "SIGNATURE"], [252, 2, 1, "", "SUBSET_FIELD"], [252, 2, 1, "", "VERSION"], [252, 4, 1, "", "check_schema"], [252, 4, 1, "", "check_signature"], [252, 4, 1, "", "check_version"], [252, 4, 1, "", "create_schema_with_metadata"]], "datumaro.plugins.data_formats.arrow.importer": [[253, 1, 1, "", "ArrowImporter"], [253, 5, 1, "", "DatasetImportError"], [253, 1, 1, "", "DatumaroArrow"], [253, 1, 1, "", "FormatDetectionConfidence"], [253, 1, 1, "", "FormatDetectionContext"], [253, 1, 1, "", "Importer"]], "datumaro.plugins.data_formats.arrow.importer.ArrowImporter": [[253, 4, 1, "", "detect"], [253, 4, 1, "", "find_sources"], [253, 4, 1, "", "find_sources_with_params"], [253, 4, 1, "", "get_file_extensions"]], "datumaro.plugins.data_formats.arrow.importer.DatumaroArrow": [[253, 2, 1, "", "ID_FIELD"], [253, 2, 1, "", "IMAGE_FIELD"], [253, 2, 1, "", "MEDIA_FIELD"], [253, 2, 1, "", "MP_TIMEOUT"], [253, 2, 1, "", "POINT_CLOUD_FIELD"], [253, 2, 1, "", "SCHEMA"], [253, 2, 1, "", "SIGNATURE"], [253, 2, 1, "", "SUBSET_FIELD"], [253, 2, 1, "", "VERSION"], [253, 4, 1, "", "check_schema"], [253, 4, 1, "", "check_signature"], [253, 4, 1, "", "check_version"], [253, 4, 1, "", "create_schema_with_metadata"]], "datumaro.plugins.data_formats.arrow.importer.FormatDetectionConfidence": [[253, 2, 1, "", "EXTREME_LOW"], [253, 2, 1, "", "LOW"], [253, 2, 1, "", "MEDIUM"], [253, 2, 1, "", "NONE"]], "datumaro.plugins.data_formats.arrow.importer.FormatDetectionContext": [[253, 4, 1, "", "alternative"], [253, 4, 1, "", "fail"], [253, 4, 1, "", "probe_text_file"], [253, 4, 1, "", "raise_unsupported"], [253, 4, 1, "", "require_any"], [253, 4, 1, "", "require_file"], [253, 4, 1, "", "require_files"], [253, 4, 1, "", "require_files_iter"], [253, 6, 1, "", "root_path"]], "datumaro.plugins.data_formats.arrow.importer.Importer": [[253, 2, 1, "", "DETECT_CONFIDENCE"], [253, 6, 1, "", "can_stream"], [253, 4, 1, "", "detect"], [253, 4, 1, "", "find_sources"], [253, 4, 1, "", "find_sources_with_params"], [253, 4, 1, "", "get_extractor_merger"], [253, 4, 1, "", "get_file_extensions"]], "datumaro.plugins.data_formats.arrow.mapper": [[254, 1, 1, "", "AnnotationListMapper"], [254, 1, 1, "", "DatasetItem"], [254, 1, 1, "", "DatasetItemMapper"], [254, 5, 1, "", "DatumaroError"], [254, 1, 1, "", "DictMapper"], [254, 1, 1, "", "Image"], [254, 1, 1, "", "ImageMapper"], [254, 1, 1, "", "Mapper"], [254, 1, 1, "", "MediaElement"], [254, 1, 1, "", "MediaElementMapper"], [254, 1, 1, "", "MediaMapper"], [254, 1, 1, "", "MediaType"], [254, 1, 1, "", "PointCloud"], [254, 1, 1, "", "PointCloudMapper"], [255, 0, 0, "-", "dataset_item"], [254, 3, 1, "", "decode_image"], [254, 3, 1, "", "encode_image"], [254, 3, 1, "", "load_image"], [256, 0, 0, "-", "media"]], "datumaro.plugins.data_formats.arrow.mapper.AnnotationListMapper": [[254, 4, 1, "", "backward"], [254, 2, 1, "", "backward_map"], [254, 4, 1, "", "forward"]], "datumaro.plugins.data_formats.arrow.mapper.DatasetItem": [[254, 2, 1, "", "annotations"], [254, 2, 1, "", "attributes"], [254, 2, 1, "", "id"], [254, 2, 1, "", "media"], [254, 4, 1, "", "media_as"], [254, 2, 1, "", "subset"], [254, 4, 1, "", "wrap"]], "datumaro.plugins.data_formats.arrow.mapper.DatasetItemMapper": [[254, 4, 1, "", "backward"], [254, 4, 1, "", "forward"]], "datumaro.plugins.data_formats.arrow.mapper.DictMapper": [[254, 4, 1, "", "backward"], [254, 4, 1, "", "forward"]], "datumaro.plugins.data_formats.arrow.mapper.Image": [[254, 6, 1, "", "ext"], [254, 4, 1, "", "from_bytes"], [254, 4, 1, "", "from_file"], [254, 4, 1, "", "from_numpy"], [254, 6, 1, "", "has_size"], [254, 4, 1, "", "set_crypter"], [254, 6, 1, "", "size"]], "datumaro.plugins.data_formats.arrow.mapper.ImageMapper": [[254, 2, 1, "", "AVAILABLE_SCHEMES"], [254, 2, 1, "", "MEDIA_TYPE"], [254, 4, 1, "", "backward"], [254, 4, 1, "", "backward_extra_image"], [254, 4, 1, "", "decode"], [254, 4, 1, "", "encode"], [254, 4, 1, "", "forward"]], "datumaro.plugins.data_formats.arrow.mapper.Mapper": [[254, 4, 1, "", "backward"], [254, 4, 1, "", "forward"]], "datumaro.plugins.data_formats.arrow.mapper.MediaElement": [[254, 4, 1, "", "as_dict"], [254, 6, 1, "", "bytes"], [254, 6, 1, "", "data"], [254, 4, 1, "", "from_self"], [254, 6, 1, "", "has_data"], [254, 6, 1, "", "is_encrypted"], [254, 4, 1, "", "save"], [254, 4, 1, "", "set_crypter"], [254, 6, 1, "", "type"]], "datumaro.plugins.data_formats.arrow.mapper.MediaElementMapper": [[254, 2, 1, "", "MAGIC_PATH"], [254, 2, 1, "", "MEDIA_TYPE"], [254, 4, 1, "", "backward"], [254, 4, 1, "", "forward"]], "datumaro.plugins.data_formats.arrow.mapper.MediaMapper": [[254, 4, 1, "", "backward"], [254, 4, 1, "", "forward"]], "datumaro.plugins.data_formats.arrow.mapper.MediaType": [[254, 2, 1, "", "BYTE_IMAGE"], [254, 2, 1, "", "IMAGE"], [254, 2, 1, "", "MEDIA_ELEMENT"], [254, 2, 1, "", "MOSAIC_IMAGE"], [254, 2, 1, "", "MULTIFRAME_IMAGE"], [254, 2, 1, "", "NONE"], [254, 2, 1, "", "POINT_CLOUD"], [254, 2, 1, "", "ROI_IMAGE"], [254, 2, 1, "", "TABLE_ROW"], [254, 2, 1, "", "VIDEO"], [254, 2, 1, "", "VIDEO_FRAME"], [254, 6, 1, "", "media"]], "datumaro.plugins.data_formats.arrow.mapper.PointCloud": [[254, 6, 1, "", "extra_images"], [254, 4, 1, "", "from_bytes"], [254, 4, 1, "", "from_file"]], "datumaro.plugins.data_formats.arrow.mapper.PointCloudMapper": [[254, 2, 1, "", "B64_PREFIX"], [254, 2, 1, "", "MEDIA_TYPE"], [254, 4, 1, "", "backward"], [254, 4, 1, "", "forward"]], "datumaro.plugins.data_formats.arrow.mapper.dataset_item": [[255, 1, 1, "", "DatasetItemMapper"]], "datumaro.plugins.data_formats.arrow.mapper.dataset_item.DatasetItemMapper": [[255, 4, 1, "", "backward"], [255, 4, 1, "", "forward"]], "datumaro.plugins.data_formats.arrow.mapper.media": [[256, 1, 1, "", "ImageMapper"], [256, 1, 1, "", "MediaElementMapper"], [256, 1, 1, "", "MediaMapper"], [256, 1, 1, "", "PointCloudMapper"]], "datumaro.plugins.data_formats.arrow.mapper.media.ImageMapper": [[256, 2, 1, "", "AVAILABLE_SCHEMES"], [256, 2, 1, "", "MEDIA_TYPE"], [256, 4, 1, "", "backward"], [256, 4, 1, "", "backward_extra_image"], [256, 4, 1, "", "decode"], [256, 4, 1, "", "encode"], [256, 4, 1, "", "forward"]], "datumaro.plugins.data_formats.arrow.mapper.media.MediaElementMapper": [[256, 2, 1, "", "MAGIC_PATH"], [256, 2, 1, "", "MEDIA_TYPE"], [256, 4, 1, "", "backward"], [256, 4, 1, "", "forward"]], "datumaro.plugins.data_formats.arrow.mapper.media.MediaMapper": [[256, 4, 1, "", "backward"], [256, 4, 1, "", "forward"]], "datumaro.plugins.data_formats.arrow.mapper.media.PointCloudMapper": [[256, 2, 1, "", "B64_PREFIX"], [256, 2, 1, "", "MEDIA_TYPE"], [256, 4, 1, "", "backward"], [256, 4, 1, "", "forward"]], "datumaro.plugins.data_formats.ava": [[258, 0, 0, "-", "ava"], [259, 0, 0, "-", "ava_label_pb2"]], "datumaro.plugins.data_formats.ava.ava": [[258, 1, 1, "", "AvaBase"], [258, 1, 1, "", "AvaExporter"], [258, 1, 1, "", "AvaImporter"], [258, 1, 1, "", "AvaPath"]], "datumaro.plugins.data_formats.ava.ava.AvaExporter": [[258, 2, 1, "", "DEFAULT_IMAGE_EXT"]], "datumaro.plugins.data_formats.ava.ava.AvaImporter": [[258, 4, 1, "", "detect"], [258, 4, 1, "", "find_sources"], [258, 4, 1, "", "get_file_extensions"]], "datumaro.plugins.data_formats.ava.ava.AvaPath": [[258, 2, 1, "", "ANNOTATION_DIR"], [258, 2, 1, "", "ANNOTATION_EXT"], [258, 2, 1, "", "ANNOTATION_PREFIX"], [258, 2, 1, "", "ANNOTATION_VERSION"], [258, 2, 1, "", "IMAGE_DIR"], [258, 2, 1, "", "IMAGE_EXT"], [258, 2, 1, "", "LABEL_LIST"], [258, 2, 1, "", "PROPOSAL_EXT"]], "datumaro.plugins.data_formats.brats": [[260, 1, 1, "", "BratsBase"], [260, 1, 1, "", "BratsImporter"], [260, 1, 1, "", "BratsPath"]], "datumaro.plugins.data_formats.brats.BratsImporter": [[260, 4, 1, "", "detect"], [260, 4, 1, "", "find_sources"], [260, 4, 1, "", "get_file_extensions"]], "datumaro.plugins.data_formats.brats.BratsPath": [[260, 2, 1, "", "DATA_EXT"], [260, 2, 1, "", "IMAGES_DIR"], [260, 2, 1, "", "LABELS"]], "datumaro.plugins.data_formats.brats_numpy": [[261, 1, 1, "", "BratsNumpyBase"], [261, 1, 1, "", "BratsNumpyImporter"], [261, 1, 1, "", "BratsNumpyPath"]], "datumaro.plugins.data_formats.brats_numpy.BratsNumpyImporter": [[261, 4, 1, "", "detect"], [261, 4, 1, "", "find_sources"], [261, 4, 1, "", "get_file_extensions"]], "datumaro.plugins.data_formats.brats_numpy.BratsNumpyPath": [[261, 2, 1, "", "BOXES_FILE"], [261, 2, 1, "", "DATA_SUFFIX"], [261, 2, 1, "", "IDS_FILE"], [261, 2, 1, "", "LABELS_FILE"], [261, 2, 1, "", "LABEL_SUFFIX"]], "datumaro.plugins.data_formats.camvid": [[262, 1, 1, "", "CamvidBase"], [262, 1, 1, "", "CamvidExporter"], [262, 1, 1, "", "CamvidImporter"], [262, 1, 1, "", "CamvidPath"], [262, 1, 1, "", "LabelmapType"], [262, 3, 1, "", "make_camvid_categories"], [262, 3, 1, "", "parse_label_map"], [262, 3, 1, "", "write_label_map"]], "datumaro.plugins.data_formats.camvid.CamvidExporter": [[262, 2, 1, "", "DEFAULT_IMAGE_EXT"], [262, 4, 1, "", "build_cmdline_parser"], [262, 4, 1, "", "patch"], [262, 4, 1, "", "save_label_map"], [262, 4, 1, "", "save_segm"], [262, 4, 1, "", "save_segm_lists"]], "datumaro.plugins.data_formats.camvid.CamvidImporter": [[262, 4, 1, "", "detect"], [262, 4, 1, "", "find_sources"], [262, 4, 1, "", "get_file_extensions"]], "datumaro.plugins.data_formats.camvid.CamvidPath": [[262, 2, 1, "", "IMAGE_EXT"], [262, 2, 1, "", "LABELMAP_FILE"], [262, 2, 1, "", "MASK_EXT"], [262, 2, 1, "", "SEGM_DIR"]], "datumaro.plugins.data_formats.camvid.LabelmapType": [[262, 2, 1, "", "camvid"], [262, 2, 1, "", "source"]], "datumaro.plugins.data_formats.celeba": [[264, 0, 0, "-", "align_celeba"], [265, 0, 0, "-", "celeba"]], "datumaro.plugins.data_formats.celeba.align_celeba": [[264, 1, 1, "", "AlignCelebaBase"], [264, 1, 1, "", "AlignCelebaImporter"], [264, 1, 1, "", "AlignCelebaPath"]], "datumaro.plugins.data_formats.celeba.align_celeba.AlignCelebaBase": [[264, 4, 1, "", "split_annotation"]], "datumaro.plugins.data_formats.celeba.align_celeba.AlignCelebaImporter": [[264, 2, 1, "", "PATH_CLS"]], "datumaro.plugins.data_formats.celeba.align_celeba.AlignCelebaPath": [[264, 2, 1, "", "IMAGES_DIR"], [264, 2, 1, "", "LANDMARKS_FILE"], [264, 2, 1, "", "LANDMARKS_HEADER"]], "datumaro.plugins.data_formats.celeba.celeba": [[265, 1, 1, "", "CelebaBase"], [265, 1, 1, "", "CelebaImporter"], [265, 1, 1, "", "CelebaPath"]], "datumaro.plugins.data_formats.celeba.celeba.CelebaBase": [[265, 4, 1, "", "split_annotation"]], "datumaro.plugins.data_formats.celeba.celeba.CelebaImporter": [[265, 2, 1, "", "PATH_CLS"], [265, 4, 1, "", "detect"], [265, 4, 1, "", "find_sources"], [265, 4, 1, "", "get_file_extensions"]], "datumaro.plugins.data_formats.celeba.celeba.CelebaPath": [[265, 2, 1, "", "ATTRS_FILE"], [265, 2, 1, "", "BBOXES_FILE"], [265, 2, 1, "", "BBOXES_HEADER"], [265, 2, 1, "", "IMAGES_DIR"], [265, 2, 1, "", "LABELS_FILE"], [265, 2, 1, "", "LANDMARKS_FILE"], [265, 2, 1, "", "SUBSETS"], [265, 2, 1, "", "SUBSETS_FILE"]], "datumaro.plugins.data_formats.cifar": [[266, 1, 1, "", "CifarBase"], [266, 1, 1, "", "CifarExporter"], [266, 1, 1, "", "CifarImporter"], [266, 1, 1, "", "CifarPath"]], "datumaro.plugins.data_formats.cifar.CifarExporter": [[266, 2, 1, "", "DEFAULT_IMAGE_EXT"], [266, 4, 1, "", "patch"]], "datumaro.plugins.data_formats.cifar.CifarImporter": [[266, 4, 1, "", "detect"], [266, 4, 1, "", "find_sources"], [266, 4, 1, "", "get_file_extensions"]], "datumaro.plugins.data_formats.cifar.CifarPath": [[266, 2, 1, "", "IMAGE_SIZE"], [266, 2, 1, "", "META_100_FILE"], [266, 2, 1, "", "META_10_FILE"], [266, 2, 1, "", "TRAIN_FILE_PREFIX"], [266, 2, 1, "", "USELESS_FILE"]], "datumaro.plugins.data_formats.cityscapes": [[267, 1, 1, "", "CityscapesBase"], [267, 1, 1, "", "CityscapesExporter"], [267, 1, 1, "", "CityscapesImporter"], [267, 1, 1, "", "CityscapesPath"], [267, 1, 1, "", "LabelmapType"], [267, 3, 1, "", "make_cityscapes_categories"], [267, 3, 1, "", "parse_label_map"], [267, 3, 1, "", "write_label_map"]], "datumaro.plugins.data_formats.cityscapes.CityscapesExporter": [[267, 2, 1, "", "DEFAULT_IMAGE_EXT"], [267, 4, 1, "", "build_cmdline_parser"], [267, 4, 1, "", "patch"], [267, 4, 1, "", "save_label_map"], [267, 4, 1, "", "save_mask"]], "datumaro.plugins.data_formats.cityscapes.CityscapesImporter": [[267, 4, 1, "", "detect"], [267, 4, 1, "", "find_sources"], [267, 4, 1, "", "get_file_extensions"]], "datumaro.plugins.data_formats.cityscapes.CityscapesPath": [[267, 2, 1, "", "COLOR_IMAGE"], [267, 2, 1, "", "GT_FINE_DIR"], [267, 2, 1, "", "GT_INSTANCE_MASK_SUFFIX"], [267, 2, 1, "", "IMGS_FINE_DIR"], [267, 2, 1, "", "INSTANCES_IMAGE"], [267, 2, 1, "", "LABELIDS_IMAGE"], [267, 2, 1, "", "LABELMAP_FILE"], [267, 2, 1, "", "LABEL_TRAIN_IDS_SUFFIX"], [267, 2, 1, "", "ORIGINAL_IMAGE"], [267, 2, 1, "", "ORIGINAL_IMAGE_DIR"]], "datumaro.plugins.data_formats.cityscapes.LabelmapType": [[267, 2, 1, "", "cityscapes"], [267, 2, 1, "", "source"]], "datumaro.plugins.data_formats.coco": [[269, 0, 0, "-", "base"], [270, 0, 0, "-", "exporter"], [271, 0, 0, "-", "extractor_merger"], [272, 0, 0, "-", "format"], [273, 0, 0, "-", "importer"], [274, 0, 0, "-", "page_mapper"]], "datumaro.plugins.data_formats.coco.base": [[269, 1, 1, "", "CocoCaptionsBase"], [269, 1, 1, "", "CocoImageInfoBase"], [269, 1, 1, "", "CocoInstancesBase"], [269, 1, 1, "", "CocoLabelsBase"], [269, 1, 1, "", "CocoPanopticBase"], [269, 1, 1, "", "CocoPersonKeypointsBase"], [269, 1, 1, "", "CocoStuffBase"], [269, 1, 1, "", "DirPathExtracter"], [269, 1, 1, "", "MmdetDirPathExtracter"], [269, 1, 1, "", "RoboflowDirPathExtracter"]], "datumaro.plugins.data_formats.coco.base.DirPathExtracter": [[269, 4, 1, "", "find_images_dir"], [269, 4, 1, "", "find_rootpath"]], "datumaro.plugins.data_formats.coco.base.MmdetDirPathExtracter": [[269, 4, 1, "", "find_images_dir"], [269, 4, 1, "", "find_rootpath"]], "datumaro.plugins.data_formats.coco.base.RoboflowDirPathExtracter": [[269, 4, 1, "", "find_images_dir"], [269, 4, 1, "", "find_rootpath"]], "datumaro.plugins.data_formats.coco.exporter": [[270, 1, 1, "", "CocoCaptionsExporter"], [270, 1, 1, "", "CocoExporter"], [270, 1, 1, "", "CocoImageInfoExporter"], [270, 1, 1, "", "CocoInstancesExporter"], [270, 1, 1, "", "CocoLabelsExporter"], [270, 1, 1, "", "CocoPanopticExporter"], [270, 1, 1, "", "CocoPersonKeypointsExporter"], [270, 1, 1, "", "CocoStuffExporter"], [270, 1, 1, "", "SegmentationMode"], [270, 1, 1, "", "TemporaryWriters"]], "datumaro.plugins.data_formats.coco.exporter.CocoExporter": [[270, 2, 1, "", "DEFAULT_IMAGE_EXT"], [270, 4, 1, "", "build_cmdline_parser"], [270, 6, 1, "", "can_stream"], [270, 4, 1, "", "patch"]], "datumaro.plugins.data_formats.coco.exporter.SegmentationMode": [[270, 2, 1, "", "guess"], [270, 2, 1, "", "mask"], [270, 2, 1, "", "polygons"]], "datumaro.plugins.data_formats.coco.exporter.TemporaryWriters": [[270, 4, 1, "", "add_anns"], [270, 4, 1, "", "add_item"], [270, 6, 1, "", "anns"], [270, 4, 1, "", "close"], [270, 6, 1, "", "imgs"], [270, 4, 1, "", "merge"], [270, 4, 1, "", "remove"], [270, 4, 1, "", "reset"]], "datumaro.plugins.data_formats.coco.extractor_merger": [[271, 1, 1, "", "COCOExtractorMerger"], [271, 1, 1, "", "COCOTaskMergedBase"]], "datumaro.plugins.data_formats.coco.extractor_merger.COCOTaskMergedBase": [[271, 6, 1, "", "is_stream"], [271, 6, 1, "", "item_keys"]], "datumaro.plugins.data_formats.coco.format": [[272, 1, 1, "", "CocoImporterType"], [272, 1, 1, "", "CocoPath"], [272, 1, 1, "", "CocoTask"]], "datumaro.plugins.data_formats.coco.format.CocoImporterType": [[272, 2, 1, "", "default"], [272, 2, 1, "", "mmdet"], [272, 2, 1, "", "roboflow"]], "datumaro.plugins.data_formats.coco.format.CocoPath": [[272, 2, 1, "", "ANNOTATIONS_DIR"], [272, 2, 1, "", "IMAGES_DIR"], [272, 2, 1, "", "IMAGE_EXT"], [272, 2, 1, "", "PANOPTIC_EXT"]], "datumaro.plugins.data_formats.coco.format.CocoTask": [[272, 2, 1, "", "captions"], [272, 2, 1, "", "image_info"], [272, 2, 1, "", "instances"], [272, 2, 1, "", "labels"], [272, 2, 1, "", "panoptic"], [272, 2, 1, "", "person_keypoints"], [272, 2, 1, "", "stuff"]], "datumaro.plugins.data_formats.coco.importer": [[273, 1, 1, "", "CocoCaptionsImporter"], [273, 1, 1, "", "CocoImageInfoImporter"], [273, 1, 1, "", "CocoImporter"], [273, 1, 1, "", "CocoInstancesImporter"], [273, 1, 1, "", "CocoLabelsImporter"], [273, 1, 1, "", "CocoPanopticImporter"], [273, 1, 1, "", "CocoPersonKeypointsImporter"], [273, 1, 1, "", "CocoStuffImporter"]], "datumaro.plugins.data_formats.coco.importer.CocoImageInfoImporter": [[273, 4, 1, "", "detect"]], "datumaro.plugins.data_formats.coco.importer.CocoImporter": [[273, 4, 1, "", "build_cmdline_parser"], [273, 6, 1, "", "can_stream"], [273, 4, 1, "", "detect"], [273, 4, 1, "", "find_sources"], [273, 4, 1, "", "get_extractor_merger"], [273, 4, 1, "", "get_file_extensions"]], "datumaro.plugins.data_formats.coco.page_mapper": [[274, 1, 1, "", "COCOPageMapper"], [274, 2, 1, "", "CocoPageMapperImpl"]], "datumaro.plugins.data_formats.coco.page_mapper.COCOPageMapper": [[274, 4, 1, "", "get_anns_dict"], [274, 4, 1, "", "get_item_dict"], [274, 4, 1, "", "iter_item_ids"], [274, 4, 1, "", "stream_parse_categories_data"]], "datumaro.plugins.data_formats.common_semantic_segmentation": [[275, 1, 1, "", "CommonSemanticSegmentationBase"], [275, 1, 1, "", "CommonSemanticSegmentationImporter"], [275, 1, 1, "", "CommonSemanticSegmentationPath"], [275, 1, 1, "", "CommonSemanticSegmentationWithSubsetDirsImporter"], [275, 3, 1, "", "make_categories"]], "datumaro.plugins.data_formats.common_semantic_segmentation.CommonSemanticSegmentationImporter": [[275, 4, 1, "", "build_cmdline_parser"], [275, 4, 1, "", "detect"], [275, 4, 1, "", "find_sources"], [275, 4, 1, "", "get_file_extensions"]], "datumaro.plugins.data_formats.common_semantic_segmentation.CommonSemanticSegmentationPath": [[275, 2, 1, "", "IMAGES_DIR"], [275, 2, 1, "", "MASKS_DIR"]], "datumaro.plugins.data_formats.common_semantic_segmentation.CommonSemanticSegmentationWithSubsetDirsImporter": [[275, 2, 1, "", "NAME"], [275, 4, 1, "", "detect"]], "datumaro.plugins.data_formats.common_super_resolution": [[276, 1, 1, "", "CommonSuperResolutionBase"], [276, 1, 1, "", "CommonSuperResolutionImporter"], [276, 1, 1, "", "CommonSuperResolutionPath"]], "datumaro.plugins.data_formats.common_super_resolution.CommonSuperResolutionImporter": [[276, 4, 1, "", "detect"], [276, 4, 1, "", "find_sources"], [276, 4, 1, "", "get_file_extensions"]], "datumaro.plugins.data_formats.common_super_resolution.CommonSuperResolutionPath": [[276, 2, 1, "", "HR_IMAGES_DIR"], [276, 2, 1, "", "LR_IMAGES_DIR"], [276, 2, 1, "", "UPSAMPLED_IMAGES_DIR"]], "datumaro.plugins.data_formats.cvat": [[278, 0, 0, "-", "base"], [279, 0, 0, "-", "exporter"], [280, 0, 0, "-", "format"]], "datumaro.plugins.data_formats.cvat.base": [[278, 1, 1, "", "CvatBase"], [278, 1, 1, "", "CvatImporter"]], "datumaro.plugins.data_formats.cvat.base.CvatImporter": [[278, 4, 1, "", "detect"], [278, 4, 1, "", "find_sources"], [278, 4, 1, "", "find_subsets"], [278, 4, 1, "", "get_file_extensions"]], "datumaro.plugins.data_formats.cvat.exporter": [[279, 1, 1, "", "CvatExporter"], [279, 1, 1, "", "XmlAnnotationWriter"]], "datumaro.plugins.data_formats.cvat.exporter.CvatExporter": [[279, 2, 1, "", "DEFAULT_IMAGE_EXT"], [279, 4, 1, "", "build_cmdline_parser"], [279, 4, 1, "", "patch"]], "datumaro.plugins.data_formats.cvat.exporter.XmlAnnotationWriter": [[279, 2, 1, "", "VERSION"], [279, 4, 1, "", "add_attribute"], [279, 4, 1, "", "close_box"], [279, 4, 1, "", "close_image"], [279, 4, 1, "", "close_mask"], [279, 4, 1, "", "close_points"], [279, 4, 1, "", "close_polygon"], [279, 4, 1, "", "close_polyline"], [279, 4, 1, "", "close_root"], [279, 4, 1, "", "close_tag"], [279, 4, 1, "", "close_track"], [279, 4, 1, "", "open_box"], [279, 4, 1, "", "open_image"], [279, 4, 1, "", "open_mask"], [279, 4, 1, "", "open_points"], [279, 4, 1, "", "open_polygon"], [279, 4, 1, "", "open_polyline"], [279, 4, 1, "", "open_root"], [279, 4, 1, "", "open_tag"], [279, 4, 1, "", "open_track"], [279, 4, 1, "", "write_meta"]], "datumaro.plugins.data_formats.cvat.format": [[280, 1, 1, "", "CvatPath"]], "datumaro.plugins.data_formats.cvat.format.CvatPath": [[280, 2, 1, "", "BUILTIN_ATTRS"], [280, 2, 1, "", "IMAGES_DIR"], [280, 2, 1, "", "IMAGE_EXT"], [280, 2, 1, "", "SUPPORTED_EXPORT_SHAPES"], [280, 2, 1, "", "SUPPORTED_IMPORT_SHAPES"]], "datumaro.plugins.data_formats.datumaro": [[282, 0, 0, "-", "base"], [283, 0, 0, "-", "exporter"], [284, 0, 0, "-", "format"], [285, 0, 0, "-", "importer"], [286, 0, 0, "-", "page_mapper"]], "datumaro.plugins.data_formats.datumaro.base": [[282, 1, 1, "", "AnnotationType"], [282, 1, 1, "", "Bbox"], [282, 1, 1, "", "Caption"], [282, 1, 1, "", "Cuboid3d"], [282, 5, 1, "", "DatasetImportError"], [282, 1, 1, "", "DatasetItem"], [282, 1, 1, "", "DatumPageMapper"], [282, 1, 1, "", "DatumaroBase"], [282, 1, 1, "", "DatumaroPath"], [282, 1, 1, "", "Ellipse"], [282, 1, 1, "", "GroupType"], [282, 1, 1, "", "Image"], [282, 1, 1, "", "ImportContext"], [282, 1, 1, "", "JsonReader"], [282, 1, 1, "", "Label"], [282, 1, 1, "", "LabelCategories"], [282, 1, 1, "", "MaskCategories"], [282, 1, 1, "", "MediaElement"], [282, 1, 1, "", "MediaType"], [282, 5, 1, "", "MediaTypeError"], [282, 1, 1, "", "PointCloud"], [282, 1, 1, "", "Points"], [282, 1, 1, "", "PointsCategories"], [282, 1, 1, "", "PolyLine"], [282, 1, 1, "", "Polygon"], [282, 1, 1, "", "RleMask"], [282, 1, 1, "", "StreamJsonReader"], [282, 1, 1, "", "SubsetBase"], [282, 1, 1, "", "Video"], [282, 1, 1, "", "VideoFrame"], [282, 3, 1, "", "parse_json_file"]], "datumaro.plugins.data_formats.datumaro.base.AnnotationType": [[282, 2, 1, "", "bbox"], [282, 2, 1, "", "caption"], [282, 2, 1, "", "cuboid_3d"], [282, 2, 1, "", "depth_annotation"], [282, 2, 1, "", "ellipse"], [282, 2, 1, "", "feature_vector"], [282, 2, 1, "", "hash_key"], [282, 2, 1, "", "label"], [282, 2, 1, "", "mask"], [282, 2, 1, "", "points"], [282, 2, 1, "", "polygon"], [282, 2, 1, "", "polyline"], [282, 2, 1, "", "rotated_bbox"], [282, 2, 1, "", "super_resolution_annotation"], [282, 2, 1, "", "tabular"], [282, 2, 1, "", "unknown"]], "datumaro.plugins.data_formats.datumaro.base.Bbox": [[282, 4, 1, "", "__init__"], [282, 2, 1, "", "_type"], [282, 4, 1, "id6", "as_polygon"], [282, 4, 1, "id4", "get_area"], [282, 4, 1, "id5", "get_bbox"], [282, 6, 1, "id3", "h"], [282, 4, 1, "id7", "iou"], [282, 6, 1, "id2", "w"], [282, 4, 1, "id8", "wrap"], [282, 6, 1, "id0", "x"], [282, 6, 1, "id1", "y"]], "datumaro.plugins.data_formats.datumaro.base.Caption": [[282, 2, 1, "", "caption"]], "datumaro.plugins.data_formats.datumaro.base.Cuboid3d": [[282, 4, 1, "", "__init__"], [282, 2, 1, "", "_points"], [282, 2, 1, "", "_type"], [282, 2, 1, "id9", "label"], [282, 6, 1, "id10", "position"], [282, 6, 1, "id11", "rotation"], [282, 6, 1, "id12", "scale"]], "datumaro.plugins.data_formats.datumaro.base.DatasetItem": [[282, 2, 1, "", "annotations"], [282, 2, 1, "", "attributes"], [282, 2, 1, "", "id"], [282, 2, 1, "", "media"], [282, 4, 1, "", "media_as"], [282, 2, 1, "", "subset"], [282, 4, 1, "", "wrap"]], "datumaro.plugins.data_formats.datumaro.base.DatumPageMapper": [[282, 6, 1, "", "ann_types"], [282, 6, 1, "", "categories"], [282, 6, 1, "", "dm_format_version"], [282, 4, 1, "", "get_item_dict"], [282, 6, 1, "", "infos"], [282, 4, 1, "", "iter_item_ids"], [282, 6, 1, "", "media_type"]], "datumaro.plugins.data_formats.datumaro.base.DatumaroBase": [[282, 2, 1, "", "ALLOWED_VERSIONS"], [282, 2, 1, "", "CURRENT_DATUMARO_FORMAT_VERSION"], [282, 2, 1, "", "LEGACY_VERSION"], [282, 4, 1, "", "ann_types"], [282, 4, 1, "", "categories"], [282, 4, 1, "", "infos"], [282, 6, 1, "", "is_stream"], [282, 4, 1, "", "media_type"]], "datumaro.plugins.data_formats.datumaro.base.DatumaroPath": [[282, 2, 1, "", "ANNOTATIONS_DIR"], [282, 2, 1, "", "ANNOTATION_EXT"], [282, 2, 1, "", "IMAGES_DIR"], [282, 2, 1, "", "IMAGE_EXT"], [282, 2, 1, "", "MASKS_DIR"], [282, 2, 1, "", "MASK_EXT"], [282, 2, 1, "", "PCD_DIR"], [282, 2, 1, "", "VIDEO_DIR"]], "datumaro.plugins.data_formats.datumaro.base.Ellipse": [[282, 4, 1, "", "as_polygon"], [282, 6, 1, "", "c_x"], [282, 6, 1, "", "c_y"], [282, 4, 1, "", "get_area"], [282, 4, 1, "", "get_bbox"], [282, 4, 1, "", "get_points"], [282, 6, 1, "", "h"], [282, 4, 1, "", "iou"], [282, 6, 1, "", "w"], [282, 4, 1, "", "wrap"], [282, 6, 1, "", "x1"], [282, 6, 1, "", "x2"], [282, 6, 1, "", "y1"], [282, 6, 1, "", "y2"]], "datumaro.plugins.data_formats.datumaro.base.GroupType": [[282, 2, 1, "", "EXCLUSIVE"], [282, 2, 1, "", "INCLUSIVE"], [282, 2, 1, "", "RESTRICTED"], [282, 4, 1, "", "from_str"], [282, 4, 1, "", "to_str"]], "datumaro.plugins.data_formats.datumaro.base.Image": [[282, 6, 1, "", "ext"], [282, 4, 1, "", "from_bytes"], [282, 4, 1, "", "from_file"], [282, 4, 1, "", "from_numpy"], [282, 6, 1, "", "has_size"], [282, 4, 1, "", "set_crypter"], [282, 6, 1, "", "size"]], "datumaro.plugins.data_formats.datumaro.base.ImportContext": [[282, 2, 1, "", "error_policy"], [282, 2, 1, "", "progress_reporter"]], "datumaro.plugins.data_formats.datumaro.base.Label": [[282, 2, 1, "", "label"]], "datumaro.plugins.data_formats.datumaro.base.LabelCategories": [[282, 1, 1, "", "Category"], [282, 1, 1, "", "LabelGroup"], [282, 4, 1, "", "add"], [282, 4, 1, "", "add_label_group"], [282, 4, 1, "", "find"], [282, 4, 1, "", "from_iterable"], [282, 2, 1, "", "items"], [282, 2, 1, "", "label_groups"]], "datumaro.plugins.data_formats.datumaro.base.LabelCategories.Category": [[282, 2, 1, "", "attributes"], [282, 2, 1, "", "name"], [282, 2, 1, "", "parent"]], "datumaro.plugins.data_formats.datumaro.base.LabelCategories.LabelGroup": [[282, 2, 1, "", "group_type"], [282, 2, 1, "", "labels"], [282, 2, 1, "", "name"]], "datumaro.plugins.data_formats.datumaro.base.MaskCategories": [[282, 2, 1, "", "colormap"], [282, 4, 1, "", "generate"], [282, 6, 1, "", "inverse_colormap"]], "datumaro.plugins.data_formats.datumaro.base.MediaElement": [[282, 4, 1, "", "as_dict"], [282, 6, 1, "", "bytes"], [282, 6, 1, "", "data"], [282, 4, 1, "", "from_self"], [282, 6, 1, "", "has_data"], [282, 6, 1, "", "is_encrypted"], [282, 4, 1, "", "save"], [282, 4, 1, "", "set_crypter"], [282, 6, 1, "", "type"]], "datumaro.plugins.data_formats.datumaro.base.MediaType": [[282, 2, 1, "", "BYTE_IMAGE"], [282, 2, 1, "", "IMAGE"], [282, 2, 1, "", "MEDIA_ELEMENT"], [282, 2, 1, "", "MOSAIC_IMAGE"], [282, 2, 1, "", "MULTIFRAME_IMAGE"], [282, 2, 1, "", "NONE"], [282, 2, 1, "", "POINT_CLOUD"], [282, 2, 1, "", "ROI_IMAGE"], [282, 2, 1, "", "TABLE_ROW"], [282, 2, 1, "", "VIDEO"], [282, 2, 1, "", "VIDEO_FRAME"], [282, 6, 1, "", "media"]], "datumaro.plugins.data_formats.datumaro.base.PointCloud": [[282, 6, 1, "", "extra_images"], [282, 4, 1, "", "from_bytes"], [282, 4, 1, "", "from_file"]], "datumaro.plugins.data_formats.datumaro.base.Points": [[282, 1, 1, "", "Visibility"], [282, 4, 1, "", "__attrs_post_init__"], [282, 2, 1, "", "_type"], [282, 4, 1, "id17", "get_area"], [282, 4, 1, "id18", "get_bbox"], [282, 2, 1, "id16", "visibility"]], "datumaro.plugins.data_formats.datumaro.base.Points.Visibility": [[282, 2, 1, "id13", "absent"], [282, 2, 1, "id14", "hidden"], [282, 2, 1, "id15", "visible"]], "datumaro.plugins.data_formats.datumaro.base.PointsCategories": [[282, 1, 1, "", "Category"], [282, 4, 1, "", "add"], [282, 4, 1, "", "from_iterable"], [282, 2, 1, "", "items"]], "datumaro.plugins.data_formats.datumaro.base.PointsCategories.Category": [[282, 2, 1, "", "joints"], [282, 2, 1, "", "labels"]], "datumaro.plugins.data_formats.datumaro.base.PolyLine": [[282, 2, 1, "", "_type"], [282, 4, 1, "id19", "as_polygon"], [282, 4, 1, "id20", "get_area"]], "datumaro.plugins.data_formats.datumaro.base.Polygon": [[282, 4, 1, "", "__attrs_post_init__"], [282, 4, 1, "", "__eq__"], [282, 4, 1, "", "_get_shoelace_area"], [282, 2, 1, "", "_type"], [282, 4, 1, "id22", "as_polygon"], [282, 4, 1, "id21", "get_area"]], "datumaro.plugins.data_formats.datumaro.base.RleMask": [[282, 4, 1, "", "get_area"], [282, 4, 1, "", "get_bbox"], [282, 6, 1, "", "image"], [282, 6, 1, "", "rle"]], "datumaro.plugins.data_formats.datumaro.base.SubsetBase": [[282, 4, 1, "", "categories"], [282, 4, 1, "", "get"], [282, 4, 1, "", "infos"], [282, 6, 1, "", "subset"]], "datumaro.plugins.data_formats.datumaro.base.Video": [[282, 4, 1, "", "close"], [282, 6, 1, "", "ext"], [282, 6, 1, "", "frame_size"], [282, 4, 1, "", "get_frame_data"], [282, 6, 1, "", "length"], [282, 6, 1, "", "path"], [282, 4, 1, "", "save"]], "datumaro.plugins.data_formats.datumaro.base.VideoFrame": [[282, 4, 1, "", "as_dict"], [282, 4, 1, "", "from_self"], [282, 6, 1, "", "index"], [282, 6, 1, "", "path"], [282, 6, 1, "", "size"], [282, 6, 1, "", "video"]], "datumaro.plugins.data_formats.datumaro.exporter": [[283, 1, 1, "", "DatumaroExporter"], [283, 1, 1, "", "JsonWriter"]], "datumaro.plugins.data_formats.datumaro.exporter.DatumaroExporter": [[283, 2, 1, "", "DEFAULT_IMAGE_EXT"], [283, 2, 1, "", "PATH_CLS"], [283, 6, 1, "", "can_stream"], [283, 4, 1, "", "create_writer"], [283, 4, 1, "", "patch"]], "datumaro.plugins.data_formats.datumaro.exporter.JsonWriter": [[283, 4, 1, "", "write_categories"]], "datumaro.plugins.data_formats.datumaro.format": [[284, 1, 1, "", "DatumaroPath"]], "datumaro.plugins.data_formats.datumaro.format.DatumaroPath": [[284, 2, 1, "", "ANNOTATIONS_DIR"], [284, 2, 1, "", "ANNOTATION_EXT"], [284, 2, 1, "", "IMAGES_DIR"], [284, 2, 1, "", "IMAGE_EXT"], [284, 2, 1, "", "MASKS_DIR"], [284, 2, 1, "", "MASK_EXT"], [284, 2, 1, "", "PCD_DIR"], [284, 2, 1, "", "VIDEO_DIR"]], "datumaro.plugins.data_formats.datumaro.importer": [[285, 1, 1, "", "DatumaroImporter"]], "datumaro.plugins.data_formats.datumaro.importer.DatumaroImporter": [[285, 2, 1, "", "PATH_CLS"], [285, 6, 1, "", "can_stream"], [285, 4, 1, "", "detect"], [285, 4, 1, "", "find_sources"], [285, 4, 1, "", "get_extractor_merger"], [285, 4, 1, "", "get_file_extensions"]], "datumaro.plugins.data_formats.datumaro.page_mapper": [[286, 1, 1, "", "AnnotationType"], [286, 1, 1, "", "DatumPageMapper"], [286, 2, 1, "", "DatumPageMapperImpl"], [286, 1, 1, "", "MediaType"]], "datumaro.plugins.data_formats.datumaro.page_mapper.AnnotationType": [[286, 2, 1, "", "bbox"], [286, 2, 1, "", "caption"], [286, 2, 1, "", "cuboid_3d"], [286, 2, 1, "", "depth_annotation"], [286, 2, 1, "", "ellipse"], [286, 2, 1, "", "feature_vector"], [286, 2, 1, "", "hash_key"], [286, 2, 1, "", "label"], [286, 2, 1, "", "mask"], [286, 2, 1, "", "points"], [286, 2, 1, "", "polygon"], [286, 2, 1, "", "polyline"], [286, 2, 1, "", "rotated_bbox"], [286, 2, 1, "", "super_resolution_annotation"], [286, 2, 1, "", "tabular"], [286, 2, 1, "", "unknown"]], "datumaro.plugins.data_formats.datumaro.page_mapper.DatumPageMapper": [[286, 6, 1, "", "ann_types"], [286, 6, 1, "", "categories"], [286, 6, 1, "", "dm_format_version"], [286, 4, 1, "", "get_item_dict"], [286, 6, 1, "", "infos"], [286, 4, 1, "", "iter_item_ids"], [286, 6, 1, "", "media_type"]], "datumaro.plugins.data_formats.datumaro.page_mapper.MediaType": [[286, 2, 1, "", "BYTE_IMAGE"], [286, 2, 1, "", "IMAGE"], [286, 2, 1, "", "MEDIA_ELEMENT"], [286, 2, 1, "", "MOSAIC_IMAGE"], [286, 2, 1, "", "MULTIFRAME_IMAGE"], [286, 2, 1, "", "NONE"], [286, 2, 1, "", "POINT_CLOUD"], [286, 2, 1, "", "ROI_IMAGE"], [286, 2, 1, "", "TABLE_ROW"], [286, 2, 1, "", "VIDEO"], [286, 2, 1, "", "VIDEO_FRAME"], [286, 6, 1, "", "media"]], "datumaro.plugins.data_formats.datumaro_binary": [[287, 1, 1, "", "DatumaroBinaryBase"], [287, 1, 1, "", "DatumaroBinaryExporter"], [287, 1, 1, "", "DatumaroBinaryImporter"], [288, 0, 0, "-", "base"], [289, 0, 0, "-", "exporter"], [290, 0, 0, "-", "format"], [291, 0, 0, "-", "importer"], [292, 0, 0, "-", "mapper"]], "datumaro.plugins.data_formats.datumaro_binary.DatumaroBinaryBase": [[287, 4, 1, "", "ann_types"], [287, 4, 1, "", "categories"], [287, 4, 1, "", "infos"], [287, 6, 1, "", "is_stream"], [287, 4, 1, "", "media_type"]], "datumaro.plugins.data_formats.datumaro_binary.DatumaroBinaryExporter": [[287, 2, 1, "", "DEFAULT_IMAGE_EXT"], [287, 2, 1, "", "PATH_CLS"], [287, 4, 1, "", "build_cmdline_parser"], [287, 4, 1, "", "create_writer"]], "datumaro.plugins.data_formats.datumaro_binary.DatumaroBinaryImporter": [[287, 2, 1, "", "PATH_CLS"], [287, 4, 1, "", "build_cmdline_parser"], [287, 4, 1, "", "detect"]], "datumaro.plugins.data_formats.datumaro_binary.base": [[288, 1, 1, "", "DatumaroBinaryBase"]], "datumaro.plugins.data_formats.datumaro_binary.base.DatumaroBinaryBase": [[288, 4, 1, "", "ann_types"], [288, 4, 1, "", "categories"], [288, 4, 1, "", "infos"], [288, 6, 1, "", "is_stream"], [288, 4, 1, "", "media_type"]], "datumaro.plugins.data_formats.datumaro_binary.exporter": [[289, 1, 1, "", "DatumaroBinaryExporter"], [289, 1, 1, "", "EncryptionAction"]], "datumaro.plugins.data_formats.datumaro_binary.exporter.DatumaroBinaryExporter": [[289, 2, 1, "", "DEFAULT_IMAGE_EXT"], [289, 2, 1, "", "PATH_CLS"], [289, 4, 1, "", "build_cmdline_parser"], [289, 4, 1, "", "create_writer"]], "datumaro.plugins.data_formats.datumaro_binary.format": [[290, 1, 1, "", "DatumaroBinaryPath"]], "datumaro.plugins.data_formats.datumaro_binary.format.DatumaroBinaryPath": [[290, 2, 1, "", "ANNOTATIONS_DIR"], [290, 2, 1, "", "ANNOTATION_EXT"], [290, 2, 1, "", "IMAGES_DIR"], [290, 2, 1, "", "IMAGE_EXT"], [290, 2, 1, "", "MASKS_DIR"], [290, 2, 1, "", "MASK_EXT"], [290, 2, 1, "", "MAX_BLOB_SIZE"], [290, 2, 1, "", "MP_TIMEOUT"], [290, 2, 1, "", "PCD_DIR"], [290, 2, 1, "", "SECRET_KEY_FILE"], [290, 2, 1, "", "SIGNATURE"], [290, 2, 1, "", "SIGNATURE_LEN"], [290, 2, 1, "", "VIDEO_DIR"], [290, 4, 1, "", "check_signature"]], "datumaro.plugins.data_formats.datumaro_binary.importer": [[291, 1, 1, "", "DatumaroBinaryImporter"]], "datumaro.plugins.data_formats.datumaro_binary.importer.DatumaroBinaryImporter": [[291, 2, 1, "", "PATH_CLS"], [291, 4, 1, "", "build_cmdline_parser"], [291, 4, 1, "", "detect"]], "datumaro.plugins.data_formats.datumaro_binary.mapper": [[292, 1, 1, "", "Annotation"], [292, 1, 1, "", "AnnotationListMapper"], [292, 1, 1, "", "AnnotationMapper"], [292, 1, 1, "", "AnnotationType"], [292, 1, 1, "", "Bbox"], [292, 1, 1, "", "BboxMapper"], [292, 1, 1, "", "Caption"], [292, 1, 1, "", "CaptionMapper"], [292, 1, 1, "", "Cuboid3d"], [292, 1, 1, "", "Cuboid3dMapper"], [292, 1, 1, "", "DatasetItem"], [292, 1, 1, "", "DatasetItemMapper"], [292, 5, 1, "", "DatumaroError"], [292, 1, 1, "", "DictMapper"], [292, 1, 1, "", "Ellipse"], [292, 1, 1, "", "EllipseMapper"], [292, 1, 1, "", "FloatListMapper"], [292, 1, 1, "", "Image"], [292, 1, 1, "", "ImageMapper"], [292, 1, 1, "", "IntListMapper"], [292, 1, 1, "", "Label"], [292, 1, 1, "", "LabelMapper"], [292, 1, 1, "", "Mapper"], [292, 1, 1, "", "Mask"], [292, 1, 1, "", "MaskMapper"], [292, 1, 1, "", "MediaElement"], [292, 1, 1, "", "MediaElementMapper"], [292, 1, 1, "", "MediaMapper"], [292, 1, 1, "", "MediaType"], [292, 1, 1, "", "PointCloud"], [292, 1, 1, "", "PointCloudMapper"], [292, 1, 1, "", "Points"], [292, 1, 1, "", "PointsMapper"], [292, 1, 1, "", "PolyLine"], [292, 1, 1, "", "PolyLineMapper"], [292, 1, 1, "", "Polygon"], [292, 1, 1, "", "PolygonMapper"], [292, 1, 1, "", "RleMask"], [292, 1, 1, "", "RleMaskMapper"], [292, 1, 1, "", "Shape"], [292, 1, 1, "", "StringMapper"], [292, 1, 1, "", "Video"], [292, 1, 1, "", "VideoFrame"], [292, 1, 1, "", "VideoFrameMapper"], [292, 1, 1, "", "VideoMapper"], [293, 0, 0, "-", "annotation"], [294, 0, 0, "-", "common"], [295, 0, 0, "-", "dataset_item"], [296, 0, 0, "-", "media"]], "datumaro.plugins.data_formats.datumaro_binary.mapper.Annotation": [[292, 4, 1, "", "as_dict"], [292, 2, 1, "", "attributes"], [292, 2, 1, "", "group"], [292, 2, 1, "", "id"], [292, 2, 1, "", "object_id"], [292, 6, 1, "", "type"], [292, 4, 1, "", "wrap"]], "datumaro.plugins.data_formats.datumaro_binary.mapper.AnnotationListMapper": [[292, 4, 1, "", "backward"], [292, 2, 1, "", "backward_map"], [292, 4, 1, "", "forward"]], "datumaro.plugins.data_formats.datumaro_binary.mapper.AnnotationMapper": [[292, 2, 1, "", "ann_type"], [292, 4, 1, "", "backward"], [292, 4, 1, "", "backward_dict"], [292, 4, 1, "", "backward_optional_label"], [292, 4, 1, "", "forward"], [292, 4, 1, "", "forward_optional_label"], [292, 4, 1, "", "parse_ann_type"]], "datumaro.plugins.data_formats.datumaro_binary.mapper.AnnotationType": [[292, 2, 1, "", "bbox"], [292, 2, 1, "", "caption"], [292, 2, 1, "", "cuboid_3d"], [292, 2, 1, "", "depth_annotation"], [292, 2, 1, "", "ellipse"], [292, 2, 1, "", "feature_vector"], [292, 2, 1, "", "hash_key"], [292, 2, 1, "", "label"], [292, 2, 1, "", "mask"], [292, 2, 1, "", "points"], [292, 2, 1, "", "polygon"], [292, 2, 1, "", "polyline"], [292, 2, 1, "", "rotated_bbox"], [292, 2, 1, "", "super_resolution_annotation"], [292, 2, 1, "", "tabular"], [292, 2, 1, "", "unknown"]], "datumaro.plugins.data_formats.datumaro_binary.mapper.Bbox": [[292, 4, 1, "", "__init__"], [292, 2, 1, "", "_type"], [292, 4, 1, "id6", "as_polygon"], [292, 4, 1, "id4", "get_area"], [292, 4, 1, "id5", "get_bbox"], [292, 6, 1, "id3", "h"], [292, 4, 1, "id7", "iou"], [292, 6, 1, "id2", "w"], [292, 4, 1, "id8", "wrap"], [292, 6, 1, "id0", "x"], [292, 6, 1, "id1", "y"]], "datumaro.plugins.data_formats.datumaro_binary.mapper.BboxMapper": [[292, 2, 1, "", "ann_type"], [292, 4, 1, "", "backward"], [292, 4, 1, "", "forward"]], "datumaro.plugins.data_formats.datumaro_binary.mapper.Caption": [[292, 2, 1, "", "caption"]], "datumaro.plugins.data_formats.datumaro_binary.mapper.CaptionMapper": [[292, 2, 1, "", "ann_type"], [292, 4, 1, "", "backward"], [292, 4, 1, "", "forward"]], "datumaro.plugins.data_formats.datumaro_binary.mapper.Cuboid3d": [[292, 4, 1, "", "__init__"], [292, 2, 1, "", "_points"], [292, 2, 1, "", "_type"], [292, 2, 1, "id9", "label"], [292, 6, 1, "id10", "position"], [292, 6, 1, "id11", "rotation"], [292, 6, 1, "id12", "scale"]], "datumaro.plugins.data_formats.datumaro_binary.mapper.Cuboid3dMapper": [[292, 2, 1, "", "ann_type"], [292, 4, 1, "", "backward"], [292, 4, 1, "", "forward"]], "datumaro.plugins.data_formats.datumaro_binary.mapper.DatasetItem": [[292, 2, 1, "", "annotations"], [292, 2, 1, "", "attributes"], [292, 2, 1, "", "id"], [292, 2, 1, "", "media"], [292, 4, 1, "", "media_as"], [292, 2, 1, "", "subset"], [292, 4, 1, "", "wrap"]], "datumaro.plugins.data_formats.datumaro_binary.mapper.DatasetItemMapper": [[292, 4, 1, "", "backward"], [292, 4, 1, "", "forward"]], "datumaro.plugins.data_formats.datumaro_binary.mapper.DictMapper": [[292, 4, 1, "", "backward"], [292, 4, 1, "", "forward"]], "datumaro.plugins.data_formats.datumaro_binary.mapper.Ellipse": [[292, 4, 1, "", "as_polygon"], [292, 6, 1, "", "c_x"], [292, 6, 1, "", "c_y"], [292, 4, 1, "", "get_area"], [292, 4, 1, "", "get_bbox"], [292, 4, 1, "", "get_points"], [292, 6, 1, "", "h"], [292, 4, 1, "", "iou"], [292, 6, 1, "", "w"], [292, 4, 1, "", "wrap"], [292, 6, 1, "", "x1"], [292, 6, 1, "", "x2"], [292, 6, 1, "", "y1"], [292, 6, 1, "", "y2"]], "datumaro.plugins.data_formats.datumaro_binary.mapper.EllipseMapper": [[292, 2, 1, "", "ann_type"], [292, 4, 1, "", "backward"], [292, 4, 1, "", "forward"]], "datumaro.plugins.data_formats.datumaro_binary.mapper.Image": [[292, 6, 1, "", "ext"], [292, 4, 1, "", "from_bytes"], [292, 4, 1, "", "from_file"], [292, 4, 1, "", "from_numpy"], [292, 6, 1, "", "has_size"], [292, 4, 1, "", "set_crypter"], [292, 6, 1, "", "size"]], "datumaro.plugins.data_formats.datumaro_binary.mapper.ImageMapper": [[292, 2, 1, "", "MAGIC_SIZE_FOR_NONE"], [292, 2, 1, "", "MEDIA_TYPE"], [292, 4, 1, "", "backward"], [292, 4, 1, "", "forward"]], "datumaro.plugins.data_formats.datumaro_binary.mapper.Label": [[292, 2, 1, "", "label"]], "datumaro.plugins.data_formats.datumaro_binary.mapper.LabelMapper": [[292, 2, 1, "", "ann_type"], [292, 4, 1, "", "backward"], [292, 4, 1, "", "forward"]], "datumaro.plugins.data_formats.datumaro_binary.mapper.Mapper": [[292, 4, 1, "", "backward"], [292, 4, 1, "", "forward"]], "datumaro.plugins.data_formats.datumaro_binary.mapper.Mask": [[292, 4, 1, "", "as_class_mask"], [292, 4, 1, "", "as_instance_mask"], [292, 4, 1, "", "get_area"], [292, 4, 1, "", "get_bbox"], [292, 6, 1, "", "image"], [292, 2, 1, "", "label"], [292, 4, 1, "", "paint"], [292, 2, 1, "", "z_order"]], "datumaro.plugins.data_formats.datumaro_binary.mapper.MaskMapper": [[292, 2, 1, "", "ann_type"], [292, 4, 1, "", "backward"], [292, 4, 1, "", "forward"]], "datumaro.plugins.data_formats.datumaro_binary.mapper.MediaElement": [[292, 4, 1, "", "as_dict"], [292, 6, 1, "", "bytes"], [292, 6, 1, "", "data"], [292, 4, 1, "", "from_self"], [292, 6, 1, "", "has_data"], [292, 6, 1, "", "is_encrypted"], [292, 4, 1, "", "save"], [292, 4, 1, "", "set_crypter"], [292, 6, 1, "", "type"]], "datumaro.plugins.data_formats.datumaro_binary.mapper.MediaElementMapper": [[292, 2, 1, "", "MAGIC_PATH"], [292, 2, 1, "", "MEDIA_TYPE"], [292, 4, 1, "", "backward"], [292, 4, 1, "", "backward_dict"], [292, 4, 1, "", "forward"]], "datumaro.plugins.data_formats.datumaro_binary.mapper.MediaMapper": [[292, 4, 1, "", "backward"], [292, 4, 1, "", "forward"]], "datumaro.plugins.data_formats.datumaro_binary.mapper.MediaType": [[292, 2, 1, "", "BYTE_IMAGE"], [292, 2, 1, "", "IMAGE"], [292, 2, 1, "", "MEDIA_ELEMENT"], [292, 2, 1, "", "MOSAIC_IMAGE"], [292, 2, 1, "", "MULTIFRAME_IMAGE"], [292, 2, 1, "", "NONE"], [292, 2, 1, "", "POINT_CLOUD"], [292, 2, 1, "", "ROI_IMAGE"], [292, 2, 1, "", "TABLE_ROW"], [292, 2, 1, "", "VIDEO"], [292, 2, 1, "", "VIDEO_FRAME"], [292, 6, 1, "", "media"]], "datumaro.plugins.data_formats.datumaro_binary.mapper.PointCloud": [[292, 6, 1, "", "extra_images"], [292, 4, 1, "", "from_bytes"], [292, 4, 1, "", "from_file"]], "datumaro.plugins.data_formats.datumaro_binary.mapper.PointCloudMapper": [[292, 2, 1, "", "MEDIA_TYPE"], [292, 4, 1, "", "backward"], [292, 4, 1, "", "forward"]], "datumaro.plugins.data_formats.datumaro_binary.mapper.Points": [[292, 1, 1, "", "Visibility"], [292, 4, 1, "", "__attrs_post_init__"], [292, 2, 1, "", "_type"], [292, 4, 1, "id17", "get_area"], [292, 4, 1, "id18", "get_bbox"], [292, 2, 1, "id16", "visibility"]], "datumaro.plugins.data_formats.datumaro_binary.mapper.Points.Visibility": [[292, 2, 1, "id13", "absent"], [292, 2, 1, "id14", "hidden"], [292, 2, 1, "id15", "visible"]], "datumaro.plugins.data_formats.datumaro_binary.mapper.PointsMapper": [[292, 2, 1, "", "ann_type"], [292, 4, 1, "", "backward"], [292, 4, 1, "", "forward"]], "datumaro.plugins.data_formats.datumaro_binary.mapper.PolyLine": [[292, 2, 1, "", "_type"], [292, 4, 1, "id19", "as_polygon"], [292, 4, 1, "id20", "get_area"]], "datumaro.plugins.data_formats.datumaro_binary.mapper.PolyLineMapper": [[292, 2, 1, "", "ann_type"], [292, 4, 1, "", "backward"], [292, 4, 1, "", "forward"]], "datumaro.plugins.data_formats.datumaro_binary.mapper.Polygon": [[292, 4, 1, "", "__attrs_post_init__"], [292, 4, 1, "", "__eq__"], [292, 4, 1, "", "_get_shoelace_area"], [292, 2, 1, "", "_type"], [292, 4, 1, "id22", "as_polygon"], [292, 4, 1, "id21", "get_area"]], "datumaro.plugins.data_formats.datumaro_binary.mapper.PolygonMapper": [[292, 2, 1, "", "ann_type"], [292, 4, 1, "", "backward"], [292, 4, 1, "", "forward"]], "datumaro.plugins.data_formats.datumaro_binary.mapper.RleMask": [[292, 4, 1, "", "get_area"], [292, 4, 1, "", "get_bbox"], [292, 6, 1, "", "image"], [292, 6, 1, "", "rle"]], "datumaro.plugins.data_formats.datumaro_binary.mapper.Shape": [[292, 4, 1, "id27", "as_polygon"], [292, 4, 1, "id26", "get_area"], [292, 4, 1, "id28", "get_bbox"], [292, 4, 1, "id29", "get_points"], [292, 2, 1, "id24", "label"], [292, 2, 1, "id23", "points"], [292, 2, 1, "id25", "z_order"]], "datumaro.plugins.data_formats.datumaro_binary.mapper.StringMapper": [[292, 4, 1, "", "backward"], [292, 4, 1, "", "forward"]], "datumaro.plugins.data_formats.datumaro_binary.mapper.Video": [[292, 4, 1, "", "close"], [292, 6, 1, "", "ext"], [292, 6, 1, "", "frame_size"], [292, 4, 1, "", "get_frame_data"], [292, 6, 1, "", "length"], [292, 6, 1, "", "path"], [292, 4, 1, "", "save"]], "datumaro.plugins.data_formats.datumaro_binary.mapper.VideoFrame": [[292, 4, 1, "", "as_dict"], [292, 4, 1, "", "from_self"], [292, 6, 1, "", "index"], [292, 6, 1, "", "path"], [292, 6, 1, "", "size"], [292, 6, 1, "", "video"]], "datumaro.plugins.data_formats.datumaro_binary.mapper.VideoFrameMapper": [[292, 2, 1, "", "MEDIA_TYPE"], [292, 4, 1, "", "backward"], [292, 4, 1, "", "forward"]], "datumaro.plugins.data_formats.datumaro_binary.mapper.VideoMapper": [[292, 2, 1, "", "MAGIC_END_FRAME_FOR_NONE"], [292, 2, 1, "", "MEDIA_TYPE"], [292, 4, 1, "", "backward"], [292, 4, 1, "", "forward"]], "datumaro.plugins.data_formats.datumaro_binary.mapper.annotation": [[293, 1, 1, "", "AnnotationListMapper"], [293, 1, 1, "", "AnnotationMapper"], [293, 1, 1, "", "BboxMapper"], [293, 1, 1, "", "CaptionMapper"], [293, 1, 1, "", "Cuboid3dMapper"], [293, 1, 1, "", "EllipseMapper"], [293, 1, 1, "", "LabelMapper"], [293, 1, 1, "", "MaskMapper"], [293, 1, 1, "", "PointsMapper"], [293, 1, 1, "", "PolyLineMapper"], [293, 1, 1, "", "PolygonMapper"], [293, 1, 1, "", "RleMaskMapper"]], "datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.AnnotationListMapper": [[293, 4, 1, "", "backward"], [293, 2, 1, "", "backward_map"], [293, 4, 1, "", "forward"]], "datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.AnnotationMapper": [[293, 2, 1, "", "ann_type"], [293, 4, 1, "", "backward"], [293, 4, 1, "", "backward_dict"], [293, 4, 1, "", "backward_optional_label"], [293, 4, 1, "", "forward"], [293, 4, 1, "", "forward_optional_label"], [293, 4, 1, "", "parse_ann_type"]], "datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.BboxMapper": [[293, 2, 1, "", "ann_type"], [293, 4, 1, "", "backward"], [293, 4, 1, "", "forward"]], "datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.CaptionMapper": [[293, 2, 1, "", "ann_type"], [293, 4, 1, "", "backward"], [293, 4, 1, "", "forward"]], "datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.Cuboid3dMapper": [[293, 2, 1, "", "ann_type"], [293, 4, 1, "", "backward"], [293, 4, 1, "", "forward"]], "datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.EllipseMapper": [[293, 2, 1, "", "ann_type"], [293, 4, 1, "", "backward"], [293, 4, 1, "", "forward"]], "datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.LabelMapper": [[293, 2, 1, "", "ann_type"], [293, 4, 1, "", "backward"], [293, 4, 1, "", "forward"]], "datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.MaskMapper": [[293, 2, 1, "", "ann_type"], [293, 4, 1, "", "backward"], [293, 4, 1, "", "forward"]], "datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.PointsMapper": [[293, 2, 1, "", "ann_type"], [293, 4, 1, "", "backward"], [293, 4, 1, "", "forward"]], "datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.PolyLineMapper": [[293, 2, 1, "", "ann_type"], [293, 4, 1, "", "backward"], [293, 4, 1, "", "forward"]], "datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.PolygonMapper": [[293, 2, 1, "", "ann_type"], [293, 4, 1, "", "backward"], [293, 4, 1, "", "forward"]], "datumaro.plugins.data_formats.datumaro_binary.mapper.common": [[294, 1, 1, "", "DictMapper"], [294, 1, 1, "", "FloatListMapper"], [294, 1, 1, "", "IntListMapper"], [294, 1, 1, "", "ListMapper"], [294, 1, 1, "", "Mapper"], [294, 1, 1, "", "StringMapper"]], "datumaro.plugins.data_formats.datumaro_binary.mapper.common.DictMapper": [[294, 4, 1, "", "backward"], [294, 4, 1, "", "forward"]], "datumaro.plugins.data_formats.datumaro_binary.mapper.common.ListMapper": [[294, 4, 1, "", "backward"], [294, 4, 1, "", "forward"]], "datumaro.plugins.data_formats.datumaro_binary.mapper.common.Mapper": [[294, 4, 1, "", "backward"], [294, 4, 1, "", "forward"]], "datumaro.plugins.data_formats.datumaro_binary.mapper.common.StringMapper": [[294, 4, 1, "", "backward"], [294, 4, 1, "", "forward"]], "datumaro.plugins.data_formats.datumaro_binary.mapper.dataset_item": [[295, 1, 1, "", "DatasetItemMapper"]], "datumaro.plugins.data_formats.datumaro_binary.mapper.dataset_item.DatasetItemMapper": [[295, 4, 1, "", "backward"], [295, 4, 1, "", "forward"]], "datumaro.plugins.data_formats.datumaro_binary.mapper.media": [[296, 1, 1, "", "ImageMapper"], [296, 1, 1, "", "MediaElementMapper"], [296, 1, 1, "", "MediaMapper"], [296, 1, 1, "", "PointCloudMapper"], [296, 1, 1, "", "VideoFrameMapper"], [296, 1, 1, "", "VideoMapper"]], "datumaro.plugins.data_formats.datumaro_binary.mapper.media.ImageMapper": [[296, 2, 1, "", "MAGIC_SIZE_FOR_NONE"], [296, 2, 1, "", "MEDIA_TYPE"], [296, 4, 1, "", "backward"], [296, 4, 1, "", "forward"]], "datumaro.plugins.data_formats.datumaro_binary.mapper.media.MediaElementMapper": [[296, 2, 1, "", "MAGIC_PATH"], [296, 2, 1, "", "MEDIA_TYPE"], [296, 4, 1, "", "backward"], [296, 4, 1, "", "backward_dict"], [296, 4, 1, "", "forward"]], "datumaro.plugins.data_formats.datumaro_binary.mapper.media.MediaMapper": [[296, 4, 1, "", "backward"], [296, 4, 1, "", "forward"]], "datumaro.plugins.data_formats.datumaro_binary.mapper.media.PointCloudMapper": [[296, 2, 1, "", "MEDIA_TYPE"], [296, 4, 1, "", "backward"], [296, 4, 1, "", "forward"]], "datumaro.plugins.data_formats.datumaro_binary.mapper.media.VideoFrameMapper": [[296, 2, 1, "", "MEDIA_TYPE"], [296, 4, 1, "", "backward"], [296, 4, 1, "", "forward"]], "datumaro.plugins.data_formats.datumaro_binary.mapper.media.VideoMapper": [[296, 2, 1, "", "MAGIC_END_FRAME_FOR_NONE"], [296, 2, 1, "", "MEDIA_TYPE"], [296, 4, 1, "", "backward"], [296, 4, 1, "", "forward"]], "datumaro.plugins.data_formats.dota": [[297, 1, 1, "", "DotaBase"], [297, 1, 1, "", "DotaExporter"], [297, 1, 1, "", "DotaFormat"], [297, 1, 1, "", "DotaImporter"]], "datumaro.plugins.data_formats.dota.DotaExporter": [[297, 2, 1, "", "DEFAULT_IMAGE_EXT"]], "datumaro.plugins.data_formats.dota.DotaFormat": [[297, 2, 1, "", "ANNOTATION_DIR"], [297, 2, 1, "", "IMAGE_DIR"]], "datumaro.plugins.data_formats.dota.DotaImporter": [[297, 4, 1, "", "detect"], [297, 4, 1, "", "find_sources"], [297, 4, 1, "", "get_file_extensions"]], "datumaro.plugins.data_formats.icdar": [[299, 0, 0, "-", "base"], [300, 0, 0, "-", "exporter"], [301, 0, 0, "-", "format"]], "datumaro.plugins.data_formats.icdar.base": [[299, 1, 1, "", "IcdarTextLocalizationBase"], [299, 1, 1, "", "IcdarTextLocalizationImporter"], [299, 1, 1, "", "IcdarTextSegmentationBase"], [299, 1, 1, "", "IcdarTextSegmentationImporter"], [299, 1, 1, "", "IcdarWordRecognitionBase"], [299, 1, 1, "", "IcdarWordRecognitionImporter"]], "datumaro.plugins.data_formats.icdar.base.IcdarTextLocalizationImporter": [[299, 4, 1, "", "detect"], [299, 4, 1, "", "find_sources"], [299, 4, 1, "", "get_file_extensions"]], "datumaro.plugins.data_formats.icdar.base.IcdarTextSegmentationImporter": [[299, 4, 1, "", "detect"], [299, 4, 1, "", "find_sources"], [299, 4, 1, "", "get_file_extensions"]], "datumaro.plugins.data_formats.icdar.base.IcdarWordRecognitionImporter": [[299, 4, 1, "", "detect"], [299, 4, 1, "", "find_sources"], [299, 4, 1, "", "get_file_extensions"]], "datumaro.plugins.data_formats.icdar.exporter": [[300, 1, 1, "", "IcdarTextLocalizationExporter"], [300, 1, 1, "", "IcdarTextSegmentationExporter"], [300, 1, 1, "", "IcdarWordRecognitionExporter"]], "datumaro.plugins.data_formats.icdar.exporter.IcdarTextLocalizationExporter": [[300, 2, 1, "", "DEFAULT_IMAGE_EXT"]], "datumaro.plugins.data_formats.icdar.exporter.IcdarTextSegmentationExporter": [[300, 2, 1, "", "DEFAULT_IMAGE_EXT"]], "datumaro.plugins.data_formats.icdar.exporter.IcdarWordRecognitionExporter": [[300, 2, 1, "", "DEFAULT_IMAGE_EXT"]], "datumaro.plugins.data_formats.icdar.format": [[301, 1, 1, "", "IcdarPath"], [301, 1, 1, "", "IcdarTask"]], "datumaro.plugins.data_formats.icdar.format.IcdarPath": [[301, 2, 1, "", "GT_EXT"], [301, 2, 1, "", "IMAGES_DIR"], [301, 2, 1, "", "IMAGE_EXT"]], "datumaro.plugins.data_formats.icdar.format.IcdarTask": [[301, 2, 1, "", "text_localization"], [301, 2, 1, "", "text_segmentation"], [301, 2, 1, "", "word_recognition"]], "datumaro.plugins.data_formats.image_dir": [[302, 1, 1, "", "ImageDirBase"], [302, 1, 1, "", "ImageDirExporter"], [302, 1, 1, "", "ImageDirImporter"]], "datumaro.plugins.data_formats.image_dir.ImageDirBase": [[302, 6, 1, "", "is_stream"]], "datumaro.plugins.data_formats.image_dir.ImageDirExporter": [[302, 2, 1, "", "DEFAULT_IMAGE_EXT"]], "datumaro.plugins.data_formats.image_dir.ImageDirImporter": [[302, 2, 1, "", "DETECT_CONFIDENCE"], [302, 4, 1, "", "build_cmdline_parser"], [302, 4, 1, "", "detect"], [302, 4, 1, "", "find_sources"], [302, 4, 1, "", "get_file_extensions"]], "datumaro.plugins.data_formats.image_zip": [[303, 1, 1, "", "Compression"], [303, 1, 1, "", "ImageZipBase"], [303, 1, 1, "", "ImageZipExporter"], [303, 1, 1, "", "ImageZipImporter"], [303, 1, 1, "", "ImageZipPath"]], "datumaro.plugins.data_formats.image_zip.Compression": [[303, 2, 1, "", "ZIP_BZIP2"], [303, 2, 1, "", "ZIP_DEFLATED"], [303, 2, 1, "", "ZIP_LZMA"], [303, 2, 1, "", "ZIP_STORED"]], "datumaro.plugins.data_formats.image_zip.ImageZipExporter": [[303, 2, 1, "", "DEFAULT_IMAGE_EXT"], [303, 4, 1, "", "build_cmdline_parser"]], "datumaro.plugins.data_formats.image_zip.ImageZipImporter": [[303, 4, 1, "", "find_sources"], [303, 4, 1, "", "get_file_extensions"]], "datumaro.plugins.data_formats.image_zip.ImageZipPath": [[303, 2, 1, "", "DEFAULT_ARCHIVE_NAME"], [303, 2, 1, "", "DEFAULT_COMPRESSION"]], "datumaro.plugins.data_formats.imagenet": [[304, 1, 1, "", "ImagenetBase"], [304, 1, 1, "", "ImagenetExporter"], [304, 1, 1, "", "ImagenetImporter"], [304, 1, 1, "", "ImagenetPath"], [304, 1, 1, "", "ImagenetWithSubsetDirsExporter"], [304, 1, 1, "", "ImagenetWithSubsetDirsImporter"]], "datumaro.plugins.data_formats.imagenet.ImagenetBase": [[304, 6, 1, "", "is_stream"]], "datumaro.plugins.data_formats.imagenet.ImagenetExporter": [[304, 2, 1, "", "DEFAULT_IMAGE_EXT"], [304, 2, 1, "", "USE_SUBSET_DIRS"]], "datumaro.plugins.data_formats.imagenet.ImagenetImporter": [[304, 2, 1, "", "DETECT_CONFIDENCE"], [304, 4, 1, "", "build_cmdline_parser"], [304, 4, 1, "", "contains_only_images"], [304, 4, 1, "", "detect"], [304, 4, 1, "", "find_sources"], [304, 4, 1, "", "get_file_extensions"]], "datumaro.plugins.data_formats.imagenet.ImagenetPath": [[304, 2, 1, "", "IMAGE_DIR_NO_LABEL"], [304, 2, 1, "", "SEP_TOKEN"]], "datumaro.plugins.data_formats.imagenet.ImagenetWithSubsetDirsExporter": [[304, 2, 1, "", "USE_SUBSET_DIRS"]], "datumaro.plugins.data_formats.imagenet.ImagenetWithSubsetDirsImporter": [[304, 2, 1, "", "NAME"], [304, 4, 1, "", "detect"]], "datumaro.plugins.data_formats.imagenet_txt": [[305, 1, 1, "", "ImagenetTxtBase"], [305, 1, 1, "", "ImagenetTxtExporter"], [305, 1, 1, "", "ImagenetTxtImporter"], [305, 1, 1, "", "ImagenetTxtPath"]], "datumaro.plugins.data_formats.imagenet_txt.ImagenetTxtExporter": [[305, 2, 1, "", "DEFAULT_IMAGE_EXT"]], "datumaro.plugins.data_formats.imagenet_txt.ImagenetTxtImporter": [[305, 4, 1, "", "build_cmdline_parser"], [305, 4, 1, "", "detect"], [305, 4, 1, "", "find_sources_with_params"], [305, 4, 1, "", "get_file_extensions"]], "datumaro.plugins.data_formats.imagenet_txt.ImagenetTxtPath": [[305, 2, 1, "", "IMAGE_DIR"], [305, 2, 1, "", "LABELS_FILE"]], "datumaro.plugins.data_formats.kaggle": [[307, 0, 0, "-", "base"]], "datumaro.plugins.data_formats.kaggle.base": [[307, 1, 1, "", "KaggleCocoBase"], [307, 1, 1, "", "KaggleImageCsvBase"], [307, 1, 1, "", "KaggleImageMaskBase"], [307, 1, 1, "", "KaggleImageTxtBase"], [307, 1, 1, "", "KaggleVocBase"], [307, 1, 1, "", "KaggleYoloBase"]], "datumaro.plugins.data_formats.kaggle.base.KaggleCocoBase": [[307, 4, 1, "", "build_cmdline_parser"]], "datumaro.plugins.data_formats.kaggle.base.KaggleImageCsvBase": [[307, 4, 1, "", "build_cmdline_parser"], [307, 4, 1, "", "categories"]], "datumaro.plugins.data_formats.kaggle.base.KaggleImageMaskBase": [[307, 4, 1, "", "build_cmdline_parser"], [307, 4, 1, "", "categories"]], "datumaro.plugins.data_formats.kaggle.base.KaggleVocBase": [[307, 2, 1, "", "ann_extensions"], [307, 4, 1, "", "build_cmdline_parser"]], "datumaro.plugins.data_formats.kaggle.base.KaggleYoloBase": [[307, 2, 1, "", "ann_extensions"]], "datumaro.plugins.data_formats.kinetics": [[308, 1, 1, "", "KineticsBase"], [308, 1, 1, "", "KineticsImporter"]], "datumaro.plugins.data_formats.kinetics.KineticsBase": [[308, 4, 1, "", "categories"]], "datumaro.plugins.data_formats.kinetics.KineticsImporter": [[308, 4, 1, "", "detect"], [308, 4, 1, "", "find_sources"], [308, 4, 1, "", "get_file_extensions"]], "datumaro.plugins.data_formats.kitti": [[310, 0, 0, "-", "base"], [311, 0, 0, "-", "exporter"], [312, 0, 0, "-", "format"], [313, 0, 0, "-", "importer"]], "datumaro.plugins.data_formats.kitti.base": [[310, 1, 1, "", "KittiDetectionBase"], [310, 1, 1, "", "KittiSegmentationBase"]], "datumaro.plugins.data_formats.kitti.exporter": [[311, 1, 1, "", "KittiDetectionExporter"], [311, 1, 1, "", "KittiExporter"], [311, 1, 1, "", "KittiSegmentationExporter"], [311, 1, 1, "", "LabelmapType"]], "datumaro.plugins.data_formats.kitti.exporter.KittiExporter": [[311, 2, 1, "", "DEFAULT_IMAGE_EXT"], [311, 4, 1, "", "build_cmdline_parser"], [311, 4, 1, "", "get_label"], [311, 4, 1, "", "save_label_map"], [311, 4, 1, "", "save_mask"]], "datumaro.plugins.data_formats.kitti.exporter.LabelmapType": [[311, 2, 1, "", "kitti"], [311, 2, 1, "", "source"]], "datumaro.plugins.data_formats.kitti.format": [[312, 1, 1, "", "KittiPath"], [312, 1, 1, "", "KittiTask"], [312, 3, 1, "", "make_kitti_categories"], [312, 3, 1, "", "parse_label_map"], [312, 3, 1, "", "write_label_map"]], "datumaro.plugins.data_formats.kitti.format.KittiPath": [[312, 2, 1, "", "DEFAULT_OCCLUDED"], [312, 2, 1, "", "DEFAULT_SCORE"], [312, 2, 1, "", "DEFAULT_TRUNCATED"], [312, 2, 1, "", "IMAGES_DIR"], [312, 2, 1, "", "IMAGE_EXT"], [312, 2, 1, "", "INSTANCES_DIR"], [312, 2, 1, "", "LABELMAP_FILE"], [312, 2, 1, "", "LABELS_DIR"], [312, 2, 1, "", "MASK_EXT"], [312, 2, 1, "", "SEMANTIC_DIR"], [312, 2, 1, "", "SEMANTIC_RGB_DIR"]], "datumaro.plugins.data_formats.kitti.format.KittiTask": [[312, 2, 1, "", "detection"], [312, 2, 1, "", "segmentation"]], "datumaro.plugins.data_formats.kitti.importer": [[313, 1, 1, "", "KittiDetectionImporter"], [313, 1, 1, "", "KittiImporter"], [313, 1, 1, "", "KittiSegmentationImporter"]], "datumaro.plugins.data_formats.kitti.importer.KittiDetectionImporter": [[313, 4, 1, "", "detect"], [313, 4, 1, "", "get_file_extensions"]], "datumaro.plugins.data_formats.kitti.importer.KittiImporter": [[313, 2, 1, "", "DETECT_CONFIDENCE"], [313, 4, 1, "", "detect"], [313, 4, 1, "", "find_sources"], [313, 4, 1, "", "get_file_extensions"]], "datumaro.plugins.data_formats.kitti.importer.KittiSegmentationImporter": [[313, 4, 1, "", "detect"], [313, 4, 1, "", "get_file_extensions"]], "datumaro.plugins.data_formats.kitti_raw": [[315, 0, 0, "-", "base"], [316, 0, 0, "-", "exporter"], [317, 0, 0, "-", "format"]], "datumaro.plugins.data_formats.kitti_raw.base": [[315, 1, 1, "", "KittiRawBase"], [315, 1, 1, "", "KittiRawImporter"]], "datumaro.plugins.data_formats.kitti_raw.base.KittiRawImporter": [[315, 4, 1, "", "detect"], [315, 4, 1, "", "find_sources"], [315, 4, 1, "", "get_file_extensions"]], "datumaro.plugins.data_formats.kitti_raw.exporter": [[316, 1, 1, "", "KittiRawExporter"]], "datumaro.plugins.data_formats.kitti_raw.exporter.KittiRawExporter": [[316, 2, 1, "", "DEFAULT_IMAGE_EXT"], [316, 4, 1, "", "build_cmdline_parser"], [316, 4, 1, "", "patch"]], "datumaro.plugins.data_formats.kitti_raw.format": [[317, 1, 1, "", "KittiRawPath"], [317, 1, 1, "", "OcclusionStates"], [317, 1, 1, "", "PoseStates"], [317, 1, 1, "", "TruncationStates"]], "datumaro.plugins.data_formats.kitti_raw.format.KittiRawPath": [[317, 2, 1, "", "ANNO_FILE"], [317, 2, 1, "", "BUILTIN_ATTRS"], [317, 2, 1, "", "IMG_DIR_PREFIX"], [317, 2, 1, "", "NAME_MAPPING_FILE"], [317, 2, 1, "", "PCD_DIR"], [317, 2, 1, "", "SPECIAL_ATTRS"]], "datumaro.plugins.data_formats.kitti_raw.format.OcclusionStates": [[317, 2, 1, "", "FULLY"], [317, 2, 1, "", "OCCLUSION_UNSET"], [317, 2, 1, "", "PARTLY"], [317, 2, 1, "", "VISIBLE"]], "datumaro.plugins.data_formats.kitti_raw.format.PoseStates": [[317, 2, 1, "", "INTERP"], [317, 2, 1, "", "LABELED"], [317, 2, 1, "", "UNSET"]], "datumaro.plugins.data_formats.kitti_raw.format.TruncationStates": [[317, 2, 1, "", "BEHIND_IMAGE"], [317, 2, 1, "", "IN_IMAGE"], [317, 2, 1, "", "OUT_IMAGE"], [317, 2, 1, "", "TRUNCATED"], [317, 2, 1, "", "TRUNCATION_UNSET"]], "datumaro.plugins.data_formats.labelme": [[318, 1, 1, "", "LabelMeBase"], [318, 1, 1, "", "LabelMeExporter"], [318, 1, 1, "", "LabelMeImporter"], [318, 1, 1, "", "LabelMePath"]], "datumaro.plugins.data_formats.labelme.LabelMeBase": [[318, 4, 1, "", "categories"]], "datumaro.plugins.data_formats.labelme.LabelMeExporter": [[318, 2, 1, "", "DEFAULT_IMAGE_EXT"]], "datumaro.plugins.data_formats.labelme.LabelMeImporter": [[318, 4, 1, "", "detect"], [318, 4, 1, "", "find_sources"], [318, 4, 1, "", "get_file_extensions"]], "datumaro.plugins.data_formats.labelme.LabelMePath": [[318, 2, 1, "", "ANNOTATIONS_DIR"], [318, 2, 1, "", "ATTR_EXPORT_ESCAPES"], [318, 2, 1, "", "ATTR_IMPORT_ESCAPES"], [318, 2, 1, "", "IMAGES_DIR"], [318, 2, 1, "", "IMAGE_EXT"], [318, 2, 1, "", "MASKS_DIR"]], "datumaro.plugins.data_formats.lfw": [[319, 1, 1, "", "LfwBase"], [319, 1, 1, "", "LfwExporter"], [319, 1, 1, "", "LfwImporter"], [319, 1, 1, "", "LfwPath"]], "datumaro.plugins.data_formats.lfw.LfwBase": [[319, 4, 1, "", "get_image_name"]], "datumaro.plugins.data_formats.lfw.LfwExporter": [[319, 2, 1, "", "DEFAULT_IMAGE_EXT"]], "datumaro.plugins.data_formats.lfw.LfwImporter": [[319, 4, 1, "", "detect"], [319, 4, 1, "", "find_sources"], [319, 4, 1, "", "get_file_extensions"]], "datumaro.plugins.data_formats.lfw.LfwPath": [[319, 2, 1, "", "ANNOTATION_DIR"], [319, 2, 1, "", "IMAGES_DIR"], [319, 2, 1, "", "IMAGE_EXT"], [319, 2, 1, "", "LANDMARKS_FILE"], [319, 2, 1, "", "PAIRS_FILE"], [319, 2, 1, "", "PATTERN"], [319, 2, 1, "", "PEOPLE_FILE"]], "datumaro.plugins.data_formats.mapillary_vistas": [[321, 0, 0, "-", "base"], [322, 0, 0, "-", "format"], [323, 0, 0, "-", "importer"]], "datumaro.plugins.data_formats.mapillary_vistas.base": [[321, 1, 1, "", "MapillaryVistasInstancesBase"], [321, 1, 1, "", "MapillaryVistasPanopticBase"]], "datumaro.plugins.data_formats.mapillary_vistas.format": [[322, 1, 1, "", "MapillaryVistasPath"], [322, 1, 1, "", "MapillaryVistasTask"], [322, 3, 1, "", "make_mapillary_instance_categories"], [322, 3, 1, "", "parse_config_file"]], "datumaro.plugins.data_formats.mapillary_vistas.format.MapillaryVistasPath": [[322, 2, 1, "", "ANNOTATION_DIRS"], [322, 2, 1, "", "CLASS_BY_DIR"], [322, 2, 1, "", "CLASS_DIR"], [322, 2, 1, "", "CONFIG_FILES"], [322, 2, 1, "", "IMAGES_DIR"], [322, 2, 1, "", "INSTANCES_DIR"], [322, 2, 1, "", "MASK_EXT"], [322, 2, 1, "", "PANOPTIC_CONFIG"], [322, 2, 1, "", "PANOPTIC_DIR"], [322, 2, 1, "", "POLYGON_DIR"]], "datumaro.plugins.data_formats.mapillary_vistas.format.MapillaryVistasTask": [[322, 2, 1, "", "instances"], [322, 2, 1, "", "panoptic"]], "datumaro.plugins.data_formats.mapillary_vistas.importer": [[323, 1, 1, "", "MapillaryVistasImporter"], [323, 1, 1, "", "MapillaryVistasInstancesImporter"], [323, 1, 1, "", "MapillaryVistasPanopticImporter"]], "datumaro.plugins.data_formats.mapillary_vistas.importer.MapillaryVistasImporter": [[323, 4, 1, "", "build_cmdline_parser"], [323, 4, 1, "", "find_sources"], [323, 4, 1, "", "get_file_extensions"]], "datumaro.plugins.data_formats.market1501": [[324, 1, 1, "", "Market1501Base"], [324, 1, 1, "", "Market1501Exporter"], [324, 1, 1, "", "Market1501Importer"], [324, 1, 1, "", "Market1501Path"]], "datumaro.plugins.data_formats.market1501.Market1501Exporter": [[324, 2, 1, "", "DEFAULT_IMAGE_EXT"]], "datumaro.plugins.data_formats.market1501.Market1501Importer": [[324, 2, 1, "", "DETECT_CONFIDENCE"], [324, 4, 1, "", "find_sources"], [324, 4, 1, "", "get_file_extensions"]], "datumaro.plugins.data_formats.market1501.Market1501Path": [[324, 2, 1, "", "ATTRIBUTES"], [324, 2, 1, "", "BBOX_DIR"], [324, 2, 1, "", "IMAGE_EXT"], [324, 2, 1, "", "LIST_PREFIX"], [324, 2, 1, "", "PATTERN"], [324, 2, 1, "", "QUERY_DIR"], [324, 2, 1, "", "UNKNOWN_ID"]], "datumaro.plugins.data_formats.mars": [[325, 1, 1, "", "MarsBase"], [325, 1, 1, "", "MarsImporter"], [325, 1, 1, "", "MarsPath"]], "datumaro.plugins.data_formats.mars.MarsBase": [[325, 4, 1, "", "categories"]], "datumaro.plugins.data_formats.mars.MarsImporter": [[325, 4, 1, "", "detect"], [325, 4, 1, "", "find_sources"], [325, 4, 1, "", "get_file_extensions"]], "datumaro.plugins.data_formats.mars.MarsPath": [[325, 2, 1, "", "IMAGE_DIR_PATTERNS"], [325, 2, 1, "", "IMAGE_NAME_POSTFIX"], [325, 2, 1, "", "SUBSET_DIR_PATTERN"]], "datumaro.plugins.data_formats.mmdet": [[326, 1, 1, "", "MmdetCocoBase"], [326, 1, 1, "", "MmdetCocoImporter"]], "datumaro.plugins.data_formats.mmdet.MmdetCocoImporter": [[326, 4, 1, "", "detect"]], "datumaro.plugins.data_formats.mnist": [[327, 1, 1, "", "MnistBase"], [327, 1, 1, "", "MnistExporter"], [327, 1, 1, "", "MnistImporter"], [327, 1, 1, "", "MnistPath"]], "datumaro.plugins.data_formats.mnist.MnistExporter": [[327, 2, 1, "", "DEFAULT_IMAGE_EXT"], [327, 4, 1, "", "save_annotations"], [327, 4, 1, "", "save_images"], [327, 4, 1, "", "save_labels"]], "datumaro.plugins.data_formats.mnist.MnistImporter": [[327, 4, 1, "", "find_sources"], [327, 4, 1, "", "get_file_extensions"]], "datumaro.plugins.data_formats.mnist.MnistPath": [[327, 2, 1, "", "IMAGES_FILE"], [327, 2, 1, "", "IMAGE_SIZE"], [327, 2, 1, "", "LABELS_FILE"], [327, 2, 1, "", "NONE_LABEL"], [327, 2, 1, "", "TEST_IMAGES_FILE"], [327, 2, 1, "", "TEST_LABELS_FILE"]], "datumaro.plugins.data_formats.mnist_csv": [[328, 1, 1, "", "MnistCsvBase"], [328, 1, 1, "", "MnistCsvExporter"], [328, 1, 1, "", "MnistCsvImporter"], [328, 1, 1, "", "MnistCsvPath"]], "datumaro.plugins.data_formats.mnist_csv.MnistCsvExporter": [[328, 2, 1, "", "DEFAULT_IMAGE_EXT"], [328, 4, 1, "", "save_in_csv"], [328, 4, 1, "", "save_labels"]], "datumaro.plugins.data_formats.mnist_csv.MnistCsvImporter": [[328, 2, 1, "", "DETECT_CONFIDENCE"], [328, 4, 1, "", "find_sources"], [328, 4, 1, "", "get_file_extensions"]], "datumaro.plugins.data_formats.mnist_csv.MnistCsvPath": [[328, 2, 1, "", "IMAGE_SIZE"], [328, 2, 1, "", "NONE_LABEL"]], "datumaro.plugins.data_formats.mot": [[329, 1, 1, "", "MotLabel"], [329, 1, 1, "", "MotPath"], [329, 1, 1, "", "MotSeqBase"], [329, 1, 1, "", "MotSeqGtExporter"], [329, 1, 1, "", "MotSeqImporter"]], "datumaro.plugins.data_formats.mot.MotLabel": [[329, 2, 1, "", "bicycle"], [329, 2, 1, "", "car"], [329, 2, 1, "", "distractor"], [329, 2, 1, "", "motorbike"], [329, 2, 1, "", "occluder"], [329, 2, 1, "", "pedestrian"], [329, 2, 1, "", "reflection"]], "datumaro.plugins.data_formats.mot.MotPath": [[329, 2, 1, "", "DET_FILENAME"], [329, 2, 1, "", "FIELDS"], [329, 2, 1, "", "GT_FILENAME"], [329, 2, 1, "", "IMAGE_DIR"], [329, 2, 1, "", "IMAGE_EXT"], [329, 2, 1, "", "LABELS_FILE"], [329, 2, 1, "", "SEQINFO_FILE"]], "datumaro.plugins.data_formats.mot.MotSeqGtExporter": [[329, 2, 1, "", "DEFAULT_IMAGE_EXT"]], "datumaro.plugins.data_formats.mot.MotSeqImporter": [[329, 4, 1, "", "detect"], [329, 4, 1, "", "find_sources"], [329, 4, 1, "", "get_file_extensions"]], "datumaro.plugins.data_formats.mots": [[330, 1, 1, "", "MotsImporter"], [330, 1, 1, "", "MotsLabels"], [330, 1, 1, "", "MotsPath"], [330, 1, 1, "", "MotsPngExporter"], [330, 1, 1, "", "MotsPngExtractor"]], "datumaro.plugins.data_formats.mots.MotsImporter": [[330, 4, 1, "", "find_sources"], [330, 4, 1, "", "get_file_extensions"]], "datumaro.plugins.data_formats.mots.MotsLabels": [[330, 2, 1, "", "background"], [330, 2, 1, "", "car"], [330, 2, 1, "", "ignored"], [330, 2, 1, "", "pedestrian"]], "datumaro.plugins.data_formats.mots.MotsPath": [[330, 2, 1, "", "IMAGE_DIR"], [330, 2, 1, "", "IMAGE_EXT"], [330, 2, 1, "", "LABELS_FILE"], [330, 2, 1, "", "MASKS_DIR"], [330, 2, 1, "", "MAX_INSTANCES"]], "datumaro.plugins.data_formats.mots.MotsPngExporter": [[330, 2, 1, "", "DEFAULT_IMAGE_EXT"]], "datumaro.plugins.data_formats.mots.MotsPngExtractor": [[330, 4, 1, "", "detect_dataset"]], "datumaro.plugins.data_formats.mpii": [[332, 0, 0, "-", "format"], [333, 0, 0, "-", "mpii_json"], [334, 0, 0, "-", "mpii_mat"]], "datumaro.plugins.data_formats.mpii.mpii_json": [[333, 1, 1, "", "MpiiJsonBase"], [333, 1, 1, "", "MpiiJsonImporter"], [333, 1, 1, "", "MpiiJsonPath"]], "datumaro.plugins.data_formats.mpii.mpii_json.MpiiJsonImporter": [[333, 4, 1, "", "detect"], [333, 4, 1, "", "find_sources"], [333, 4, 1, "", "get_file_extensions"]], "datumaro.plugins.data_formats.mpii.mpii_json.MpiiJsonPath": [[333, 2, 1, "", "ANNOTATION_FILE"], [333, 2, 1, "", "HEADBOXES_FILE"], [333, 2, 1, "", "POS_GT_FILE"], [333, 2, 1, "", "VISIBILITY_FILE"]], "datumaro.plugins.data_formats.mpii.mpii_mat": [[334, 1, 1, "", "MpiiBase"], [334, 1, 1, "", "MpiiImporter"]], "datumaro.plugins.data_formats.mpii.mpii_mat.MpiiImporter": [[334, 4, 1, "", "detect"], [334, 4, 1, "", "find_sources"], [334, 4, 1, "", "get_file_extensions"]], "datumaro.plugins.data_formats.mvtec": [[336, 0, 0, "-", "base"], [337, 0, 0, "-", "exporter"], [338, 0, 0, "-", "format"], [339, 0, 0, "-", "importer"]], "datumaro.plugins.data_formats.mvtec.base": [[336, 1, 1, "", "MvtecClassificationBase"], [336, 1, 1, "", "MvtecDetectionBase"], [336, 1, 1, "", "MvtecSegmentationBase"]], "datumaro.plugins.data_formats.mvtec.exporter": [[337, 1, 1, "", "LabelmapType"], [337, 1, 1, "", "MvtecClassificationExporter"], [337, 1, 1, "", "MvtecDetectionExporter"], [337, 1, 1, "", "MvtecExporter"], [337, 1, 1, "", "MvtecSegmentationExporter"]], "datumaro.plugins.data_formats.mvtec.exporter.LabelmapType": [[337, 2, 1, "", "kitti"], [337, 2, 1, "", "source"]], "datumaro.plugins.data_formats.mvtec.exporter.MvtecExporter": [[337, 2, 1, "", "DEFAULT_IMAGE_EXT"], [337, 4, 1, "", "build_cmdline_parser"], [337, 4, 1, "", "get_label"]], "datumaro.plugins.data_formats.mvtec.format": [[338, 1, 1, "", "MvtecPath"], [338, 1, 1, "", "MvtecTask"]], "datumaro.plugins.data_formats.mvtec.format.MvtecPath": [[338, 2, 1, "", "IMAGE_EXT"], [338, 2, 1, "", "MASK_DIR"], [338, 2, 1, "", "MASK_EXT"], [338, 2, 1, "", "MASK_POSTFIX"]], "datumaro.plugins.data_formats.mvtec.format.MvtecTask": [[338, 2, 1, "", "classification"], [338, 2, 1, "", "detection"], [338, 2, 1, "", "segmentation"]], "datumaro.plugins.data_formats.mvtec.importer": [[339, 1, 1, "", "MvtecClassificationImporter"], [339, 1, 1, "", "MvtecDetectionImporter"], [339, 1, 1, "", "MvtecImporter"], [339, 1, 1, "", "MvtecSegmentationImporter"]], "datumaro.plugins.data_formats.mvtec.importer.MvtecClassificationImporter": [[339, 2, 1, "", "DETECT_CONFIDENCE"]], "datumaro.plugins.data_formats.mvtec.importer.MvtecDetectionImporter": [[339, 2, 1, "", "DETECT_CONFIDENCE"]], "datumaro.plugins.data_formats.mvtec.importer.MvtecImporter": [[339, 4, 1, "", "find_sources"], [339, 4, 1, "", "get_file_extensions"]], "datumaro.plugins.data_formats.mvtec.importer.MvtecSegmentationImporter": [[339, 2, 1, "", "DETECT_CONFIDENCE"]], "datumaro.plugins.data_formats.nyu_depth_v2": [[340, 1, 1, "", "NyuDepthV2Base"], [340, 1, 1, "", "NyuDepthV2Importer"]], "datumaro.plugins.data_formats.nyu_depth_v2.NyuDepthV2Importer": [[340, 4, 1, "", "detect"], [340, 4, 1, "", "find_sources"], [340, 4, 1, "", "get_file_extensions"]], "datumaro.plugins.data_formats.open_images": [[341, 1, 1, "", "OpenImagesBase"], [341, 1, 1, "", "OpenImagesExporter"], [341, 1, 1, "", "OpenImagesImporter"], [341, 1, 1, "", "OpenImagesPath"], [341, 5, 1, "", "UnsupportedBoxIdError"], [341, 5, 1, "", "UnsupportedMaskPathError"], [341, 5, 1, "", "UnsupportedSubsetNameError"]], "datumaro.plugins.data_formats.open_images.OpenImagesBase": [[341, 4, 1, "", "categories"]], "datumaro.plugins.data_formats.open_images.OpenImagesExporter": [[341, 2, 1, "", "DEFAULT_IMAGE_EXT"], [341, 4, 1, "", "patch"]], "datumaro.plugins.data_formats.open_images.OpenImagesImporter": [[341, 2, 1, "", "POSSIBLE_ANNOTATION_PATTERNS"], [341, 4, 1, "", "detect"], [341, 4, 1, "", "find_sources"], [341, 4, 1, "", "get_file_extensions"]], "datumaro.plugins.data_formats.open_images.OpenImagesPath": [[341, 2, 1, "", "ANNOTATIONS_DIR"], [341, 2, 1, "", "BBOX_BOOLEAN_ATTRIBUTES"], [341, 2, 1, "", "BBOX_DESCRIPTION_FIELDS"], [341, 2, 1, "", "BBOX_DESCRIPTION_FILE_SUFFIX"], [341, 2, 1, "", "FULL_IMAGE_DESCRIPTION_FILE_NAME"], [341, 2, 1, "", "HIERARCHY_FILE_NAME"], [341, 2, 1, "", "IMAGES_DIR"], [341, 2, 1, "", "IMAGE_DESCRIPTION_FIELDS"], [341, 2, 1, "", "LABEL_DESCRIPTION_FIELDS"], [341, 2, 1, "", "LABEL_DESCRIPTION_FILE_SUFFIX"], [341, 2, 1, "", "MASKS_DIR"], [341, 2, 1, "", "MASK_DESCRIPTION_FIELDS"], [341, 2, 1, "", "MASK_DESCRIPTION_FILE_SUFFIX"], [341, 2, 1, "", "SUBSET_IMAGE_DESCRIPTION_FILE_PATTERNS"], [341, 2, 1, "", "V5_CLASS_DESCRIPTION_BBOX_FILE_NAME"], [341, 2, 1, "", "V5_CLASS_DESCRIPTION_FILE_NAME"]], "datumaro.plugins.data_formats.open_images.UnsupportedBoxIdError": [[341, 2, 1, "", "box_id"], [341, 2, 1, "", "item_id"]], "datumaro.plugins.data_formats.open_images.UnsupportedMaskPathError": [[341, 2, 1, "", "item_id"], [341, 2, 1, "", "mask_path"]], "datumaro.plugins.data_formats.open_images.UnsupportedSubsetNameError": [[341, 2, 1, "", "item_id"], [341, 2, 1, "", "subset"]], "datumaro.plugins.data_formats.roboflow": [[343, 0, 0, "-", "base"], [344, 0, 0, "-", "base_tfrecord"], [345, 0, 0, "-", "importer"]], "datumaro.plugins.data_formats.roboflow.base": [[343, 1, 1, "", "RoboflowCocoBase"], [343, 1, 1, "", "RoboflowCreateMlBase"], [343, 1, 1, "", "RoboflowMulticlassBase"], [343, 1, 1, "", "RoboflowVocBase"], [343, 1, 1, "", "RoboflowYoloBase"], [343, 1, 1, "", "RoboflowYoloObbBase"]], "datumaro.plugins.data_formats.roboflow.base_tfrecord": [[344, 1, 1, "", "RoboflowTfrecordBase"], [344, 1, 1, "", "RoboflowTfrecordImporter"]], "datumaro.plugins.data_formats.roboflow.base_tfrecord.RoboflowTfrecordImporter": [[344, 4, 1, "", "find_sources"], [344, 4, 1, "", "get_file_extensions"]], "datumaro.plugins.data_formats.roboflow.importer": [[345, 1, 1, "", "RoboflowCocoImporter"], [345, 1, 1, "", "RoboflowCreateMlImporter"], [345, 1, 1, "", "RoboflowMulticlassImporter"], [345, 1, 1, "", "RoboflowVocImporter"], [345, 1, 1, "", "RoboflowYoloImporter"], [345, 1, 1, "", "RoboflowYoloObbImporter"]], "datumaro.plugins.data_formats.roboflow.importer.RoboflowCocoImporter": [[345, 2, 1, "", "ANN_FILE_NAME"], [345, 2, 1, "", "FORMAT"], [345, 6, 1, "", "can_stream"], [345, 4, 1, "", "detect"], [345, 4, 1, "", "find_sources"], [345, 4, 1, "", "get_extractor_merger"], [345, 4, 1, "", "get_file_extensions"]], "datumaro.plugins.data_formats.roboflow.importer.RoboflowCreateMlImporter": [[345, 2, 1, "", "ANN_FILE_NAME"], [345, 2, 1, "", "FORMAT"]], "datumaro.plugins.data_formats.roboflow.importer.RoboflowMulticlassImporter": [[345, 2, 1, "", "ANN_FILE_NAME"], [345, 2, 1, "", "FORMAT"]], "datumaro.plugins.data_formats.roboflow.importer.RoboflowVocImporter": [[345, 2, 1, "", "ANN_DIR_NAME"], [345, 2, 1, "", "FORMAT"], [345, 2, 1, "", "FORMAT_EXT"], [345, 4, 1, "", "detect"], [345, 4, 1, "", "find_sources"], [345, 4, 1, "", "get_file_extensions"]], "datumaro.plugins.data_formats.roboflow.importer.RoboflowYoloImporter": [[345, 2, 1, "", "ANN_DIR_NAME"], [345, 2, 1, "", "FORMAT"], [345, 2, 1, "", "FORMAT_EXT"], [345, 4, 1, "", "find_sources"]], "datumaro.plugins.data_formats.roboflow.importer.RoboflowYoloObbImporter": [[345, 2, 1, "", "ANN_DIR_NAME"], [345, 2, 1, "", "FORMAT"], [345, 2, 1, "", "FORMAT_EXT"], [345, 4, 1, "", "detect"]], "datumaro.plugins.data_formats.segment_anything": [[346, 1, 1, "", "SegmentAnythingBase"], [346, 1, 1, "", "SegmentAnythingExporter"], [346, 1, 1, "", "SegmentAnythingImporter"], [347, 0, 0, "-", "base"], [348, 0, 0, "-", "exporter"], [349, 0, 0, "-", "importer"]], "datumaro.plugins.data_formats.segment_anything.SegmentAnythingExporter": [[346, 2, 1, "", "DEFAULT_IMAGE_EXT"], [346, 4, 1, "", "find_instance_anns"], [346, 4, 1, "", "find_instances"], [346, 4, 1, "", "get_annotation_info"]], "datumaro.plugins.data_formats.segment_anything.SegmentAnythingImporter": [[346, 4, 1, "", "detect"], [346, 4, 1, "", "find_sources"], [346, 4, 1, "", "get_file_extensions"]], "datumaro.plugins.data_formats.segment_anything.base": [[347, 1, 1, "", "SegmentAnythingBase"], [347, 3, 1, "", "parse_field"]], "datumaro.plugins.data_formats.segment_anything.exporter": [[348, 1, 1, "", "SegmentAnythingExporter"]], "datumaro.plugins.data_formats.segment_anything.exporter.SegmentAnythingExporter": [[348, 2, 1, "", "DEFAULT_IMAGE_EXT"], [348, 4, 1, "", "find_instance_anns"], [348, 4, 1, "", "find_instances"], [348, 4, 1, "", "get_annotation_info"]], "datumaro.plugins.data_formats.segment_anything.importer": [[349, 1, 1, "", "SegmentAnythingImporter"]], "datumaro.plugins.data_formats.segment_anything.importer.SegmentAnythingImporter": [[349, 4, 1, "", "detect"], [349, 4, 1, "", "find_sources"], [349, 4, 1, "", "get_file_extensions"]], "datumaro.plugins.data_formats.sly_pointcloud": [[351, 0, 0, "-", "base"], [352, 0, 0, "-", "exporter"], [353, 0, 0, "-", "format"]], "datumaro.plugins.data_formats.sly_pointcloud.base": [[351, 1, 1, "", "SuperviselyPointCloudBase"], [351, 1, 1, "", "SuperviselyPointCloudImporter"]], "datumaro.plugins.data_formats.sly_pointcloud.base.SuperviselyPointCloudBase": [[351, 2, 1, "", "NAME"]], "datumaro.plugins.data_formats.sly_pointcloud.base.SuperviselyPointCloudImporter": [[351, 2, 1, "", "NAME"], [351, 4, 1, "", "find_sources"], [351, 4, 1, "", "get_file_extensions"]], "datumaro.plugins.data_formats.sly_pointcloud.exporter": [[352, 1, 1, "", "SuperviselyPointCloudExporter"]], "datumaro.plugins.data_formats.sly_pointcloud.exporter.SuperviselyPointCloudExporter": [[352, 2, 1, "", "DEFAULT_IMAGE_EXT"], [352, 2, 1, "", "NAME"], [352, 4, 1, "", "build_cmdline_parser"], [352, 4, 1, "", "patch"]], "datumaro.plugins.data_formats.sly_pointcloud.format": [[353, 1, 1, "", "PointCloudPath"]], "datumaro.plugins.data_formats.sly_pointcloud.format.PointCloudPath": [[353, 2, 1, "", "ANNNOTATION_DIR"], [353, 2, 1, "", "BASE_DIR"], [353, 2, 1, "", "DEFAULT_IMAGE_EXT"], [353, 2, 1, "", "KEY_ID_FILE"], [353, 2, 1, "", "META_FILE"], [353, 2, 1, "", "POINT_CLOUD_DIR"], [353, 2, 1, "", "RELATED_IMAGES_DIR"], [353, 2, 1, "", "SPECIAL_ATTRS"]], "datumaro.plugins.data_formats.synthia": [[355, 0, 0, "-", "base"], [356, 0, 0, "-", "format"], [357, 0, 0, "-", "importer"]], "datumaro.plugins.data_formats.synthia.base": [[355, 1, 1, "", "SynthiaAlBase"], [355, 1, 1, "", "SynthiaRandBase"], [355, 1, 1, "", "SynthiaSfBase"], [355, 3, 1, "", "make_categories"], [355, 3, 1, "", "parse_label_map"]], "datumaro.plugins.data_formats.synthia.format": [[356, 1, 1, "", "SynthiaAlPath"], [356, 1, 1, "", "SynthiaFormatType"], [356, 1, 1, "", "SynthiaRandPath"], [356, 1, 1, "", "SynthiaSfPath"]], "datumaro.plugins.data_formats.synthia.format.SynthiaAlPath": [[356, 2, 1, "", "DEPTH_DIR"], [356, 2, 1, "", "IMAGES_DIR"], [356, 2, 1, "", "SEMANTIC_SEGM_DIR"], [356, 4, 1, "", "meta_folders"]], "datumaro.plugins.data_formats.synthia.format.SynthiaFormatType": [[356, 2, 1, "", "synthia_al"], [356, 2, 1, "", "synthia_rand"], [356, 2, 1, "", "synthia_sf"]], "datumaro.plugins.data_formats.synthia.format.SynthiaRandPath": [[356, 2, 1, "", "IMAGES_DIR"], [356, 2, 1, "", "LABELS_SEGM_DIR"], [356, 2, 1, "", "SEMANTIC_SEGM_DIR"], [356, 4, 1, "", "meta_folders"]], "datumaro.plugins.data_formats.synthia.format.SynthiaSfPath": [[356, 2, 1, "", "DEPTH_DIR"], [356, 2, 1, "", "IMAGES_DIR"], [356, 2, 1, "", "SEMANTIC_SEGM_DIR"], [356, 4, 1, "", "meta_folders"]], "datumaro.plugins.data_formats.synthia.importer": [[357, 1, 1, "", "SynthiaAlImporter"], [357, 1, 1, "", "SynthiaRandImporter"], [357, 1, 1, "", "SynthiaSfImporter"]], "datumaro.plugins.data_formats.synthia.importer.SynthiaAlImporter": [[357, 2, 1, "", "FORMAT"], [357, 2, 1, "", "META_FOLDERS"]], "datumaro.plugins.data_formats.synthia.importer.SynthiaRandImporter": [[357, 2, 1, "", "FORMAT"], [357, 2, 1, "", "META_FOLDERS"]], "datumaro.plugins.data_formats.synthia.importer.SynthiaSfImporter": [[357, 2, 1, "", "FORMAT"], [357, 2, 1, "", "META_FOLDERS"]], "datumaro.plugins.data_formats.tabular": [[358, 1, 1, "", "TabularDataBase"], [358, 1, 1, "", "TabularDataExporter"], [358, 1, 1, "", "TabularDataImporter"], [358, 3, 1, "", "string_to_dict"]], "datumaro.plugins.data_formats.tabular.TabularDataBase": [[358, 2, 1, "", "NAME"], [358, 4, 1, "", "categories"]], "datumaro.plugins.data_formats.tabular.TabularDataExporter": [[358, 2, 1, "", "DEFAULT_IMAGE_EXT"], [358, 2, 1, "", "EXPORT_EXT"], [358, 2, 1, "", "NAME"]], "datumaro.plugins.data_formats.tabular.TabularDataImporter": [[358, 2, 1, "", "NAME"], [358, 4, 1, "", "build_cmdline_parser"], [358, 4, 1, "", "find_sources"], [358, 4, 1, "", "get_file_extensions"]], "datumaro.plugins.data_formats.tf_detection_api": [[360, 0, 0, "-", "base"], [361, 0, 0, "-", "exporter"], [362, 0, 0, "-", "format"]], "datumaro.plugins.data_formats.tf_detection_api.base": [[360, 1, 1, "", "TfDetectionApiBase"], [360, 1, 1, "", "TfDetectionApiImporter"], [360, 3, 1, "", "clamp"]], "datumaro.plugins.data_formats.tf_detection_api.base.TfDetectionApiImporter": [[360, 4, 1, "", "find_sources"], [360, 4, 1, "", "get_file_extensions"]], "datumaro.plugins.data_formats.tf_detection_api.exporter": [[361, 1, 1, "", "TfDetectionApiExporter"], [361, 3, 1, "", "bytes_feature"], [361, 3, 1, "", "bytes_list_feature"], [361, 3, 1, "", "float_list_feature"], [361, 3, 1, "", "int64_feature"], [361, 3, 1, "", "int64_list_feature"]], "datumaro.plugins.data_formats.tf_detection_api.exporter.TfDetectionApiExporter": [[361, 2, 1, "", "DEFAULT_IMAGE_EXT"], [361, 4, 1, "", "build_cmdline_parser"], [361, 4, 1, "", "patch"]], "datumaro.plugins.data_formats.tf_detection_api.format": [[362, 1, 1, "", "DetectionApiPath"], [362, 1, 1, "", "TfrecordImporterType"]], "datumaro.plugins.data_formats.tf_detection_api.format.DetectionApiPath": [[362, 2, 1, "", "ANNOTATIONS_DIR"], [362, 2, 1, "", "DEFAULT_IMAGE_EXT"], [362, 2, 1, "", "IMAGES_DIR"], [362, 2, 1, "", "IMAGE_EXT_FORMAT"], [362, 2, 1, "", "LABELMAP_FILE"]], "datumaro.plugins.data_formats.tf_detection_api.format.TfrecordImporterType": [[362, 2, 1, "", "default"], [362, 2, 1, "", "roboflow"]], "datumaro.plugins.data_formats.vgg_face2": [[363, 1, 1, "", "VggFace2Base"], [363, 1, 1, "", "VggFace2Exporter"], [363, 1, 1, "", "VggFace2Importer"], [363, 1, 1, "", "VggFace2Path"]], "datumaro.plugins.data_formats.vgg_face2.VggFace2Base": [[363, 4, 1, "", "categories"]], "datumaro.plugins.data_formats.vgg_face2.VggFace2Exporter": [[363, 2, 1, "", "DEFAULT_IMAGE_EXT"]], "datumaro.plugins.data_formats.vgg_face2.VggFace2Importer": [[363, 4, 1, "", "detect"], [363, 4, 1, "", "find_sources"], [363, 4, 1, "", "get_file_extensions"]], "datumaro.plugins.data_formats.vgg_face2.VggFace2Path": [[363, 2, 1, "", "ANNOTATION_DIR"], [363, 2, 1, "", "BBOXES_FILE"], [363, 2, 1, "", "IMAGES_DIR_NO_LABEL"], [363, 2, 1, "", "IMAGE_EXT"], [363, 2, 1, "", "LABELS_FILE"], [363, 2, 1, "", "LANDMARKS_FILE"]], "datumaro.plugins.data_formats.video": [[364, 1, 1, "", "VideoFramesBase"], [364, 1, 1, "", "VideoFramesImporter"], [364, 1, 1, "", "VideoKeyframesBase"], [364, 1, 1, "", "VideoKeyframesImporter"]], "datumaro.plugins.data_formats.video.VideoFramesBase": [[364, 4, 1, "", "get"]], "datumaro.plugins.data_formats.video.VideoFramesImporter": [[364, 4, 1, "", "build_cmdline_parser"], [364, 4, 1, "", "detect"], [364, 4, 1, "", "find_sources"], [364, 4, 1, "", "get_file_extensions"]], "datumaro.plugins.data_formats.video.VideoKeyframesImporter": [[364, 4, 1, "", "build_cmdline_parser"], [364, 4, 1, "", "find_sources"]], "datumaro.plugins.data_formats.voc": [[366, 0, 0, "-", "base"], [367, 0, 0, "-", "exporter"], [368, 0, 0, "-", "format"], [369, 0, 0, "-", "importer"]], "datumaro.plugins.data_formats.voc.base": [[366, 1, 1, "", "VocActionBase"], [366, 1, 1, "", "VocBase"], [366, 1, 1, "", "VocClassificationBase"], [366, 1, 1, "", "VocDetectionBase"], [366, 1, 1, "", "VocInstanceSegmentationBase"], [366, 1, 1, "", "VocLayoutBase"], [366, 1, 1, "", "VocSegmentationBase"]], "datumaro.plugins.data_formats.voc.base.VocBase": [[366, 6, 1, "", "is_stream"]], "datumaro.plugins.data_formats.voc.exporter": [[367, 1, 1, "", "LabelmapType"], [367, 1, 1, "", "VocActionExporter"], [367, 1, 1, "", "VocClassificationExporter"], [367, 1, 1, "", "VocDetectionExporter"], [367, 1, 1, "", "VocExporter"], [367, 1, 1, "", "VocInstanceSegmentationExporter"], [367, 1, 1, "", "VocLayoutExporter"], [367, 1, 1, "", "VocSegmentationExporter"]], "datumaro.plugins.data_formats.voc.exporter.LabelmapType": [[367, 2, 1, "", "source"], [367, 2, 1, "", "voc"], [367, 2, 1, "", "voc_action"], [367, 2, 1, "", "voc_classification"], [367, 2, 1, "", "voc_detection"], [367, 2, 1, "", "voc_instance_segmentation"], [367, 2, 1, "", "voc_layout"], [367, 2, 1, "", "voc_segmentation"]], "datumaro.plugins.data_formats.voc.exporter.VocExporter": [[367, 2, 1, "", "BUILTIN_ATTRS"], [367, 2, 1, "", "DEFAULT_IMAGE_EXT"], [367, 4, 1, "", "build_cmdline_parser"], [367, 6, 1, "", "can_stream"], [367, 4, 1, "", "get_label"], [367, 4, 1, "", "make_dirs"], [367, 4, 1, "", "patch"], [367, 4, 1, "", "save_action_lists"], [367, 4, 1, "", "save_class_lists"], [367, 4, 1, "", "save_clsdet_lists"], [367, 4, 1, "", "save_label_map"], [367, 4, 1, "", "save_layout_lists"], [367, 4, 1, "", "save_segm"], [367, 4, 1, "", "save_segm_lists"], [367, 4, 1, "", "save_subsets"]], "datumaro.plugins.data_formats.voc.format": [[368, 7, 1, "", "LabelMapConfig"], [368, 1, 1, "", "VocAction"], [368, 1, 1, "", "VocBodyPart"], [368, 1, 1, "", "VocImporterType"], [368, 1, 1, "", "VocLabel"], [368, 1, 1, "", "VocPath"], [368, 1, 1, "", "VocPose"], [368, 1, 1, "", "VocTask"], [368, 3, 1, "", "generate_colormap"], [368, 3, 1, "", "make_voc_categories"], [368, 3, 1, "", "make_voc_label_map"], [368, 3, 1, "", "parse_label_map"], [368, 3, 1, "", "parse_meta_file"], [368, 3, 1, "", "write_label_map"], [368, 3, 1, "", "write_meta_file"]], "datumaro.plugins.data_formats.voc.format.VocAction": [[368, 2, 1, "", "jumping"], [368, 2, 1, "", "other"], [368, 2, 1, "", "phoning"], [368, 2, 1, "", "playinginstrument"], [368, 2, 1, "", "reading"], [368, 2, 1, "", "ridingbike"], [368, 2, 1, "", "ridinghorse"], [368, 2, 1, "", "running"], [368, 2, 1, "", "takingphoto"], [368, 2, 1, "", "usingcomputer"], [368, 2, 1, "", "walking"]], "datumaro.plugins.data_formats.voc.format.VocBodyPart": [[368, 2, 1, "", "foot"], [368, 2, 1, "", "hand"], [368, 2, 1, "", "head"]], "datumaro.plugins.data_formats.voc.format.VocImporterType": [[368, 2, 1, "", "default"], [368, 2, 1, "", "roboflow"]], "datumaro.plugins.data_formats.voc.format.VocLabel": [[368, 2, 1, "", "aeroplane"], [368, 2, 1, "", "background"], [368, 2, 1, "", "bicycle"], [368, 2, 1, "", "bird"], [368, 2, 1, "", "boat"], [368, 2, 1, "", "bottle"], [368, 2, 1, "", "bus"], [368, 2, 1, "", "car"], [368, 2, 1, "", "cat"], [368, 2, 1, "", "chair"], [368, 2, 1, "", "cow"], [368, 2, 1, "", "diningtable"], [368, 2, 1, "", "dog"], [368, 2, 1, "", "horse"], [368, 2, 1, "", "ignored"], [368, 2, 1, "", "motorbike"], [368, 2, 1, "", "person"], [368, 2, 1, "", "pottedplant"], [368, 2, 1, "", "sheep"], [368, 2, 1, "", "sofa"], [368, 2, 1, "", "train"], [368, 2, 1, "", "tvmonitor"]], "datumaro.plugins.data_formats.voc.format.VocPath": [[368, 2, 1, "", "ANNOTATIONS_DIR"], [368, 2, 1, "", "IMAGES_DIR"], [368, 2, 1, "", "IMAGE_EXT"], [368, 2, 1, "", "INSTANCES_DIR"], [368, 2, 1, "", "LABELMAP_FILE"], [368, 2, 1, "", "SEGMENTATION_DIR"], [368, 2, 1, "", "SEGM_EXT"], [368, 2, 1, "", "SUBSETS_DIR"], [368, 2, 1, "", "TASK_DIR"]], "datumaro.plugins.data_formats.voc.format.VocPose": [[368, 2, 1, "", "Frontal"], [368, 2, 1, "", "Left"], [368, 2, 1, "", "Rear"], [368, 2, 1, "", "Right"], [368, 2, 1, "", "Unspecified"]], "datumaro.plugins.data_formats.voc.format.VocTask": [[368, 2, 1, "", "voc"], [368, 2, 1, "", "voc_action"], [368, 2, 1, "", "voc_classification"], [368, 2, 1, "", "voc_detection"], [368, 2, 1, "", "voc_instance_segmentation"], [368, 2, 1, "", "voc_layout"], [368, 2, 1, "", "voc_segmentation"]], "datumaro.plugins.data_formats.voc.importer": [[369, 1, 1, "", "VocActionImporter"], [369, 1, 1, "", "VocClassificationImporter"], [369, 1, 1, "", "VocDetectionImporter"], [369, 1, 1, "", "VocImporter"], [369, 1, 1, "", "VocInstanceSegmentationImporter"], [369, 1, 1, "", "VocLayoutImporter"], [369, 1, 1, "", "VocSegmentationImporter"]], "datumaro.plugins.data_formats.vott_csv": [[370, 1, 1, "", "VottCsvBase"], [370, 1, 1, "", "VottCsvImporter"], [370, 1, 1, "", "VottCsvPath"]], "datumaro.plugins.data_formats.vott_csv.VottCsvImporter": [[370, 4, 1, "", "detect"], [370, 4, 1, "", "find_sources"], [370, 4, 1, "", "get_file_extensions"]], "datumaro.plugins.data_formats.vott_csv.VottCsvPath": [[370, 2, 1, "", "ANNO_FILE_SUFFIX"]], "datumaro.plugins.data_formats.vott_json": [[371, 1, 1, "", "VottJsonBase"], [371, 1, 1, "", "VottJsonImporter"], [371, 1, 1, "", "VottJsonPath"]], "datumaro.plugins.data_formats.vott_json.VottJsonImporter": [[371, 4, 1, "", "detect"], [371, 4, 1, "", "find_sources"], [371, 4, 1, "", "get_file_extensions"]], "datumaro.plugins.data_formats.vott_json.VottJsonPath": [[371, 2, 1, "", "ANNO_FILE_SUFFIX"]], "datumaro.plugins.data_formats.widerface": [[372, 1, 1, "", "WiderFaceBase"], [372, 1, 1, "", "WiderFaceExporter"], [372, 1, 1, "", "WiderFaceImporter"], [372, 1, 1, "", "WiderFacePath"]], "datumaro.plugins.data_formats.widerface.WiderFaceExporter": [[372, 2, 1, "", "DEFAULT_IMAGE_EXT"]], "datumaro.plugins.data_formats.widerface.WiderFaceImporter": [[372, 4, 1, "", "detect"], [372, 4, 1, "", "find_sources"], [372, 4, 1, "", "get_file_extensions"]], "datumaro.plugins.data_formats.widerface.WiderFacePath": [[372, 2, 1, "", "ANNOTATIONS_DIR"], [372, 2, 1, "", "BBOX_ATTRIBUTES"], [372, 2, 1, "", "DEFAULT_LABEL"], [372, 2, 1, "", "IMAGES_DIR"], [372, 2, 1, "", "IMAGES_DIR_NO_LABEL"], [372, 2, 1, "", "IMAGE_EXT"], [372, 2, 1, "", "LABELS_FILE"], [372, 2, 1, "", "SUBSET_DIR"]], "datumaro.plugins.data_formats.yolo": [[374, 0, 0, "-", "base"], [375, 0, 0, "-", "exporter"], [376, 0, 0, "-", "format"], [377, 0, 0, "-", "importer"]], "datumaro.plugins.data_formats.yolo.base": [[374, 1, 1, "", "Annotation"], [374, 1, 1, "", "AnnotationType"], [374, 1, 1, "", "Bbox"], [374, 1, 1, "", "DatasetBase"], [374, 5, 1, "", "DatasetImportError"], [374, 1, 1, "", "DatasetItem"], [374, 1, 1, "", "Image"], [374, 1, 1, "", "ImageFromFile"], [374, 1, 1, "", "ImportContext"], [374, 5, 1, "", "InvalidAnnotationError"], [374, 1, 1, "", "LabelCategories"], [374, 1, 1, "", "OrderedDict"], [374, 1, 1, "", "SubsetBase"], [374, 1, 1, "", "TypeVar"], [374, 5, 1, "", "UndeclaredLabelError"], [374, 1, 1, "", "YoloLooseBase"], [374, 1, 1, "", "YoloLoosePath"], [374, 1, 1, "", "YoloPath"], [374, 1, 1, "", "YoloStrictBase"], [374, 1, 1, "", "YoloUltralyticsBase"], [374, 1, 1, "", "YoloUltralyticsPath"], [374, 3, 1, "", "extract_subset_name_from_parent"], [374, 3, 1, "", "find_files"], [374, 3, 1, "", "has_meta_file"], [374, 3, 1, "", "load_image_meta_file"], [374, 3, 1, "", "localize_path"], [374, 3, 1, "", "parse_meta_file"], [374, 3, 1, "", "split_path"]], "datumaro.plugins.data_formats.yolo.base.Annotation": [[374, 4, 1, "", "as_dict"], [374, 2, 1, "", "attributes"], [374, 2, 1, "", "group"], [374, 2, 1, "", "id"], [374, 2, 1, "", "object_id"], [374, 6, 1, "", "type"], [374, 4, 1, "", "wrap"]], "datumaro.plugins.data_formats.yolo.base.AnnotationType": [[374, 2, 1, "", "bbox"], [374, 2, 1, "", "caption"], [374, 2, 1, "", "cuboid_3d"], [374, 2, 1, "", "depth_annotation"], [374, 2, 1, "", "ellipse"], [374, 2, 1, "", "feature_vector"], [374, 2, 1, "", "hash_key"], [374, 2, 1, "", "label"], [374, 2, 1, "", "mask"], [374, 2, 1, "", "points"], [374, 2, 1, "", "polygon"], [374, 2, 1, "", "polyline"], [374, 2, 1, "", "rotated_bbox"], [374, 2, 1, "", "super_resolution_annotation"], [374, 2, 1, "", "tabular"], [374, 2, 1, "", "unknown"]], "datumaro.plugins.data_formats.yolo.base.Bbox": [[374, 4, 1, "", "__init__"], [374, 2, 1, "", "_type"], [374, 4, 1, "id6", "as_polygon"], [374, 4, 1, "id4", "get_area"], [374, 4, 1, "id5", "get_bbox"], [374, 6, 1, "id3", "h"], [374, 4, 1, "id7", "iou"], [374, 6, 1, "id2", "w"], [374, 4, 1, "id8", "wrap"], [374, 6, 1, "id0", "x"], [374, 6, 1, "id1", "y"]], "datumaro.plugins.data_formats.yolo.base.DatasetBase": [[374, 4, 1, "", "ann_types"], [374, 4, 1, "", "media_type"]], "datumaro.plugins.data_formats.yolo.base.DatasetItem": [[374, 2, 1, "", "annotations"], [374, 2, 1, "", "attributes"], [374, 2, 1, "", "id"], [374, 2, 1, "", "media"], [374, 4, 1, "", "media_as"], [374, 2, 1, "", "subset"], [374, 4, 1, "", "wrap"]], "datumaro.plugins.data_formats.yolo.base.Image": [[374, 6, 1, "", "ext"], [374, 4, 1, "", "from_bytes"], [374, 4, 1, "", "from_file"], [374, 4, 1, "", "from_numpy"], [374, 6, 1, "", "has_size"], [374, 4, 1, "", "set_crypter"], [374, 6, 1, "", "size"]], "datumaro.plugins.data_formats.yolo.base.ImageFromFile": [[374, 6, 1, "", "data"], [374, 4, 1, "", "get_data_as_dtype"], [374, 4, 1, "", "save"], [374, 4, 1, "", "set_crypter"], [374, 6, 1, "", "size"]], "datumaro.plugins.data_formats.yolo.base.ImportContext": [[374, 2, 1, "", "error_policy"], [374, 2, 1, "", "progress_reporter"]], "datumaro.plugins.data_formats.yolo.base.LabelCategories": [[374, 1, 1, "", "Category"], [374, 1, 1, "", "LabelGroup"], [374, 4, 1, "", "add"], [374, 4, 1, "", "add_label_group"], [374, 4, 1, "", "find"], [374, 4, 1, "", "from_iterable"], [374, 2, 1, "", "items"], [374, 2, 1, "", "label_groups"]], "datumaro.plugins.data_formats.yolo.base.LabelCategories.Category": [[374, 2, 1, "", "attributes"], [374, 2, 1, "", "name"], [374, 2, 1, "", "parent"]], "datumaro.plugins.data_formats.yolo.base.LabelCategories.LabelGroup": [[374, 2, 1, "", "group_type"], [374, 2, 1, "", "labels"], [374, 2, 1, "", "name"]], "datumaro.plugins.data_formats.yolo.base.OrderedDict": [[374, 4, 1, "", "clear"], [374, 4, 1, "", "copy"], [374, 4, 1, "", "fromkeys"], [374, 4, 1, "", "items"], [374, 4, 1, "", "keys"], [374, 4, 1, "", "move_to_end"], [374, 4, 1, "", "pop"], [374, 4, 1, "", "popitem"], [374, 4, 1, "", "setdefault"], [374, 4, 1, "", "update"], [374, 4, 1, "", "values"]], "datumaro.plugins.data_formats.yolo.base.SubsetBase": [[374, 4, 1, "", "categories"], [374, 4, 1, "", "get"], [374, 4, 1, "", "infos"], [374, 6, 1, "", "subset"]], "datumaro.plugins.data_formats.yolo.base.UndeclaredLabelError": [[374, 2, 1, "", "id"]], "datumaro.plugins.data_formats.yolo.base.YoloLooseBase": [[374, 2, 1, "", "META_FILE"], [374, 6, 1, "", "is_stream"]], "datumaro.plugins.data_formats.yolo.base.YoloLoosePath": [[374, 2, 1, "", "NAMES_FILE"]], "datumaro.plugins.data_formats.yolo.base.YoloPath": [[374, 2, 1, "", "DEFAULT_SUBSET_NAME"], [374, 2, 1, "", "RESERVED_CONFIG_KEYS"], [374, 2, 1, "", "SUBSET_NAMES"]], "datumaro.plugins.data_formats.yolo.base.YoloStrictBase": [[374, 4, 1, "", "get_subset"], [374, 6, 1, "", "is_stream"], [374, 4, 1, "", "name_from_path"], [374, 4, 1, "", "parse_image_info"]], "datumaro.plugins.data_formats.yolo.base.YoloUltralyticsBase": [[374, 2, 1, "", "META_FILE"]], "datumaro.plugins.data_formats.yolo.base.YoloUltralyticsPath": [[374, 2, 1, "", "META_FILE"]], "datumaro.plugins.data_formats.yolo.exporter": [[375, 1, 1, "", "YoloExporter"], [375, 1, 1, "", "YoloUltralyticsExporter"]], "datumaro.plugins.data_formats.yolo.exporter.YoloExporter": [[375, 2, 1, "", "DEFAULT_IMAGE_EXT"], [375, 4, 1, "", "build_cmdline_parser"], [375, 6, 1, "", "can_stream"], [375, 4, 1, "", "patch"]], "datumaro.plugins.data_formats.yolo.exporter.YoloUltralyticsExporter": [[375, 2, 1, "", "must_subset_names"], [375, 4, 1, "", "patch"]], "datumaro.plugins.data_formats.yolo.format": [[376, 1, 1, "", "YoloFormatType"], [376, 1, 1, "", "YoloLoosePath"], [376, 1, 1, "", "YoloPath"], [376, 1, 1, "", "YoloUltralyticsPath"]], "datumaro.plugins.data_formats.yolo.format.YoloFormatType": [[376, 2, 1, "", "yolo_loose"], [376, 2, 1, "", "yolo_strict"], [376, 2, 1, "", "yolo_ultralytics"]], "datumaro.plugins.data_formats.yolo.format.YoloLoosePath": [[376, 2, 1, "", "NAMES_FILE"]], "datumaro.plugins.data_formats.yolo.format.YoloPath": [[376, 2, 1, "", "DEFAULT_SUBSET_NAME"], [376, 2, 1, "", "RESERVED_CONFIG_KEYS"], [376, 2, 1, "", "SUBSET_NAMES"]], "datumaro.plugins.data_formats.yolo.format.YoloUltralyticsPath": [[376, 2, 1, "", "META_FILE"]], "datumaro.plugins.data_formats.yolo.importer": [[377, 1, 1, "", "YoloImporter"]], "datumaro.plugins.data_formats.yolo.importer.YoloImporter": [[377, 2, 1, "", "SUB_IMPORTERS"], [377, 4, 1, "", "detect"], [377, 4, 1, "", "find_sources"], [377, 4, 1, "", "get_extractor_merger"], [377, 4, 1, "", "get_file_extensions"]], "datumaro.plugins.explorer": [[378, 1, 1, "", "ExplorerLauncher"]], "datumaro.plugins.explorer.ExplorerLauncher": [[378, 4, 1, "", "infer_item"], [378, 4, 1, "", "infer_text"], [378, 4, 1, "", "launch"], [378, 4, 1, "", "type_check"]], "datumaro.plugins.framework_converter": [[379, 1, 1, "", "DmTfDataset"], [379, 1, 1, "", "DmTorchDataset"], [379, 1, 1, "", "FrameworkConverter"], [379, 1, 1, "", "FrameworkConverterFactory"]], "datumaro.plugins.framework_converter.DmTfDataset": [[379, 4, 1, "", "batch"], [379, 4, 1, "", "create"], [379, 4, 1, "", "repeat"]], "datumaro.plugins.framework_converter.FrameworkConverter": [[379, 4, 1, "", "to_framework"]], "datumaro.plugins.framework_converter.FrameworkConverterFactory": [[379, 4, 1, "", "create_converter"]], "datumaro.plugins.inference_server_plugin": [[380, 1, 1, "", "InferenceServerType"], [380, 1, 1, "", "OVMSLauncher"], [380, 1, 1, "", "ProtocolType"], [380, 1, 1, "", "TritonLauncher"], [381, 0, 0, "-", "base"], [382, 0, 0, "-", "ovms"], [383, 0, 0, "-", "samples"], [385, 0, 0, "-", "triton"]], "datumaro.plugins.inference_server_plugin.InferenceServerType": [[380, 2, 1, "", "ovms"], [380, 2, 1, "", "triton"]], "datumaro.plugins.inference_server_plugin.OVMSLauncher": [[380, 4, 1, "", "infer"]], "datumaro.plugins.inference_server_plugin.ProtocolType": [[380, 2, 1, "", "grpc"], [380, 2, 1, "", "http"]], "datumaro.plugins.inference_server_plugin.TritonLauncher": [[380, 4, 1, "", "infer"]], "datumaro.plugins.inference_server_plugin.base": [[381, 1, 1, "", "InferenceServerType"], [381, 1, 1, "", "LauncherForDedicatedInferenceServer"], [381, 1, 1, "", "ProtocolType"], [381, 1, 1, "", "TLSConfig"]], "datumaro.plugins.inference_server_plugin.base.InferenceServerType": [[381, 2, 1, "", "ovms"], [381, 2, 1, "", "triton"]], "datumaro.plugins.inference_server_plugin.base.LauncherForDedicatedInferenceServer": [[381, 4, 1, "", "type_check"]], "datumaro.plugins.inference_server_plugin.base.ProtocolType": [[381, 2, 1, "", "grpc"], [381, 2, 1, "", "http"]], "datumaro.plugins.inference_server_plugin.base.TLSConfig": [[381, 4, 1, "", "as_dict"], [381, 4, 1, "", "as_grpc_creds"], [381, 2, 1, "", "client_cert_path"], [381, 2, 1, "", "client_key_path"], [381, 2, 1, "", "server_cert_path"]], "datumaro.plugins.inference_server_plugin.ovms": [[382, 5, 1, "", "DatumaroError"], [382, 1, 1, "", "GrpcClient"], [382, 1, 1, "", "HttpClient"], [382, 1, 1, "", "LauncherForDedicatedInferenceServer"], [382, 1, 1, "", "OVMSLauncher"], [382, 1, 1, "", "ProtocolType"], [382, 3, 1, "", "make_grpc_client"], [382, 3, 1, "", "make_http_client"]], "datumaro.plugins.inference_server_plugin.ovms.GrpcClient": [[382, 4, 1, "", "get_model_metadata"], [382, 4, 1, "", "get_model_status"], [382, 4, 1, "", "predict"]], "datumaro.plugins.inference_server_plugin.ovms.HttpClient": [[382, 4, 1, "", "get_model_metadata"], [382, 4, 1, "", "get_model_status"], [382, 4, 1, "", "predict"]], "datumaro.plugins.inference_server_plugin.ovms.LauncherForDedicatedInferenceServer": [[382, 4, 1, "", "type_check"]], "datumaro.plugins.inference_server_plugin.ovms.OVMSLauncher": [[382, 4, 1, "", "infer"]], "datumaro.plugins.inference_server_plugin.ovms.ProtocolType": [[382, 2, 1, "", "grpc"], [382, 2, 1, "", "http"]], "datumaro.plugins.inference_server_plugin.samples": [[384, 0, 0, "-", "face_detection"]], "datumaro.plugins.inference_server_plugin.samples.face_detection": [[384, 1, 1, "", "FaceDetectionModelInterpreter"]], "datumaro.plugins.inference_server_plugin.samples.face_detection.FaceDetectionModelInterpreter": [[384, 2, 1, "", "conf_threshold"], [384, 4, 1, "", "get_categories"], [384, 2, 1, "", "height"], [384, 4, 1, "", "postprocess"], [384, 4, 1, "", "preprocess"], [384, 2, 1, "", "width"]], "datumaro.plugins.inference_server_plugin.triton": [[385, 5, 1, "", "DatumaroError"], [385, 1, 1, "", "LauncherForDedicatedInferenceServer"], [385, 1, 1, "", "ProtocolType"], [385, 1, 1, "", "TritonLauncher"]], "datumaro.plugins.inference_server_plugin.triton.LauncherForDedicatedInferenceServer": [[385, 4, 1, "", "type_check"]], "datumaro.plugins.inference_server_plugin.triton.ProtocolType": [[385, 2, 1, "", "grpc"], [385, 2, 1, "", "http"]], "datumaro.plugins.inference_server_plugin.triton.TritonLauncher": [[385, 4, 1, "", "infer"]], "datumaro.plugins.missing_annotation_detection": [[386, 1, 1, "", "MissingAnnotationDetection"]], "datumaro.plugins.ndr": [[387, 1, 1, "", "Algorithm"], [387, 1, 1, "", "NDR"], [387, 1, 1, "", "OverSamplingMethod"], [387, 1, 1, "", "UnderSamplingMethod"]], "datumaro.plugins.ndr.Algorithm": [[387, 2, 1, "", "gradient"]], "datumaro.plugins.ndr.NDR": [[387, 4, 1, "", "build_cmdline_parser"]], "datumaro.plugins.ndr.OverSamplingMethod": [[387, 2, 1, "", "random"], [387, 2, 1, "", "similarity"]], "datumaro.plugins.ndr.UnderSamplingMethod": [[387, 2, 1, "", "inverse"], [387, 2, 1, "", "uniform"]], "datumaro.plugins.openvino_plugin": [[389, 0, 0, "-", "launcher"], [390, 0, 0, "-", "samples"], [395, 0, 0, "-", "shift_launcher"]], "datumaro.plugins.openvino_plugin.launcher": [[389, 1, 1, "", "BuiltinOpenvinoModelInfo"], [389, 1, 1, "", "OpenvinoLauncher"], [389, 1, 1, "", "OpenvinoModelInfo"]], "datumaro.plugins.openvino_plugin.launcher.BuiltinOpenvinoModelInfo": [[389, 4, 1, "", "create_from_model_name"], [389, 2, 1, "", "downloadable_models"], [389, 4, 1, "", "override"]], "datumaro.plugins.openvino_plugin.launcher.OpenvinoLauncher": [[389, 2, 1, "", "cli_plugin"], [389, 4, 1, "", "infer"], [389, 6, 1, "", "inputs"], [389, 6, 1, "", "outputs"]], "datumaro.plugins.openvino_plugin.launcher.OpenvinoModelInfo": [[389, 2, 1, "", "description"], [389, 2, 1, "", "interpreter"], [389, 2, 1, "", "model_dir"], [389, 4, 1, "", "validate"], [389, 2, 1, "", "weights"]], "datumaro.plugins.openvino_plugin.samples": [[391, 0, 0, "-", "otx_custom_object_detection_gen3_atss_interp"], [392, 0, 0, "-", "otx_custom_object_detection_gen3_ssd_interp"], [393, 0, 0, "-", "otx_custom_object_detection_yolox_interp"], [394, 0, 0, "-", "utils"]], "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_atss_interp": [[391, 1, 1, "", "Annotation"], [391, 1, 1, "", "DatasetItem"], [391, 1, 1, "", "IModelInterpreter"], [391, 1, 1, "", "Image"], [391, 1, 1, "", "OTXATSSModelInterpreter"], [391, 3, 1, "", "create_bboxes_with_rescaling"], [391, 3, 1, "", "rescale_img_keeping_aspect_ratio"]], "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_atss_interp.Annotation": [[391, 4, 1, "", "as_dict"], [391, 2, 1, "", "attributes"], [391, 2, 1, "", "group"], [391, 2, 1, "", "id"], [391, 2, 1, "", "object_id"], [391, 6, 1, "", "type"], [391, 4, 1, "", "wrap"]], "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_atss_interp.DatasetItem": [[391, 2, 1, "", "annotations"], [391, 2, 1, "", "attributes"], [391, 2, 1, "", "id"], [391, 2, 1, "", "media"], [391, 4, 1, "", "media_as"], [391, 2, 1, "", "subset"], [391, 4, 1, "", "wrap"]], "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_atss_interp.IModelInterpreter": [[391, 4, 1, "", "get_categories"], [391, 4, 1, "", "postprocess"], [391, 4, 1, "", "preprocess"]], "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_atss_interp.Image": [[391, 6, 1, "", "ext"], [391, 4, 1, "", "from_bytes"], [391, 4, 1, "", "from_file"], [391, 4, 1, "", "from_numpy"], [391, 6, 1, "", "has_size"], [391, 4, 1, "", "set_crypter"], [391, 6, 1, "", "size"]], "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_atss_interp.OTXATSSModelInterpreter": [[391, 4, 1, "", "get_categories"], [391, 2, 1, "", "h_model"], [391, 4, 1, "", "postprocess"], [391, 4, 1, "", "preprocess"], [391, 2, 1, "", "w_model"]], "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_ssd_interp": [[392, 1, 1, "", "Annotation"], [392, 1, 1, "", "DatasetItem"], [392, 1, 1, "", "IModelInterpreter"], [392, 1, 1, "", "Image"], [392, 1, 1, "", "OTXSSDModelInterpreter"], [392, 3, 1, "", "create_bboxes_with_rescaling"], [392, 3, 1, "", "rescale_img_keeping_aspect_ratio"]], "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_ssd_interp.Annotation": [[392, 4, 1, "", "as_dict"], [392, 2, 1, "", "attributes"], [392, 2, 1, "", "group"], [392, 2, 1, "", "id"], [392, 2, 1, "", "object_id"], [392, 6, 1, "", "type"], [392, 4, 1, "", "wrap"]], "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_ssd_interp.DatasetItem": [[392, 2, 1, "", "annotations"], [392, 2, 1, "", "attributes"], [392, 2, 1, "", "id"], [392, 2, 1, "", "media"], [392, 4, 1, "", "media_as"], [392, 2, 1, "", "subset"], [392, 4, 1, "", "wrap"]], "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_ssd_interp.IModelInterpreter": [[392, 4, 1, "", "get_categories"], [392, 4, 1, "", "postprocess"], [392, 4, 1, "", "preprocess"]], "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_ssd_interp.Image": [[392, 6, 1, "", "ext"], [392, 4, 1, "", "from_bytes"], [392, 4, 1, "", "from_file"], [392, 4, 1, "", "from_numpy"], [392, 6, 1, "", "has_size"], [392, 4, 1, "", "set_crypter"], [392, 6, 1, "", "size"]], "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_ssd_interp.OTXSSDModelInterpreter": [[392, 4, 1, "", "get_categories"], [392, 2, 1, "", "h_model"], [392, 4, 1, "", "postprocess"], [392, 4, 1, "", "preprocess"], [392, 2, 1, "", "w_model"]], "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_yolox_interp": [[393, 1, 1, "", "Annotation"], [393, 1, 1, "", "DatasetItem"], [393, 1, 1, "", "IModelInterpreter"], [393, 1, 1, "", "Image"], [393, 1, 1, "", "OTXYoloXModelInterpreter"], [393, 3, 1, "", "create_bboxes_with_rescaling"], [393, 3, 1, "", "rescale_img_keeping_aspect_ratio"]], "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_yolox_interp.Annotation": [[393, 4, 1, "", "as_dict"], [393, 2, 1, "", "attributes"], [393, 2, 1, "", "group"], [393, 2, 1, "", "id"], [393, 2, 1, "", "object_id"], [393, 6, 1, "", "type"], [393, 4, 1, "", "wrap"]], "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_yolox_interp.DatasetItem": [[393, 2, 1, "", "annotations"], [393, 2, 1, "", "attributes"], [393, 2, 1, "", "id"], [393, 2, 1, "", "media"], [393, 4, 1, "", "media_as"], [393, 2, 1, "", "subset"], [393, 4, 1, "", "wrap"]], "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_yolox_interp.IModelInterpreter": [[393, 4, 1, "", "get_categories"], [393, 4, 1, "", "postprocess"], [393, 4, 1, "", "preprocess"]], "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_yolox_interp.Image": [[393, 6, 1, "", "ext"], [393, 4, 1, "", "from_bytes"], [393, 4, 1, "", "from_file"], [393, 4, 1, "", "from_numpy"], [393, 6, 1, "", "has_size"], [393, 4, 1, "", "set_crypter"], [393, 6, 1, "", "size"]], "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_yolox_interp.OTXYoloXModelInterpreter": [[393, 4, 1, "", "get_categories"], [393, 2, 1, "", "h_model"], [393, 4, 1, "", "postprocess"], [393, 4, 1, "", "preprocess"], [393, 2, 1, "", "w_model"]], "datumaro.plugins.openvino_plugin.samples.utils": [[394, 1, 1, "", "RescaledImage"], [394, 3, 1, "", "create_bboxes_with_rescaling"], [394, 3, 1, "", "gen_hash_key"], [394, 3, 1, "", "rescale_img_keeping_aspect_ratio"]], "datumaro.plugins.openvino_plugin.samples.utils.RescaledImage": [[394, 2, 1, "id0", "image"], [394, 2, 1, "id1", "scale"]], "datumaro.plugins.openvino_plugin.shift_launcher": [[395, 1, 1, "", "ShiftLauncher"]], "datumaro.plugins.openvino_plugin.shift_launcher.ShiftLauncher": [[395, 4, 1, "", "type_check"]], "datumaro.plugins.sam_transforms": [[396, 1, 1, "", "SAMAutomaticMaskGeneration"], [396, 1, 1, "", "SAMBboxToInstanceMask"], [397, 0, 0, "-", "automatic_mask_gen"], [398, 0, 0, "-", "bbox_to_inst_mask"], [399, 0, 0, "-", "interpreters"]], "datumaro.plugins.sam_transforms.SAMAutomaticMaskGeneration": [[396, 6, 1, "", "points_per_side"]], "datumaro.plugins.sam_transforms.automatic_mask_gen": [[397, 1, 1, "", "AMGMasks"], [397, 1, 1, "", "AMGPoints"], [397, 1, 1, "", "CliPlugin"], [397, 1, 1, "", "DatasetItem"], [397, 1, 1, "", "IDataset"], [397, 1, 1, "", "InferenceServerType"], [397, 1, 1, "", "ModelTransform"], [397, 1, 1, "", "OVMSLauncher"], [397, 1, 1, "", "ProtocolType"], [397, 1, 1, "", "SAMAutomaticMaskGeneration"], [397, 1, 1, "", "TLSConfig"], [397, 1, 1, "", "TritonLauncher"]], "datumaro.plugins.sam_transforms.automatic_mask_gen.AMGMasks": [[397, 4, 1, "", "cat"], [397, 2, 1, "id1", "iou_preds"], [397, 2, 1, "id0", "masks"], [397, 4, 1, "", "postprocess"]], "datumaro.plugins.sam_transforms.automatic_mask_gen.AMGPoints": [[397, 2, 1, "id4", "points"]], "datumaro.plugins.sam_transforms.automatic_mask_gen.CliPlugin": [[397, 2, 1, "", "NAME"], [397, 4, 1, "", "build_cmdline_parser"], [397, 4, 1, "", "parse_cmdline"]], "datumaro.plugins.sam_transforms.automatic_mask_gen.DatasetItem": [[397, 2, 1, "", "annotations"], [397, 2, 1, "", "attributes"], [397, 2, 1, "", "id"], [397, 2, 1, "", "media"], [397, 4, 1, "", "media_as"], [397, 2, 1, "", "subset"], [397, 4, 1, "", "wrap"]], "datumaro.plugins.sam_transforms.automatic_mask_gen.IDataset": [[397, 4, 1, "", "ann_types"], [397, 4, 1, "", "categories"], [397, 4, 1, "", "get"], [397, 4, 1, "", "get_subset"], [397, 4, 1, "", "infos"], [397, 6, 1, "", "is_stream"], [397, 4, 1, "", "media_type"], [397, 4, 1, "", "subsets"]], "datumaro.plugins.sam_transforms.automatic_mask_gen.InferenceServerType": [[397, 2, 1, "", "ovms"], [397, 2, 1, "", "triton"]], "datumaro.plugins.sam_transforms.automatic_mask_gen.ModelTransform": [[397, 4, 1, "", "categories"], [397, 4, 1, "", "get_subset"], [397, 4, 1, "", "infos"], [397, 4, 1, "", "transform_item"]], "datumaro.plugins.sam_transforms.automatic_mask_gen.OVMSLauncher": [[397, 4, 1, "", "infer"]], "datumaro.plugins.sam_transforms.automatic_mask_gen.ProtocolType": [[397, 2, 1, "", "grpc"], [397, 2, 1, "", "http"]], "datumaro.plugins.sam_transforms.automatic_mask_gen.SAMAutomaticMaskGeneration": [[397, 6, 1, "", "points_per_side"]], "datumaro.plugins.sam_transforms.automatic_mask_gen.TLSConfig": [[397, 4, 1, "", "as_dict"], [397, 4, 1, "", "as_grpc_creds"], [397, 2, 1, "", "client_cert_path"], [397, 2, 1, "", "client_key_path"], [397, 2, 1, "", "server_cert_path"]], "datumaro.plugins.sam_transforms.automatic_mask_gen.TritonLauncher": [[397, 4, 1, "", "infer"]], "datumaro.plugins.sam_transforms.bbox_to_inst_mask": [[398, 1, 1, "", "Bbox"], [398, 1, 1, "", "CliPlugin"], [398, 1, 1, "", "DatasetItem"], [398, 1, 1, "", "IDataset"], [398, 1, 1, "", "InferenceServerType"], [398, 1, 1, "", "Mask"], [398, 1, 1, "", "ModelTransform"], [398, 1, 1, "", "OVMSLauncher"], [398, 1, 1, "", "Polygon"], [398, 1, 1, "", "ProtocolType"], [398, 1, 1, "", "SAMBboxToInstanceMask"], [398, 1, 1, "", "TLSConfig"], [398, 1, 1, "", "TritonLauncher"], [398, 3, 1, "", "extract_contours"]], "datumaro.plugins.sam_transforms.bbox_to_inst_mask.Bbox": [[398, 4, 1, "", "__init__"], [398, 2, 1, "", "_type"], [398, 4, 1, "id6", "as_polygon"], [398, 4, 1, "id4", "get_area"], [398, 4, 1, "id5", "get_bbox"], [398, 6, 1, "id3", "h"], [398, 4, 1, "id7", "iou"], [398, 6, 1, "id2", "w"], [398, 4, 1, "id8", "wrap"], [398, 6, 1, "id0", "x"], [398, 6, 1, "id1", "y"]], "datumaro.plugins.sam_transforms.bbox_to_inst_mask.CliPlugin": [[398, 2, 1, "", "NAME"], [398, 4, 1, "", "build_cmdline_parser"], [398, 4, 1, "", "parse_cmdline"]], "datumaro.plugins.sam_transforms.bbox_to_inst_mask.DatasetItem": [[398, 2, 1, "", "annotations"], [398, 2, 1, "", "attributes"], [398, 2, 1, "", "id"], [398, 2, 1, "", "media"], [398, 4, 1, "", "media_as"], [398, 2, 1, "", "subset"], [398, 4, 1, "", "wrap"]], "datumaro.plugins.sam_transforms.bbox_to_inst_mask.IDataset": [[398, 4, 1, "", "ann_types"], [398, 4, 1, "", "categories"], [398, 4, 1, "", "get"], [398, 4, 1, "", "get_subset"], [398, 4, 1, "", "infos"], [398, 6, 1, "", "is_stream"], [398, 4, 1, "", "media_type"], [398, 4, 1, "", "subsets"]], "datumaro.plugins.sam_transforms.bbox_to_inst_mask.InferenceServerType": [[398, 2, 1, "", "ovms"], [398, 2, 1, "", "triton"]], "datumaro.plugins.sam_transforms.bbox_to_inst_mask.Mask": [[398, 4, 1, "", "as_class_mask"], [398, 4, 1, "", "as_instance_mask"], [398, 4, 1, "", "get_area"], [398, 4, 1, "", "get_bbox"], [398, 6, 1, "", "image"], [398, 2, 1, "", "label"], [398, 4, 1, "", "paint"], [398, 2, 1, "", "z_order"]], "datumaro.plugins.sam_transforms.bbox_to_inst_mask.ModelTransform": [[398, 4, 1, "", "categories"], [398, 4, 1, "", "get_subset"], [398, 4, 1, "", "infos"], [398, 4, 1, "", "transform_item"]], "datumaro.plugins.sam_transforms.bbox_to_inst_mask.OVMSLauncher": [[398, 4, 1, "", "infer"]], "datumaro.plugins.sam_transforms.bbox_to_inst_mask.Polygon": [[398, 4, 1, "", "__attrs_post_init__"], [398, 4, 1, "", "__eq__"], [398, 4, 1, "", "_get_shoelace_area"], [398, 2, 1, "", "_type"], [398, 4, 1, "id10", "as_polygon"], [398, 4, 1, "id9", "get_area"]], "datumaro.plugins.sam_transforms.bbox_to_inst_mask.ProtocolType": [[398, 2, 1, "", "grpc"], [398, 2, 1, "", "http"]], "datumaro.plugins.sam_transforms.bbox_to_inst_mask.TLSConfig": [[398, 4, 1, "", "as_dict"], [398, 4, 1, "", "as_grpc_creds"], [398, 2, 1, "", "client_cert_path"], [398, 2, 1, "", "client_key_path"], [398, 2, 1, "", "server_cert_path"]], "datumaro.plugins.sam_transforms.bbox_to_inst_mask.TritonLauncher": [[398, 4, 1, "", "infer"]], "datumaro.plugins.sam_transforms.interpreters": [[400, 0, 0, "-", "sam_decoder_for_amg"], [401, 0, 0, "-", "sam_decoder_for_bbox"], [402, 0, 0, "-", "sam_encoder"]], "datumaro.plugins.sam_transforms.interpreters.sam_decoder_for_amg": [[400, 1, 1, "", "AMGMasks"], [400, 1, 1, "", "AMGPoints"], [400, 1, 1, "", "SAMDecoderForAMGInterpreter"]], "datumaro.plugins.sam_transforms.interpreters.sam_decoder_for_amg.AMGMasks": [[400, 4, 1, "", "cat"], [400, 2, 1, "id2", "iou_preds"], [400, 2, 1, "id1", "masks"], [400, 4, 1, "", "postprocess"]], "datumaro.plugins.sam_transforms.interpreters.sam_decoder_for_amg.AMGPoints": [[400, 2, 1, "id0", "points"]], "datumaro.plugins.sam_transforms.interpreters.sam_decoder_for_amg.SAMDecoderForAMGInterpreter": [[400, 4, 1, "", "get_categories"], [400, 2, 1, "", "h_model"], [400, 2, 1, "", "onnx_has_mask_input"], [400, 2, 1, "", "onnx_mask_input"], [400, 4, 1, "", "postprocess"], [400, 4, 1, "", "preprocess"], [400, 2, 1, "", "w_model"]], "datumaro.plugins.sam_transforms.interpreters.sam_decoder_for_bbox": [[401, 1, 1, "", "SAMDecoderForBboxInterpreter"]], "datumaro.plugins.sam_transforms.interpreters.sam_decoder_for_bbox.SAMDecoderForBboxInterpreter": [[401, 4, 1, "", "get_categories"], [401, 2, 1, "", "h_model"], [401, 2, 1, "", "mask_threshold"], [401, 2, 1, "", "onnx_has_mask_input"], [401, 2, 1, "", "onnx_mask_input"], [401, 4, 1, "", "postprocess"], [401, 4, 1, "", "preprocess"], [401, 2, 1, "", "w_model"]], "datumaro.plugins.sam_transforms.interpreters.sam_encoder": [[402, 1, 1, "", "SAMEncoderInterpreter"]], "datumaro.plugins.sam_transforms.interpreters.sam_encoder.SAMEncoderInterpreter": [[402, 4, 1, "", "get_categories"], [402, 2, 1, "", "h_model"], [402, 4, 1, "", "postprocess"], [402, 4, 1, "", "preprocess"], [402, 2, 1, "", "w_model"]], "datumaro.plugins.sampler": [[404, 0, 0, "-", "algorithm"], [407, 0, 0, "-", "random_sampler"], [408, 0, 0, "-", "relevancy_sampler"]], "datumaro.plugins.sampler.algorithm": [[405, 0, 0, "-", "algorithm"], [406, 0, 0, "-", "entropy"]], "datumaro.plugins.sampler.algorithm.algorithm": [[405, 1, 1, "", "Algorithm"], [405, 1, 1, "", "InferenceResultAnalyzer"], [405, 1, 1, "", "SamplingMethod"]], "datumaro.plugins.sampler.algorithm.algorithm.Algorithm": [[405, 2, 1, "", "entropy"]], "datumaro.plugins.sampler.algorithm.algorithm.InferenceResultAnalyzer": [[405, 4, 1, "", "get_sample"]], "datumaro.plugins.sampler.algorithm.algorithm.SamplingMethod": [[405, 2, 1, "", "lowk"], [405, 2, 1, "", "mixk"], [405, 2, 1, "", "randk"], [405, 2, 1, "", "randtopk"], [405, 2, 1, "", "topk"]], "datumaro.plugins.sampler.algorithm.entropy": [[406, 1, 1, "", "SampleEntropy"]], "datumaro.plugins.sampler.algorithm.entropy.SampleEntropy": [[406, 4, 1, "", "get_sample"]], "datumaro.plugins.sampler.random_sampler": [[407, 1, 1, "", "LabelRandomSampler"], [407, 1, 1, "", "RandomSampler"]], "datumaro.plugins.sampler.random_sampler.LabelRandomSampler": [[407, 4, 1, "", "build_cmdline_parser"]], "datumaro.plugins.sampler.random_sampler.RandomSampler": [[407, 4, 1, "", "build_cmdline_parser"]], "datumaro.plugins.sampler.relevancy_sampler": [[408, 1, 1, "", "RelevancySampler"]], "datumaro.plugins.sampler.relevancy_sampler.RelevancySampler": [[408, 4, 1, "", "build_cmdline_parser"]], "datumaro.plugins.specs": [[409, 3, 1, "", "get_lazy_plugins"]], "datumaro.plugins.splitter": [[410, 1, 1, "", "Split"], [410, 1, 1, "", "SplitTask"]], "datumaro.plugins.splitter.Split": [[410, 4, 1, "", "build_cmdline_parser"], [410, 4, 1, "", "get_subset"], [410, 4, 1, "", "subsets"]], "datumaro.plugins.splitter.SplitTask": [[410, 2, 1, "", "classification"], [410, 2, 1, "", "detection"], [410, 2, 1, "", "reid"], [410, 2, 1, "", "segmentation"]], "datumaro.plugins.synthetic_data": [[412, 0, 0, "-", "image_generator"], [413, 0, 0, "-", "utils"]], "datumaro.plugins.synthetic_data.image_generator": [[412, 1, 1, "", "FractalImageGenerator"]], "datumaro.plugins.synthetic_data.image_generator.FractalImageGenerator": [[412, 4, 1, "", "generate_dataset"]], "datumaro.plugins.synthetic_data.utils": [[413, 1, 1, "", "IFSFunction"], [413, 3, 1, "", "augment"], [413, 3, 1, "", "colorize"], [413, 3, 1, "", "fill_background"], [413, 3, 1, "", "rgb2lab"], [413, 3, 1, "", "suppress_computation_warnings"]], "datumaro.plugins.synthetic_data.utils.IFSFunction": [[413, 2, 1, "", "NUM_PARAMS"], [413, 4, 1, "", "add_param"], [413, 4, 1, "", "calculate"], [413, 4, 1, "", "draw"], [413, 4, 1, "", "process_nans"], [413, 4, 1, "", "rescale"]], "datumaro.plugins.tiling": [[414, 1, 1, "", "Tile"], [415, 0, 0, "-", "merge_tile"], [416, 0, 0, "-", "tile"], [417, 0, 0, "-", "util"]], "datumaro.plugins.tiling.Tile": [[414, 4, 1, "", "build_cmdline_parser"], [414, 4, 1, "", "transform_item"]], "datumaro.plugins.tiling.merge_tile": [[415, 1, 1, "", "MergeTile"]], "datumaro.plugins.tiling.merge_tile.MergeTile": [[415, 4, 1, "", "build_cmdline_parser"]], "datumaro.plugins.tiling.tile": [[416, 1, 1, "", "Tile"]], "datumaro.plugins.tiling.tile.Tile": [[416, 4, 1, "", "build_cmdline_parser"], [416, 4, 1, "", "transform_item"]], "datumaro.plugins.tiling.util": [[417, 3, 1, "", "clip_x1y1x2y2"], [417, 3, 1, "", "cxcywh_to_x1y1x2y2"], [417, 3, 1, "", "x1y1x2y2_to_cxcywh"], [417, 3, 1, "", "x1y1x2y2_to_xywh"], [417, 3, 1, "", "xywh_to_x1y1x2y2"]], "datumaro.plugins.transforms": [[418, 1, 1, "", "AnnsToLabels"], [418, 1, 1, "", "AstypeAnnotations"], [418, 1, 1, "", "BboxValuesDecrement"], [418, 1, 1, "", "BoxesToMasks"], [418, 1, 1, "", "BoxesToPolygons"], [418, 1, 1, "", "Clean"], [418, 1, 1, "", "Correct"], [418, 1, 1, "", "CropCoveredSegments"], [418, 1, 1, "", "IdFromImageName"], [418, 1, 1, "", "MapSubsets"], [418, 1, 1, "", "MasksToPolygons"], [418, 1, 1, "", "MergeInstanceSegments"], [418, 1, 1, "", "PolygonsToMasks"], [418, 1, 1, "", "ProjectInfos"], [418, 1, 1, "", "ProjectLabels"], [418, 1, 1, "", "RandomSplit"], [418, 1, 1, "", "Reindex"], [418, 1, 1, "", "ReindexAnnotations"], [418, 1, 1, "", "RemapLabels"], [418, 1, 1, "", "RemoveAnnotations"], [418, 1, 1, "", "RemoveAttributes"], [418, 1, 1, "", "RemoveItems"], [418, 1, 1, "", "Rename"], [418, 1, 1, "", "ResizeTransform"], [418, 1, 1, "", "ShapesToBoxes"], [418, 1, 1, "", "Sort"]], "datumaro.plugins.transforms.AnnsToLabels": [[418, 4, 1, "", "transform_item"]], "datumaro.plugins.transforms.AstypeAnnotations": [[418, 4, 1, "", "build_cmdline_parser"], [418, 4, 1, "", "categories"], [418, 4, 1, "", "transform_item"]], "datumaro.plugins.transforms.BboxValuesDecrement": [[418, 4, 1, "", "transform_item"]], "datumaro.plugins.transforms.BoxesToMasks": [[418, 4, 1, "", "convert_bbox"], [418, 4, 1, "", "transform_item"]], "datumaro.plugins.transforms.BoxesToPolygons": [[418, 4, 1, "", "convert_bbox"], [418, 4, 1, "", "transform_item"]], "datumaro.plugins.transforms.Clean": [[418, 4, 1, "", "cap_outliers"], [418, 4, 1, "", "check_missing_value"], [418, 4, 1, "", "check_outlier"], [418, 4, 1, "", "fill_missing_value"], [418, 4, 1, "", "find_closest_value"], [418, 4, 1, "", "refine_tabular_media"], [418, 4, 1, "", "remove_unnecessary_char"], [418, 4, 1, "", "transform_item"]], "datumaro.plugins.transforms.Correct": [[418, 4, 1, "", "build_cmdline_parser"], [418, 4, 1, "", "cap_far_from_mean"], [418, 4, 1, "", "cap_outliers"], [418, 4, 1, "", "categories"], [418, 4, 1, "", "fill_missing_value"], [418, 4, 1, "", "find_outliers"], [418, 4, 1, "", "remove_unnecessary_char"], [418, 4, 1, "", "update_caption_value"], [418, 4, 1, "", "update_label_value"]], "datumaro.plugins.transforms.CropCoveredSegments": [[418, 4, 1, "", "crop_segments"], [418, 4, 1, "", "transform_item"]], "datumaro.plugins.transforms.IdFromImageName": [[418, 4, 1, "", "transform_item"]], "datumaro.plugins.transforms.MapSubsets": [[418, 4, 1, "", "build_cmdline_parser"], [418, 4, 1, "", "transform_item"]], "datumaro.plugins.transforms.MasksToPolygons": [[418, 4, 1, "", "convert_mask"], [418, 4, 1, "", "transform_item"]], "datumaro.plugins.transforms.MergeInstanceSegments": [[418, 4, 1, "", "build_cmdline_parser"], [418, 4, 1, "", "find_instances"], [418, 4, 1, "", "merge_segments"], [418, 4, 1, "", "transform_item"]], "datumaro.plugins.transforms.PolygonsToMasks": [[418, 4, 1, "", "convert_polygon"], [418, 4, 1, "", "transform_item"]], "datumaro.plugins.transforms.ProjectInfos": [[418, 4, 1, "", "build_cmdline_parser"], [418, 4, 1, "", "infos"]], "datumaro.plugins.transforms.ProjectLabels": [[418, 4, 1, "", "build_cmdline_parser"], [418, 4, 1, "", "categories"], [418, 4, 1, "", "transform_item"]], "datumaro.plugins.transforms.RandomSplit": [[418, 4, 1, "", "build_cmdline_parser"]], "datumaro.plugins.transforms.Reindex": [[418, 4, 1, "", "build_cmdline_parser"]], "datumaro.plugins.transforms.ReindexAnnotations": [[418, 4, 1, "", "build_cmdline_parser"], [418, 4, 1, "", "transform_item"]], "datumaro.plugins.transforms.RemapLabels": [[418, 1, 1, "", "DefaultAction"], [418, 4, 1, "", "build_cmdline_parser"], [418, 4, 1, "", "categories"], [418, 4, 1, "", "transform_item"]], "datumaro.plugins.transforms.RemapLabels.DefaultAction": [[418, 2, 1, "", "delete"], [418, 2, 1, "", "keep"]], "datumaro.plugins.transforms.RemoveAnnotations": [[418, 4, 1, "", "build_cmdline_parser"], [418, 4, 1, "", "transform_item"]], "datumaro.plugins.transforms.RemoveAttributes": [[418, 4, 1, "", "build_cmdline_parser"], [418, 4, 1, "", "transform_item"]], "datumaro.plugins.transforms.RemoveItems": [[418, 4, 1, "", "build_cmdline_parser"], [418, 4, 1, "", "transform_item"]], "datumaro.plugins.transforms.Rename": [[418, 4, 1, "", "build_cmdline_parser"], [418, 4, 1, "", "transform_item"]], "datumaro.plugins.transforms.ResizeTransform": [[418, 4, 1, "", "build_cmdline_parser"], [418, 4, 1, "", "transform_item"]], "datumaro.plugins.transforms.ShapesToBoxes": [[418, 4, 1, "", "convert_shape"], [418, 4, 1, "", "transform_item"]], "datumaro.plugins.transforms.Sort": [[418, 4, 1, "", "build_cmdline_parser"]], "datumaro.plugins.validators": [[419, 1, 1, "", "ClassificationValidator"], [419, 1, 1, "", "DetectionValidator"], [419, 1, 1, "", "SegmentationValidator"], [419, 1, 1, "", "TabularValidationStats"], [419, 1, 1, "", "TabularValidator"]], "datumaro.plugins.validators.ClassificationValidator": [[419, 4, 1, "", "compute_statistics"], [419, 4, 1, "", "generate_reports"]], "datumaro.plugins.validators.DetectionValidator": [[419, 4, 1, "", "compute_statistics"], [419, 4, 1, "", "generate_reports"]], "datumaro.plugins.validators.SegmentationValidator": [[419, 4, 1, "", "compute_statistics"], [419, 4, 1, "", "generate_reports"]], "datumaro.plugins.validators.TabularValidationStats": [[419, 4, 1, "", "create_with_dataset"], [419, 2, 1, "", "items_missing_annotation"], [419, 4, 1, "", "to_dict"], [419, 2, 1, "", "total_ann_count"]], "datumaro.plugins.validators.TabularValidator": [[419, 4, 1, "", "compute_statistics"], [419, 4, 1, "", "generate_reports"]], "datumaro.rust_api": [[421, 1, 1, "", "CocoPageMapper"], [421, 1, 1, "", "DatumPageMapper"], [421, 1, 1, "", "JsonSectionPageMapper"]], "datumaro.rust_api.CocoPageMapper": [[421, 4, 1, "", "categories"], [421, 4, 1, "", "get_anns_dict"], [421, 4, 1, "", "get_img_ids"], [421, 4, 1, "", "get_item_dict"], [421, 4, 1, "", "info"], [421, 4, 1, "", "licenses"]], "datumaro.rust_api.DatumPageMapper": [[421, 4, 1, "", "categories"], [421, 4, 1, "", "dm_format_version"], [421, 4, 1, "", "get_img_ids"], [421, 4, 1, "", "get_item_dict"], [421, 4, 1, "", "infos"], [421, 4, 1, "", "media_type"]], "datumaro.rust_api.JsonSectionPageMapper": [[421, 4, 1, "", "sections"]], "datumaro.util": [[423, 0, 0, "-", "annotation_util"], [424, 0, 0, "-", "attrs_util"], [422, 3, 1, "", "cast"], [425, 0, 0, "-", "definitions"], [422, 3, 1, "", "dump_json"], [422, 3, 1, "", "dump_json_file"], [422, 3, 1, "", "escape"], [426, 0, 0, "-", "file_utils"], [422, 3, 1, "", "filter_dict"], [422, 3, 1, "", "find"], [427, 0, 0, "-", "image"], [428, 0, 0, "-", "image_cache"], [429, 0, 0, "-", "import_util"], [422, 3, 1, "", "is_method_redefined"], [430, 0, 0, "-", "log_utils"], [431, 0, 0, "-", "mask_tools"], [432, 0, 0, "-", "meta_file_util"], [433, 0, 0, "-", "multi_procs_util"], [422, 3, 1, "", "optional_arg_decorator"], [434, 0, 0, "-", "os_util"], [422, 3, 1, "", "pairs"], [422, 3, 1, "", "parse_json"], [422, 3, 1, "", "parse_json_file"], [422, 3, 1, "", "parse_str_enum_value"], [435, 0, 0, "-", "pickle_util"], [436, 0, 0, "-", "samples"], [437, 0, 0, "-", "scope"], [438, 0, 0, "-", "tabular_util"], [422, 3, 1, "", "take_by"], [439, 0, 0, "-", "telemetry_stub"], [440, 0, 0, "-", "telemetry_utils"], [441, 0, 0, "-", "tf_util"], [422, 3, 1, "", "to_dict_from_streaming_json"], [422, 3, 1, "", "to_snake_case"], [422, 3, 1, "", "unescape"]], "datumaro.util.annotation_util": [[423, 3, 1, "", "OKS"], [423, 3, 1, "", "PDJ"], [423, 3, 1, "", "approximate_line"], [423, 3, 1, "", "bbox_iou"], [423, 3, 1, "", "find_group_leader"], [423, 3, 1, "", "find_instances"], [423, 3, 1, "", "make_label_id_mapping"], [423, 3, 1, "", "max_bbox"], [423, 3, 1, "", "mean_bbox"], [423, 3, 1, "", "nms"], [423, 3, 1, "", "segment_iou"], [423, 3, 1, "", "softmax"]], "datumaro.util.attrs_util": [[424, 3, 1, "", "default_if_none"], [424, 3, 1, "", "ensure_cls"], [424, 3, 1, "", "has_length"], [424, 3, 1, "", "not_empty"]], "datumaro.util.definitions": [[425, 3, 1, "", "get_datumaro_cache_dir"]], "datumaro.util.file_utils": [[426, 3, 1, "", "to_bytes"]], "datumaro.util.image": [[427, 1, 1, "", "ImageBackend"], [427, 1, 1, "", "ImageColorChannel"], [427, 7, 1, "", "ImageMeta"], [427, 3, 1, "", "copyto_image"], [427, 3, 1, "", "decode_image"], [427, 3, 1, "", "decode_image_context"], [427, 3, 1, "", "encode_image"], [427, 3, 1, "", "find_images"], [427, 3, 1, "", "is_image"], [427, 1, 1, "", "lazy_image"], [427, 3, 1, "", "load_image"], [427, 3, 1, "", "load_image_meta_file"], [427, 3, 1, "", "save_image"], [427, 3, 1, "", "save_image_meta_file"]], "datumaro.util.image.ImageBackend": [[427, 2, 1, "", "PIL"], [427, 2, 1, "", "cv2"]], "datumaro.util.image.ImageColorChannel": [[427, 2, 1, "", "COLOR_BGR"], [427, 2, 1, "", "COLOR_RGB"], [427, 2, 1, "", "UNCHANGED"], [427, 4, 1, "", "decode_by_cv2"], [427, 4, 1, "", "decode_by_pil"]], "datumaro.util.image_cache": [[428, 1, 1, "", "ImageCache"]], "datumaro.util.image_cache.ImageCache": [[428, 4, 1, "", "clear"], [428, 4, 1, "", "get"], [428, 4, 1, "", "get_instance"], [428, 4, 1, "", "push"], [428, 4, 1, "", "size"]], "datumaro.util.import_util": [[429, 3, 1, "", "lazy_import"]], "datumaro.util.log_utils": [[430, 3, 1, "", "catch_logs"], [430, 3, 1, "", "logging_disabled"]], "datumaro.util.mask_tools": [[431, 3, 1, "", "bgr2index"], [431, 3, 1, "", "check_is_mask"], [431, 3, 1, "", "crop_covered_segments"], [431, 3, 1, "", "extract_contours"], [431, 3, 1, "", "find_mask_bbox"], [431, 3, 1, "", "generate_colormap"], [431, 3, 1, "", "index2bgr"], [431, 3, 1, "", "invert_colormap"], [431, 3, 1, "", "lazy_mask"], [431, 3, 1, "", "load_mask"], [431, 3, 1, "", "make_binary_mask"], [431, 3, 1, "", "make_index_mask"], [431, 3, 1, "", "mask_to_bboxes"], [431, 3, 1, "", "mask_to_polygons"], [431, 3, 1, "", "mask_to_rle"], [431, 3, 1, "", "mask_to_rle_py"], [431, 3, 1, "", "merge_masks"], [431, 3, 1, "", "paint_mask"], [431, 3, 1, "", "remap_mask"], [431, 3, 1, "", "rle_to_mask"], [431, 3, 1, "", "rles_to_mask"], [431, 3, 1, "", "unpaint_mask"]], "datumaro.util.meta_file_util": [[432, 3, 1, "", "get_hashkey_file"], [432, 3, 1, "", "get_meta_file"], [432, 3, 1, "", "has_hashkey_file"], [432, 3, 1, "", "has_meta_file"], [432, 3, 1, "", "is_meta_file"], [432, 3, 1, "", "load_hash_key"], [432, 3, 1, "", "parse_hashkey_file"], [432, 3, 1, "", "parse_meta_file"], [432, 3, 1, "", "save_hashkey_file"], [432, 3, 1, "", "save_meta_file"]], "datumaro.util.multi_procs_util": [[433, 1, 1, "", "Condition"], [433, 5, 1, "", "Full"], [433, 1, 1, "", "IntEnum"], [433, 1, 1, "", "ProducerMessage"], [433, 1, 1, "", "Queue"], [433, 1, 1, "", "Thread"], [433, 1, 1, "", "TypeVar"], [433, 3, 1, "", "consumer_generator"], [433, 3, 1, "", "contextmanager"]], "datumaro.util.multi_procs_util.Condition": [[433, 4, 1, "", "notify"], [433, 4, 1, "", "notifyAll"], [433, 4, 1, "", "notify_all"], [433, 4, 1, "", "wait"], [433, 4, 1, "", "wait_for"]], "datumaro.util.multi_procs_util.ProducerMessage": [[433, 2, 1, "", "END"], [433, 2, 1, "", "START"]], "datumaro.util.multi_procs_util.Queue": [[433, 4, 1, "", "empty"], [433, 4, 1, "", "full"], [433, 4, 1, "", "get"], [433, 4, 1, "", "get_nowait"], [433, 4, 1, "", "join"], [433, 4, 1, "", "put"], [433, 4, 1, "", "put_nowait"], [433, 4, 1, "", "qsize"], [433, 4, 1, "", "task_done"]], "datumaro.util.multi_procs_util.Thread": [[433, 6, 1, "", "daemon"], [433, 4, 1, "", "getName"], [433, 6, 1, "", "ident"], [433, 4, 1, "", "isDaemon"], [433, 4, 1, "", "is_alive"], [433, 4, 1, "", "join"], [433, 6, 1, "", "name"], [433, 6, 1, "", "native_id"], [433, 4, 1, "", "run"], [433, 4, 1, "", "setDaemon"], [433, 4, 1, "", "setName"], [433, 4, 1, "", "start"]], "datumaro.util.os_util": [[434, 3, 1, "", "catch_output"], [434, 3, 1, "", "check_instruction_set"], [434, 3, 1, "", "copytree"], [434, 3, 1, "", "dir_items"], [434, 3, 1, "", "extract_subset_name_from_parent"], [434, 3, 1, "", "find_files"], [434, 3, 1, "", "generate_next_name"], [434, 3, 1, "", "get_all_file_extensions"], [434, 3, 1, "", "import_foreign_module"], [434, 3, 1, "", "is_subpath"], [434, 3, 1, "", "make_file_name"], [434, 3, 1, "", "split_path"], [434, 3, 1, "", "suppress_output"], [434, 3, 1, "", "walk"]], "datumaro.util.pickle_util": [[435, 1, 1, "", "PickleLoader"], [435, 1, 1, "", "RestrictedUnpickler"]], "datumaro.util.pickle_util.PickleLoader": [[435, 4, 1, "", "restricted_load"], [435, 2, 1, "", "safe_numpy"]], "datumaro.util.pickle_util.RestrictedUnpickler": [[435, 4, 1, "", "find_class"]], "datumaro.util.samples": [[436, 3, 1, "", "get_samples_path"]], "datumaro.util.scope": [[437, 1, 1, "", "Scope"], [437, 3, 1, "", "on_error_do"], [437, 3, 1, "", "on_exit_do"], [437, 3, 1, "", "scope_add"], [437, 3, 1, "", "scoped"]], "datumaro.util.scope.Scope": [[437, 4, 1, "", "add"], [437, 4, 1, "", "as_current"], [437, 4, 1, "", "close"], [437, 4, 1, "", "current"], [437, 4, 1, "", "disable"], [437, 4, 1, "", "enable"], [437, 4, 1, "", "on_error_do"], [437, 4, 1, "", "on_exit_do"]], "datumaro.util.telemetry_stub": [[439, 1, 1, "", "Telemetry"]], "datumaro.util.telemetry_stub.Telemetry": [[439, 4, 1, "", "end_session"], [439, 4, 1, "", "force_shutdown"], [439, 4, 1, "", "send_error"], [439, 4, 1, "", "send_event"], [439, 4, 1, "", "send_stack_trace"], [439, 4, 1, "", "start_session"]], "datumaro.util.telemetry_utils": [[440, 3, 1, "", "close_telemetry_session"], [440, 3, 1, "", "init_telemetry_session"], [440, 3, 1, "", "send_command_exception_info"], [440, 3, 1, "", "send_command_failure_info"], [440, 3, 1, "", "send_command_success_info"], [440, 3, 1, "", "send_error_info"], [440, 3, 1, "", "send_version_info"]], "datumaro.util.tf_util": [[441, 3, 1, "", "check_import"], [441, 3, 1, "", "has_feature"], [441, 3, 1, "", "import_tf"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:function", "4": "py:method", "5": "py:exception", "6": "py:property", "7": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "function", "Python function"], "4": ["py", "method", "Python method"], "5": ["py", "exception", "Python exception"], "6": ["py", "property", "Python property"], "7": ["py", "data", "Python data"]}, "titleterms": {"checkout": [0, 122, 166], "commit": [1, 122, 167], "creat": [2, 39, 40, 41, 54, 55, 62, 69, 70, 73, 81, 126, 161], "project": [2, 7, 24, 84, 85, 88, 122, 126, 176, 184, 233, 420], "export": [3, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 54, 55, 56, 57, 59, 62, 63, 64, 65, 66, 67, 69, 70, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 104, 106, 107, 108, 111, 112, 113, 114, 115, 119, 128, 162, 215, 251, 270, 279, 283, 289, 300, 311, 316, 337, 348, 352, 361, 367, 375], "dataset": [3, 8, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 25, 26, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 84, 85, 88, 95, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 118, 119, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 209, 446], "context": [4, 6, 7, 8, 20, 174, 175, 176, 177, 178, 206, 207], "command": [4, 20, 28, 84, 88, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 448], "log": [5, 169], "model": [6, 16, 46, 84, 87, 88, 96, 106, 108, 111, 114, 115, 116, 117, 126, 175, 446, 449], "regist": 6, "remov": [6, 8, 81, 126, 164], "run": [6, 16], "migrat": 7, "print": [7, 14, 126], "info": [7, 14, 51, 154, 168], "sourc": [8, 88, 114, 177], "import": [8, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 99, 104, 106, 107, 108, 111, 112, 113, 114, 118, 119, 126, 128, 207, 221, 253, 273, 285, 291, 313, 323, 339, 345, 349, 357, 369, 377], "add": [8, 126, 160], "statu": [9, 170], "util": [10, 178, 181, 182, 183, 184, 394, 413, 417, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441], "split": [10, 25, 100, 103, 106], "video": [10, 77, 364], "frame": 10, "compar": [11, 132, 142, 182, 203], "support": [11, 27, 51, 83, 87, 444], "method": [11, 23], "tabl": [11, 34, 450], "equal": 11, "distanc": 11, "convert": [12, 39, 40, 41, 54, 55, 62, 69, 70, 73, 128, 143], "detect": [13, 87, 100, 108, 109, 111, 114, 118, 129], "format": [13, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 106, 107, 112, 113, 118, 119, 128, 129, 180, 252, 272, 280, 284, 290, 301, 312, 317, 322, 332, 338, 353, 356, 362, 368, 376, 446], "download": [15, 87, 99, 101, 103, 104, 106, 107, 109, 110, 111, 114, 115, 116, 117, 118, 127, 145, 146, 147, 148, 149], "describ": 15, "explain": [16, 150], "infer": [16, 87, 116, 117], "explan": [16, 31, 32, 33], "explor": [17, 97, 105, 119, 151, 192, 378], "filter": [18, 39, 62, 70, 100, 102, 135, 152, 217], "gener": [19, 109, 110, 115, 117, 123, 137, 153, 219], "free": 20, "merg": [21, 84, 99, 100, 114, 133, 155, 225, 226, 227, 228, 229, 230], "patch": [22, 156], "prune": [23, 115, 124, 157, 194], "built": [23, 25, 446], "random": 23, "cluster_random": 23, "centroid": 23, "query_clust": 23, "entropi": [23, 406], "ndr": [23, 25, 387], "stat": [24, 171], "get": [24, 70, 81], "statist": [24, 55, 73, 108, 111, 119], "transform": [25, 84, 99, 100, 103, 104, 114, 116, 119, 121, 172, 236, 418, 444, 446], "renam": 25, "id_from_image_nam": 25, "reindex": [25, 100, 103], "sort": 25, "relevancy_sampl": [25, 408], "random_sampl": [25, 407], "random_label_sampl": 25, "resiz": 25, "remove_imag": 25, "remove_annot": 25, "remove_attribut": 25, "astype_annot": 25, "random_split": 25, "map_subset": 25, "remap_label": 25, "project_label": 25, "shapes_to_box": 25, "boxes_to_mask": 25, "polygons_to_mask": 25, "masks_to_polygon": 25, "anns_to_label": 25, "merge_instance_seg": 25, "crop_covered_seg": 25, "bbox_value_decr": 25, "correct": [25, 109, 110], "valid": [26, 101, 103, 109, 110, 115, 134, 173, 237, 419], "list": [26, 27], "item": [26, 70, 100], "annomali": 26, "type": [26, 34, 51], "data": [27, 51, 88, 101, 102, 105, 112, 113, 118, 119, 128, 129, 131, 132, 137, 447], "helper": [28, 179, 180], "overview": 29, "datumaro": [30, 45, 96, 108, 111, 114, 115, 119, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 448, 450], "ade20k": [31, 32, 113], "v2017": 31, "2017": [31, 101, 103, 109, 110], "other": [31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 48, 49, 54, 55, 62, 63, 64, 65, 66, 67, 69, 70, 72, 73, 74, 78, 79, 81, 85], "exampl": [31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 54, 55, 56, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 78, 79, 81, 84, 87, 90, 448], "v2020": 32, "align": 33, "celeba": [33, 38, 263, 264, 265], "arrow": [34, 249, 250, 251, 252, 253, 254, 255, 256], "specif": [34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82], "schema": 34, "id": [34, 103], "string": 34, "subset": [34, 81, 82, 100, 102, 106, 115, 131], "media": [34, 83, 103, 224, 256, 296], "uint32": 34, "path": [34, 85], "byte": 34, "binari": 34, "attribut": [34, 102], "annot": [34, 47, 51, 56, 71, 81, 82, 103, 114, 116, 117, 119, 198, 199, 200, 201, 293], "ava": [35, 257, 258, 259], "action": 35, "brat": [36, 37, 260], "numpi": 37, "cifar": [39, 266], "1": [39, 40, 41, 54, 55, 62, 69, 70, 73, 81, 118, 126, 445], "how": [39, 41, 54, 62, 70, 127, 447, 448], "custom": [39, 40, 41, 54, 55, 62, 69, 70, 73, 81, 92], "like": [39, 40, 41, 54, 62, 69], "2": [39, 40, 41, 54, 55, 62, 69, 70, 73, 81, 118, 127, 445], "imagenet": [39, 50, 62, 304], "cityscap": [40, 54, 113, 267], "load": [40, 41, 54, 69, 70], "origin": [40, 41, 54, 70], "pascal": [40, 41, 70, 81, 112], "voc": [40, 41, 52, 70, 71, 81, 112, 365, 366, 367, 368, 369], "coco": [41, 61, 71, 101, 103, 105, 109, 110, 112, 268, 269, 270, 271, 272, 273, 274], "an": [41, 49, 54, 69, 70, 129], "panopt": [41, 101], "from": [41, 70, 81, 87, 96, 105, 108, 110, 111, 126, 129, 136], "roboflow": [41, 71, 342, 343, 344, 345], "us": [41, 61, 88, 106, 108, 111, 114, 115, 116, 117, 448], "cli": [41, 61, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184], "python": [41, 61, 93, 108, 111, 114, 115, 448], "api": [41, 61, 108, 111, 114, 115], "common": [42, 43, 294], "semant": [42, 113], "segment": [42, 64, 70, 72, 101, 105, 113, 116, 117], "super": 43, "resolut": [43, 104], "cvat": [44, 69, 277, 278, 279, 280], "datumarobinari": 46, "effici": 46, "storag": 46, "cost": 46, "encrypt": [46, 107], "multi": 46, "process": 46, "usag": [46, 93], "train": [46, 70, 96, 106, 108, 111, 114, 115], "dota": [47, 297], "directori": [47, 56, 71, 81, 82], "structur": [47, 56, 71, 81, 82], "txt": [47, 52, 71], "file": [47, 51, 69, 71, 81, 82], "icdar": [48, 298, 299, 300, 301], "imag": [49, 52, 69, 81, 102, 104, 105, 117, 136, 427], "zip": 49, "unannot": 49, "archiv": 49, "meta": [51, 81, 82], "kaggl": [52, 118, 148, 306, 307], "csv": [52, 71, 76, 78], "mask": [52, 116, 117], "yolo": [52, 81, 82, 373, 374, 375, 376, 377], "kinet": [53, 308], "kitti": [54, 55, 73, 309, 310, 311, 312, 313], "velodyn": 55, "point": [55, 73], "raw": [55, 73], "3d": 55, "comput": [55, 73], "supervis": [55, 73], "pointcloud": 55, "3": [55, 70, 73, 81, 128, 445], "labelm": [56, 318], "xml": [56, 71], "lfw": [57, 319], "mapillari": 58, "vista": 58, "market": 59, "1501": 59, "mar": [60, 325], "mmdetect": 61, "mnist": [62, 327], "multipl": [63, 64, 99], "object": [63, 64, 81], "track": [63, 64], "mot": [63, 64, 329, 330], "mpii": [65, 66, 331, 332, 333, 334], "human": [65, 66], "pose": [65, 66], "json": [66, 71, 79], "mvtec": [67, 335, 336, 337, 338, 339], "ad": 67, "nyu": 68, "depth": 68, "v2": [68, 87], "open": 69, "metadata": 69, "oid": 69, "prepar": [70, 81, 108, 119, 127, 128, 131, 133, 449], "code": 70, "4": [70, 81, 129, 445], "inform": [70, 81, 126], "about": [70, 81], "2012": 70, "task": [70, 99, 108, 111, 112, 119], "yolov5": 71, "yolov7": 71, "yolov8": [71, 106], "mt": 71, "yolov6": 71, "tensorflow": [71, 446], "tfrecord": 71, "createml": 71, "orient": 71, "bound": [71, 81, 82, 116, 117], "box": [71, 81, 82, 116, 117], "multiclass": 71, "classif": [71, 87, 99, 108, 115], "anyth": [72, 116, 117], "sa": 72, "1b": 72, "cloud": 73, "synthia": [74, 354, 355, 356, 357], "tabular": [75, 358], "vgg": 76, "face2": 76, "vott": [78, 79], "wider": 80, "face": 80, "class": [81, 84], "name": [81, 99, 100], "text": [81, 82, 105, 136], "more": [81, 118], "loos": 81, "without": 81, "With": 81, "each": 81, "ultralyt": [82, 106], "architectur": 84, "basic": [84, 85, 130], "The": 84, "simpl": 84, "join": 84, "complex": 84, "librari": 84, "content": 84, "convers": [84, 446], "launcher": [84, 222, 389, 446], "plugin": [84, 86, 92, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 444, 446], "write": 84, "line": [84, 88, 448], "concept": 85, "version": [85, 122, 165, 166, 167, 168, 169, 170, 442], "build": 85, "openvino": [87, 106, 108, 111, 114, 115, 446], "interpret": [87, 399, 400, 401, 402], "sampl": [87, 108, 111, 117, 383, 384, 390, 391, 392, 393, 394, 436], "ssd_mobilenet_v2_coco": 87, "mobilenet": 87, "pytorch": 87, "workflow": 88, "layout": 88, "case": [88, 118], "introduct": 89, "kei": 89, "featur": [89, 445], "quick": 91, "start": 91, "guid": 91, "instal": [92, 108, 111, 114, 115, 119, 127], "depend": 92, "step": 92, "standalon": 93, "tool": 93, "modul": [93, 443, 444, 448], "doc": 94, "i": 95, "o": 95, "manipul": [98, 126], "remap": [99, 100, 103], "label": [99, 100, 102, 108, 111, 123], "heterogen": [99, 100, 132, 133], "duplic": 100, "visual": [101, 110, 238], "your": [101, 102, 104, 106, 107], "prerequisit": [101, 103, 104, 106, 107, 108, 109, 110, 111, 114, 115, 116, 117, 122], "extract": [101, 115], "instanc": [101, 105, 116, 117], "caption": 101, "through": 102, "queri": [102, 105, 136], "width": 102, "height": 102, "area": 102, "re": [103, 107], "etc": 103, "tile": [104, 414, 415, 416, 417], "cope": 104, "high": 104, "six": [104, 106, 107, 111, 114, 116], "side": [104, 106, 107, 111, 114, 116], "dice": [104, 106, 107, 111, 114, 116], "find": [105, 108, 111], "most": 105, "similar": 105, "trainer": 106, "For": 106, "ani": [106, 107], "yolov8n": 106, "evalu": 106, "test": 106, "set": [106, 119], "ir": 106, "again": 107, "noisi": [108, 111], "loss": [108, 111], "dynam": [108, 111], "imagenette2": 108, "extens": [108, 111, 114, 115], "synthes": [108, 111, 114], "analyz": [108, 111], "them": [108, 111], "To": 109, "anomali": [109, 110], "report": [109, 110, 115], "manual": 109, "error": [109, 183, 214, 239], "inspect": 109, "warn": 109, "some": 110, "incorrect": 111, "public": [112, 113], "m": 112, "anoth": 112, "miss": 114, "execut": 114, "missingannotationdetect": 114, "repres": 115, "caltech": 115, "101": 115, "launch": [116, 117], "server": [116, 117], "sam": [116, 117], "transfrom": [116, 117], "automat": 117, "argument": 118, "conclud": 118, "remark": 118, "packag": 119, "input": 119, "output": 119, "target": 119, "sentiment": 119, "analysi": 119, "characterist": 119, "refiend": 119, "refin": 120, "refer": 121, "level": [122, 123, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137], "12": 122, "revis": 122, "13": 123, "pseudo": 123, "14": 124, "advanc": 125, "skill": [125, 130, 138], "which": 127, "ar": 127, "avail": 127, "can": 127, "we": 127, "unknown": 129, "5": [131, 445], "aggreg": 131, "6": [132, 445], "comparison": 132, "two": [132, 133], "7": [133, 445], "8": [134, 445], "9": 135, "10": 136, "explorart": 136, "11": [137, 445], "intermedi": 138, "detect_format": 144, "tfd": 149, "require_project": [158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170], "modif": [159, 160, 161, 162, 163, 164], "import_": 163, "compon": [185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238], "abstract": [186, 187, 188], "merger": [187, 201], "model_interpret": 188, "algorithm": [189, 190, 191, 192, 193, 194, 195, 196, 197, 404, 405, 406], "hash_key_infer": [190, 191, 192, 193, 194], "base": [191, 226, 250, 269, 278, 282, 288, 299, 307, 310, 315, 321, 336, 343, 347, 351, 355, 360, 366, 374, 381], "hashkey_util": 193, "noisy_label_detect": [195, 196], "loss_dynamics_analyz": 196, "rise": 197, "matcher": 200, "cli_plugin": 202, "config": 204, "config_model": 205, "crypter": 208, "dataset_bas": 210, "dataset_item_storag": 211, "dataset_storag": 212, "environ": 213, "extractor_tfd": 216, "format_detect": 218, "hl_op": 220, "lazy_plugin": 223, "exact_merg": 227, "extractor_merg": [228, 271], "intersect_merg": 229, "union_merg": 230, "oper": 231, "progress_report": 232, "registri": 234, "shift_analyz": 235, "op": 240, "accuracy_checker_plugin": [242, 243], "detail": 243, "anchor_gener": 244, "configurable_valid": 245, "data_format": [246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377], "ade20k2017": 247, "ade20k2020": 248, "mapper": [254, 255, 256, 292, 293, 294, 295, 296], "dataset_item": [255, 295], "ava_label_pb2": 259, "brats_numpi": 261, "camvid": 262, "align_celeba": 264, "page_mapp": [274, 286], "common_semantic_segment": 275, "common_super_resolut": 276, "datumaro_binari": [287, 288, 289, 290, 291, 292, 293, 294, 295, 296], "image_dir": 302, "image_zip": 303, "imagenet_txt": 305, "kitti_raw": [314, 315, 316, 317], "mapillary_vista": [320, 321, 322, 323], "market1501": 324, "mmdet": 326, "mnist_csv": 328, "mpii_json": 333, "mpii_mat": 334, "nyu_depth_v2": 340, "open_imag": 341, "base_tfrecord": 344, "segment_anyth": [346, 347, 348, 349], "sly_pointcloud": [350, 351, 352, 353], "tf_detection_api": [359, 360, 361, 362], "vgg_face2": 363, "vott_csv": 370, "vott_json": 371, "widerfac": 372, "framework_convert": 379, "inference_server_plugin": [380, 381, 382, 383, 384, 385], "ovm": 382, "face_detect": 384, "triton": 385, "missing_annotation_detect": 386, "openvino_plugin": [388, 389, 390, 391, 392, 393, 394, 395], "otx_custom_object_detection_gen3_atss_interp": 391, "otx_custom_object_detection_gen3_ssd_interp": 392, "otx_custom_object_detection_yolox_interp": 393, "shift_launch": 395, "sam_transform": [396, 397, 398, 399, 400, 401, 402], "automatic_mask_gen": 397, "bbox_to_inst_mask": 398, "sam_decoder_for_amg": 400, "sam_decoder_for_bbox": 401, "sam_encod": 402, "sampler": [403, 404, 405, 406, 407, 408], "spec": 409, "splitter": 410, "synthetic_data": [411, 412, 413], "image_gener": 412, "merge_til": 415, "rust_api": 421, "annotation_util": 423, "attrs_util": 424, "definit": 425, "file_util": 426, "image_cach": 428, "import_util": 429, "log_util": 430, "mask_tool": 431, "meta_file_util": 432, "multi_procs_util": 433, "os_util": 434, "pickle_util": 435, "scope": 437, "tabular_util": 438, "telemetry_stub": 439, "telemetry_util": 440, "tf_util": 441, "releas": 445, "note": 445, "v1": 445, "0": 445, "2024": 445, "q3": 445, "new": 445, "enhanc": 445, "bug": 445, "fix": 445, "q2": 445, "05": 445, "04": 445, "01": 445, "2023": 445, "09": 445, "07": 445, "06": 445, "03": 445, "02": 445, "extend": 446, "accuraci": 446, "checker": 446, "control": 447, "telemetri": 447, "collect": 447, "welcom": 450, "document": 450, "indic": 450}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "nbsphinx": 4, "sphinx": 60}, "alltitles": {"Checkout": [[0, "checkout"]], "Commit": [[1, "commit"]], "Create": [[2, "create"]], "Create project": [[2, "create-project"]], "Export": [[3, "export"]], "Export Datasets": [[3, "export-datasets"]], "Context Commands": [[4, "context-commands"]], "Log": [[5, "log"]], "Model (context)": [[6, "model-context"]], "Models": [[6, "models"]], "Register model": [[6, "register-model"]], "Remove Models": [[6, "remove-models"]], "Run Model": [[6, "run-model"]], "Project (context)": [[7, "project-context"]], "Migrate project": [[7, "migrate-project"]], "Print project info": [[7, "print-project-info"]], "Source (context)": [[8, "source-context"]], "Import Dataset": [[8, "import-dataset"]], "Add Dataset": [[8, "add-dataset"]], "Remove Datasets": [[8, "remove-datasets"]], "Status": [[9, "status"]], "Util": [[10, "util"]], "Utilities": [[10, "utilities"]], "Split video into frames": [[10, "split-video-into-frames"]], "Compare": [[11, "compare"]], "Compare datasets": [[11, "compare-datasets"]], "Support methods": [[11, "support-methods"]], "table": [[11, "table"]], "equality": [[11, "equality"]], "distance": [[11, "distance"]], "Convert": [[12, "convert"]], "Convert datasets": [[12, "convert-datasets"]], "Detect": [[13, "detect"]], "Detect dataset format": [[13, "detect-dataset-format"]], "Info": [[14, "info"]], "Print dataset info": [[14, "print-dataset-info"]], "Download": [[15, "download"]], "Describe downloadable datasets": [[15, "describe-downloadable-datasets"]], "Download datasets": [[15, "download-datasets"]], "Explain": [[16, "explain"]], "Run model inference explanation (explain)": [[16, "run-model-inference-explanation-explain"]], "Explore": [[17, "explore"], [97, "explore"]], "Explore datasets": [[17, "explore-datasets"]], "Filter": [[18, "filter"]], "Filter datasets": [[18, "filter-datasets"]], "Generate": [[19, "generate"]], "Generate Datasets": [[19, "generate-datasets"]], "Context-free Commands": [[20, "context-free-commands"]], "Merge": [[21, "merge"]], "Merge Datasets": [[21, "merge-datasets"]], "Patch": [[22, "patch"]], "Patch Datasets": [[22, "patch-datasets"]], "Prune": [[23, "prune"]], "Prune Dataset": [[23, "prune-dataset"]], "Built-in prune methods": [[23, "built-in-prune-methods"]], "random": [[23, "random"]], "cluster_random": [[23, "cluster-random"]], "centroid": [[23, "centroid"]], "query_clust": [[23, "query-clust"]], "entropy": [[23, "entropy"]], "ndr": [[23, "ndr"], [25, "ndr"]], "Stats": [[24, "stats"]], "Get Project Statistics": [[24, "get-project-statistics"]], "Transform": [[25, "transform"], [121, "transform"]], "Transform Dataset": [[25, "transform-dataset"]], "Built-in transforms": [[25, "built-in-transforms"]], "rename": [[25, "rename"]], "id_from_image_name": [[25, "id-from-image-name"]], "reindex": [[25, "reindex"]], "sort": [[25, "sort"]], "relevancy_sampler": [[25, "relevancy-sampler"]], "random_sampler": [[25, "random-sampler"]], "random_label_sampler": [[25, "random-label-sampler"]], "resize": [[25, "resize"]], "remove_images": [[25, "remove-images"]], "remove_annotations": [[25, "remove-annotations"]], "remove_attributes": [[25, "remove-attributes"]], "astype_annotations": [[25, "astype-annotations"]], "random_split": [[25, "random-split"]], "split": [[25, "split"]], "map_subsets": [[25, "map-subsets"]], "remap_labels": [[25, "remap-labels"]], "project_labels": [[25, "project-labels"]], "shapes_to_boxes": [[25, "shapes-to-boxes"]], "boxes_to_masks": [[25, "boxes-to-masks"]], "polygons_to_masks": [[25, "polygons-to-masks"]], "masks_to_polygons": [[25, "masks-to-polygons"]], "anns_to_labels": [[25, "anns-to-labels"]], "merge_instance_segments": [[25, "merge-instance-segments"]], "crop_covered_segments": [[25, "crop-covered-segments"]], "bbox_value_decrement": [[25, "bbox-value-decrement"]], "correct": [[25, "correct"]], "Validate": [[26, "validate"]], "Validate Dataset": [[26, "validate-dataset"]], "List of validation items (annomaly types)": [[26, "list-of-validation-items-annomaly-types"]], "Format": [[27, "format"]], "List Supported Data Formats": [[27, "list-supported-data-formats"]], "Helper Commands": [[28, "helper-commands"]], "Overview": [[29, "overview"]], "Datumaro Format": [[30, "datumaro-format"]], "ADE20k (v2017)": [[31, "ade20k-v2017"]], "Format explanation": [[31, "format-explanation"], [32, "format-explanation"], [33, "format-explanation"]], "Import ADE20K 2017 dataset": [[31, "import-ade20k-2017-dataset"]], "Export to other formats": [[31, "export-to-other-formats"], [32, "export-to-other-formats"], [33, "export-to-other-formats"], [34, "export-to-other-formats"], [35, "export-to-other-formats"], [36, "export-to-other-formats"], [37, "export-to-other-formats"], [38, "export-to-other-formats"], [39, "export-to-other-formats"], [40, "export-to-other-formats"], [41, "export-to-other-formats"], [42, "export-to-other-formats"], [44, "export-to-other-formats"], [45, "export-to-other-formats"], [46, "export-to-other-formats"], [48, "export-to-other-formats"], [49, "export-to-other-formats"], [54, "export-to-other-formats"], [55, "export-to-other-formats"], [62, "export-to-other-formats"], [63, "export-to-other-formats"], [64, "export-to-other-formats"], [65, "export-to-other-formats"], [66, "export-to-other-formats"], [67, "export-to-other-formats"], [69, "export-to-other-formats"], [70, "export-to-other-formats"], [72, "export-to-other-formats"], [73, "export-to-other-formats"], [74, "export-to-other-formats"], [78, "export-to-other-formats"], [79, "export-to-other-formats"], [81, "export-to-other-formats"]], "Examples": [[31, "examples"], [32, "examples"], [33, "examples"], [34, "examples"], [35, "examples"], [36, "examples"], [37, "examples"], [38, "examples"], [39, "examples"], [40, "examples"], [41, "examples"], [42, "examples"], [43, "examples"], [44, "examples"], [45, "examples"], [46, "examples"], [49, "examples"], [54, "examples"], [55, "examples"], [62, "examples"], [63, "examples"], [64, "examples"], [65, "examples"], [66, "examples"], [67, "examples"], [68, "examples"], [69, "examples"], [70, "examples"], [72, "examples"], [73, "examples"], [74, "examples"], [75, "examples"], [78, "examples"], [79, "examples"], [81, "examples"], [87, "examples"], [90, "examples"]], "ADE20k (v2020)": [[32, "ade20k-v2020"]], "Import ADE20K dataset": [[32, "import-ade20k-dataset"]], "Align CelebA": [[33, "align-celeba"]], "Import align CelebA dataset": [[33, "import-align-celeba-dataset"]], "Arrow": [[34, "arrow"]], "Format specification": [[34, "format-specification"], [35, "format-specification"], [36, "format-specification"], [37, "format-specification"], [38, "format-specification"], [39, "format-specification"], [40, "format-specification"], [41, "format-specification"], [42, "format-specification"], [43, "format-specification"], [45, "format-specification"], [46, "format-specification"], [47, "format-specification"], [48, "format-specification"], [49, "format-specification"], [50, "format-specification"], [52, "format-specification"], [53, "format-specification"], [54, "format-specification"], [55, "format-specification"], [56, "format-specification"], [57, "format-specification"], [58, "format-specification"], [59, "format-specification"], [60, "format-specification"], [61, "format-specification"], [62, "format-specification"], [63, "format-specification"], [64, "format-specification"], [65, "format-specification"], [66, "format-specification"], [67, "format-specification"], [68, "format-specification"], [69, "format-specification"], [70, "format-specification"], [71, "format-specification"], [72, "format-specification"], [73, "format-specification"], [74, "format-specification"], [75, "format-specification"], [76, "format-specification"], [77, "format-specification"], [78, "format-specification"], [79, "format-specification"], [80, "format-specification"], [81, "format-specification"], [82, "format-specification"]], "Table schema": [[34, "table-schema"]], "id (string)": [[34, "id-string"]], "subset (string)": [[34, "subset-string"]], "media.type (uint32)": [[34, "media-type-uint32"]], "media.path (string)": [[34, "media-path-string"]], "media.bytes (binary)": [[34, "media-bytes-binary"]], "media.attributes (binary)": [[34, "media-attributes-binary"]], "annotations (binary)": [[34, "annotations-binary"]], "attributes (binary)": [[34, "attributes-binary"]], "Import Arrow dataset": [[34, "import-arrow-dataset"]], "Export to Arrow": [[34, "export-to-arrow"]], "AVA Action": [[35, "ava-action"]], "Import AVA action dataset": [[35, "import-ava-action-dataset"]], "Export to AVA action format": [[35, "export-to-ava-action-format"]], "BraTS": [[36, "brats"]], "Import BraTS dataset": [[36, "import-brats-dataset"]], "BraTS Numpy": [[37, "brats-numpy"]], "Import BraTS Numpy dataset": [[37, "import-brats-numpy-dataset"]], "CelebA": [[38, "celeba"]], "Import CelebA dataset": [[38, "import-celeba-dataset"]], "CIFAR": [[39, "cifar"]], "Import CIFAR dataset": [[39, "import-cifar-dataset"]], "Export to CIFAR": [[39, "export-to-cifar"]], "Example 1. How to create a custom CIFAR-like dataset": [[39, "example-1-how-to-create-a-custom-cifar-like-dataset"]], "Example 2. How to filter and convert a CIFAR dataset to ImageNet": [[39, "example-2-how-to-filter-and-convert-a-cifar-dataset-to-imagenet"]], "Cityscapes": [[40, "cityscapes"]], "Import Cityscapes dataset": [[40, "import-cityscapes-dataset"]], "Export to Cityscapes": [[40, "export-to-cityscapes"]], "Example 1. Load the original Cityscapes dataset and convert to Pascal VOC": [[40, "example-1-load-the-original-cityscapes-dataset-and-convert-to-pascal-voc"]], "Example 2. Create a custom Cityscapes-like dataset": [[40, "example-2-create-a-custom-cityscapes-like-dataset"]], "COCO": [[41, "coco"]], "Import COCO dataset": [[41, "import-coco-dataset"]], "Export to COCO": [[41, "export-to-coco"]], "Example 1. How to load an original panoptic COCO dataset and convert to Pascal VOC": [[41, "example-1-how-to-load-an-original-panoptic-coco-dataset-and-convert-to-pascal-voc"]], "Example 2. How to create custom COCO-like dataset": [[41, "example-2-how-to-create-custom-coco-like-dataset"]], "COCO from Roboflow": [[41, "coco-from-roboflow"]], "Import using CLI": [[41, "import-using-cli"], [61, "import-using-cli"]], "Import using Python API": [[41, "import-using-python-api"], [61, "import-using-python-api"]], "Common Semantic Segmentation": [[42, "common-semantic-segmentation"]], "Import Common Semantic Segmentation dataset": [[42, "import-common-semantic-segmentation-dataset"]], "Common Super Resolution": [[43, "common-super-resolution"]], "Import Common Super Resolution dataset": [[43, "import-common-super-resolution-dataset"]], "CVAT": [[44, "cvat"]], "Format Specification": [[44, "format-specification"]], "Import CVAT dataset": [[44, "import-cvat-dataset"]], "Export to CVAT": [[44, "export-to-cvat"]], "Datumaro": [[45, "datumaro"]], "Import Datumaro dataset": [[45, "import-datumaro-dataset"]], "Export to Datumaro": [[45, "export-to-datumaro"]], "DatumaroBinary": [[46, "datumarobinary"]], "Efficient storage cost": [[46, "efficient-storage-cost"]], "Dataset encryption": [[46, "dataset-encryption"]], "Multi-processing import and export": [[46, "multi-processing-import-and-export"]], "Usage for model training": [[46, "usage-for-model-training"]], "Import DatumaroBinary dataset": [[46, "import-datumarobinary-dataset"]], "Import encrypted datasets": [[46, "import-encrypted-datasets"]], "Import datasets with multi-processing": [[46, "import-datasets-with-multi-processing"]], "Export to DatumaroBinary": [[46, "export-to-datumarobinary"]], "Export datasets with encryption": [[46, "export-datasets-with-encryption"]], "Export datasets with multi-processing": [[46, "export-datasets-with-multi-processing"]], "DOTA": [[47, "dota"]], "Import DOTA dataset": [[47, "import-dota-dataset"]], "Directory structure": [[47, "directory-structure"], [56, "directory-structure"], [71, "directory-structure"], [71, "id1"], [71, "id2"], [71, "id3"], [71, "id5"], [71, "id6"], [71, "id8"], [71, "id10"], [81, "directory-structure"], [81, "id1"], [82, "directory-structure"]], "Annotation Txt file": [[47, "annotation-txt-file"]], "ICDAR": [[48, "icdar"]], "Import ICDAR dataset": [[48, "import-icdar-dataset"]], "Image zip": [[49, "image-zip"]], "Import Image zip dataset": [[49, "import-image-zip-dataset"]], "Export an unannotated dataset to a zip archive": [[49, "export-an-unannotated-dataset-to-a-zip-archive"]], "ImageNet": [[50, "imagenet"]], "Import ImageNet dataset": [[50, "import-imagenet-dataset"]], "Export ImageNet dataset": [[50, "export-imagenet-dataset"]], "Export dataset to the ImageNet format": [[50, "export-dataset-to-the-imagenet-format"]], "Supported Data Formats": [[51, "supported-data-formats"]], "Supported Annotation Types": [[51, "supported-annotation-types"]], "Dataset Meta Info File": [[51, "dataset-meta-info-file"]], "Kaggle": [[52, "kaggle"]], "Import Kaggle Image CSV dataset": [[52, "import-kaggle-image-csv-dataset"]], "Import Kaggle Image Txt dataset": [[52, "import-kaggle-image-txt-dataset"]], "Import Kaggle Image Mask dataset": [[52, "import-kaggle-image-mask-dataset"]], "Import Kaggle VOC and Kaggle YOLO datasets": [[52, "import-kaggle-voc-and-kaggle-yolo-datasets"]], "Kinetics": [[53, "kinetics"]], "Import Kinetics dataset": [[53, "import-kinetics-dataset"]], "KITTI": [[54, "kitti"]], "Import KITTI dataset": [[54, "import-kitti-dataset"]], "Export to KITTI": [[54, "export-to-kitti"]], "Example 1. How to load an original KITTI dataset and convert to Cityscapes": [[54, "example-1-how-to-load-an-original-kitti-dataset-and-convert-to-cityscapes"]], "Example 2. How to create a custom KITTI-like dataset": [[54, "example-2-how-to-create-a-custom-kitti-like-dataset"]], "Velodyne Points / KITTI Raw 3D": [[55, "velodyne-points-kitti-raw-3d"]], "Import KITTI Raw dataset": [[55, "import-kitti-raw-dataset"]], "Export to KITTI Raw": [[55, "export-to-kitti-raw"]], "Example 1. Import dataset, compute statistics": [[55, "example-1-import-dataset-compute-statistics"], [73, "example-1-import-dataset-compute-statistics"]], "Example 2. Convert Supervisely Pointclouds to KITTI Raw": [[55, "example-2-convert-supervisely-pointclouds-to-kitti-raw"]], "Example 3. Create a custom dataset": [[55, "example-3-create-a-custom-dataset"], [73, "example-3-create-a-custom-dataset"]], "LabelMe": [[56, "labelme"]], "Import a LabelMe dataset": [[56, "import-a-labelme-dataset"]], "Export a dataset with LabelMe format": [[56, "export-a-dataset-with-labelme-format"]], "Annotation XML example": [[56, "annotation-xml-example"]], "LFW": [[57, "lfw"]], "Import LFW dataset": [[57, "import-lfw-dataset"]], "Export LFW dataset": [[57, "export-lfw-dataset"]], "Export dataset to the LFW format": [[57, "export-dataset-to-the-lfw-format"]], "Mapillary Vistas": [[58, "mapillary-vistas"]], "Import Mapillary Vistas dataset": [[58, "import-mapillary-vistas-dataset"]], "Market-1501": [[59, "market-1501"]], "Import Market-1501 dataset": [[59, "import-market-1501-dataset"]], "Export dataset to the Market-1501 format": [[59, "export-dataset-to-the-market-1501-format"]], "MARS": [[60, "mars"]], "Import MARS dataset": [[60, "import-mars-dataset"]], "MMDetection COCO": [[61, "mmdetection-coco"]], "MNIST": [[62, "mnist"]], "Import MNIST dataset": [[62, "import-mnist-dataset"]], "Export to MNIST": [[62, "export-to-mnist"]], "Example 1. How to create a custom MNIST-like dataset": [[62, "example-1-how-to-create-a-custom-mnist-like-dataset"]], "Example 2. How to filter and convert a MNIST dataset to ImageNet": [[62, "example-2-how-to-filter-and-convert-a-mnist-dataset-to-imagenet"]], "Multiple Object Tracking (MOT)": [[63, "multiple-object-tracking-mot"]], "Import MOT dataset": [[63, "import-mot-dataset"]], "Export to MOT": [[63, "export-to-mot"]], "Multiple Object Tracking and Segmentation (MOTS)": [[64, "multiple-object-tracking-and-segmentation-mots"]], "Import MOTS dataset": [[64, "import-mots-dataset"]], "Export to MOTS": [[64, "export-to-mots"]], "MPII Human Pose": [[65, "mpii-human-pose"]], "Import MPII Human Pose Dataset": [[65, "import-mpii-human-pose-dataset"]], "MPII Human Pose JSON": [[66, "mpii-human-pose-json"]], "Import MPII Human Pose Dataset (JSON)": [[66, "import-mpii-human-pose-dataset-json"]], "MVTec AD": [[67, "mvtec-ad"]], "Import MVTec AD dataset": [[67, "import-mvtec-ad-dataset"]], "Export to MVTec AD format": [[67, "export-to-mvtec-ad-format"]], "NYU Depth Dataset V2": [[68, "nyu-depth-dataset-v2"]], "Import NYU Depth Dataset V2": [[68, "import-nyu-depth-dataset-v2"]], "Open Images": [[69, "open-images"]], "Import Open Images dataset": [[69, "import-open-images-dataset"]], "Creating an image metadata file": [[69, "creating-an-image-metadata-file"]], "Export to Open Images": [[69, "export-to-open-images"]], "Example 1. Load the Open Images dataset and convert to the CVAT format": [[69, "example-1-load-the-open-images-dataset-and-convert-to-the-cvat-format"]], "Example 2. Create a custom OID-like dataset": [[69, "example-2-create-a-custom-oid-like-dataset"]], "Pascal VOC": [[70, "pascal-voc"]], "Import Pascal VOC dataset": [[70, "import-pascal-voc-dataset"]], "Export to Pascal VOC": [[70, "export-to-pascal-voc"]], "Example 1. How to prepare an original dataset for training": [[70, "example-1-how-to-prepare-an-original-dataset-for-training"]], "Example 2. How to create a custom dataset": [[70, "example-2-how-to-create-a-custom-dataset"]], "Example 3. Load, filter and convert from code": [[70, "example-3-load-filter-and-convert-from-code"]], "Example 4. Get information about items in Pascal VOC 2012 dataset for segmentation task": [[70, "example-4-get-information-about-items-in-pascal-voc-2012-dataset-for-segmentation-task"]], "Roboflow": [[71, "roboflow"]], "Import Roboflow dataset": [[71, "import-roboflow-dataset"]], "Roboflow COCO JSON": [[71, "roboflow-coco-json"]], "Annotation JSON file": [[71, "annotation-json-file"], [71, "id7"]], "Roboflow VOC XML": [[71, "roboflow-voc-xml"]], "Annotation XML file": [[71, "annotation-xml-file"]], "Roboflow YOLOv5, YOLOv7, YOLOv8 TXT": [[71, "roboflow-yolov5-yolov7-yolov8-txt"]], "Annotation TXT file": [[71, "annotation-txt-file"], [71, "id4"], [71, "id9"]], "Roboflow MT-YOLOv6 TXT": [[71, "roboflow-mt-yolov6-txt"]], "Roboflow Tensorflow TFRecord": [[71, "roboflow-tensorflow-tfrecord"]], "Roboflow CreateML JSON": [[71, "roboflow-createml-json"]], "Roboflow YOLOv5 Oriented Bounding Boxes": [[71, "roboflow-yolov5-oriented-bounding-boxes"]], "Roboflow Multiclass Classification CSV": [[71, "roboflow-multiclass-classification-csv"]], "Annotation CSV file": [[71, "annotation-csv-file"]], "Segment Anything": [[72, "segment-anything"]], "Import SA-1B dataset": [[72, "import-sa-1b-dataset"]], "Export to SA-1B": [[72, "export-to-sa-1b"]], "Supervisely Point Cloud": [[73, "supervisely-point-cloud"]], "Import Supervisely Point Cloud dataset": [[73, "import-supervisely-point-cloud-dataset"]], "Export to Supervisely Point Cloud": [[73, "export-to-supervisely-point-cloud"]], "Example 2. Convert Supervisely Point Clouds to KITTI Raw": [[73, "example-2-convert-supervisely-point-clouds-to-kitti-raw"]], "SYNTHIA": [[74, "synthia"]], "Import SYNTHIA dataset": [[74, "import-synthia-dataset"]], "Tabular": [[75, "tabular"]], "Import tabular dataset": [[75, "import-tabular-dataset"]], "Export tabular dataset": [[75, "export-tabular-dataset"]], "Vgg Face2 CSV": [[76, "vgg-face2-csv"]], "Import Vgg Face2 dataset": [[76, "import-vgg-face2-dataset"]], "Export Vgg Face2 dataset": [[76, "export-vgg-face2-dataset"]], "Export dataset to the Vgg Face2 format": [[76, "export-dataset-to-the-vgg-face2-format"]], "Video": [[77, "video"]], "Import video": [[77, "import-video"]], "VoTT CSV": [[78, "vott-csv"]], "Import VoTT dataset": [[78, "import-vott-dataset"], [79, "import-vott-dataset"]], "VoTT JSON": [[79, "vott-json"]], "WIDER Face": [[80, "wider-face"]], "Import WIDER Face dataset": [[80, "import-wider-face-dataset"]], "Export WIDER Face dataset": [[80, "export-wider-face-dataset"]], "Export to WIDER Face dataset": [[80, "export-to-wider-face-dataset"]], "YOLO": [[81, "yolo"]], "Import YOLO dataset": [[81, "import-yolo-dataset"], [82, "import-yolo-dataset"]], "Meta file": [[81, "meta-file"], [82, "meta-file"]], "Class names file": [[81, "class-names-file"], [81, "id2"]], "Subset files": [[81, "subset-files"], [82, "subset-files"]], "Bounding box annotation text file": [[81, "bounding-box-annotation-text-file"], [81, "id3"], [82, "bounding-box-annotation-text-file"]], "Import YOLO dataset with more loose format": [[81, "import-yolo-dataset-with-more-loose-format"]], "Without subset directories": [[81, "without-subset-directories"]], "With subset directories": [[81, "with-subset-directories"]], "Export to YOLO format": [[81, "export-to-yolo-format"]], "Example 1. Prepare PASCAL VOC dataset for exporting to YOLO format dataset": [[81, "example-1-prepare-pascal-voc-dataset-for-exporting-to-yolo-format-dataset"]], "Example 2. Remove a class from YOLO dataset": [[81, "example-2-remove-a-class-from-yolo-dataset"]], "Example 3. Create a custom dataset in YOLO format": [[81, "example-3-create-a-custom-dataset-in-yolo-format"]], "Example 4. Get information about objects on each image": [[81, "example-4-get-information-about-objects-on-each-image"]], "YOLO-Ultralytics": [[82, "yolo-ultralytics"]], "Export to YOLO-Ultralytics format": [[82, "export-to-yolo-ultralytics-format"]], "Supported Media Formats": [[83, "supported-media-formats"]], "Architecture": [[84, "architecture"]], "Basics": [[84, "basics"]], "The Dataset class": [[84, "the-dataset-class"]], "Dataset merging": [[84, "dataset-merging"]], "The simple merging (\u201cjoining\u201d)": [[84, "the-simple-merging-joining"]], "The complex merging": [[84, "the-complex-merging"]], "Projects": [[84, "projects"]], "Library contents": [[84, "library-contents"]], "Dataset Formats": [[84, "dataset-formats"], [446, "dataset-formats"]], "Dataset Conversions (\u201cTransforms\u201d)": [[84, "dataset-conversions-transforms"], [446, "dataset-conversions-transforms"]], "Model launchers": [[84, "model-launchers"], [446, "model-launchers"]], "Plugins": [[84, "plugins"], [86, "plugins"], [92, "plugins"]], "Writing a plugin": [[84, "writing-a-plugin"]], "Plugin example": [[84, "plugin-example"]], "Command-line": [[84, "command-line"]], "Concepts": [[85, "concepts"]], "Basic concepts": [[85, "basic-concepts"]], "Project versioning concepts": [[85, "project-versioning-concepts"]], "Dataset path concepts": [[85, "dataset-path-concepts"]], "Dataset building concepts": [[85, "dataset-building-concepts"]], "Others": [[85, "others"]], "OpenVINO\u2122 Inference Interpreter": [[87, "openvino-inference-interpreter"]], "Models supported from interpreter samples": [[87, "models-supported-from-interpreter-samples"]], "Model download": [[87, "model-download"]], "Model inference": [[87, "model-inference"]], "Detection: ssd_mobilenet_v2_coco": [[87, "detection-ssd-mobilenet-v2-coco"]], "Classification: mobilenet-v2-pytorch": [[87, "classification-mobilenet-v2-pytorch"]], "Command-Line Workflow": [[88, "command-line-workflow"]], "Project": [[88, "project"]], "Project data model": [[88, "project-data-model"]], "Project layout": [[88, "project-layout"]], "Datasets and Data Sources": [[88, "datasets-and-data-sources"]], "Use cases": [[88, "use-cases"]], "Introduction": [[89, "introduction"]], "Key Features": [[89, "key-features"]], "Quick Start Guide": [[91, "quick-start-guide"]], "Installation": [[92, "installation"]], "Dependencies": [[92, "dependencies"]], "Installation steps": [[92, "installation-steps"]], "Customizing installation": [[92, "customizing-installation"]], "Usage": [[93, "usage"]], "Standalone tool": [[93, "standalone-tool"]], "Python module": [[93, "python-module"]], "Docs": [[94, "docs"]], "Dataset I/O": [[95, "dataset-i-o"]], "From Datumaro to Model Training": [[96, "from-datumaro-to-model-training"]], "Manipulate": [[98, "manipulate"]], "Merge Multiple Datasets for Classification Tasks": [[99, "Merge-Multiple-Datasets-for-Classification-Tasks"]], "Download Datasets": [[99, "Download-Datasets"]], "Import Datasets": [[99, "Import-Datasets"]], "Transform - Remap Label Names": [[99, "Transform---Remap-Label-Names"], [100, "Transform---Remap-Label-Names"]], "Merge Heterogenous Datasets": [[99, "Merge-Heterogenous-Datasets"], [100, "Merge-Heterogenous-Datasets"]], "Merge Heterogeneous Datasets for Detection": [[100, "Merge-Heterogeneous-Datasets-for-Detection"]], "Filter Duplicates": [[100, "Filter-Duplicates"]], "Reindex Items": [[100, "Reindex-Items"]], "Split into Subsets": [[100, "Split-into-Subsets"]], "Visualize Your Data": [[101, "Visualize-Your-Data"]], "Prerequisite": [[101, "Prerequisite"], [103, "Prerequisite"], [104, "Prerequisite"], [106, "Prerequisite"], [107, "Prerequisite"], [108, "Prerequisite"], [109, "Prerequisite"], [110, "Prerequisite"], [111, "Prerequisite"], [114, "Prerequisite"], [115, "Prerequisite"], [116, "Prerequisite"], [117, "Prerequisite"], [122, "prerequisite"]], "Download COCO 2017 validation dataset": [[101, "Download-COCO-2017-validation-dataset"], [103, "Download-COCO-2017-validation-dataset"], [109, "Download-COCO-2017-validation-dataset"], [110, "Download-COCO-2017-validation-dataset"]], "Extract the downloaded dataset": [[101, "Extract-the-downloaded-dataset"]], "Visualize dataset": [[101, "Visualize-dataset"]], "Visualize COCO instance segmentation dataset": [[101, "Visualize-COCO-instance-segmentation-dataset"]], "Visualize COCO panoptic segmentation dataset": [[101, "Visualize-COCO-panoptic-segmentation-dataset"]], "Visualize COCO captions dataset": [[101, "Visualize-COCO-captions-dataset"]], "Filter Data through Your Query": [[102, "Filter-Data-through-Your-Query"]], "Filtered by subset": [[102, "Filtered-by-subset"]], "Filtered by image width or height": [[102, "Filtered-by-image-width-or-height"]], "Filtered by label and area": [[102, "Filtered-by-label-and-area"]], "Filtered by attributes": [[102, "Filtered-by-attributes"]], "Transform Dataset: Re-id, Reindexing, Remapping, etc.": [[103, "Transform-Dataset:-Re-id,-Reindexing,-Remapping,-etc."]], "Transform media ID": [[103, "Transform-media-ID"]], "Transform annotation": [[103, "Transform-annotation"]], "Split datasets": [[103, "Split-datasets"]], "Tile your Dataset to Cope with High-Resolution Images": [[104, "Tile-your-Dataset-to-Cope-with-High-Resolution-Images"]], "Download Six-sided Dice dataset": [[104, "Download-Six-sided-Dice-dataset"], [106, "Download-Six-sided-Dice-dataset"], [107, "Download-Six-sided-Dice-dataset"], [111, "Download-Six-sided-Dice-dataset"], [114, "Download-Six-sided-Dice-dataset"], [116, "Download-Six-sided-Dice-dataset"]], "Import dataset": [[104, "Import-dataset"], [106, "Import-dataset"], [107, "Import-dataset"]], "Export tile transformed dataset": [[104, "Export-tile-transformed-dataset"]], "Find Most Similar Data from Image or Text Queries": [[105, "Find-Most-Similar-Data-from-Image-or-Text-Queries"]], "Data exploration": [[105, "Data-exploration"]], "Explore with COCO instance segmentation dataset": [[105, "Explore-with-COCO-instance-segmentation-dataset"]], "Explore with image query": [[105, "Explore-with-image-query"]], "Explore with text query": [[105, "Explore-with-text-query"]], "Train Your OpenVINO\u2122 Model Using YoloV8 Trainer For Any Dataset Format": [[106, "Train-Your-OpenVINO\u2122-Model-Using-YoloV8-Trainer-For-Any-Dataset-Format"]], "Split subsets and export dataset": [[106, "Split-subsets-and-export-dataset"]], "Train model with Ultralytics YOLOv8 trainer": [[106, "Train-model-with-Ultralytics-YOLOv8-trainer"]], "Train yolov8n model": [[106, "Train-yolov8n-model"]], "Evaluate on the test set": [[106, "Evaluate-on-the-test-set"]], "Export the trained model to OpenVINO\u2122 IR": [[106, "Export-the-trained-model-to-OpenVINO\u2122-IR"]], "Encrypt Your Dataset": [[107, "Encrypt-Your-Dataset"]], "Export dataset with encryption": [[107, "Export-dataset-with-encryption"]], "Re-import the encrypted dataset": [[107, "Re-import-the-encrypted-dataset"]], "Re-export again to any dataset format with no encryption": [[107, "Re-export-again-to-any-dataset-format-with-no-encryption"]], "Noisy label detection for classification tasks from training loss dynamics statistics": [[108, "Noisy-label-detection-for-classification-tasks-from-training-loss-dynamics-statistics"]], "Prepare Imagenette2 dataset": [[108, "Prepare-Imagenette2-dataset"]], "Install OpenVINO\u2122 Training Extensions": [[108, "Install-OpenVINO\u2122-Training-Extensions"], [111, "Install-OpenVINO\u2122-Training-Extensions"], [114, "Install-OpenVINO\u2122-Training-Extensions"], [115, "Install-OpenVINO\u2122-Training-Extensions"]], "Synthesize noisy label using Datumaro Python API": [[108, "Synthesize-noisy-label-using-Datumaro-Python-API"], [111, "Synthesize-noisy-label-using-Datumaro-Python-API"]], "Train a model and export training loss dynamics statistics using OpenVINO\u2122 Training Extensions": [[108, "Train-a-model-and-export-training-loss-dynamics-statistics-using-OpenVINO\u2122-Training-Extensions"], [111, "Train-a-model-and-export-training-loss-dynamics-statistics-using-OpenVINO\u2122-Training-Extensions"]], "Import statistics and analyze them to find the noisy label samples": [[108, "Import-statistics-and-analyze-them-to-find-the-noisy-label-samples"], [111, "Import-statistics-and-analyze-them-to-find-the-noisy-label-samples"]], "Validate Dataset To Detect Anomalies": [[109, "Validate-Dataset-To-Detect-Anomalies"]], "Generate the validation report": [[109, "Generate-the-validation-report"], [110, "Generate-the-validation-report"], [115, "Generate-the-validation-report"]], "Manual correction of validation errors": [[109, "Manual-correction-of-validation-errors"]], "Inspection of warnings": [[109, "Inspection-of-warnings"]], "Correct Dataset from Validation Report": [[110, "Correct-Dataset-from-Validation-Report"]], "Visualize some anomalies": [[110, "Visualize-some-anomalies"]], "Correct anomalies": [[110, "Correct-anomalies"]], "Noisy label detection for detection tasks from training loss dynamics statistics": [[111, "Noisy-label-detection-for-detection-tasks-from-training-loss-dynamics-statistics"]], "Synthesize incorrect label samples": [[111, "Synthesize-incorrect-label-samples"]], "Import and Export Public Data": [[112, "Import-and-Export-Public-Data"]], "Import MS-COCO data": [[112, "Import-MS-COCO-data"]], "Export MS-COCO data into Pascal-VOC data format": [[112, "Export-MS-COCO-data-into-Pascal-VOC-data-format"]], "Import Pascal-VOC data": [[112, "Import-Pascal-VOC-data"]], "Import Pascal-VOC data for another task": [[112, "Import-Pascal-VOC-data-for-another-task"]], "Import and Export Public Semantic Segmentation Data": [[113, "Import-and-Export-Public-Semantic-Segmentation-Data"]], "Import Cityscapes data": [[113, "Import-Cityscapes-data"]], "Import ADE20K data": [[113, "Import-ADE20K-data"]], "Export ADE20K data into Cityscapes data format": [[113, "Export-ADE20K-data-into-Cityscapes-data-format"]], "Missing Annotation Detection": [[114, "Missing-Annotation-Detection"]], "Synthesize missing annotation using Datumaro Python API": [[114, "Synthesize-missing-annotation-using-Datumaro-Python-API"]], "Synthesize Missing Annotations": [[114, "Synthesize-Missing-Annotations"]], "Train a Model and Export the Trained Detection Model Using OpenVINO\u2122 Training Extensions": [[114, "Train-a-Model-and-Export-the-Trained-Detection-Model-Using-OpenVINO\u2122-Training-Extensions"]], "Importing the Trained Detection Model": [[114, "Importing-the-Trained-Detection-Model"]], "Execute MissingAnnotationDetection Transform": [[114, "Execute-MissingAnnotationDetection-Transform"]], "Merge the Missing Annotations with the Source Dataset": [[114, "Merge-the-Missing-Annotations-with-the-Source-Dataset"]], "Prune Dataset to extract representative subset": [[115, "Prune-Dataset-to-extract-representative-subset"]], "Download Caltech-101 dataset": [[115, "Download-Caltech-101-dataset"]], "Prune dataset using Datumaro Python API": [[115, "Prune-dataset-using-Datumaro-Python-API"]], "Prune dataset": [[115, "Prune-dataset"]], "Train Model and Export the Trained Classification Model Using OpenVINO\u2122 Training Extensions": [[115, "Train-Model-and-Export-the-Trained-Classification-Model-Using-OpenVINO\u2122-Training-Extensions"]], "Transform bounding box to instance mask annotations using Segment Anything Model": [[116, "Transform-bounding-box-to-instance-mask-annotations-using-Segment-Anything-Model"]], "Launch the Model Inference Server for SAM": [[116, "Launch-the-Model-Inference-Server-for-SAM"], [117, "Launch-the-Model-Inference-Server-for-SAM"]], "Transfrom bounding box to instance mask annotations": [[116, "Transfrom-bounding-box-to-instance-mask-annotations"], [117, "Transfrom-bounding-box-to-instance-mask-annotations"]], "Automatic instance mask annotations generation using Segment Anything Model": [[117, "Automatic-instance-mask-annotations-generation-using-Segment-Anything-Model"]], "Download a sample image": [[117, "Download-a-sample-image"]], "Kaggle Datasets Import": [[118, "Kaggle-Datasets-Import"]], "Download a Kaggle dataset": [[118, "Download-a-Kaggle-dataset"]], "Case 1: Detect Data Format & Import Dataset with Format": [[118, "Case-1:-Detect-Data-Format-&-Import-Dataset-with-Format"]], "Case 2: Import Dataset with More Arguments for Kaggle Importers": [[118, "Case-2:-Import-Dataset-with-More-Arguments-for-Kaggle-Importers"]], "Concluding Remarks": [[118, "Concluding-Remarks"]], "Data preparation with Datumaro": [[119, "Data-preparation-with-Datumaro"]], "Install Datumaro package": [[119, "Install-Datumaro-package"]], "Import a dataset": [[119, "Import-a-dataset"]], "Setting Input and Output Targets for Sentiment Analysis": [[119, "Setting-Input-and-Output-Targets-for-Sentiment-Analysis"]], "Transforming Dataset Annotations for Sentiment Analysis Task": [[119, "Transforming-Dataset-Annotations-for-Sentiment-Analysis-Task"]], "Exploring Dataset Characteristics": [[119, "Exploring-Dataset-Characteristics"]], "Dataset Statistics": [[119, "Dataset-Statistics"]], "Export refiend data into Datumaro format": [[119, "Export-refiend-data-into-Datumaro-format"]], "Refine": [[120, "refine"]], "References": [[121, "references"]], "Level 12: Project Versioning": [[122, "level-12-project-versioning"]], "Commit project revisions and checkout to the revision": [[122, "commit-project-revisions-and-checkout-to-the-revision"]], "Level 13: Pseudo Label Generation": [[123, "level-13-pseudo-label-generation"]], "Level 14: Dataset Pruning": [[124, "level-14-dataset-pruning"]], "Advanced Skills": [[125, "advanced-skills"]], "Level 1: Project Manipulation": [[126, "level-1-project-manipulation"]], "Create a project": [[126, "create-a-project"]], "Import a dataset to the project": [[126, "import-a-dataset-to-the-project"]], "Remove a dataset from the project": [[126, "remove-a-dataset-from-the-project"]], "Print dataset information": [[126, "print-dataset-information"]], "Add model to project": [[126, "add-model-to-project"]], "Remove model from project": [[126, "remove-model-from-project"]], "Print project information": [[126, "print-project-information"]], "Level 2: Dataset download": [[127, "level-2-dataset-download"]], "Prepare installation": [[127, "prepare-installation"]], "Which datasets are available?": [[127, "which-datasets-are-available"]], "How can we download datasets?": [[127, "how-can-we-download-datasets"]], "Level 3: Data Import and Export": [[128, "level-3-data-import-and-export"]], "Prepare dataset": [[128, "prepare-dataset"]], "Convert data format": [[128, "convert-data-format"]], "Level 4: Detect Data Format from an Unknown Dataset": [[129, "level-4-detect-data-format-from-an-unknown-dataset"]], "Detect data format": [[129, "detect-data-format"]], "Basic Skills": [[130, "basic-skills"]], "Level 5: Data Subset Aggregation": [[131, "level-5-data-subset-aggregation"]], "Prepare datasets": [[131, "prepare-datasets"], [133, "prepare-datasets"]], "Level 6: Data Comparison with Two Heterogeneous Datasets": [[132, "level-6-data-comparison-with-two-heterogeneous-datasets"]], "Comparing Datasets": [[132, "comparing-datasets"]], "Level 7: Merge Two Heterogeneous Datasets": [[133, "level-7-merge-two-heterogeneous-datasets"]], "Merge datasets": [[133, "merge-datasets"]], "Level 8: Dataset Validation": [[134, "level-8-dataset-validation"]], "Level 9: Dataset Filtering": [[135, "level-9-dataset-filtering"]], "Level 10: Dataset Explorartion from a Query Image/Text": [[136, "level-10-dataset-explorartion-from-a-query-image-text"]], "Level 11: Data Generation": [[137, "level-11-data-generation"]], "Intermediate Skills": [[138, "intermediate-skills"]], "datumaro": [[139, "module-datumaro"]], "datumaro.cli": [[140, "module-datumaro.cli"]], "datumaro.cli.commands": [[141, "module-datumaro.cli.commands"]], "datumaro.cli.commands.compare": [[142, "module-datumaro.cli.commands.compare"]], "datumaro.cli.commands.convert": [[143, "module-datumaro.cli.commands.convert"]], "datumaro.cli.commands.detect_format": [[144, "module-datumaro.cli.commands.detect_format"]], "datumaro.cli.commands.download": [[145, "module-datumaro.cli.commands.download"]], "datumaro.cli.commands.downloaders": [[146, "module-datumaro.cli.commands.downloaders"]], "datumaro.cli.commands.downloaders.downloader": [[147, "module-datumaro.cli.commands.downloaders.downloader"]], "datumaro.cli.commands.downloaders.kaggle": [[148, "module-datumaro.cli.commands.downloaders.kaggle"]], "datumaro.cli.commands.downloaders.tfds": [[149, "module-datumaro.cli.commands.downloaders.tfds"]], "datumaro.cli.commands.explain": [[150, "module-datumaro.cli.commands.explain"]], "datumaro.cli.commands.explore": [[151, "module-datumaro.cli.commands.explore"]], "datumaro.cli.commands.filter": [[152, "module-datumaro.cli.commands.filter"]], "datumaro.cli.commands.generate": [[153, "module-datumaro.cli.commands.generate"]], "datumaro.cli.commands.info": [[154, "module-datumaro.cli.commands.info"]], "datumaro.cli.commands.merge": [[155, "module-datumaro.cli.commands.merge"]], "datumaro.cli.commands.patch": [[156, "module-datumaro.cli.commands.patch"]], "datumaro.cli.commands.prune": [[157, "module-datumaro.cli.commands.prune"]], "datumaro.cli.commands.require_project": [[158, "module-datumaro.cli.commands.require_project"]], "datumaro.cli.commands.require_project.modification": [[159, "module-datumaro.cli.commands.require_project.modification"]], "datumaro.cli.commands.require_project.modification.add": [[160, "module-datumaro.cli.commands.require_project.modification.add"]], "datumaro.cli.commands.require_project.modification.create": [[161, "module-datumaro.cli.commands.require_project.modification.create"]], "datumaro.cli.commands.require_project.modification.export": [[162, "module-datumaro.cli.commands.require_project.modification.export"]], "datumaro.cli.commands.require_project.modification.import_": [[163, "module-datumaro.cli.commands.require_project.modification.import_"]], "datumaro.cli.commands.require_project.modification.remove": [[164, "module-datumaro.cli.commands.require_project.modification.remove"]], "datumaro.cli.commands.require_project.versioning": [[165, "module-datumaro.cli.commands.require_project.versioning"]], "datumaro.cli.commands.require_project.versioning.checkout": [[166, "module-datumaro.cli.commands.require_project.versioning.checkout"]], "datumaro.cli.commands.require_project.versioning.commit": [[167, "module-datumaro.cli.commands.require_project.versioning.commit"]], "datumaro.cli.commands.require_project.versioning.info": [[168, "module-datumaro.cli.commands.require_project.versioning.info"]], "datumaro.cli.commands.require_project.versioning.log": [[169, "module-datumaro.cli.commands.require_project.versioning.log"]], "datumaro.cli.commands.require_project.versioning.status": [[170, "module-datumaro.cli.commands.require_project.versioning.status"]], "datumaro.cli.commands.stats": [[171, "module-datumaro.cli.commands.stats"]], "datumaro.cli.commands.transform": [[172, "module-datumaro.cli.commands.transform"]], "datumaro.cli.commands.validate": [[173, "module-datumaro.cli.commands.validate"]], "datumaro.cli.contexts": [[174, "module-datumaro.cli.contexts"]], "datumaro.cli.contexts.model": [[175, "module-datumaro.cli.contexts.model"]], "datumaro.cli.contexts.project": [[176, "module-datumaro.cli.contexts.project"]], "datumaro.cli.contexts.source": [[177, "module-datumaro.cli.contexts.source"]], "datumaro.cli.contexts.util": [[178, "module-datumaro.cli.contexts.util"]], "datumaro.cli.helpers": [[179, "module-datumaro.cli.helpers"]], "datumaro.cli.helpers.format": [[180, "module-datumaro.cli.helpers.format"]], "datumaro.cli.util": [[181, "module-datumaro.cli.util"]], "datumaro.cli.util.compare": [[182, "module-datumaro.cli.util.compare"]], "datumaro.cli.util.errors": [[183, "module-datumaro.cli.util.errors"]], "datumaro.cli.util.project": [[184, "module-datumaro.cli.util.project"]], "datumaro.components": [[185, "module-datumaro.components"]], "datumaro.components.abstracts": [[186, "module-datumaro.components.abstracts"]], "datumaro.components.abstracts.merger": [[187, "module-datumaro.components.abstracts.merger"]], "datumaro.components.abstracts.model_interpreter": [[188, "module-datumaro.components.abstracts.model_interpreter"]], "datumaro.components.algorithms": [[189, "module-datumaro.components.algorithms"]], "datumaro.components.algorithms.hash_key_inference": [[190, "module-datumaro.components.algorithms.hash_key_inference"]], "datumaro.components.algorithms.hash_key_inference.base": [[191, "module-datumaro.components.algorithms.hash_key_inference.base"]], "datumaro.components.algorithms.hash_key_inference.explorer": [[192, "module-datumaro.components.algorithms.hash_key_inference.explorer"]], "datumaro.components.algorithms.hash_key_inference.hashkey_util": [[193, "module-datumaro.components.algorithms.hash_key_inference.hashkey_util"]], "datumaro.components.algorithms.hash_key_inference.prune": [[194, "module-datumaro.components.algorithms.hash_key_inference.prune"]], "datumaro.components.algorithms.noisy_label_detection": [[195, "module-datumaro.components.algorithms.noisy_label_detection"]], "datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer": [[196, "module-datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer"]], "datumaro.components.algorithms.rise": [[197, "module-datumaro.components.algorithms.rise"]], "datumaro.components.annotation": [[198, "module-datumaro.components.annotation"]], "datumaro.components.annotations": [[199, "module-datumaro.components.annotations"]], "datumaro.components.annotations.matcher": [[200, "module-datumaro.components.annotations.matcher"]], "datumaro.components.annotations.merger": [[201, "module-datumaro.components.annotations.merger"]], "datumaro.components.cli_plugin": [[202, "module-datumaro.components.cli_plugin"]], "datumaro.components.comparator": [[203, "module-datumaro.components.comparator"]], "datumaro.components.config": [[204, "module-datumaro.components.config"]], "datumaro.components.config_model": [[205, "module-datumaro.components.config_model"]], "datumaro.components.contexts": [[206, "module-datumaro.components.contexts"]], "datumaro.components.contexts.importer": [[207, "module-datumaro.components.contexts.importer"]], "datumaro.components.crypter": [[208, "module-datumaro.components.crypter"]], "datumaro.components.dataset": [[209, "module-datumaro.components.dataset"]], "datumaro.components.dataset_base": [[210, "module-datumaro.components.dataset_base"]], "datumaro.components.dataset_item_storage": [[211, "module-datumaro.components.dataset_item_storage"]], "datumaro.components.dataset_storage": [[212, "module-datumaro.components.dataset_storage"]], "datumaro.components.environment": [[213, "module-datumaro.components.environment"]], "datumaro.components.errors": [[214, "module-datumaro.components.errors"]], "datumaro.components.exporter": [[215, "module-datumaro.components.exporter"]], "datumaro.components.extractor_tfds": [[216, "module-datumaro.components.extractor_tfds"]], "datumaro.components.filter": [[217, "module-datumaro.components.filter"]], "datumaro.components.format_detection": [[218, "module-datumaro.components.format_detection"]], "datumaro.components.generator": [[219, "module-datumaro.components.generator"]], "datumaro.components.hl_ops": [[220, "module-datumaro.components.hl_ops"]], ")": [[220, "id7"], [225, "id5"], [229, "id5"]], "datumaro.components.importer": [[221, "module-datumaro.components.importer"]], "datumaro.components.launcher": [[222, "module-datumaro.components.launcher"]], "datumaro.components.lazy_plugin": [[223, "module-datumaro.components.lazy_plugin"]], "datumaro.components.media": [[224, "module-datumaro.components.media"]], "datumaro.components.merge": [[225, "module-datumaro.components.merge"]], "datumaro.components.merge.base": [[226, "module-datumaro.components.merge.base"]], "datumaro.components.merge.exact_merge": [[227, "module-datumaro.components.merge.exact_merge"]], "datumaro.components.merge.extractor_merger": [[228, "module-datumaro.components.merge.extractor_merger"]], "datumaro.components.merge.intersect_merge": [[229, "module-datumaro.components.merge.intersect_merge"]], "datumaro.components.merge.union_merge": [[230, "module-datumaro.components.merge.union_merge"]], "datumaro.components.operations": [[231, "module-datumaro.components.operations"]], "datumaro.components.progress_reporting": [[232, "module-datumaro.components.progress_reporting"]], "datumaro.components.project": [[233, "module-datumaro.components.project"]], "datumaro.components.registry": [[234, "module-datumaro.components.registry"]], "datumaro.components.shift_analyzer": [[235, "module-datumaro.components.shift_analyzer"]], "datumaro.components.transformer": [[236, "module-datumaro.components.transformer"]], "datumaro.components.validator": [[237, "module-datumaro.components.validator"]], "datumaro.components.visualizer": [[238, "module-datumaro.components.visualizer"]], "datumaro.errors": [[239, "module-datumaro.errors"]], "datumaro.ops": [[240, "module-datumaro.ops"]], "datumaro.plugins": [[241, "module-datumaro.plugins"]], "datumaro.plugins.accuracy_checker_plugin": [[242, "module-datumaro.plugins.accuracy_checker_plugin"]], "datumaro.plugins.accuracy_checker_plugin.details": [[243, "module-datumaro.plugins.accuracy_checker_plugin.details"]], "datumaro.plugins.anchor_generator": [[244, "module-datumaro.plugins.anchor_generator"]], "datumaro.plugins.configurable_validator": [[245, "module-datumaro.plugins.configurable_validator"]], "datumaro.plugins.data_formats": [[246, "module-datumaro.plugins.data_formats"]], "datumaro.plugins.data_formats.ade20k2017": [[247, "module-datumaro.plugins.data_formats.ade20k2017"]], "datumaro.plugins.data_formats.ade20k2020": [[248, "module-datumaro.plugins.data_formats.ade20k2020"]], "datumaro.plugins.data_formats.arrow": [[249, "module-datumaro.plugins.data_formats.arrow"]], "datumaro.plugins.data_formats.arrow.base": [[250, "module-datumaro.plugins.data_formats.arrow.base"]], "datumaro.plugins.data_formats.arrow.exporter": [[251, "module-datumaro.plugins.data_formats.arrow.exporter"]], "datumaro.plugins.data_formats.arrow.format": [[252, "module-datumaro.plugins.data_formats.arrow.format"]], "datumaro.plugins.data_formats.arrow.importer": [[253, "module-datumaro.plugins.data_formats.arrow.importer"]], "datumaro.plugins.data_formats.arrow.mapper": [[254, "module-datumaro.plugins.data_formats.arrow.mapper"]], "datumaro.plugins.data_formats.arrow.mapper.dataset_item": [[255, "module-datumaro.plugins.data_formats.arrow.mapper.dataset_item"]], "datumaro.plugins.data_formats.arrow.mapper.media": [[256, "module-datumaro.plugins.data_formats.arrow.mapper.media"]], "datumaro.plugins.data_formats.ava": [[257, "module-datumaro.plugins.data_formats.ava"]], "datumaro.plugins.data_formats.ava.ava": [[258, "module-datumaro.plugins.data_formats.ava.ava"]], "datumaro.plugins.data_formats.ava.ava_label_pb2": [[259, "module-datumaro.plugins.data_formats.ava.ava_label_pb2"]], "datumaro.plugins.data_formats.brats": [[260, "module-datumaro.plugins.data_formats.brats"]], "datumaro.plugins.data_formats.brats_numpy": [[261, "module-datumaro.plugins.data_formats.brats_numpy"]], "datumaro.plugins.data_formats.camvid": [[262, "module-datumaro.plugins.data_formats.camvid"]], "datumaro.plugins.data_formats.celeba": [[263, "module-datumaro.plugins.data_formats.celeba"]], "datumaro.plugins.data_formats.celeba.align_celeba": [[264, "module-datumaro.plugins.data_formats.celeba.align_celeba"]], "datumaro.plugins.data_formats.celeba.celeba": [[265, "module-datumaro.plugins.data_formats.celeba.celeba"]], "datumaro.plugins.data_formats.cifar": [[266, "module-datumaro.plugins.data_formats.cifar"]], "datumaro.plugins.data_formats.cityscapes": [[267, "module-datumaro.plugins.data_formats.cityscapes"]], "datumaro.plugins.data_formats.coco": [[268, "module-datumaro.plugins.data_formats.coco"]], "datumaro.plugins.data_formats.coco.base": [[269, "module-datumaro.plugins.data_formats.coco.base"]], "datumaro.plugins.data_formats.coco.exporter": [[270, "module-datumaro.plugins.data_formats.coco.exporter"]], "datumaro.plugins.data_formats.coco.extractor_merger": [[271, "module-datumaro.plugins.data_formats.coco.extractor_merger"]], "datumaro.plugins.data_formats.coco.format": [[272, "module-datumaro.plugins.data_formats.coco.format"]], "datumaro.plugins.data_formats.coco.importer": [[273, "module-datumaro.plugins.data_formats.coco.importer"]], "datumaro.plugins.data_formats.coco.page_mapper": [[274, "module-datumaro.plugins.data_formats.coco.page_mapper"]], "datumaro.plugins.data_formats.common_semantic_segmentation": [[275, "module-datumaro.plugins.data_formats.common_semantic_segmentation"]], "datumaro.plugins.data_formats.common_super_resolution": [[276, "module-datumaro.plugins.data_formats.common_super_resolution"]], "datumaro.plugins.data_formats.cvat": [[277, "module-datumaro.plugins.data_formats.cvat"]], "datumaro.plugins.data_formats.cvat.base": [[278, "module-datumaro.plugins.data_formats.cvat.base"]], "datumaro.plugins.data_formats.cvat.exporter": [[279, "module-datumaro.plugins.data_formats.cvat.exporter"]], "datumaro.plugins.data_formats.cvat.format": [[280, "module-datumaro.plugins.data_formats.cvat.format"]], "datumaro.plugins.data_formats.datumaro": [[281, "module-datumaro.plugins.data_formats.datumaro"]], "datumaro.plugins.data_formats.datumaro.base": [[282, "module-datumaro.plugins.data_formats.datumaro.base"]], "datumaro.plugins.data_formats.datumaro.exporter": [[283, "module-datumaro.plugins.data_formats.datumaro.exporter"]], "datumaro.plugins.data_formats.datumaro.format": [[284, "module-datumaro.plugins.data_formats.datumaro.format"]], "datumaro.plugins.data_formats.datumaro.importer": [[285, "module-datumaro.plugins.data_formats.datumaro.importer"]], "datumaro.plugins.data_formats.datumaro.page_mapper": [[286, "module-datumaro.plugins.data_formats.datumaro.page_mapper"]], "datumaro.plugins.data_formats.datumaro_binary": [[287, "module-datumaro.plugins.data_formats.datumaro_binary"]], "datumaro.plugins.data_formats.datumaro_binary.base": [[288, "module-datumaro.plugins.data_formats.datumaro_binary.base"]], "datumaro.plugins.data_formats.datumaro_binary.exporter": [[289, "module-datumaro.plugins.data_formats.datumaro_binary.exporter"]], "datumaro.plugins.data_formats.datumaro_binary.format": [[290, "module-datumaro.plugins.data_formats.datumaro_binary.format"]], "datumaro.plugins.data_formats.datumaro_binary.importer": [[291, "module-datumaro.plugins.data_formats.datumaro_binary.importer"]], "datumaro.plugins.data_formats.datumaro_binary.mapper": [[292, "module-datumaro.plugins.data_formats.datumaro_binary.mapper"]], "datumaro.plugins.data_formats.datumaro_binary.mapper.annotation": [[293, "module-datumaro.plugins.data_formats.datumaro_binary.mapper.annotation"]], "datumaro.plugins.data_formats.datumaro_binary.mapper.common": [[294, "module-datumaro.plugins.data_formats.datumaro_binary.mapper.common"]], "datumaro.plugins.data_formats.datumaro_binary.mapper.dataset_item": [[295, "module-datumaro.plugins.data_formats.datumaro_binary.mapper.dataset_item"]], "datumaro.plugins.data_formats.datumaro_binary.mapper.media": [[296, "module-datumaro.plugins.data_formats.datumaro_binary.mapper.media"]], "datumaro.plugins.data_formats.dota": [[297, "module-datumaro.plugins.data_formats.dota"]], "datumaro.plugins.data_formats.icdar": [[298, "module-datumaro.plugins.data_formats.icdar"]], "datumaro.plugins.data_formats.icdar.base": [[299, "module-datumaro.plugins.data_formats.icdar.base"]], "datumaro.plugins.data_formats.icdar.exporter": [[300, "module-datumaro.plugins.data_formats.icdar.exporter"]], "datumaro.plugins.data_formats.icdar.format": [[301, "module-datumaro.plugins.data_formats.icdar.format"]], "datumaro.plugins.data_formats.image_dir": [[302, "module-datumaro.plugins.data_formats.image_dir"]], "datumaro.plugins.data_formats.image_zip": [[303, "module-datumaro.plugins.data_formats.image_zip"]], "datumaro.plugins.data_formats.imagenet": [[304, "module-datumaro.plugins.data_formats.imagenet"]], "datumaro.plugins.data_formats.imagenet_txt": [[305, "module-datumaro.plugins.data_formats.imagenet_txt"]], "datumaro.plugins.data_formats.kaggle": [[306, "module-datumaro.plugins.data_formats.kaggle"]], "datumaro.plugins.data_formats.kaggle.base": [[307, "module-datumaro.plugins.data_formats.kaggle.base"]], "datumaro.plugins.data_formats.kinetics": [[308, "module-datumaro.plugins.data_formats.kinetics"]], "datumaro.plugins.data_formats.kitti": [[309, "module-datumaro.plugins.data_formats.kitti"]], "datumaro.plugins.data_formats.kitti.base": [[310, "module-datumaro.plugins.data_formats.kitti.base"]], "datumaro.plugins.data_formats.kitti.exporter": [[311, "module-datumaro.plugins.data_formats.kitti.exporter"]], "datumaro.plugins.data_formats.kitti.format": [[312, "module-datumaro.plugins.data_formats.kitti.format"]], "datumaro.plugins.data_formats.kitti.importer": [[313, "module-datumaro.plugins.data_formats.kitti.importer"]], "datumaro.plugins.data_formats.kitti_raw": [[314, "module-datumaro.plugins.data_formats.kitti_raw"]], "datumaro.plugins.data_formats.kitti_raw.base": [[315, "module-datumaro.plugins.data_formats.kitti_raw.base"]], "datumaro.plugins.data_formats.kitti_raw.exporter": [[316, "module-datumaro.plugins.data_formats.kitti_raw.exporter"]], "datumaro.plugins.data_formats.kitti_raw.format": [[317, "module-datumaro.plugins.data_formats.kitti_raw.format"]], "datumaro.plugins.data_formats.labelme": [[318, "module-datumaro.plugins.data_formats.labelme"]], "datumaro.plugins.data_formats.lfw": [[319, "module-datumaro.plugins.data_formats.lfw"]], "datumaro.plugins.data_formats.mapillary_vistas": [[320, "module-datumaro.plugins.data_formats.mapillary_vistas"]], "datumaro.plugins.data_formats.mapillary_vistas.base": [[321, "module-datumaro.plugins.data_formats.mapillary_vistas.base"]], "datumaro.plugins.data_formats.mapillary_vistas.format": [[322, "module-datumaro.plugins.data_formats.mapillary_vistas.format"]], "datumaro.plugins.data_formats.mapillary_vistas.importer": [[323, "module-datumaro.plugins.data_formats.mapillary_vistas.importer"]], "datumaro.plugins.data_formats.market1501": [[324, "module-datumaro.plugins.data_formats.market1501"]], "datumaro.plugins.data_formats.mars": [[325, "module-datumaro.plugins.data_formats.mars"]], "datumaro.plugins.data_formats.mmdet": [[326, "module-datumaro.plugins.data_formats.mmdet"]], "datumaro.plugins.data_formats.mnist": [[327, "module-datumaro.plugins.data_formats.mnist"]], "datumaro.plugins.data_formats.mnist_csv": [[328, "module-datumaro.plugins.data_formats.mnist_csv"]], "datumaro.plugins.data_formats.mot": [[329, "module-datumaro.plugins.data_formats.mot"]], "datumaro.plugins.data_formats.mots": [[330, "module-datumaro.plugins.data_formats.mots"]], "datumaro.plugins.data_formats.mpii": [[331, "module-datumaro.plugins.data_formats.mpii"]], "datumaro.plugins.data_formats.mpii.format": [[332, "module-datumaro.plugins.data_formats.mpii.format"]], "datumaro.plugins.data_formats.mpii.mpii_json": [[333, "module-datumaro.plugins.data_formats.mpii.mpii_json"]], "datumaro.plugins.data_formats.mpii.mpii_mat": [[334, "module-datumaro.plugins.data_formats.mpii.mpii_mat"]], "datumaro.plugins.data_formats.mvtec": [[335, "module-datumaro.plugins.data_formats.mvtec"]], "datumaro.plugins.data_formats.mvtec.base": [[336, "module-datumaro.plugins.data_formats.mvtec.base"]], "datumaro.plugins.data_formats.mvtec.exporter": [[337, "module-datumaro.plugins.data_formats.mvtec.exporter"]], "datumaro.plugins.data_formats.mvtec.format": [[338, "module-datumaro.plugins.data_formats.mvtec.format"]], "datumaro.plugins.data_formats.mvtec.importer": [[339, "module-datumaro.plugins.data_formats.mvtec.importer"]], "datumaro.plugins.data_formats.nyu_depth_v2": [[340, "module-datumaro.plugins.data_formats.nyu_depth_v2"]], "datumaro.plugins.data_formats.open_images": [[341, "module-datumaro.plugins.data_formats.open_images"]], "datumaro.plugins.data_formats.roboflow": [[342, "module-datumaro.plugins.data_formats.roboflow"]], "datumaro.plugins.data_formats.roboflow.base": [[343, "module-datumaro.plugins.data_formats.roboflow.base"]], "datumaro.plugins.data_formats.roboflow.base_tfrecord": [[344, "module-datumaro.plugins.data_formats.roboflow.base_tfrecord"]], "datumaro.plugins.data_formats.roboflow.importer": [[345, "module-datumaro.plugins.data_formats.roboflow.importer"]], "datumaro.plugins.data_formats.segment_anything": [[346, "module-datumaro.plugins.data_formats.segment_anything"]], "datumaro.plugins.data_formats.segment_anything.base": [[347, "module-datumaro.plugins.data_formats.segment_anything.base"]], "datumaro.plugins.data_formats.segment_anything.exporter": [[348, "module-datumaro.plugins.data_formats.segment_anything.exporter"]], "datumaro.plugins.data_formats.segment_anything.importer": [[349, "module-datumaro.plugins.data_formats.segment_anything.importer"]], "datumaro.plugins.data_formats.sly_pointcloud": [[350, "module-datumaro.plugins.data_formats.sly_pointcloud"]], "datumaro.plugins.data_formats.sly_pointcloud.base": [[351, "module-datumaro.plugins.data_formats.sly_pointcloud.base"]], "datumaro.plugins.data_formats.sly_pointcloud.exporter": [[352, "module-datumaro.plugins.data_formats.sly_pointcloud.exporter"]], "datumaro.plugins.data_formats.sly_pointcloud.format": [[353, "module-datumaro.plugins.data_formats.sly_pointcloud.format"]], "datumaro.plugins.data_formats.synthia": [[354, "module-datumaro.plugins.data_formats.synthia"]], "datumaro.plugins.data_formats.synthia.base": [[355, "module-datumaro.plugins.data_formats.synthia.base"]], "datumaro.plugins.data_formats.synthia.format": [[356, "module-datumaro.plugins.data_formats.synthia.format"]], "datumaro.plugins.data_formats.synthia.importer": [[357, "module-datumaro.plugins.data_formats.synthia.importer"]], "datumaro.plugins.data_formats.tabular": [[358, "module-datumaro.plugins.data_formats.tabular"]], "datumaro.plugins.data_formats.tf_detection_api": [[359, "module-datumaro.plugins.data_formats.tf_detection_api"]], "datumaro.plugins.data_formats.tf_detection_api.base": [[360, "module-datumaro.plugins.data_formats.tf_detection_api.base"]], "datumaro.plugins.data_formats.tf_detection_api.exporter": [[361, "module-datumaro.plugins.data_formats.tf_detection_api.exporter"]], "datumaro.plugins.data_formats.tf_detection_api.format": [[362, "module-datumaro.plugins.data_formats.tf_detection_api.format"]], "datumaro.plugins.data_formats.vgg_face2": [[363, "module-datumaro.plugins.data_formats.vgg_face2"]], "datumaro.plugins.data_formats.video": [[364, "module-datumaro.plugins.data_formats.video"]], "datumaro.plugins.data_formats.voc": [[365, "module-datumaro.plugins.data_formats.voc"]], "datumaro.plugins.data_formats.voc.base": [[366, "module-datumaro.plugins.data_formats.voc.base"]], "datumaro.plugins.data_formats.voc.exporter": [[367, "module-datumaro.plugins.data_formats.voc.exporter"]], "datumaro.plugins.data_formats.voc.format": [[368, "module-datumaro.plugins.data_formats.voc.format"]], "datumaro.plugins.data_formats.voc.importer": [[369, "module-datumaro.plugins.data_formats.voc.importer"]], "datumaro.plugins.data_formats.vott_csv": [[370, "module-datumaro.plugins.data_formats.vott_csv"]], "datumaro.plugins.data_formats.vott_json": [[371, "module-datumaro.plugins.data_formats.vott_json"]], "datumaro.plugins.data_formats.widerface": [[372, "module-datumaro.plugins.data_formats.widerface"]], "datumaro.plugins.data_formats.yolo": [[373, "module-datumaro.plugins.data_formats.yolo"]], "datumaro.plugins.data_formats.yolo.base": [[374, "module-datumaro.plugins.data_formats.yolo.base"]], "datumaro.plugins.data_formats.yolo.exporter": [[375, "module-datumaro.plugins.data_formats.yolo.exporter"]], "datumaro.plugins.data_formats.yolo.format": [[376, "module-datumaro.plugins.data_formats.yolo.format"]], "datumaro.plugins.data_formats.yolo.importer": [[377, "module-datumaro.plugins.data_formats.yolo.importer"]], "datumaro.plugins.explorer": [[378, "module-datumaro.plugins.explorer"]], "datumaro.plugins.framework_converter": [[379, "module-datumaro.plugins.framework_converter"]], "datumaro.plugins.inference_server_plugin": [[380, "module-datumaro.plugins.inference_server_plugin"]], "datumaro.plugins.inference_server_plugin.base": [[381, "module-datumaro.plugins.inference_server_plugin.base"]], "datumaro.plugins.inference_server_plugin.ovms": [[382, "module-datumaro.plugins.inference_server_plugin.ovms"]], "datumaro.plugins.inference_server_plugin.samples": [[383, "module-datumaro.plugins.inference_server_plugin.samples"]], "datumaro.plugins.inference_server_plugin.samples.face_detection": [[384, "module-datumaro.plugins.inference_server_plugin.samples.face_detection"]], "datumaro.plugins.inference_server_plugin.triton": [[385, "module-datumaro.plugins.inference_server_plugin.triton"]], "datumaro.plugins.missing_annotation_detection": [[386, "module-datumaro.plugins.missing_annotation_detection"]], "datumaro.plugins.ndr": [[387, "module-datumaro.plugins.ndr"]], "datumaro.plugins.openvino_plugin": [[388, "module-datumaro.plugins.openvino_plugin"]], "datumaro.plugins.openvino_plugin.launcher": [[389, "module-datumaro.plugins.openvino_plugin.launcher"]], "datumaro.plugins.openvino_plugin.samples": [[390, "module-datumaro.plugins.openvino_plugin.samples"]], "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_atss_interp": [[391, "module-datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_atss_interp"]], "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_ssd_interp": [[392, "module-datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_ssd_interp"]], "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_yolox_interp": [[393, "module-datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_yolox_interp"]], "datumaro.plugins.openvino_plugin.samples.utils": [[394, "module-datumaro.plugins.openvino_plugin.samples.utils"]], "datumaro.plugins.openvino_plugin.shift_launcher": [[395, "module-datumaro.plugins.openvino_plugin.shift_launcher"]], "datumaro.plugins.sam_transforms": [[396, "module-datumaro.plugins.sam_transforms"]], "datumaro.plugins.sam_transforms.automatic_mask_gen": [[397, "module-datumaro.plugins.sam_transforms.automatic_mask_gen"]], "datumaro.plugins.sam_transforms.bbox_to_inst_mask": [[398, "module-datumaro.plugins.sam_transforms.bbox_to_inst_mask"]], "datumaro.plugins.sam_transforms.interpreters": [[399, "module-datumaro.plugins.sam_transforms.interpreters"]], "datumaro.plugins.sam_transforms.interpreters.sam_decoder_for_amg": [[400, "module-datumaro.plugins.sam_transforms.interpreters.sam_decoder_for_amg"]], "datumaro.plugins.sam_transforms.interpreters.sam_decoder_for_bbox": [[401, "module-datumaro.plugins.sam_transforms.interpreters.sam_decoder_for_bbox"]], "datumaro.plugins.sam_transforms.interpreters.sam_encoder": [[402, "module-datumaro.plugins.sam_transforms.interpreters.sam_encoder"]], "datumaro.plugins.sampler": [[403, "module-datumaro.plugins.sampler"]], "datumaro.plugins.sampler.algorithm": [[404, "module-datumaro.plugins.sampler.algorithm"]], "datumaro.plugins.sampler.algorithm.algorithm": [[405, "module-datumaro.plugins.sampler.algorithm.algorithm"]], "datumaro.plugins.sampler.algorithm.entropy": [[406, "module-datumaro.plugins.sampler.algorithm.entropy"]], "datumaro.plugins.sampler.random_sampler": [[407, "module-datumaro.plugins.sampler.random_sampler"]], "datumaro.plugins.sampler.relevancy_sampler": [[408, "module-datumaro.plugins.sampler.relevancy_sampler"]], "datumaro.plugins.specs": [[409, "module-datumaro.plugins.specs"]], "datumaro.plugins.splitter": [[410, "module-datumaro.plugins.splitter"]], "datumaro.plugins.synthetic_data": [[411, "module-datumaro.plugins.synthetic_data"]], "datumaro.plugins.synthetic_data.image_generator": [[412, "module-datumaro.plugins.synthetic_data.image_generator"]], "datumaro.plugins.synthetic_data.utils": [[413, "module-datumaro.plugins.synthetic_data.utils"]], "datumaro.plugins.tiling": [[414, "module-datumaro.plugins.tiling"]], "datumaro.plugins.tiling.merge_tile": [[415, "module-datumaro.plugins.tiling.merge_tile"]], "datumaro.plugins.tiling.tile": [[416, "module-datumaro.plugins.tiling.tile"]], "datumaro.plugins.tiling.util": [[417, "module-datumaro.plugins.tiling.util"]], "datumaro.plugins.transforms": [[418, "module-datumaro.plugins.transforms"]], "datumaro.plugins.validators": [[419, "module-datumaro.plugins.validators"]], "datumaro.project": [[420, "module-datumaro.project"]], "datumaro.rust_api": [[421, "module-datumaro.rust_api"]], "datumaro.util": [[422, "module-datumaro.util"]], "datumaro.util.annotation_util": [[423, "module-datumaro.util.annotation_util"]], "datumaro.util.attrs_util": [[424, "module-datumaro.util.attrs_util"]], "datumaro.util.definitions": [[425, "module-datumaro.util.definitions"]], "datumaro.util.file_utils": [[426, "module-datumaro.util.file_utils"]], "datumaro.util.image": [[427, "module-datumaro.util.image"]], "datumaro.util.image_cache": [[428, "module-datumaro.util.image_cache"]], "datumaro.util.import_util": [[429, "module-datumaro.util.import_util"]], "datumaro.util.log_utils": [[430, "module-datumaro.util.log_utils"]], "datumaro.util.mask_tools": [[431, "module-datumaro.util.mask_tools"]], "datumaro.util.meta_file_util": [[432, "module-datumaro.util.meta_file_util"]], "datumaro.util.multi_procs_util": [[433, "module-datumaro.util.multi_procs_util"]], "datumaro.util.os_util": [[434, "module-datumaro.util.os_util"]], "datumaro.util.pickle_util": [[435, "module-datumaro.util.pickle_util"]], "datumaro.util.samples": [[436, "module-datumaro.util.samples"]], "datumaro.util.scope": [[437, "module-datumaro.util.scope"]], "datumaro.util.tabular_util": [[438, "module-datumaro.util.tabular_util"]], "datumaro.util.telemetry_stub": [[439, "module-datumaro.util.telemetry_stub"]], "datumaro.util.telemetry_utils": [[440, "module-datumaro.util.telemetry_utils"]], "datumaro.util.tf_util": [[441, "module-datumaro.util.tf_util"]], "datumaro.version": [[442, "module-datumaro.version"]], "Datumaro Module": [[443, "datumaro-module"]], "Supported Plugins": [[444, "supported-plugins"]], "transform module": [[444, "transform-module"]], "Release Notes": [[445, "release-notes"]], "v1.8.0 (2024 Q3)": [[445, "v1-8-0-2024-q3"]], "New features": [[445, "new-features"], [445, "id1"], [445, "id5"], [445, "id11"], [445, "id15"], [445, "id21"], [445, "id25"], [445, "id28"], [445, "id31"]], "Enhancements": [[445, "enhancements"], [445, "id2"], [445, "id3"], [445, "id6"], [445, "id8"], [445, "id9"], [445, "id12"], [445, "id16"], [445, "id18"], [445, "id22"], [445, "id26"], [445, "id29"], [445, "id32"]], "Bug fixes": [[445, "bug-fixes"], [445, "id4"], [445, "id7"], [445, "id10"], [445, "id13"], [445, "id14"], [445, "id17"], [445, "id19"], [445, "id20"], [445, "id23"], [445, "id24"], [445, "id27"], [445, "id30"], [445, "id33"]], "v1.7.0 (2024 Q2)": [[445, "v1-7-0-2024-q2"]], "v1.6.1 (2024.05)": [[445, "v1-6-1-2024-05"]], "v1.6.0 (2024.04)": [[445, "v1-6-0-2024-04"]], "v1.5.2 (2024.01)": [[445, "v1-5-2-2024-01"]], "v1.5.1 (2023.11)": [[445, "v1-5-1-2023-11"]], "v1.5.0 (2023.09)": [[445, "v1-5-0-2023-09"]], "v1.4.1 (2023.07)": [[445, "v1-4-1-2023-07"]], "v1.4.0 (2023.07)": [[445, "v1-4-0-2023-07"]], "v1.3.2 (2023.06)": [[445, "v1-3-2-2023-06"]], "v1.3.1 (2023.05)": [[445, "v1-3-1-2023-05"]], "v1.3.0 (2023.05)": [[445, "v1-3-0-2023-05"]], "v1.2.1 (2023.05)": [[445, "v1-2-1-2023-05"]], "v1.2.0 (2023.04)": [[445, "v1-2-0-2023-04"]], "v1.1.0 (2023.03)": [[445, "v1-1-0-2023-03"]], "v1.0.0 (2023.02)": [[445, "v1-0-0-2023-02"]], "Extending": [[446, "extending"]], "Built-in plugins": [[446, "built-in-plugins"]], "TensorFlow": [[446, "tensorflow"]], "Accuracy Checker": [[446, "accuracy-checker"]], "OpenVINO\u2122": [[446, "openvino"]], "How to control telemetry data collection": [[447, "how-to-control-telemetry-data-collection"]], "How to use Datumaro": [[448, "how-to-use-datumaro"]], "Python Module Examples": [[448, "python-module-examples"]], "Command-line Examples": [[448, "command-line-examples"]], "Model Preparation": [[449, "model-preparation"]], "Welcome to Datumaro Documentation!": [[450, "welcome-to-datumaro-documentation"]], "Indices and tables": [[450, "indices-and-tables"]]}, "indexentries": {"datumaro": [[139, "module-datumaro"]], "module": [[139, "module-datumaro"], [140, "module-datumaro.cli"], [141, "module-datumaro.cli.commands"], [142, "module-datumaro.cli.commands.compare"], [143, "module-datumaro.cli.commands.convert"], [144, "module-datumaro.cli.commands.detect_format"], [145, "module-datumaro.cli.commands.download"], [146, "module-datumaro.cli.commands.downloaders"], [147, "module-datumaro.cli.commands.downloaders.downloader"], [148, "module-datumaro.cli.commands.downloaders.kaggle"], [149, "module-datumaro.cli.commands.downloaders.tfds"], [150, "module-datumaro.cli.commands.explain"], [151, "module-datumaro.cli.commands.explore"], [152, "module-datumaro.cli.commands.filter"], [153, "module-datumaro.cli.commands.generate"], [154, "module-datumaro.cli.commands.info"], [155, "module-datumaro.cli.commands.merge"], [156, "module-datumaro.cli.commands.patch"], [157, "module-datumaro.cli.commands.prune"], [158, "module-datumaro.cli.commands.require_project"], [159, "module-datumaro.cli.commands.require_project.modification"], [160, "module-datumaro.cli.commands.require_project.modification.add"], [161, "module-datumaro.cli.commands.require_project.modification.create"], [162, "module-datumaro.cli.commands.require_project.modification.export"], [163, "module-datumaro.cli.commands.require_project.modification.import_"], [164, "module-datumaro.cli.commands.require_project.modification.remove"], [165, "module-datumaro.cli.commands.require_project.versioning"], [166, "module-datumaro.cli.commands.require_project.versioning.checkout"], [167, "module-datumaro.cli.commands.require_project.versioning.commit"], [168, "module-datumaro.cli.commands.require_project.versioning.info"], [169, "module-datumaro.cli.commands.require_project.versioning.log"], [170, "module-datumaro.cli.commands.require_project.versioning.status"], [171, "module-datumaro.cli.commands.stats"], [172, "module-datumaro.cli.commands.transform"], [173, "module-datumaro.cli.commands.validate"], [174, "module-datumaro.cli.contexts"], [175, "module-datumaro.cli.contexts.model"], [176, "module-datumaro.cli.contexts.project"], [177, "module-datumaro.cli.contexts.source"], [178, "module-datumaro.cli.contexts.util"], [179, "module-datumaro.cli.helpers"], [180, "module-datumaro.cli.helpers.format"], [181, "module-datumaro.cli.util"], [182, "module-datumaro.cli.util.compare"], [183, "module-datumaro.cli.util.errors"], [184, "module-datumaro.cli.util.project"], [185, "module-datumaro.components"], [186, "module-datumaro.components.abstracts"], [187, "module-datumaro.components.abstracts.merger"], [188, "module-datumaro.components.abstracts.model_interpreter"], [189, "module-datumaro.components.algorithms"], [190, "module-datumaro.components.algorithms.hash_key_inference"], [191, "module-datumaro.components.algorithms.hash_key_inference.base"], [192, "module-datumaro.components.algorithms.hash_key_inference.explorer"], [193, "module-datumaro.components.algorithms.hash_key_inference.hashkey_util"], [194, "module-datumaro.components.algorithms.hash_key_inference.prune"], [195, "module-datumaro.components.algorithms.noisy_label_detection"], [196, "module-datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer"], [197, "module-datumaro.components.algorithms.rise"], [198, "module-datumaro.components.annotation"], [199, "module-datumaro.components.annotations"], [200, "module-datumaro.components.annotations.matcher"], [201, "module-datumaro.components.annotations.merger"], [202, "module-datumaro.components.cli_plugin"], [203, "module-datumaro.components.comparator"], [204, "module-datumaro.components.config"], [205, "module-datumaro.components.config_model"], [206, "module-datumaro.components.contexts"], [207, "module-datumaro.components.contexts.importer"], [208, "module-datumaro.components.crypter"], [209, "module-datumaro.components.dataset"], [210, "module-datumaro.components.dataset_base"], [211, "module-datumaro.components.dataset_item_storage"], [212, "module-datumaro.components.dataset_storage"], [213, "module-datumaro.components.environment"], [214, "module-datumaro.components.errors"], [215, "module-datumaro.components.exporter"], [216, "module-datumaro.components.extractor_tfds"], [217, "module-datumaro.components.filter"], [218, "module-datumaro.components.format_detection"], [219, "module-datumaro.components.generator"], [220, "module-datumaro.components.hl_ops"], [221, "module-datumaro.components.importer"], [222, "module-datumaro.components.launcher"], [223, "module-datumaro.components.lazy_plugin"], [224, "module-datumaro.components.media"], [225, "module-datumaro.components.merge"], [226, "module-datumaro.components.merge.base"], [227, "module-datumaro.components.merge.exact_merge"], [228, "module-datumaro.components.merge.extractor_merger"], [229, "module-datumaro.components.merge.intersect_merge"], [230, "module-datumaro.components.merge.union_merge"], [231, "module-datumaro.components.operations"], [232, "module-datumaro.components.progress_reporting"], [233, "module-datumaro.components.project"], [234, "module-datumaro.components.registry"], [235, "module-datumaro.components.shift_analyzer"], [236, "module-datumaro.components.transformer"], [237, "module-datumaro.components.validator"], [238, "module-datumaro.components.visualizer"], [239, "module-datumaro.errors"], [240, "module-datumaro.ops"], [241, "module-datumaro.plugins"], [242, "module-datumaro.plugins.accuracy_checker_plugin"], [243, "module-datumaro.plugins.accuracy_checker_plugin.details"], [244, "module-datumaro.plugins.anchor_generator"], [245, "module-datumaro.plugins.configurable_validator"], [246, "module-datumaro.plugins.data_formats"], [247, "module-datumaro.plugins.data_formats.ade20k2017"], [248, "module-datumaro.plugins.data_formats.ade20k2020"], [249, "module-datumaro.plugins.data_formats.arrow"], [250, "module-datumaro.plugins.data_formats.arrow.base"], [251, "module-datumaro.plugins.data_formats.arrow.exporter"], [252, "module-datumaro.plugins.data_formats.arrow.format"], [253, "module-datumaro.plugins.data_formats.arrow.importer"], [254, "module-datumaro.plugins.data_formats.arrow.mapper"], [255, "module-datumaro.plugins.data_formats.arrow.mapper.dataset_item"], [256, "module-datumaro.plugins.data_formats.arrow.mapper.media"], [257, "module-datumaro.plugins.data_formats.ava"], [258, "module-datumaro.plugins.data_formats.ava.ava"], [259, "module-datumaro.plugins.data_formats.ava.ava_label_pb2"], [260, "module-datumaro.plugins.data_formats.brats"], [261, "module-datumaro.plugins.data_formats.brats_numpy"], [262, "module-datumaro.plugins.data_formats.camvid"], [263, "module-datumaro.plugins.data_formats.celeba"], [264, "module-datumaro.plugins.data_formats.celeba.align_celeba"], [265, "module-datumaro.plugins.data_formats.celeba.celeba"], [266, "module-datumaro.plugins.data_formats.cifar"], [267, "module-datumaro.plugins.data_formats.cityscapes"], [268, "module-datumaro.plugins.data_formats.coco"], [269, "module-datumaro.plugins.data_formats.coco.base"], [270, "module-datumaro.plugins.data_formats.coco.exporter"], [271, "module-datumaro.plugins.data_formats.coco.extractor_merger"], [272, "module-datumaro.plugins.data_formats.coco.format"], [273, "module-datumaro.plugins.data_formats.coco.importer"], [274, "module-datumaro.plugins.data_formats.coco.page_mapper"], [275, "module-datumaro.plugins.data_formats.common_semantic_segmentation"], [276, "module-datumaro.plugins.data_formats.common_super_resolution"], [277, "module-datumaro.plugins.data_formats.cvat"], [278, "module-datumaro.plugins.data_formats.cvat.base"], [279, "module-datumaro.plugins.data_formats.cvat.exporter"], [280, "module-datumaro.plugins.data_formats.cvat.format"], [281, "module-datumaro.plugins.data_formats.datumaro"], [282, "module-datumaro.plugins.data_formats.datumaro.base"], [283, "module-datumaro.plugins.data_formats.datumaro.exporter"], [284, "module-datumaro.plugins.data_formats.datumaro.format"], [285, "module-datumaro.plugins.data_formats.datumaro.importer"], [286, "module-datumaro.plugins.data_formats.datumaro.page_mapper"], [287, "module-datumaro.plugins.data_formats.datumaro_binary"], [288, "module-datumaro.plugins.data_formats.datumaro_binary.base"], [289, "module-datumaro.plugins.data_formats.datumaro_binary.exporter"], [290, "module-datumaro.plugins.data_formats.datumaro_binary.format"], [291, "module-datumaro.plugins.data_formats.datumaro_binary.importer"], [292, "module-datumaro.plugins.data_formats.datumaro_binary.mapper"], [293, "module-datumaro.plugins.data_formats.datumaro_binary.mapper.annotation"], [294, "module-datumaro.plugins.data_formats.datumaro_binary.mapper.common"], [295, "module-datumaro.plugins.data_formats.datumaro_binary.mapper.dataset_item"], [296, "module-datumaro.plugins.data_formats.datumaro_binary.mapper.media"], [297, "module-datumaro.plugins.data_formats.dota"], [298, "module-datumaro.plugins.data_formats.icdar"], [299, "module-datumaro.plugins.data_formats.icdar.base"], [300, "module-datumaro.plugins.data_formats.icdar.exporter"], [301, "module-datumaro.plugins.data_formats.icdar.format"], [302, "module-datumaro.plugins.data_formats.image_dir"], [303, "module-datumaro.plugins.data_formats.image_zip"], [304, "module-datumaro.plugins.data_formats.imagenet"], [305, "module-datumaro.plugins.data_formats.imagenet_txt"], [306, "module-datumaro.plugins.data_formats.kaggle"], [307, "module-datumaro.plugins.data_formats.kaggle.base"], [308, "module-datumaro.plugins.data_formats.kinetics"], [309, "module-datumaro.plugins.data_formats.kitti"], [310, "module-datumaro.plugins.data_formats.kitti.base"], [311, "module-datumaro.plugins.data_formats.kitti.exporter"], [312, "module-datumaro.plugins.data_formats.kitti.format"], [313, "module-datumaro.plugins.data_formats.kitti.importer"], [314, "module-datumaro.plugins.data_formats.kitti_raw"], [315, "module-datumaro.plugins.data_formats.kitti_raw.base"], [316, "module-datumaro.plugins.data_formats.kitti_raw.exporter"], [317, "module-datumaro.plugins.data_formats.kitti_raw.format"], [318, "module-datumaro.plugins.data_formats.labelme"], [319, "module-datumaro.plugins.data_formats.lfw"], [320, "module-datumaro.plugins.data_formats.mapillary_vistas"], [321, "module-datumaro.plugins.data_formats.mapillary_vistas.base"], [322, "module-datumaro.plugins.data_formats.mapillary_vistas.format"], [323, "module-datumaro.plugins.data_formats.mapillary_vistas.importer"], [324, "module-datumaro.plugins.data_formats.market1501"], [325, "module-datumaro.plugins.data_formats.mars"], [326, "module-datumaro.plugins.data_formats.mmdet"], [327, "module-datumaro.plugins.data_formats.mnist"], [328, "module-datumaro.plugins.data_formats.mnist_csv"], [329, "module-datumaro.plugins.data_formats.mot"], [330, "module-datumaro.plugins.data_formats.mots"], [331, "module-datumaro.plugins.data_formats.mpii"], [332, "module-datumaro.plugins.data_formats.mpii.format"], [333, "module-datumaro.plugins.data_formats.mpii.mpii_json"], [334, "module-datumaro.plugins.data_formats.mpii.mpii_mat"], [335, "module-datumaro.plugins.data_formats.mvtec"], [336, "module-datumaro.plugins.data_formats.mvtec.base"], [337, "module-datumaro.plugins.data_formats.mvtec.exporter"], [338, "module-datumaro.plugins.data_formats.mvtec.format"], [339, "module-datumaro.plugins.data_formats.mvtec.importer"], [340, "module-datumaro.plugins.data_formats.nyu_depth_v2"], [341, "module-datumaro.plugins.data_formats.open_images"], [342, "module-datumaro.plugins.data_formats.roboflow"], [343, "module-datumaro.plugins.data_formats.roboflow.base"], [344, "module-datumaro.plugins.data_formats.roboflow.base_tfrecord"], [345, "module-datumaro.plugins.data_formats.roboflow.importer"], [346, "module-datumaro.plugins.data_formats.segment_anything"], [347, "module-datumaro.plugins.data_formats.segment_anything.base"], [348, "module-datumaro.plugins.data_formats.segment_anything.exporter"], [349, "module-datumaro.plugins.data_formats.segment_anything.importer"], [350, "module-datumaro.plugins.data_formats.sly_pointcloud"], [351, "module-datumaro.plugins.data_formats.sly_pointcloud.base"], [352, "module-datumaro.plugins.data_formats.sly_pointcloud.exporter"], [353, "module-datumaro.plugins.data_formats.sly_pointcloud.format"], [354, "module-datumaro.plugins.data_formats.synthia"], [355, "module-datumaro.plugins.data_formats.synthia.base"], [356, "module-datumaro.plugins.data_formats.synthia.format"], [357, "module-datumaro.plugins.data_formats.synthia.importer"], [358, "module-datumaro.plugins.data_formats.tabular"], [359, "module-datumaro.plugins.data_formats.tf_detection_api"], [360, "module-datumaro.plugins.data_formats.tf_detection_api.base"], [361, "module-datumaro.plugins.data_formats.tf_detection_api.exporter"], [362, "module-datumaro.plugins.data_formats.tf_detection_api.format"], [363, "module-datumaro.plugins.data_formats.vgg_face2"], [364, "module-datumaro.plugins.data_formats.video"], [365, "module-datumaro.plugins.data_formats.voc"], [366, "module-datumaro.plugins.data_formats.voc.base"], [367, "module-datumaro.plugins.data_formats.voc.exporter"], [368, "module-datumaro.plugins.data_formats.voc.format"], [369, "module-datumaro.plugins.data_formats.voc.importer"], [370, "module-datumaro.plugins.data_formats.vott_csv"], [371, "module-datumaro.plugins.data_formats.vott_json"], [372, "module-datumaro.plugins.data_formats.widerface"], [373, "module-datumaro.plugins.data_formats.yolo"], [374, "module-datumaro.plugins.data_formats.yolo.base"], [375, "module-datumaro.plugins.data_formats.yolo.exporter"], [376, "module-datumaro.plugins.data_formats.yolo.format"], [377, "module-datumaro.plugins.data_formats.yolo.importer"], [378, "module-datumaro.plugins.explorer"], [379, "module-datumaro.plugins.framework_converter"], [380, "module-datumaro.plugins.inference_server_plugin"], [381, "module-datumaro.plugins.inference_server_plugin.base"], [382, "module-datumaro.plugins.inference_server_plugin.ovms"], [383, "module-datumaro.plugins.inference_server_plugin.samples"], [384, "module-datumaro.plugins.inference_server_plugin.samples.face_detection"], [385, "module-datumaro.plugins.inference_server_plugin.triton"], [386, "module-datumaro.plugins.missing_annotation_detection"], [387, "module-datumaro.plugins.ndr"], [388, "module-datumaro.plugins.openvino_plugin"], [389, "module-datumaro.plugins.openvino_plugin.launcher"], [390, "module-datumaro.plugins.openvino_plugin.samples"], [391, "module-datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_atss_interp"], [392, "module-datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_ssd_interp"], [393, "module-datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_yolox_interp"], [394, "module-datumaro.plugins.openvino_plugin.samples.utils"], [395, "module-datumaro.plugins.openvino_plugin.shift_launcher"], [396, "module-datumaro.plugins.sam_transforms"], [397, "module-datumaro.plugins.sam_transforms.automatic_mask_gen"], [398, "module-datumaro.plugins.sam_transforms.bbox_to_inst_mask"], [399, "module-datumaro.plugins.sam_transforms.interpreters"], [400, "module-datumaro.plugins.sam_transforms.interpreters.sam_decoder_for_amg"], [401, "module-datumaro.plugins.sam_transforms.interpreters.sam_decoder_for_bbox"], [402, "module-datumaro.plugins.sam_transforms.interpreters.sam_encoder"], [403, "module-datumaro.plugins.sampler"], [404, "module-datumaro.plugins.sampler.algorithm"], [405, "module-datumaro.plugins.sampler.algorithm.algorithm"], [406, "module-datumaro.plugins.sampler.algorithm.entropy"], [407, "module-datumaro.plugins.sampler.random_sampler"], [408, "module-datumaro.plugins.sampler.relevancy_sampler"], [409, "module-datumaro.plugins.specs"], [410, "module-datumaro.plugins.splitter"], [411, "module-datumaro.plugins.synthetic_data"], [412, "module-datumaro.plugins.synthetic_data.image_generator"], [413, "module-datumaro.plugins.synthetic_data.utils"], [414, "module-datumaro.plugins.tiling"], [415, "module-datumaro.plugins.tiling.merge_tile"], [416, "module-datumaro.plugins.tiling.tile"], [417, "module-datumaro.plugins.tiling.util"], [418, "module-datumaro.plugins.transforms"], [419, "module-datumaro.plugins.validators"], [420, "module-datumaro.project"], [421, "module-datumaro.rust_api"], [422, "module-datumaro.util"], [423, "module-datumaro.util.annotation_util"], [424, "module-datumaro.util.attrs_util"], [425, "module-datumaro.util.definitions"], [426, "module-datumaro.util.file_utils"], [427, "module-datumaro.util.image"], [428, "module-datumaro.util.image_cache"], [429, "module-datumaro.util.import_util"], [430, "module-datumaro.util.log_utils"], [431, "module-datumaro.util.mask_tools"], [432, "module-datumaro.util.meta_file_util"], [433, "module-datumaro.util.multi_procs_util"], [434, "module-datumaro.util.os_util"], [435, "module-datumaro.util.pickle_util"], [436, "module-datumaro.util.samples"], [437, "module-datumaro.util.scope"], [438, "module-datumaro.util.tabular_util"], [439, "module-datumaro.util.telemetry_stub"], [440, "module-datumaro.util.telemetry_utils"], [441, "module-datumaro.util.tf_util"], [442, "module-datumaro.version"]], "datumaro.cli": [[140, "module-datumaro.cli"]], "datumaro.cli.commands": [[141, "module-datumaro.cli.commands"]], "get_non_project_commands() (in module datumaro.cli.commands)": [[141, "datumaro.cli.commands.get_non_project_commands"]], "get_project_commands() (in module datumaro.cli.commands)": [[141, "datumaro.cli.commands.get_project_commands"]], "comparisonmethod (class in datumaro.cli.commands.compare)": [[142, "datumaro.cli.commands.compare.ComparisonMethod"]], "build_parser() (in module datumaro.cli.commands.compare)": [[142, "datumaro.cli.commands.compare.build_parser"]], "compare_command() (in module datumaro.cli.commands.compare)": [[142, "datumaro.cli.commands.compare.compare_command"]], "datumaro.cli.commands.compare": [[142, "module-datumaro.cli.commands.compare"]], "distance (datumaro.cli.commands.compare.comparisonmethod attribute)": [[142, "datumaro.cli.commands.compare.ComparisonMethod.distance"]], "equality (datumaro.cli.commands.compare.comparisonmethod attribute)": [[142, "datumaro.cli.commands.compare.ComparisonMethod.equality"]], "get_sensitive_args() (in module datumaro.cli.commands.compare)": [[142, "datumaro.cli.commands.compare.get_sensitive_args"]], "table (datumaro.cli.commands.compare.comparisonmethod attribute)": [[142, "datumaro.cli.commands.compare.ComparisonMethod.table"]], "build_parser() (in module datumaro.cli.commands.convert)": [[143, "datumaro.cli.commands.convert.build_parser"]], "convert_command() (in module datumaro.cli.commands.convert)": [[143, "datumaro.cli.commands.convert.convert_command"]], "datumaro.cli.commands.convert": [[143, "module-datumaro.cli.commands.convert"]], "get_sensitive_args() (in module datumaro.cli.commands.convert)": [[143, "datumaro.cli.commands.convert.get_sensitive_args"]], "build_parser() (in module datumaro.cli.commands.detect_format)": [[144, "datumaro.cli.commands.detect_format.build_parser"]], "datumaro.cli.commands.detect_format": [[144, "module-datumaro.cli.commands.detect_format"]], "detect_format_command() (in module datumaro.cli.commands.detect_format)": [[144, "datumaro.cli.commands.detect_format.detect_format_command"]], "get_sensitive_args() (in module datumaro.cli.commands.detect_format)": [[144, "datumaro.cli.commands.detect_format.get_sensitive_args"]], "build_describe_subparser() (in module datumaro.cli.commands.download)": [[145, "datumaro.cli.commands.download.build_describe_subparser"]], "build_get_subparser() (in module datumaro.cli.commands.download)": [[145, "datumaro.cli.commands.download.build_get_subparser"]], "build_parser() (in module datumaro.cli.commands.download)": [[145, "datumaro.cli.commands.download.build_parser"]], "datumaro.cli.commands.download": [[145, "module-datumaro.cli.commands.download"]], "describe_downloads_command() (in module datumaro.cli.commands.download)": [[145, "datumaro.cli.commands.download.describe_downloads_command"]], "download_command() (in module datumaro.cli.commands.download)": [[145, "datumaro.cli.commands.download.download_command"]], "get_sensitive_args() (in module datumaro.cli.commands.download)": [[145, "datumaro.cli.commands.download.get_sensitive_args"]], "datumaro.cli.commands.downloaders": [[146, "module-datumaro.cli.commands.downloaders"]], "idatasetdownloader (class in datumaro.cli.commands.downloaders.downloader)": [[147, "datumaro.cli.commands.downloaders.downloader.IDatasetDownloader"]], "datumaro.cli.commands.downloaders.downloader": [[147, "module-datumaro.cli.commands.downloaders.downloader"]], "describe() (datumaro.cli.commands.downloaders.downloader.idatasetdownloader class method)": [[147, "datumaro.cli.commands.downloaders.downloader.IDatasetDownloader.describe"]], "describe_command_description() (datumaro.cli.commands.downloaders.downloader.idatasetdownloader class method)": [[147, "datumaro.cli.commands.downloaders.downloader.IDatasetDownloader.describe_command_description"]], "download() (datumaro.cli.commands.downloaders.downloader.idatasetdownloader class method)": [[147, "datumaro.cli.commands.downloaders.downloader.IDatasetDownloader.download"]], "get_command_description() (datumaro.cli.commands.downloaders.downloader.idatasetdownloader class method)": [[147, "datumaro.cli.commands.downloaders.downloader.IDatasetDownloader.get_command_description"]], "kaggledatasetdownloader (class in datumaro.cli.commands.downloaders.kaggle)": [[148, "datumaro.cli.commands.downloaders.kaggle.KaggleDatasetDownloader"]], "datumaro.cli.commands.downloaders.kaggle": [[148, "module-datumaro.cli.commands.downloaders.kaggle"]], "describe() (datumaro.cli.commands.downloaders.kaggle.kaggledatasetdownloader class method)": [[148, "datumaro.cli.commands.downloaders.kaggle.KaggleDatasetDownloader.describe"]], "describe_command_description() (datumaro.cli.commands.downloaders.kaggle.kaggledatasetdownloader class method)": [[148, "datumaro.cli.commands.downloaders.kaggle.KaggleDatasetDownloader.describe_command_description"]], "download() (datumaro.cli.commands.downloaders.kaggle.kaggledatasetdownloader class method)": [[148, "datumaro.cli.commands.downloaders.kaggle.KaggleDatasetDownloader.download"]], "get_command_description() (datumaro.cli.commands.downloaders.kaggle.kaggledatasetdownloader class method)": [[148, "datumaro.cli.commands.downloaders.kaggle.KaggleDatasetDownloader.get_command_description"]], "make_all_paths_absolute() (in module datumaro.cli.commands.downloaders.kaggle)": [[148, "datumaro.cli.commands.downloaders.kaggle.make_all_paths_absolute"]], "tfdsdatasetdownloader (class in datumaro.cli.commands.downloaders.tfds)": [[149, "datumaro.cli.commands.downloaders.tfds.TfdsDatasetDownloader"]], "datumaro.cli.commands.downloaders.tfds": [[149, "module-datumaro.cli.commands.downloaders.tfds"]], "describe() (datumaro.cli.commands.downloaders.tfds.tfdsdatasetdownloader class method)": [[149, "datumaro.cli.commands.downloaders.tfds.TfdsDatasetDownloader.describe"]], "describe_command_description() (datumaro.cli.commands.downloaders.tfds.tfdsdatasetdownloader class method)": [[149, "datumaro.cli.commands.downloaders.tfds.TfdsDatasetDownloader.describe_command_description"]], "download() (datumaro.cli.commands.downloaders.tfds.tfdsdatasetdownloader class method)": [[149, "datumaro.cli.commands.downloaders.tfds.TfdsDatasetDownloader.download"]], "get_command_description() (datumaro.cli.commands.downloaders.tfds.tfdsdatasetdownloader class method)": [[149, "datumaro.cli.commands.downloaders.tfds.TfdsDatasetDownloader.get_command_description"]], "get_extractor() (datumaro.cli.commands.downloaders.tfds.tfdsdatasetdownloader class method)": [[149, "datumaro.cli.commands.downloaders.tfds.TfdsDatasetDownloader.get_extractor"]], "build_parser() (in module datumaro.cli.commands.explain)": [[150, "datumaro.cli.commands.explain.build_parser"]], "datumaro.cli.commands.explain": [[150, "module-datumaro.cli.commands.explain"]], "explain_command() (in module datumaro.cli.commands.explain)": [[150, "datumaro.cli.commands.explain.explain_command"]], "get_sensitive_args() (in module datumaro.cli.commands.explain)": [[150, "datumaro.cli.commands.explain.get_sensitive_args"]], "build_parser() (in module datumaro.cli.commands.explore)": [[151, "datumaro.cli.commands.explore.build_parser"]], "datumaro.cli.commands.explore": [[151, "module-datumaro.cli.commands.explore"]], "explore_command() (in module datumaro.cli.commands.explore)": [[151, "datumaro.cli.commands.explore.explore_command"]], "get_sensitive_args() (in module datumaro.cli.commands.explore)": [[151, "datumaro.cli.commands.explore.get_sensitive_args"]], "build_parser() (in module datumaro.cli.commands.filter)": [[152, "datumaro.cli.commands.filter.build_parser"]], "datumaro.cli.commands.filter": [[152, "module-datumaro.cli.commands.filter"]], "filter_command() (in module datumaro.cli.commands.filter)": [[152, "datumaro.cli.commands.filter.filter_command"]], "get_sensitive_args() (in module datumaro.cli.commands.filter)": [[152, "datumaro.cli.commands.filter.get_sensitive_args"]], "build_parser() (in module datumaro.cli.commands.generate)": [[153, "datumaro.cli.commands.generate.build_parser"]], "datumaro.cli.commands.generate": [[153, "module-datumaro.cli.commands.generate"]], "generate_command() (in module datumaro.cli.commands.generate)": [[153, "datumaro.cli.commands.generate.generate_command"]], "get_sensitive_args() (in module datumaro.cli.commands.generate)": [[153, "datumaro.cli.commands.generate.get_sensitive_args"]], "build_parser() (in module datumaro.cli.commands.info)": [[154, "datumaro.cli.commands.info.build_parser"]], "datumaro.cli.commands.info": [[154, "module-datumaro.cli.commands.info"]], "get_sensitive_args() (in module datumaro.cli.commands.info)": [[154, "datumaro.cli.commands.info.get_sensitive_args"]], "info_command() (in module datumaro.cli.commands.info)": [[154, "datumaro.cli.commands.info.info_command"]], "build_parser() (in module datumaro.cli.commands.merge)": [[155, "datumaro.cli.commands.merge.build_parser"]], "datumaro.cli.commands.merge": [[155, "module-datumaro.cli.commands.merge"]], "get_sensitive_args() (in module datumaro.cli.commands.merge)": [[155, "datumaro.cli.commands.merge.get_sensitive_args"]], "merge_command() (in module datumaro.cli.commands.merge)": [[155, "datumaro.cli.commands.merge.merge_command"]], "build_parser() (in module datumaro.cli.commands.patch)": [[156, "datumaro.cli.commands.patch.build_parser"]], "datumaro.cli.commands.patch": [[156, "module-datumaro.cli.commands.patch"]], "get_sensitive_args() (in module datumaro.cli.commands.patch)": [[156, "datumaro.cli.commands.patch.get_sensitive_args"]], "patch_command() (in module datumaro.cli.commands.patch)": [[156, "datumaro.cli.commands.patch.patch_command"]], "build_parser() (in module datumaro.cli.commands.prune)": [[157, "datumaro.cli.commands.prune.build_parser"]], "datumaro.cli.commands.prune": [[157, "module-datumaro.cli.commands.prune"]], "get_sensitive_args() (in module datumaro.cli.commands.prune)": [[157, "datumaro.cli.commands.prune.get_sensitive_args"]], "prune_command() (in module datumaro.cli.commands.prune)": [[157, "datumaro.cli.commands.prune.prune_command"]], "datumaro.cli.commands.require_project": [[158, "module-datumaro.cli.commands.require_project"]], "get_project_commands() (in module datumaro.cli.commands.require_project)": [[158, "datumaro.cli.commands.require_project.get_project_commands"]], "datumaro.cli.commands.require_project.modification": [[159, "module-datumaro.cli.commands.require_project.modification"]], "cliexception": [[160, "datumaro.cli.commands.require_project.modification.add.CliException"], [162, "datumaro.cli.commands.require_project.modification.export.CliException"], [163, "datumaro.cli.commands.require_project.modification.import_.CliException"], [164, "datumaro.cli.commands.require_project.modification.remove.CliException"], [171, "datumaro.cli.commands.stats.CliException"], [183, "datumaro.cli.util.errors.CliException"]], "multilineformatter (class in datumaro.cli.commands.require_project.modification.add)": [[160, "datumaro.cli.commands.require_project.modification.add.MultilineFormatter"]], "projectnotfounderror": [[160, "datumaro.cli.commands.require_project.modification.add.ProjectNotFoundError"], [162, "datumaro.cli.commands.require_project.modification.export.ProjectNotFoundError"], [163, "datumaro.cli.commands.require_project.modification.import_.ProjectNotFoundError"], [171, "datumaro.cli.commands.stats.ProjectNotFoundError"], [214, "datumaro.components.errors.ProjectNotFoundError"]], "add_command() (in module datumaro.cli.commands.require_project.modification.add)": [[160, "datumaro.cli.commands.require_project.modification.add.add_command"]], "build_parser() (in module datumaro.cli.commands.require_project.modification.add)": [[160, "datumaro.cli.commands.require_project.modification.add.build_parser"]], "datumaro.cli.commands.require_project.modification.add": [[160, "module-datumaro.cli.commands.require_project.modification.add"]], "get_sensitive_args() (in module datumaro.cli.commands.require_project.modification.add)": [[160, "datumaro.cli.commands.require_project.modification.add.get_sensitive_args"]], "join_cli_args() (in module datumaro.cli.commands.require_project.modification.add)": [[160, "datumaro.cli.commands.require_project.modification.add.join_cli_args"]], "load_project() (in module datumaro.cli.commands.require_project.modification.add)": [[160, "datumaro.cli.commands.require_project.modification.add.load_project"]], "on_error_do() (in module datumaro.cli.commands.require_project.modification.add)": [[160, "datumaro.cli.commands.require_project.modification.add.on_error_do"]], "path (datumaro.cli.commands.require_project.modification.add.projectnotfounderror attribute)": [[160, "datumaro.cli.commands.require_project.modification.add.ProjectNotFoundError.path"]], "scope_add() (in module datumaro.cli.commands.require_project.modification.add)": [[160, "datumaro.cli.commands.require_project.modification.add.scope_add"]], "scoped() (in module datumaro.cli.commands.require_project.modification.add)": [[160, "datumaro.cli.commands.require_project.modification.add.scoped"]], "show_video_import_warning() (in module datumaro.cli.commands.require_project.modification.add)": [[160, "datumaro.cli.commands.require_project.modification.add.show_video_import_warning"]], "build_parser() (in module datumaro.cli.commands.require_project.modification.create)": [[161, "datumaro.cli.commands.require_project.modification.create.build_parser"]], "create_command() (in module datumaro.cli.commands.require_project.modification.create)": [[161, "datumaro.cli.commands.require_project.modification.create.create_command"]], "datumaro.cli.commands.require_project.modification.create": [[161, "module-datumaro.cli.commands.require_project.modification.create"]], "get_sensitive_args() (in module datumaro.cli.commands.require_project.modification.create)": [[161, "datumaro.cli.commands.require_project.modification.create.get_sensitive_args"]], "base_stage (datumaro.cli.commands.require_project.modification.export.projectbuildtargets attribute)": [[162, "datumaro.cli.commands.require_project.modification.export.ProjectBuildTargets.BASE_STAGE"]], "filtermodes (class in datumaro.cli.commands.require_project.modification.export)": [[162, "datumaro.cli.commands.require_project.modification.export.FilterModes"]], "main_target (datumaro.cli.commands.require_project.modification.export.projectbuildtargets attribute)": [[162, "datumaro.cli.commands.require_project.modification.export.ProjectBuildTargets.MAIN_TARGET"]], "multilineformatter (class in datumaro.cli.commands.require_project.modification.export)": [[162, "datumaro.cli.commands.require_project.modification.export.MultilineFormatter"]], "projectbuildtargets (class in datumaro.cli.commands.require_project.modification.export)": [[162, "datumaro.cli.commands.require_project.modification.export.ProjectBuildTargets"]], "a (datumaro.cli.commands.require_project.modification.export.filtermodes attribute)": [[162, "datumaro.cli.commands.require_project.modification.export.FilterModes.a"]], "a_i (datumaro.cli.commands.require_project.modification.export.filtermodes attribute)": [[162, "datumaro.cli.commands.require_project.modification.export.FilterModes.a_i"]], "add_convert_stage() (datumaro.cli.commands.require_project.modification.export.projectbuildtargets method)": [[162, "datumaro.cli.commands.require_project.modification.export.ProjectBuildTargets.add_convert_stage"]], "add_explore_stage() (datumaro.cli.commands.require_project.modification.export.projectbuildtargets method)": [[162, "datumaro.cli.commands.require_project.modification.export.ProjectBuildTargets.add_explore_stage"]], "add_filter_stage() (datumaro.cli.commands.require_project.modification.export.projectbuildtargets method)": [[162, "datumaro.cli.commands.require_project.modification.export.ProjectBuildTargets.add_filter_stage"]], "add_inference_stage() (datumaro.cli.commands.require_project.modification.export.projectbuildtargets method)": [[162, "datumaro.cli.commands.require_project.modification.export.ProjectBuildTargets.add_inference_stage"]], "add_stage() (datumaro.cli.commands.require_project.modification.export.projectbuildtargets method)": [[162, "datumaro.cli.commands.require_project.modification.export.ProjectBuildTargets.add_stage"]], "add_target() (datumaro.cli.commands.require_project.modification.export.projectbuildtargets method)": [[162, "datumaro.cli.commands.require_project.modification.export.ProjectBuildTargets.add_target"]], "add_transform_stage() (datumaro.cli.commands.require_project.modification.export.projectbuildtargets method)": [[162, "datumaro.cli.commands.require_project.modification.export.ProjectBuildTargets.add_transform_stage"]], "annotations (datumaro.cli.commands.require_project.modification.export.filtermodes attribute)": [[162, "datumaro.cli.commands.require_project.modification.export.FilterModes.annotations"]], "annotations_items (datumaro.cli.commands.require_project.modification.export.filtermodes attribute)": [[162, "datumaro.cli.commands.require_project.modification.export.FilterModes.annotations_items"]], "build_parser() (in module datumaro.cli.commands.require_project.modification.export)": [[162, "datumaro.cli.commands.require_project.modification.export.build_parser"]], "datumaro.cli.commands.require_project.modification.export": [[162, "module-datumaro.cli.commands.require_project.modification.export"]], "export_command() (in module datumaro.cli.commands.require_project.modification.export)": [[162, "datumaro.cli.commands.require_project.modification.export.export_command"]], "generate_next_file_name() (in module datumaro.cli.commands.require_project.modification.export)": [[162, "datumaro.cli.commands.require_project.modification.export.generate_next_file_name"]], "get_sensitive_args() (in module datumaro.cli.commands.require_project.modification.export)": [[162, "datumaro.cli.commands.require_project.modification.export.get_sensitive_args"]], "i (datumaro.cli.commands.require_project.modification.export.filtermodes attribute)": [[162, "datumaro.cli.commands.require_project.modification.export.FilterModes.i"]], "i_a (datumaro.cli.commands.require_project.modification.export.filtermodes attribute)": [[162, "datumaro.cli.commands.require_project.modification.export.FilterModes.i_a"]], "items (datumaro.cli.commands.require_project.modification.export.filtermodes attribute)": [[162, "datumaro.cli.commands.require_project.modification.export.FilterModes.items"]], "items_annotations (datumaro.cli.commands.require_project.modification.export.filtermodes attribute)": [[162, "datumaro.cli.commands.require_project.modification.export.FilterModes.items_annotations"]], "list_options() (datumaro.cli.commands.require_project.modification.export.filtermodes class method)": [[162, "datumaro.cli.commands.require_project.modification.export.FilterModes.list_options"]], "load_project() (in module datumaro.cli.commands.require_project.modification.export)": [[162, "datumaro.cli.commands.require_project.modification.export.load_project"]], "make_file_name() (in module datumaro.cli.commands.require_project.modification.export)": [[162, "datumaro.cli.commands.require_project.modification.export.make_file_name"]], "make_filter_args() (datumaro.cli.commands.require_project.modification.export.filtermodes class method)": [[162, "datumaro.cli.commands.require_project.modification.export.FilterModes.make_filter_args"]], "make_pipeline() (datumaro.cli.commands.require_project.modification.export.projectbuildtargets method)": [[162, "datumaro.cli.commands.require_project.modification.export.ProjectBuildTargets.make_pipeline"]], "make_target_name() (datumaro.cli.commands.require_project.modification.export.projectbuildtargets static method)": [[162, "datumaro.cli.commands.require_project.modification.export.ProjectBuildTargets.make_target_name"]], "parse() (datumaro.cli.commands.require_project.modification.export.filtermodes static method)": [[162, "datumaro.cli.commands.require_project.modification.export.FilterModes.parse"]], "path (datumaro.cli.commands.require_project.modification.export.projectnotfounderror attribute)": [[162, "datumaro.cli.commands.require_project.modification.export.ProjectNotFoundError.path"]], "remove_stage() (datumaro.cli.commands.require_project.modification.export.projectbuildtargets method)": [[162, "datumaro.cli.commands.require_project.modification.export.ProjectBuildTargets.remove_stage"]], "remove_target() (datumaro.cli.commands.require_project.modification.export.projectbuildtargets method)": [[162, "datumaro.cli.commands.require_project.modification.export.ProjectBuildTargets.remove_target"]], "scope_add() (in module datumaro.cli.commands.require_project.modification.export)": [[162, "datumaro.cli.commands.require_project.modification.export.scope_add"]], "scoped() (in module datumaro.cli.commands.require_project.modification.export)": [[162, "datumaro.cli.commands.require_project.modification.export.scoped"]], "split_target_name() (datumaro.cli.commands.require_project.modification.export.projectbuildtargets class method)": [[162, "datumaro.cli.commands.require_project.modification.export.ProjectBuildTargets.split_target_name"]], "strip_target_name() (datumaro.cli.commands.require_project.modification.export.projectbuildtargets class method)": [[162, "datumaro.cli.commands.require_project.modification.export.ProjectBuildTargets.strip_target_name"]], "multilineformatter (class in datumaro.cli.commands.require_project.modification.import_)": [[163, "datumaro.cli.commands.require_project.modification.import_.MultilineFormatter"]], "build_parser() (in module datumaro.cli.commands.require_project.modification.import_)": [[163, "datumaro.cli.commands.require_project.modification.import_.build_parser"]], "datumaro.cli.commands.require_project.modification.import_": [[163, "module-datumaro.cli.commands.require_project.modification.import_"]], "generate_next_name() (in module datumaro.cli.commands.require_project.modification.import_)": [[163, "datumaro.cli.commands.require_project.modification.import_.generate_next_name"]], "get_sensitive_args() (in module datumaro.cli.commands.require_project.modification.import_)": [[163, "datumaro.cli.commands.require_project.modification.import_.get_sensitive_args"]], "import_command() (in module datumaro.cli.commands.require_project.modification.import_)": [[163, "datumaro.cli.commands.require_project.modification.import_.import_command"]], "join_cli_args() (in module datumaro.cli.commands.require_project.modification.import_)": [[163, "datumaro.cli.commands.require_project.modification.import_.join_cli_args"]], "load_project() (in module datumaro.cli.commands.require_project.modification.import_)": [[163, "datumaro.cli.commands.require_project.modification.import_.load_project"]], "on_error_do() (in module datumaro.cli.commands.require_project.modification.import_)": [[163, "datumaro.cli.commands.require_project.modification.import_.on_error_do"]], "path (datumaro.cli.commands.require_project.modification.import_.projectnotfounderror attribute)": [[163, "datumaro.cli.commands.require_project.modification.import_.ProjectNotFoundError.path"]], "scope_add() (in module datumaro.cli.commands.require_project.modification.import_)": [[163, "datumaro.cli.commands.require_project.modification.import_.scope_add"]], "scoped() (in module datumaro.cli.commands.require_project.modification.import_)": [[163, "datumaro.cli.commands.require_project.modification.import_.scoped"]], "show_video_import_warning() (in module datumaro.cli.commands.require_project.modification.import_)": [[163, "datumaro.cli.commands.require_project.modification.import_.show_video_import_warning"]], "build_parser() (in module datumaro.cli.commands.require_project.modification.remove)": [[164, "datumaro.cli.commands.require_project.modification.remove.build_parser"]], "datumaro.cli.commands.require_project.modification.remove": [[164, "module-datumaro.cli.commands.require_project.modification.remove"]], "get_sensitive_args() (in module datumaro.cli.commands.require_project.modification.remove)": [[164, "datumaro.cli.commands.require_project.modification.remove.get_sensitive_args"]], "load_project() (in module datumaro.cli.commands.require_project.modification.remove)": [[164, "datumaro.cli.commands.require_project.modification.remove.load_project"]], "remove_command() (in module datumaro.cli.commands.require_project.modification.remove)": [[164, "datumaro.cli.commands.require_project.modification.remove.remove_command"]], "scope_add() (in module datumaro.cli.commands.require_project.modification.remove)": [[164, "datumaro.cli.commands.require_project.modification.remove.scope_add"]], "scoped() (in module datumaro.cli.commands.require_project.modification.remove)": [[164, "datumaro.cli.commands.require_project.modification.remove.scoped"]], "datumaro.cli.commands.require_project.versioning": [[165, "module-datumaro.cli.commands.require_project.versioning"]], "build_parser() (in module datumaro.cli.commands.require_project.versioning.checkout)": [[166, "datumaro.cli.commands.require_project.versioning.checkout.build_parser"]], "checkout_command() (in module datumaro.cli.commands.require_project.versioning.checkout)": [[166, "datumaro.cli.commands.require_project.versioning.checkout.checkout_command"]], "datumaro.cli.commands.require_project.versioning.checkout": [[166, "module-datumaro.cli.commands.require_project.versioning.checkout"]], "get_sensitive_args() (in module datumaro.cli.commands.require_project.versioning.checkout)": [[166, "datumaro.cli.commands.require_project.versioning.checkout.get_sensitive_args"]], "build_parser() (in module datumaro.cli.commands.require_project.versioning.commit)": [[167, "datumaro.cli.commands.require_project.versioning.commit.build_parser"]], "commit_command() (in module datumaro.cli.commands.require_project.versioning.commit)": [[167, "datumaro.cli.commands.require_project.versioning.commit.commit_command"]], "datumaro.cli.commands.require_project.versioning.commit": [[167, "module-datumaro.cli.commands.require_project.versioning.commit"]], "get_sensitive_args() (in module datumaro.cli.commands.require_project.versioning.commit)": [[167, "datumaro.cli.commands.require_project.versioning.commit.get_sensitive_args"]], "build_parser() (in module datumaro.cli.commands.require_project.versioning.info)": [[168, "datumaro.cli.commands.require_project.versioning.info.build_parser"]], "datumaro.cli.commands.require_project.versioning.info": [[168, "module-datumaro.cli.commands.require_project.versioning.info"]], "get_sensitive_args() (in module datumaro.cli.commands.require_project.versioning.info)": [[168, "datumaro.cli.commands.require_project.versioning.info.get_sensitive_args"]], "info_command() (in module datumaro.cli.commands.require_project.versioning.info)": [[168, "datumaro.cli.commands.require_project.versioning.info.info_command"]], "build_parser() (in module datumaro.cli.commands.require_project.versioning.log)": [[169, "datumaro.cli.commands.require_project.versioning.log.build_parser"]], "datumaro.cli.commands.require_project.versioning.log": [[169, "module-datumaro.cli.commands.require_project.versioning.log"]], "get_sensitive_args() (in module datumaro.cli.commands.require_project.versioning.log)": [[169, "datumaro.cli.commands.require_project.versioning.log.get_sensitive_args"]], "log_command() (in module datumaro.cli.commands.require_project.versioning.log)": [[169, "datumaro.cli.commands.require_project.versioning.log.log_command"]], "build_parser() (in module datumaro.cli.commands.require_project.versioning.status)": [[170, "datumaro.cli.commands.require_project.versioning.status.build_parser"]], "datumaro.cli.commands.require_project.versioning.status": [[170, "module-datumaro.cli.commands.require_project.versioning.status"]], "get_sensitive_args() (in module datumaro.cli.commands.require_project.versioning.status)": [[170, "datumaro.cli.commands.require_project.versioning.status.get_sensitive_args"]], "status_command() (in module datumaro.cli.commands.require_project.versioning.status)": [[170, "datumaro.cli.commands.require_project.versioning.status.status_command"]], "conflictingcategorieserror": [[171, "datumaro.cli.commands.stats.ConflictingCategoriesError"], [212, "datumaro.components.dataset_storage.ConflictingCategoriesError"], [214, "datumaro.components.errors.ConflictingCategoriesError"], [229, "datumaro.components.merge.intersect_merge.ConflictingCategoriesError"]], "multilineformatter (class in datumaro.cli.commands.stats)": [[171, "datumaro.cli.commands.stats.MultilineFormatter"]], "wrongrevpatherror": [[171, "datumaro.cli.commands.stats.WrongRevpathError"], [183, "datumaro.cli.util.errors.WrongRevpathError"]], "build_parser() (in module datumaro.cli.commands.stats)": [[171, "datumaro.cli.commands.stats.build_parser"]], "compute_ann_statistics() (in module datumaro.cli.commands.stats)": [[171, "datumaro.cli.commands.stats.compute_ann_statistics"]], "compute_image_statistics() (in module datumaro.cli.commands.stats)": [[171, "datumaro.cli.commands.stats.compute_image_statistics"]], "datumaro.cli.commands.stats": [[171, "module-datumaro.cli.commands.stats"]], "dump_json_file() (in module datumaro.cli.commands.stats)": [[171, "datumaro.cli.commands.stats.dump_json_file"]], "generate_next_file_name() (in module datumaro.cli.commands.stats)": [[171, "datumaro.cli.commands.stats.generate_next_file_name"]], "get_sensitive_args() (in module datumaro.cli.commands.stats)": [[171, "datumaro.cli.commands.stats.get_sensitive_args"]], "load_project() (in module datumaro.cli.commands.stats)": [[171, "datumaro.cli.commands.stats.load_project"]], "parse_full_revpath() (in module datumaro.cli.commands.stats)": [[171, "datumaro.cli.commands.stats.parse_full_revpath"]], "path (datumaro.cli.commands.stats.projectnotfounderror attribute)": [[171, "datumaro.cli.commands.stats.ProjectNotFoundError.path"]], "scope_add() (in module datumaro.cli.commands.stats)": [[171, "datumaro.cli.commands.stats.scope_add"]], "scoped() (in module datumaro.cli.commands.stats)": [[171, "datumaro.cli.commands.stats.scoped"]], "sources (datumaro.cli.commands.stats.conflictingcategorieserror attribute)": [[171, "datumaro.cli.commands.stats.ConflictingCategoriesError.sources"]], "stats_command() (in module datumaro.cli.commands.stats)": [[171, "datumaro.cli.commands.stats.stats_command"]], "str_to_bool() (in module datumaro.cli.commands.stats)": [[171, "datumaro.cli.commands.stats.str_to_bool"]], "build_parser() (in module datumaro.cli.commands.transform)": [[172, "datumaro.cli.commands.transform.build_parser"]], "datumaro.cli.commands.transform": [[172, "module-datumaro.cli.commands.transform"]], "get_sensitive_args() (in module datumaro.cli.commands.transform)": [[172, "datumaro.cli.commands.transform.get_sensitive_args"]], "transform_command() (in module datumaro.cli.commands.transform)": [[172, "datumaro.cli.commands.transform.transform_command"]], "build_parser() (in module datumaro.cli.commands.validate)": [[173, "datumaro.cli.commands.validate.build_parser"]], "datumaro.cli.commands.validate": [[173, "module-datumaro.cli.commands.validate"]], "get_sensitive_args() (in module datumaro.cli.commands.validate)": [[173, "datumaro.cli.commands.validate.get_sensitive_args"]], "validate_command() (in module datumaro.cli.commands.validate)": [[173, "datumaro.cli.commands.validate.validate_command"]], "datumaro.cli.contexts": [[174, "module-datumaro.cli.contexts"]], "add_command() (in module datumaro.cli.contexts.model)": [[175, "datumaro.cli.contexts.model.add_command"]], "build_add_parser() (in module datumaro.cli.contexts.model)": [[175, "datumaro.cli.contexts.model.build_add_parser"]], "build_info_parser() (in module datumaro.cli.contexts.model)": [[175, "datumaro.cli.contexts.model.build_info_parser"]], "build_parser() (in module datumaro.cli.contexts.model)": [[175, "datumaro.cli.contexts.model.build_parser"]], "build_remove_parser() (in module datumaro.cli.contexts.model)": [[175, "datumaro.cli.contexts.model.build_remove_parser"]], "build_run_parser() (in module datumaro.cli.contexts.model)": [[175, "datumaro.cli.contexts.model.build_run_parser"]], "datumaro.cli.contexts.model": [[175, "module-datumaro.cli.contexts.model"]], "get_add_sensitive_args() (in module datumaro.cli.contexts.model)": [[175, "datumaro.cli.contexts.model.get_add_sensitive_args"]], "get_info_sensitive_args() (in module datumaro.cli.contexts.model)": [[175, "datumaro.cli.contexts.model.get_info_sensitive_args"]], "get_remove_sensitive_args() (in module datumaro.cli.contexts.model)": [[175, "datumaro.cli.contexts.model.get_remove_sensitive_args"]], "get_run_sensitive_args() (in module datumaro.cli.contexts.model)": [[175, "datumaro.cli.contexts.model.get_run_sensitive_args"]], "get_sensitive_args() (in module datumaro.cli.contexts.model)": [[175, "datumaro.cli.contexts.model.get_sensitive_args"]], "info_command() (in module datumaro.cli.contexts.model)": [[175, "datumaro.cli.contexts.model.info_command"]], "remove_command() (in module datumaro.cli.contexts.model)": [[175, "datumaro.cli.contexts.model.remove_command"]], "run_command() (in module datumaro.cli.contexts.model)": [[175, "datumaro.cli.contexts.model.run_command"]], "build_migrate_parser() (in module datumaro.cli.contexts.project)": [[176, "datumaro.cli.contexts.project.build_migrate_parser"]], "build_parser() (in module datumaro.cli.contexts.project)": [[176, "datumaro.cli.contexts.project.build_parser"]], "datumaro.cli.contexts.project": [[176, "module-datumaro.cli.contexts.project"]], "get_migrate_sensitive_args() (in module datumaro.cli.contexts.project)": [[176, "datumaro.cli.contexts.project.get_migrate_sensitive_args"]], "get_sensitive_args() (in module datumaro.cli.contexts.project)": [[176, "datumaro.cli.contexts.project.get_sensitive_args"]], "migrate_command() (in module datumaro.cli.contexts.project)": [[176, "datumaro.cli.contexts.project.migrate_command"]], "build_info_parser() (in module datumaro.cli.contexts.source)": [[177, "datumaro.cli.contexts.source.build_info_parser"]], "build_parser() (in module datumaro.cli.contexts.source)": [[177, "datumaro.cli.contexts.source.build_parser"]], "datumaro.cli.contexts.source": [[177, "module-datumaro.cli.contexts.source"]], "get_info_sensitive_args() (in module datumaro.cli.contexts.source)": [[177, "datumaro.cli.contexts.source.get_info_sensitive_args"]], "get_sensitive_args() (in module datumaro.cli.contexts.source)": [[177, "datumaro.cli.contexts.source.get_sensitive_args"]], "info_command() (in module datumaro.cli.contexts.source)": [[177, "datumaro.cli.contexts.source.info_command"]], "build_parser() (in module datumaro.cli.contexts.util)": [[178, "datumaro.cli.contexts.util.build_parser"]], "build_split_video_parser() (in module datumaro.cli.contexts.util)": [[178, "datumaro.cli.contexts.util.build_split_video_parser"]], "datumaro.cli.contexts.util": [[178, "module-datumaro.cli.contexts.util"]], "get_sensitive_args() (in module datumaro.cli.contexts.util)": [[178, "datumaro.cli.contexts.util.get_sensitive_args"]], "get_split_video_sensitive_args() (in module datumaro.cli.contexts.util)": [[178, "datumaro.cli.contexts.util.get_split_video_sensitive_args"]], "split_video_command() (in module datumaro.cli.contexts.util)": [[178, "datumaro.cli.contexts.util.split_video_command"]], "datumaro.cli.helpers": [[179, "module-datumaro.cli.helpers"]], "build_parser() (in module datumaro.cli.helpers.format)": [[180, "datumaro.cli.helpers.format.build_parser"]], "datumaro.cli.helpers.format": [[180, "module-datumaro.cli.helpers.format"]], "format_command() (in module datumaro.cli.helpers.format)": [[180, "datumaro.cli.helpers.format.format_command"]], "get_sensitive_args() (in module datumaro.cli.helpers.format)": [[180, "datumaro.cli.helpers.format.get_sensitive_args"]], "multilineformatter (class in datumaro.cli.util)": [[181, "datumaro.cli.util.MultilineFormatter"]], "add_subparser() (in module datumaro.cli.util)": [[181, "datumaro.cli.util.add_subparser"]], "at_least() (in module datumaro.cli.util)": [[181, "datumaro.cli.util.at_least"]], "datumaro.cli.util": [[181, "module-datumaro.cli.util"]], "join_cli_args() (in module datumaro.cli.util)": [[181, "datumaro.cli.util.join_cli_args"]], "make_subcommands_help() (in module datumaro.cli.util)": [[181, "datumaro.cli.util.make_subcommands_help"]], "required_count() (in module datumaro.cli.util)": [[181, "datumaro.cli.util.required_count"]], "show_video_import_warning() (in module datumaro.cli.util)": [[181, "datumaro.cli.util.show_video_import_warning"]], "default_format (datumaro.cli.util.compare.distancecomparevisualizer attribute)": [[182, "datumaro.cli.util.compare.DistanceCompareVisualizer.DEFAULT_FORMAT"]], "distancecomparevisualizer (class in datumaro.cli.util.compare)": [[182, "datumaro.cli.util.compare.DistanceCompareVisualizer"]], "distancecomparevisualizer.outputformat (class in datumaro.cli.util.compare)": [[182, "datumaro.cli.util.compare.DistanceCompareVisualizer.OutputFormat"]], "datumaro.cli.util.compare": [[182, "module-datumaro.cli.util.compare"]], "draw_bbox() (datumaro.cli.util.compare.distancecomparevisualizer method)": [[182, "datumaro.cli.util.compare.DistanceCompareVisualizer.draw_bbox"]], "draw_detection_roi() (datumaro.cli.util.compare.distancecomparevisualizer method)": [[182, "datumaro.cli.util.compare.DistanceCompareVisualizer.draw_detection_roi"]], "draw_text_with_background() (datumaro.cli.util.compare.distancecomparevisualizer class method)": [[182, "datumaro.cli.util.compare.DistanceCompareVisualizer.draw_text_with_background"]], "get_a_label() (datumaro.cli.util.compare.distancecomparevisualizer method)": [[182, "datumaro.cli.util.compare.DistanceCompareVisualizer.get_a_label"]], "get_b_label() (datumaro.cli.util.compare.distancecomparevisualizer method)": [[182, "datumaro.cli.util.compare.DistanceCompareVisualizer.get_b_label"]], "get_label_diff_file() (datumaro.cli.util.compare.distancecomparevisualizer method)": [[182, "datumaro.cli.util.compare.DistanceCompareVisualizer.get_label_diff_file"]], "save() (datumaro.cli.util.compare.distancecomparevisualizer method)": [[182, "datumaro.cli.util.compare.DistanceCompareVisualizer.save"]], "save_as_tensorboard() (datumaro.cli.util.compare.distancecomparevisualizer method)": [[182, "datumaro.cli.util.compare.DistanceCompareVisualizer.save_as_tensorboard"]], "save_conf_matrix() (datumaro.cli.util.compare.distancecomparevisualizer method)": [[182, "datumaro.cli.util.compare.DistanceCompareVisualizer.save_conf_matrix"]], "save_item_bbox_diff() (datumaro.cli.util.compare.distancecomparevisualizer method)": [[182, "datumaro.cli.util.compare.DistanceCompareVisualizer.save_item_bbox_diff"]], "save_item_label_diff() (datumaro.cli.util.compare.distancecomparevisualizer method)": [[182, "datumaro.cli.util.compare.DistanceCompareVisualizer.save_item_label_diff"]], "simple (datumaro.cli.util.compare.distancecomparevisualizer.outputformat attribute)": [[182, "datumaro.cli.util.compare.DistanceCompareVisualizer.OutputFormat.simple"]], "tensorboard (datumaro.cli.util.compare.distancecomparevisualizer.outputformat attribute)": [[182, "datumaro.cli.util.compare.DistanceCompareVisualizer.OutputFormat.tensorboard"]], "update_bbox_confusion() (datumaro.cli.util.compare.distancecomparevisualizer method)": [[182, "datumaro.cli.util.compare.DistanceCompareVisualizer.update_bbox_confusion"]], "update_label_confusion() (datumaro.cli.util.compare.distancecomparevisualizer method)": [[182, "datumaro.cli.util.compare.DistanceCompareVisualizer.update_label_confusion"]], "update_mask_confusion() (datumaro.cli.util.compare.distancecomparevisualizer method)": [[182, "datumaro.cli.util.compare.DistanceCompareVisualizer.update_mask_confusion"]], "update_polygon_confusion() (datumaro.cli.util.compare.distancecomparevisualizer method)": [[182, "datumaro.cli.util.compare.DistanceCompareVisualizer.update_polygon_confusion"]], "datumaro.cli.util.errors": [[183, "module-datumaro.cli.util.errors"]], "filtermodes (class in datumaro.cli.util.project)": [[184, "datumaro.cli.util.project.FilterModes"]], "a (datumaro.cli.util.project.filtermodes attribute)": [[184, "datumaro.cli.util.project.FilterModes.a"]], "a_i (datumaro.cli.util.project.filtermodes attribute)": [[184, "datumaro.cli.util.project.FilterModes.a_i"]], "annotations (datumaro.cli.util.project.filtermodes attribute)": [[184, "datumaro.cli.util.project.FilterModes.annotations"]], "annotations_items (datumaro.cli.util.project.filtermodes attribute)": [[184, "datumaro.cli.util.project.FilterModes.annotations_items"]], "datumaro.cli.util.project": [[184, "module-datumaro.cli.util.project"]], "generate_next_file_name() (in module datumaro.cli.util.project)": [[184, "datumaro.cli.util.project.generate_next_file_name"]], "i (datumaro.cli.util.project.filtermodes attribute)": [[184, "datumaro.cli.util.project.FilterModes.i"]], "i_a (datumaro.cli.util.project.filtermodes attribute)": [[184, "datumaro.cli.util.project.FilterModes.i_a"]], "items (datumaro.cli.util.project.filtermodes attribute)": [[184, "datumaro.cli.util.project.FilterModes.items"]], "items_annotations (datumaro.cli.util.project.filtermodes attribute)": [[184, "datumaro.cli.util.project.FilterModes.items_annotations"]], "list_options() (datumaro.cli.util.project.filtermodes class method)": [[184, "datumaro.cli.util.project.FilterModes.list_options"]], "load_project() (in module datumaro.cli.util.project)": [[184, "datumaro.cli.util.project.load_project"]], "make_filter_args() (datumaro.cli.util.project.filtermodes class method)": [[184, "datumaro.cli.util.project.FilterModes.make_filter_args"]], "parse() (datumaro.cli.util.project.filtermodes static method)": [[184, "datumaro.cli.util.project.FilterModes.parse"]], "parse_dataset_pathspec() (in module datumaro.cli.util.project)": [[184, "datumaro.cli.util.project.parse_dataset_pathspec"]], "parse_full_revpath() (in module datumaro.cli.util.project)": [[184, "datumaro.cli.util.project.parse_full_revpath"]], "parse_revspec() (in module datumaro.cli.util.project)": [[184, "datumaro.cli.util.project.parse_revspec"]], "split_local_revpath() (in module datumaro.cli.util.project)": [[184, "datumaro.cli.util.project.split_local_revpath"]], "datumaro.components": [[185, "module-datumaro.components"]], "datumaro.components.abstracts": [[186, "module-datumaro.components.abstracts"]], "abc (class in datumaro.components.abstracts.merger)": [[187, "datumaro.components.abstracts.merger.ABC"]], "annotation (class in datumaro.components.abstracts.merger)": [[187, "datumaro.components.abstracts.merger.Annotation"]], "datasetitemstorage (class in datumaro.components.abstracts.merger)": [[187, "datumaro.components.abstracts.merger.DatasetItemStorage"]], "datasetitemstoragedatasetview (class in datumaro.components.abstracts.merger)": [[187, "datumaro.components.abstracts.merger.DatasetItemStorageDatasetView"]], "datasetitemstoragedatasetview.subset (class in datumaro.components.abstracts.merger)": [[187, "datumaro.components.abstracts.merger.DatasetItemStorageDatasetView.Subset"]], "idataset (class in datumaro.components.abstracts.merger)": [[187, "datumaro.components.abstracts.merger.IDataset"]], "imatchercontext (class in datumaro.components.abstracts.merger)": [[187, "datumaro.components.abstracts.merger.IMatcherContext"]], "imergercontext (class in datumaro.components.abstracts.merger)": [[187, "datumaro.components.abstracts.merger.IMergerContext"]], "mediaelement (class in datumaro.components.abstracts.merger)": [[187, "datumaro.components.abstracts.merger.MediaElement"]], "abstractmethod() (in module datumaro.components.abstracts.merger)": [[187, "datumaro.components.abstracts.merger.abstractmethod"]], "ann_types() (datumaro.components.abstracts.merger.datasetitemstoragedatasetview method)": [[187, "datumaro.components.abstracts.merger.DatasetItemStorageDatasetView.ann_types"]], "ann_types() (datumaro.components.abstracts.merger.datasetitemstoragedatasetview.subset method)": [[187, "datumaro.components.abstracts.merger.DatasetItemStorageDatasetView.Subset.ann_types"]], "ann_types() (datumaro.components.abstracts.merger.idataset method)": [[187, "datumaro.components.abstracts.merger.IDataset.ann_types"]], "as_dict() (datumaro.components.abstracts.merger.annotation method)": [[187, "datumaro.components.abstracts.merger.Annotation.as_dict"]], "as_dict() (datumaro.components.abstracts.merger.mediaelement method)": [[187, "datumaro.components.abstracts.merger.MediaElement.as_dict"]], "attributes (datumaro.components.abstracts.merger.annotation attribute)": [[187, "datumaro.components.abstracts.merger.Annotation.attributes"]], "bytes (datumaro.components.abstracts.merger.mediaelement property)": [[187, "datumaro.components.abstracts.merger.MediaElement.bytes"]], "categories() (datumaro.components.abstracts.merger.datasetitemstoragedatasetview method)": [[187, "datumaro.components.abstracts.merger.DatasetItemStorageDatasetView.categories"]], "categories() (datumaro.components.abstracts.merger.datasetitemstoragedatasetview.subset method)": [[187, "datumaro.components.abstracts.merger.DatasetItemStorageDatasetView.Subset.categories"]], "categories() (datumaro.components.abstracts.merger.idataset method)": [[187, "datumaro.components.abstracts.merger.IDataset.categories"]], "data (datumaro.components.abstracts.merger.mediaelement property)": [[187, "datumaro.components.abstracts.merger.MediaElement.data"]], "datumaro.components.abstracts.merger": [[187, "module-datumaro.components.abstracts.merger"]], "from_self() (datumaro.components.abstracts.merger.mediaelement method)": [[187, "datumaro.components.abstracts.merger.MediaElement.from_self"]], "get() (datumaro.components.abstracts.merger.datasetitemstorage method)": [[187, "datumaro.components.abstracts.merger.DatasetItemStorage.get"]], "get() (datumaro.components.abstracts.merger.datasetitemstoragedatasetview method)": [[187, "datumaro.components.abstracts.merger.DatasetItemStorageDatasetView.get"]], "get() (datumaro.components.abstracts.merger.datasetitemstoragedatasetview.subset method)": [[187, "datumaro.components.abstracts.merger.DatasetItemStorageDatasetView.Subset.get"]], "get() (datumaro.components.abstracts.merger.idataset method)": [[187, "datumaro.components.abstracts.merger.IDataset.get"]], "get_annotated_items() (datumaro.components.abstracts.merger.datasetitemstorage method)": [[187, "datumaro.components.abstracts.merger.DatasetItemStorage.get_annotated_items"]], "get_annotations() (datumaro.components.abstracts.merger.datasetitemstorage method)": [[187, "datumaro.components.abstracts.merger.DatasetItemStorage.get_annotations"]], "get_any_label_name() (datumaro.components.abstracts.merger.imatchercontext method)": [[187, "datumaro.components.abstracts.merger.IMatcherContext.get_any_label_name"]], "get_datasetitem_by_path() (datumaro.components.abstracts.merger.datasetitemstorage method)": [[187, "datumaro.components.abstracts.merger.DatasetItemStorage.get_datasetitem_by_path"]], "get_subset() (datumaro.components.abstracts.merger.datasetitemstorage method)": [[187, "datumaro.components.abstracts.merger.DatasetItemStorage.get_subset"]], "get_subset() (datumaro.components.abstracts.merger.datasetitemstoragedatasetview method)": [[187, "datumaro.components.abstracts.merger.DatasetItemStorageDatasetView.get_subset"]], "get_subset() (datumaro.components.abstracts.merger.datasetitemstoragedatasetview.subset method)": [[187, "datumaro.components.abstracts.merger.DatasetItemStorageDatasetView.Subset.get_subset"]], "get_subset() (datumaro.components.abstracts.merger.idataset method)": [[187, "datumaro.components.abstracts.merger.IDataset.get_subset"]], "group (datumaro.components.abstracts.merger.annotation attribute)": [[187, "datumaro.components.abstracts.merger.Annotation.group"]], "has_data (datumaro.components.abstracts.merger.mediaelement property)": [[187, "datumaro.components.abstracts.merger.MediaElement.has_data"]], "id (datumaro.components.abstracts.merger.annotation attribute)": [[187, "datumaro.components.abstracts.merger.Annotation.id"]], "infos() (datumaro.components.abstracts.merger.datasetitemstoragedatasetview method)": [[187, "datumaro.components.abstracts.merger.DatasetItemStorageDatasetView.infos"]], "infos() (datumaro.components.abstracts.merger.datasetitemstoragedatasetview.subset method)": [[187, "datumaro.components.abstracts.merger.DatasetItemStorageDatasetView.Subset.infos"]], "infos() (datumaro.components.abstracts.merger.idataset method)": [[187, "datumaro.components.abstracts.merger.IDataset.infos"]], "is_empty() (datumaro.components.abstracts.merger.datasetitemstorage method)": [[187, "datumaro.components.abstracts.merger.DatasetItemStorage.is_empty"]], "is_encrypted (datumaro.components.abstracts.merger.mediaelement property)": [[187, "datumaro.components.abstracts.merger.MediaElement.is_encrypted"]], "is_stream (datumaro.components.abstracts.merger.idataset property)": [[187, "datumaro.components.abstracts.merger.IDataset.is_stream"]], "media_type() (datumaro.components.abstracts.merger.datasetitemstoragedatasetview method)": [[187, "datumaro.components.abstracts.merger.DatasetItemStorageDatasetView.media_type"]], "media_type() (datumaro.components.abstracts.merger.datasetitemstoragedatasetview.subset method)": [[187, "datumaro.components.abstracts.merger.DatasetItemStorageDatasetView.Subset.media_type"]], "media_type() (datumaro.components.abstracts.merger.idataset method)": [[187, "datumaro.components.abstracts.merger.IDataset.media_type"]], "merge() (datumaro.components.abstracts.merger.imergercontext method)": [[187, "datumaro.components.abstracts.merger.IMergerContext.merge"]], "merge_categories() (datumaro.components.abstracts.merger.imergercontext method)": [[187, "datumaro.components.abstracts.merger.IMergerContext.merge_categories"]], "merge_infos() (datumaro.components.abstracts.merger.imergercontext method)": [[187, "datumaro.components.abstracts.merger.IMergerContext.merge_infos"]], "merge_media_types() (datumaro.components.abstracts.merger.imergercontext method)": [[187, "datumaro.components.abstracts.merger.IMergerContext.merge_media_types"]], "object_id (datumaro.components.abstracts.merger.annotation attribute)": [[187, "datumaro.components.abstracts.merger.Annotation.object_id"]], "put() (datumaro.components.abstracts.merger.datasetitemstorage method)": [[187, "datumaro.components.abstracts.merger.DatasetItemStorage.put"]], "put() (datumaro.components.abstracts.merger.datasetitemstoragedatasetview.subset method)": [[187, "datumaro.components.abstracts.merger.DatasetItemStorageDatasetView.Subset.put"]], "remove() (datumaro.components.abstracts.merger.datasetitemstorage method)": [[187, "datumaro.components.abstracts.merger.DatasetItemStorage.remove"]], "remove() (datumaro.components.abstracts.merger.datasetitemstoragedatasetview.subset method)": [[187, "datumaro.components.abstracts.merger.DatasetItemStorageDatasetView.Subset.remove"]], "save() (datumaro.components.abstracts.merger.mediaelement method)": [[187, "datumaro.components.abstracts.merger.MediaElement.save"]], "set_crypter() (datumaro.components.abstracts.merger.mediaelement method)": [[187, "datumaro.components.abstracts.merger.MediaElement.set_crypter"]], "subsets() (datumaro.components.abstracts.merger.datasetitemstorage method)": [[187, "datumaro.components.abstracts.merger.DatasetItemStorage.subsets"]], "subsets() (datumaro.components.abstracts.merger.datasetitemstoragedatasetview method)": [[187, "datumaro.components.abstracts.merger.DatasetItemStorageDatasetView.subsets"]], "subsets() (datumaro.components.abstracts.merger.datasetitemstoragedatasetview.subset method)": [[187, "datumaro.components.abstracts.merger.DatasetItemStorageDatasetView.Subset.subsets"]], "subsets() (datumaro.components.abstracts.merger.idataset method)": [[187, "datumaro.components.abstracts.merger.IDataset.subsets"]], "type (datumaro.components.abstracts.merger.annotation property)": [[187, "datumaro.components.abstracts.merger.Annotation.type"]], "type (datumaro.components.abstracts.merger.mediaelement property)": [[187, "datumaro.components.abstracts.merger.MediaElement.type"]], "wrap() (datumaro.components.abstracts.merger.annotation method)": [[187, "datumaro.components.abstracts.merger.Annotation.wrap"]], "abc (class in datumaro.components.abstracts.model_interpreter)": [[188, "datumaro.components.abstracts.model_interpreter.ABC"]], "annotation (class in datumaro.components.abstracts.model_interpreter)": [[188, "datumaro.components.abstracts.model_interpreter.Annotation"]], "datasetitem (class in datumaro.components.abstracts.model_interpreter)": [[188, "datumaro.components.abstracts.model_interpreter.DatasetItem"]], "imodelinterpreter (class in datumaro.components.abstracts.model_interpreter)": [[188, "datumaro.components.abstracts.model_interpreter.IModelInterpreter"]], "typevar (class in datumaro.components.abstracts.model_interpreter)": [[188, "datumaro.components.abstracts.model_interpreter.TypeVar"]], "abstractmethod() (in module datumaro.components.abstracts.model_interpreter)": [[188, "datumaro.components.abstracts.model_interpreter.abstractmethod"]], "annotations (datumaro.components.abstracts.model_interpreter.datasetitem attribute)": [[188, "datumaro.components.abstracts.model_interpreter.DatasetItem.annotations"]], "as_dict() (datumaro.components.abstracts.model_interpreter.annotation method)": [[188, "datumaro.components.abstracts.model_interpreter.Annotation.as_dict"]], "attributes (datumaro.components.abstracts.model_interpreter.annotation attribute)": [[188, "datumaro.components.abstracts.model_interpreter.Annotation.attributes"]], "attributes (datumaro.components.abstracts.model_interpreter.datasetitem attribute)": [[188, "datumaro.components.abstracts.model_interpreter.DatasetItem.attributes"]], "datumaro.components.abstracts.model_interpreter": [[188, "module-datumaro.components.abstracts.model_interpreter"]], "get_categories() (datumaro.components.abstracts.model_interpreter.imodelinterpreter method)": [[188, "datumaro.components.abstracts.model_interpreter.IModelInterpreter.get_categories"]], "group (datumaro.components.abstracts.model_interpreter.annotation attribute)": [[188, "datumaro.components.abstracts.model_interpreter.Annotation.group"]], "id (datumaro.components.abstracts.model_interpreter.annotation attribute)": [[188, "datumaro.components.abstracts.model_interpreter.Annotation.id"]], "id (datumaro.components.abstracts.model_interpreter.datasetitem attribute)": [[188, "datumaro.components.abstracts.model_interpreter.DatasetItem.id"]], "media (datumaro.components.abstracts.model_interpreter.datasetitem attribute)": [[188, "datumaro.components.abstracts.model_interpreter.DatasetItem.media"]], "media_as() (datumaro.components.abstracts.model_interpreter.datasetitem method)": [[188, "datumaro.components.abstracts.model_interpreter.DatasetItem.media_as"]], "object_id (datumaro.components.abstracts.model_interpreter.annotation attribute)": [[188, "datumaro.components.abstracts.model_interpreter.Annotation.object_id"]], "postprocess() (datumaro.components.abstracts.model_interpreter.imodelinterpreter method)": [[188, "datumaro.components.abstracts.model_interpreter.IModelInterpreter.postprocess"]], "preprocess() (datumaro.components.abstracts.model_interpreter.imodelinterpreter method)": [[188, "datumaro.components.abstracts.model_interpreter.IModelInterpreter.preprocess"]], "subset (datumaro.components.abstracts.model_interpreter.datasetitem attribute)": [[188, "datumaro.components.abstracts.model_interpreter.DatasetItem.subset"]], "type (datumaro.components.abstracts.model_interpreter.annotation property)": [[188, "datumaro.components.abstracts.model_interpreter.Annotation.type"]], "wrap() (datumaro.components.abstracts.model_interpreter.annotation method)": [[188, "datumaro.components.abstracts.model_interpreter.Annotation.wrap"]], "wrap() (datumaro.components.abstracts.model_interpreter.datasetitem method)": [[188, "datumaro.components.abstracts.model_interpreter.DatasetItem.wrap"]], "datumaro.components.algorithms": [[189, "module-datumaro.components.algorithms"]], "datumaro.components.algorithms.hash_key_inference": [[190, "module-datumaro.components.algorithms.hash_key_inference"]], "hashinference (class in datumaro.components.algorithms.hash_key_inference.base)": [[191, "datumaro.components.algorithms.hash_key_inference.base.HashInference"]], "datumaro.components.algorithms.hash_key_inference.base": [[191, "module-datumaro.components.algorithms.hash_key_inference.base"]], "model (datumaro.components.algorithms.hash_key_inference.base.hashinference property)": [[191, "datumaro.components.algorithms.hash_key_inference.base.HashInference.model"]], "text_model (datumaro.components.algorithms.hash_key_inference.base.hashinference property)": [[191, "datumaro.components.algorithms.hash_key_inference.base.HashInference.text_model"]], "explorer (class in datumaro.components.algorithms.hash_key_inference.explorer)": [[192, "datumaro.components.algorithms.hash_key_inference.explorer.Explorer"]], "datumaro.components.algorithms.hash_key_inference.explorer": [[192, "module-datumaro.components.algorithms.hash_key_inference.explorer"]], "explore_topk() (datumaro.components.algorithms.hash_key_inference.explorer.explorer method)": [[192, "datumaro.components.algorithms.hash_key_inference.explorer.Explorer.explore_topk"]], "calculate_hamming() (in module datumaro.components.algorithms.hash_key_inference.hashkey_util)": [[193, "datumaro.components.algorithms.hash_key_inference.hashkey_util.calculate_hamming"]], "check_and_convert_to_list() (in module datumaro.components.algorithms.hash_key_inference.hashkey_util)": [[193, "datumaro.components.algorithms.hash_key_inference.hashkey_util.check_and_convert_to_list"]], "datumaro.components.algorithms.hash_key_inference.hashkey_util": [[193, "module-datumaro.components.algorithms.hash_key_inference.hashkey_util"]], "match_query_subset() (in module datumaro.components.algorithms.hash_key_inference.hashkey_util)": [[193, "datumaro.components.algorithms.hash_key_inference.hashkey_util.match_query_subset"]], "select_uninferenced_dataset() (in module datumaro.components.algorithms.hash_key_inference.hashkey_util)": [[193, "datumaro.components.algorithms.hash_key_inference.hashkey_util.select_uninferenced_dataset"]], "centroid (class in datumaro.components.algorithms.hash_key_inference.prune)": [[194, "datumaro.components.algorithms.hash_key_inference.prune.Centroid"]], "clusteredrandom (class in datumaro.components.algorithms.hash_key_inference.prune)": [[194, "datumaro.components.algorithms.hash_key_inference.prune.ClusteredRandom"]], "entropy (class in datumaro.components.algorithms.hash_key_inference.prune)": [[194, "datumaro.components.algorithms.hash_key_inference.prune.Entropy"]], "ndrselect (class in datumaro.components.algorithms.hash_key_inference.prune)": [[194, "datumaro.components.algorithms.hash_key_inference.prune.NDRSelect"]], "prune (class in datumaro.components.algorithms.hash_key_inference.prune)": [[194, "datumaro.components.algorithms.hash_key_inference.prune.Prune"]], "prunebase (class in datumaro.components.algorithms.hash_key_inference.prune)": [[194, "datumaro.components.algorithms.hash_key_inference.prune.PruneBase"]], "queryclust (class in datumaro.components.algorithms.hash_key_inference.prune)": [[194, "datumaro.components.algorithms.hash_key_inference.prune.QueryClust"]], "randomselect (class in datumaro.components.algorithms.hash_key_inference.prune)": [[194, "datumaro.components.algorithms.hash_key_inference.prune.RandomSelect"]], "base() (datumaro.components.algorithms.hash_key_inference.prune.centroid method)": [[194, "datumaro.components.algorithms.hash_key_inference.prune.Centroid.base"]], "base() (datumaro.components.algorithms.hash_key_inference.prune.clusteredrandom method)": [[194, "datumaro.components.algorithms.hash_key_inference.prune.ClusteredRandom.base"]], "base() (datumaro.components.algorithms.hash_key_inference.prune.entropy method)": [[194, "datumaro.components.algorithms.hash_key_inference.prune.Entropy.base"]], "base() (datumaro.components.algorithms.hash_key_inference.prune.ndrselect method)": [[194, "datumaro.components.algorithms.hash_key_inference.prune.NDRSelect.base"]], "base() (datumaro.components.algorithms.hash_key_inference.prune.prunebase method)": [[194, "datumaro.components.algorithms.hash_key_inference.prune.PruneBase.base"]], "base() (datumaro.components.algorithms.hash_key_inference.prune.queryclust method)": [[194, "datumaro.components.algorithms.hash_key_inference.prune.QueryClust.base"]], "base() (datumaro.components.algorithms.hash_key_inference.prune.randomselect method)": [[194, "datumaro.components.algorithms.hash_key_inference.prune.RandomSelect.base"]], "datumaro.components.algorithms.hash_key_inference.prune": [[194, "module-datumaro.components.algorithms.hash_key_inference.prune"]], "get_pruned() (datumaro.components.algorithms.hash_key_inference.prune.prune method)": [[194, "datumaro.components.algorithms.hash_key_inference.prune.Prune.get_pruned"]], "match_num_item_for_cluster() (in module datumaro.components.algorithms.hash_key_inference.prune)": [[194, "datumaro.components.algorithms.hash_key_inference.prune.match_num_item_for_cluster"]], "datumaro.components.algorithms.noisy_label_detection": [[195, "module-datumaro.components.algorithms.noisy_label_detection"]], "annotationtype (class in datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer)": [[196, "datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.AnnotationType"]], "dataseterror": [[196, "datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.DatasetError"], [214, "datumaro.components.errors.DatasetError"], [220, "datumaro.components.hl_ops.DatasetError"]], "idataset (class in datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer)": [[196, "datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.IDataset"]], "labelcategories (class in datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer)": [[196, "datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.LabelCategories"]], "labelcategories.category (class in datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer)": [[196, "datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.LabelCategories.Category"]], "labelcategories.labelgroup (class in datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer)": [[196, "datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.LabelCategories.LabelGroup"]], "lossdynamicsanalyzer (class in datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer)": [[196, "datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.LossDynamicsAnalyzer"]], "noisylabelcandidate (class in datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer)": [[196, "datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.NoisyLabelCandidate"]], "add() (datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.labelcategories method)": [[196, "datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.LabelCategories.add"]], "add_label_group() (datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.labelcategories method)": [[196, "datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.LabelCategories.add_label_group"]], "allowed_task_names (datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.lossdynamicsanalyzer attribute)": [[196, "datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.LossDynamicsAnalyzer.allowed_task_names"]], "allowed_tracking_loss_types (datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.lossdynamicsanalyzer attribute)": [[196, "datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.LossDynamicsAnalyzer.allowed_tracking_loss_types"]], "alpha (datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.lossdynamicsanalyzer property)": [[196, "datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.LossDynamicsAnalyzer.alpha"]], "ann_id (datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.noisylabelcandidate attribute)": [[196, "datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.NoisyLabelCandidate.ann_id"]], "ann_types() (datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.idataset method)": [[196, "datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.IDataset.ann_types"]], "attributes (datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.labelcategories.category attribute)": [[196, "datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.LabelCategories.Category.attributes"]], "bbox (datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.annotationtype attribute)": [[196, "datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.AnnotationType.bbox"]], "caption (datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.annotationtype attribute)": [[196, "datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.AnnotationType.caption"]], "categories() (datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.idataset method)": [[196, "datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.IDataset.categories"]], "copy() (datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.defaultdict method)": [[196, "datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.defaultdict.copy"]], "cuboid_3d (datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.annotationtype attribute)": [[196, "datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.AnnotationType.cuboid_3d"]], "dataclass() (in module datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer)": [[196, "datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.dataclass"]], "datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer": [[196, "module-datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer"]], "default_factory (datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.defaultdict attribute)": [[196, "datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.defaultdict.default_factory"]], "defaultdict (class in datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer)": [[196, "datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.defaultdict"]], "depth_annotation (datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.annotationtype attribute)": [[196, "datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.AnnotationType.depth_annotation"]], "ellipse (datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.annotationtype attribute)": [[196, "datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.AnnotationType.ellipse"]], "ema_dataframe (datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.lossdynamicsanalyzer property)": [[196, "datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.LossDynamicsAnalyzer.ema_dataframe"]], "feature_vector (datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.annotationtype attribute)": [[196, "datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.AnnotationType.feature_vector"]], "field() (in module datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer)": [[196, "datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.field"]], "find() (datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.labelcategories method)": [[196, "datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.LabelCategories.find"]], "from_iterable() (datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.labelcategories class method)": [[196, "datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.LabelCategories.from_iterable"]], "get() (datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.idataset method)": [[196, "datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.IDataset.get"]], "get_subset() (datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.idataset method)": [[196, "datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.IDataset.get_subset"]], "get_top_k_cands() (datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.lossdynamicsanalyzer method)": [[196, "datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.LossDynamicsAnalyzer.get_top_k_cands"]], "group_type (datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.labelcategories.labelgroup attribute)": [[196, "datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.LabelCategories.LabelGroup.group_type"]], "hash_key (datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.annotationtype attribute)": [[196, "datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.AnnotationType.hash_key"]], "id (datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.noisylabelcandidate attribute)": [[196, "datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.NoisyLabelCandidate.id"]], "infos() (datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.idataset method)": [[196, "datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.IDataset.infos"]], "is_stream (datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.idataset property)": [[196, "datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.IDataset.is_stream"]], "items (datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.labelcategories attribute)": [[196, "datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.LabelCategories.items"]], "label (datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.annotationtype attribute)": [[196, "datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.AnnotationType.label"]], "label_groups (datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.labelcategories attribute)": [[196, "datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.LabelCategories.label_groups"]], "label_id (datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.noisylabelcandidate attribute)": [[196, "datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.NoisyLabelCandidate.label_id"]], "labels (datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.labelcategories.labelgroup attribute)": [[196, "datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.LabelCategories.LabelGroup.labels"]], "mask (datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.annotationtype attribute)": [[196, "datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.AnnotationType.mask"]], "mean_loss_dyns (datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.lossdynamicsanalyzer property)": [[196, "datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.LossDynamicsAnalyzer.mean_loss_dyns"]], "mean_loss_dyns_per_label (datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.lossdynamicsanalyzer property)": [[196, "datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.LossDynamicsAnalyzer.mean_loss_dyns_per_label"]], "media_type() (datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.idataset method)": [[196, "datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.IDataset.media_type"]], "metric (datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.noisylabelcandidate attribute)": [[196, "datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.NoisyLabelCandidate.metric"]], "name (datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.labelcategories.category attribute)": [[196, "datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.LabelCategories.Category.name"]], "name (datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.labelcategories.labelgroup attribute)": [[196, "datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.LabelCategories.LabelGroup.name"]], "parent (datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.labelcategories.category attribute)": [[196, "datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.LabelCategories.Category.parent"]], "plot_ema_loss_dynamics() (datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.lossdynamicsanalyzer method)": [[196, "datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.LossDynamicsAnalyzer.plot_ema_loss_dynamics"]], "points (datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.annotationtype attribute)": [[196, "datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.AnnotationType.points"]], "polygon (datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.annotationtype attribute)": [[196, "datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.AnnotationType.polygon"]], "polyline (datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.annotationtype attribute)": [[196, "datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.AnnotationType.polyline"]], "rotated_bbox (datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.annotationtype attribute)": [[196, "datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.AnnotationType.rotated_bbox"]], "subset (datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.noisylabelcandidate attribute)": [[196, "datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.NoisyLabelCandidate.subset"]], "subsets() (datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.idataset method)": [[196, "datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.IDataset.subsets"]], "super_resolution_annotation (datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.annotationtype attribute)": [[196, "datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.AnnotationType.super_resolution_annotation"]], "tabular (datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.annotationtype attribute)": [[196, "datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.AnnotationType.tabular"]], "unknown (datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.annotationtype attribute)": [[196, "datumaro.components.algorithms.noisy_label_detection.loss_dynamics_analyzer.AnnotationType.unknown"]], "dataset (class in datumaro.components.algorithms.rise)": [[197, "datumaro.components.algorithms.rise.Dataset"]], "datasetitem (class in datumaro.components.algorithms.rise)": [[197, "datumaro.components.algorithms.rise.DatasetItem"]], "image (class in datumaro.components.algorithms.rise)": [[197, "datumaro.components.algorithms.rise.Image"]], "rise (class in datumaro.components.algorithms.rise)": [[197, "datumaro.components.algorithms.rise.RISE"]], "ann_types() (datumaro.components.algorithms.rise.dataset method)": [[197, "datumaro.components.algorithms.rise.Dataset.ann_types"]], "annotations (datumaro.components.algorithms.rise.datasetitem attribute)": [[197, "datumaro.components.algorithms.rise.DatasetItem.annotations"]], "apply() (datumaro.components.algorithms.rise.rise method)": [[197, "datumaro.components.algorithms.rise.RISE.apply"]], "attributes (datumaro.components.algorithms.rise.datasetitem attribute)": [[197, "datumaro.components.algorithms.rise.DatasetItem.attributes"]], "bind() (datumaro.components.algorithms.rise.dataset method)": [[197, "datumaro.components.algorithms.rise.Dataset.bind"]], "categories() (datumaro.components.algorithms.rise.dataset method)": [[197, "datumaro.components.algorithms.rise.Dataset.categories"]], "clone() (datumaro.components.algorithms.rise.dataset method)": [[197, "datumaro.components.algorithms.rise.Dataset.clone"]], "data_path (datumaro.components.algorithms.rise.dataset property)": [[197, "datumaro.components.algorithms.rise.Dataset.data_path"]], "datumaro.components.algorithms.rise": [[197, "module-datumaro.components.algorithms.rise"]], "define_categories() (datumaro.components.algorithms.rise.dataset method)": [[197, "datumaro.components.algorithms.rise.Dataset.define_categories"]], "define_infos() (datumaro.components.algorithms.rise.dataset method)": [[197, "datumaro.components.algorithms.rise.Dataset.define_infos"]], "detect() (datumaro.components.algorithms.rise.dataset static method)": [[197, "datumaro.components.algorithms.rise.Dataset.detect"]], "env (datumaro.components.algorithms.rise.dataset property)": [[197, "datumaro.components.algorithms.rise.Dataset.env"]], "export() (datumaro.components.algorithms.rise.dataset method)": [[197, "datumaro.components.algorithms.rise.Dataset.export"]], "ext (datumaro.components.algorithms.rise.image property)": [[197, "datumaro.components.algorithms.rise.Image.ext"]], "filter() (datumaro.components.algorithms.rise.dataset method)": [[197, "datumaro.components.algorithms.rise.Dataset.filter"]], "flush_changes() (datumaro.components.algorithms.rise.dataset method)": [[197, "datumaro.components.algorithms.rise.Dataset.flush_changes"]], "format (datumaro.components.algorithms.rise.dataset property)": [[197, "datumaro.components.algorithms.rise.Dataset.format"]], "from_bytes() (datumaro.components.algorithms.rise.image class method)": [[197, "datumaro.components.algorithms.rise.Image.from_bytes"]], "from_extractors() (datumaro.components.algorithms.rise.dataset class method)": [[197, "datumaro.components.algorithms.rise.Dataset.from_extractors"]], "from_file() (datumaro.components.algorithms.rise.image class method)": [[197, "datumaro.components.algorithms.rise.Image.from_file"]], "from_iterable() (datumaro.components.algorithms.rise.dataset class method)": [[197, "datumaro.components.algorithms.rise.Dataset.from_iterable"]], "from_numpy() (datumaro.components.algorithms.rise.image class method)": [[197, "datumaro.components.algorithms.rise.Image.from_numpy"]], "generate_masked_dataset() (datumaro.components.algorithms.rise.rise method)": [[197, "datumaro.components.algorithms.rise.RISE.generate_masked_dataset"]], "generate_masks() (datumaro.components.algorithms.rise.rise method)": [[197, "datumaro.components.algorithms.rise.RISE.generate_masks"]], "get() (datumaro.components.algorithms.rise.dataset method)": [[197, "datumaro.components.algorithms.rise.Dataset.get"]], "get_annotated_items() (datumaro.components.algorithms.rise.dataset method)": [[197, "datumaro.components.algorithms.rise.Dataset.get_annotated_items"]], "get_annotations() (datumaro.components.algorithms.rise.dataset method)": [[197, "datumaro.components.algorithms.rise.Dataset.get_annotations"]], "get_categories_info() (datumaro.components.algorithms.rise.dataset method)": [[197, "datumaro.components.algorithms.rise.Dataset.get_categories_info"]], "get_datasetitem_by_path() (datumaro.components.algorithms.rise.dataset method)": [[197, "datumaro.components.algorithms.rise.Dataset.get_datasetitem_by_path"]], "get_infos() (datumaro.components.algorithms.rise.dataset method)": [[197, "datumaro.components.algorithms.rise.Dataset.get_infos"]], "get_label_cat_names() (datumaro.components.algorithms.rise.dataset method)": [[197, "datumaro.components.algorithms.rise.Dataset.get_label_cat_names"]], "get_patch() (datumaro.components.algorithms.rise.dataset method)": [[197, "datumaro.components.algorithms.rise.Dataset.get_patch"]], "get_subset() (datumaro.components.algorithms.rise.dataset method)": [[197, "datumaro.components.algorithms.rise.Dataset.get_subset"]], "get_subset_info() (datumaro.components.algorithms.rise.dataset method)": [[197, "datumaro.components.algorithms.rise.Dataset.get_subset_info"]], "has_size (datumaro.components.algorithms.rise.image property)": [[197, "datumaro.components.algorithms.rise.Image.has_size"]], "id (datumaro.components.algorithms.rise.datasetitem attribute)": [[197, "datumaro.components.algorithms.rise.DatasetItem.id"]], "import_from() (datumaro.components.algorithms.rise.dataset class method)": [[197, "datumaro.components.algorithms.rise.Dataset.import_from"]], "infos() (datumaro.components.algorithms.rise.dataset method)": [[197, "datumaro.components.algorithms.rise.Dataset.infos"]], "init_cache() (datumaro.components.algorithms.rise.dataset method)": [[197, "datumaro.components.algorithms.rise.Dataset.init_cache"]], "is_bound (datumaro.components.algorithms.rise.dataset property)": [[197, "datumaro.components.algorithms.rise.Dataset.is_bound"]], "is_cache_initialized (datumaro.components.algorithms.rise.dataset property)": [[197, "datumaro.components.algorithms.rise.Dataset.is_cache_initialized"]], "is_eager (datumaro.components.algorithms.rise.dataset property)": [[197, "datumaro.components.algorithms.rise.Dataset.is_eager"]], "is_modified (datumaro.components.algorithms.rise.dataset property)": [[197, "datumaro.components.algorithms.rise.Dataset.is_modified"]], "is_stream (datumaro.components.algorithms.rise.dataset property)": [[197, "datumaro.components.algorithms.rise.Dataset.is_stream"]], "load() (datumaro.components.algorithms.rise.dataset class method)": [[197, "datumaro.components.algorithms.rise.Dataset.load"]], "media (datumaro.components.algorithms.rise.datasetitem attribute)": [[197, "datumaro.components.algorithms.rise.DatasetItem.media"]], "media_as() (datumaro.components.algorithms.rise.datasetitem method)": [[197, "datumaro.components.algorithms.rise.DatasetItem.media_as"]], "media_type() (datumaro.components.algorithms.rise.dataset method)": [[197, "datumaro.components.algorithms.rise.Dataset.media_type"]], "normalize_saliency() (datumaro.components.algorithms.rise.rise method)": [[197, "datumaro.components.algorithms.rise.RISE.normalize_saliency"]], "options (datumaro.components.algorithms.rise.dataset property)": [[197, "datumaro.components.algorithms.rise.Dataset.options"]], "put() (datumaro.components.algorithms.rise.dataset method)": [[197, "datumaro.components.algorithms.rise.Dataset.put"]], "remove() (datumaro.components.algorithms.rise.dataset method)": [[197, "datumaro.components.algorithms.rise.Dataset.remove"]], "run_model() (datumaro.components.algorithms.rise.dataset method)": [[197, "datumaro.components.algorithms.rise.Dataset.run_model"]], "save() (datumaro.components.algorithms.rise.dataset method)": [[197, "datumaro.components.algorithms.rise.Dataset.save"]], "select() (datumaro.components.algorithms.rise.dataset method)": [[197, "datumaro.components.algorithms.rise.Dataset.select"]], "set_crypter() (datumaro.components.algorithms.rise.image method)": [[197, "datumaro.components.algorithms.rise.Image.set_crypter"]], "size (datumaro.components.algorithms.rise.image property)": [[197, "datumaro.components.algorithms.rise.Image.size"]], "subset (datumaro.components.algorithms.rise.datasetitem attribute)": [[197, "datumaro.components.algorithms.rise.DatasetItem.subset"]], "subsets() (datumaro.components.algorithms.rise.dataset method)": [[197, "datumaro.components.algorithms.rise.Dataset.subsets"]], "take_by() (in module datumaro.components.algorithms.rise)": [[197, "datumaro.components.algorithms.rise.take_by"]], "transform() (datumaro.components.algorithms.rise.dataset method)": [[197, "datumaro.components.algorithms.rise.Dataset.transform"]], "update() (datumaro.components.algorithms.rise.dataset method)": [[197, "datumaro.components.algorithms.rise.Dataset.update"]], "wrap() (datumaro.components.algorithms.rise.datasetitem method)": [[197, "datumaro.components.algorithms.rise.DatasetItem.wrap"]], "annotation (class in datumaro.components.annotation)": [[198, "datumaro.components.annotation.Annotation"]], "annotationtype (class in datumaro.components.annotation)": [[198, "datumaro.components.annotation.AnnotationType"]], "annotations (class in datumaro.components.annotation)": [[198, "datumaro.components.annotation.Annotations"]], "bbox (class in datumaro.components.annotation)": [[198, "datumaro.components.annotation.Bbox"]], "caption (class in datumaro.components.annotation)": [[198, "datumaro.components.annotation.Caption"]], "categories (class in datumaro.components.annotation)": [[198, "datumaro.components.annotation.Categories"]], "colormap (in module datumaro.components.annotation)": [[198, "datumaro.components.annotation.Colormap"]], "compiledmask (class in datumaro.components.annotation)": [[198, "datumaro.components.annotation.CompiledMask"]], "cuboid3d (class in datumaro.components.annotation)": [[198, "datumaro.components.annotation.Cuboid3d"]], "depthannotation (class in datumaro.components.annotation)": [[198, "datumaro.components.annotation.DepthAnnotation"]], "exclusive (datumaro.components.annotation.grouptype attribute)": [[198, "datumaro.components.annotation.GroupType.EXCLUSIVE"]], "ellipse (class in datumaro.components.annotation)": [[198, "datumaro.components.annotation.Ellipse"]], "extractedmask (class in datumaro.components.annotation)": [[198, "datumaro.components.annotation.ExtractedMask"]], "featurevector (class in datumaro.components.annotation)": [[198, "datumaro.components.annotation.FeatureVector"]], "grouptype (class in datumaro.components.annotation)": [[198, "datumaro.components.annotation.GroupType"]], "hashkey (class in datumaro.components.annotation)": [[198, "datumaro.components.annotation.HashKey"]], "inclusive (datumaro.components.annotation.grouptype attribute)": [[198, "datumaro.components.annotation.GroupType.INCLUSIVE"]], "label (class in datumaro.components.annotation)": [[198, "datumaro.components.annotation.Label"]], "labelcategories (class in datumaro.components.annotation)": [[198, "datumaro.components.annotation.LabelCategories"]], "labelcategories.category (class in datumaro.components.annotation)": [[198, "datumaro.components.annotation.LabelCategories.Category"]], "labelcategories.labelgroup (class in datumaro.components.annotation)": [[198, "datumaro.components.annotation.LabelCategories.LabelGroup"]], "mask (class in datumaro.components.annotation)": [[198, "datumaro.components.annotation.Mask"]], "maskcategories (class in datumaro.components.annotation)": [[198, "datumaro.components.annotation.MaskCategories"]], "points (class in datumaro.components.annotation)": [[198, "datumaro.components.annotation.Points"]], "points.visibility (class in datumaro.components.annotation)": [[198, "datumaro.components.annotation.Points.Visibility"]], "pointscategories (class in datumaro.components.annotation)": [[198, "datumaro.components.annotation.PointsCategories"]], "pointscategories.category (class in datumaro.components.annotation)": [[198, "datumaro.components.annotation.PointsCategories.Category"]], "polyline (class in datumaro.components.annotation)": [[198, "datumaro.components.annotation.PolyLine"]], "polygon (class in datumaro.components.annotation)": [[198, "datumaro.components.annotation.Polygon"]], "restricted (datumaro.components.annotation.grouptype attribute)": [[198, "datumaro.components.annotation.GroupType.RESTRICTED"]], "rlemask (class in datumaro.components.annotation)": [[198, "datumaro.components.annotation.RleMask"]], "rotatedbbox (class in datumaro.components.annotation)": [[198, "datumaro.components.annotation.RotatedBbox"]], "shape (class in datumaro.components.annotation)": [[198, "datumaro.components.annotation.Shape"]], "superresolutionannotation (class in datumaro.components.annotation)": [[198, "datumaro.components.annotation.SuperResolutionAnnotation"]], "tabular (class in datumaro.components.annotation)": [[198, "datumaro.components.annotation.Tabular"]], "tabularcategories (class in datumaro.components.annotation)": [[198, "datumaro.components.annotation.TabularCategories"]], "tabularcategories.category (class in datumaro.components.annotation)": [[198, "datumaro.components.annotation.TabularCategories.Category"]], "__attrs_post_init__() (datumaro.components.annotation.points method)": [[198, "datumaro.components.annotation.Points.__attrs_post_init__"]], "__attrs_post_init__() (datumaro.components.annotation.polygon method)": [[198, "datumaro.components.annotation.Polygon.__attrs_post_init__"]], "__eq__() (datumaro.components.annotation.polygon method)": [[198, "datumaro.components.annotation.Polygon.__eq__"]], "__init__() (datumaro.components.annotation.bbox method)": [[198, "datumaro.components.annotation.Bbox.__init__"]], "__init__() (datumaro.components.annotation.cuboid3d method)": [[198, "datumaro.components.annotation.Cuboid3d.__init__"]], "__init__() (datumaro.components.annotation.rotatedbbox method)": [[198, "datumaro.components.annotation.RotatedBbox.__init__"]], "_get_shoelace_area() (datumaro.components.annotation.polygon method)": [[198, "datumaro.components.annotation.Polygon._get_shoelace_area"]], "_points (datumaro.components.annotation.cuboid3d attribute)": [[198, "datumaro.components.annotation.Cuboid3d._points"]], "_type (datumaro.components.annotation.bbox attribute)": [[198, "datumaro.components.annotation.Bbox._type"]], "_type (datumaro.components.annotation.cuboid3d attribute)": [[198, "datumaro.components.annotation.Cuboid3d._type"]], "_type (datumaro.components.annotation.points attribute)": [[198, "datumaro.components.annotation.Points._type"]], "_type (datumaro.components.annotation.polyline attribute)": [[198, "datumaro.components.annotation.PolyLine._type"]], "_type (datumaro.components.annotation.polygon attribute)": [[198, "datumaro.components.annotation.Polygon._type"]], "_type (datumaro.components.annotation.rotatedbbox attribute)": [[198, "datumaro.components.annotation.RotatedBbox._type"]], "absent (datumaro.components.annotation.points.visibility attribute)": [[198, "datumaro.components.annotation.Points.Visibility.absent"], [198, "id38"]], "add() (datumaro.components.annotation.labelcategories method)": [[198, "datumaro.components.annotation.LabelCategories.add"]], "add() (datumaro.components.annotation.pointscategories method)": [[198, "datumaro.components.annotation.PointsCategories.add"]], "add() (datumaro.components.annotation.tabularcategories method)": [[198, "datumaro.components.annotation.TabularCategories.add"]], "add_label_group() (datumaro.components.annotation.labelcategories method)": [[198, "datumaro.components.annotation.LabelCategories.add_label_group"]], "as_class_mask() (datumaro.components.annotation.mask method)": [[198, "datumaro.components.annotation.Mask.as_class_mask"]], "as_dict() (datumaro.components.annotation.annotation method)": [[198, "datumaro.components.annotation.Annotation.as_dict"]], "as_instance_mask() (datumaro.components.annotation.mask method)": [[198, "datumaro.components.annotation.Mask.as_instance_mask"]], "as_polygon() (datumaro.components.annotation.bbox method)": [[198, "datumaro.components.annotation.Bbox.as_polygon"], [198, "id23"]], "as_polygon() (datumaro.components.annotation.ellipse method)": [[198, "datumaro.components.annotation.Ellipse.as_polygon"]], "as_polygon() (datumaro.components.annotation.polyline method)": [[198, "datumaro.components.annotation.PolyLine.as_polygon"], [198, "id9"]], "as_polygon() (datumaro.components.annotation.polygon method)": [[198, "datumaro.components.annotation.Polygon.as_polygon"], [198, "id16"]], "as_polygon() (datumaro.components.annotation.rotatedbbox method)": [[198, "datumaro.components.annotation.RotatedBbox.as_polygon"], [198, "id35"]], "as_polygon() (datumaro.components.annotation.shape method)": [[198, "datumaro.components.annotation.Shape.as_polygon"], [198, "id6"]], "attributes (datumaro.components.annotation.annotation attribute)": [[198, "datumaro.components.annotation.Annotation.attributes"]], "attributes (datumaro.components.annotation.categories attribute)": [[198, "datumaro.components.annotation.Categories.attributes"]], "attributes (datumaro.components.annotation.featurevector attribute)": [[198, "datumaro.components.annotation.FeatureVector.attributes"]], "attributes (datumaro.components.annotation.labelcategories.category attribute)": [[198, "datumaro.components.annotation.LabelCategories.Category.attributes"]], "bbox (datumaro.components.annotation.annotationtype attribute)": [[198, "datumaro.components.annotation.AnnotationType.bbox"]], "c_x (datumaro.components.annotation.ellipse property)": [[198, "datumaro.components.annotation.Ellipse.c_x"]], "c_y (datumaro.components.annotation.ellipse property)": [[198, "datumaro.components.annotation.Ellipse.c_y"]], "caption (datumaro.components.annotation.annotationtype attribute)": [[198, "datumaro.components.annotation.AnnotationType.caption"]], "caption (datumaro.components.annotation.caption attribute)": [[198, "datumaro.components.annotation.Caption.caption"]], "class_mask (datumaro.components.annotation.compiledmask property)": [[198, "datumaro.components.annotation.CompiledMask.class_mask"]], "colormap (datumaro.components.annotation.maskcategories attribute)": [[198, "datumaro.components.annotation.MaskCategories.colormap"]], "cuboid_3d (datumaro.components.annotation.annotationtype attribute)": [[198, "datumaro.components.annotation.AnnotationType.cuboid_3d"]], "cx (datumaro.components.annotation.rotatedbbox property)": [[198, "id27"]], "cx() (datumaro.components.annotation.rotatedbbox method)": [[198, "datumaro.components.annotation.RotatedBbox.cx"]], "cy (datumaro.components.annotation.rotatedbbox property)": [[198, "id28"]], "cy() (datumaro.components.annotation.rotatedbbox method)": [[198, "datumaro.components.annotation.RotatedBbox.cy"]], "datumaro.components.annotation": [[198, "module-datumaro.components.annotation"]], "depth_annotation (datumaro.components.annotation.annotationtype attribute)": [[198, "datumaro.components.annotation.AnnotationType.depth_annotation"]], "dtype (datumaro.components.annotation.tabularcategories.category attribute)": [[198, "datumaro.components.annotation.TabularCategories.Category.dtype"]], "ellipse (datumaro.components.annotation.annotationtype attribute)": [[198, "datumaro.components.annotation.AnnotationType.ellipse"]], "extract() (datumaro.components.annotation.compiledmask method)": [[198, "datumaro.components.annotation.CompiledMask.extract"]], "feature_vector (datumaro.components.annotation.annotationtype attribute)": [[198, "datumaro.components.annotation.AnnotationType.feature_vector"]], "find() (datumaro.components.annotation.labelcategories method)": [[198, "datumaro.components.annotation.LabelCategories.find"]], "find() (datumaro.components.annotation.tabularcategories method)": [[198, "datumaro.components.annotation.TabularCategories.find"]], "from_instance_masks() (datumaro.components.annotation.compiledmask static method)": [[198, "datumaro.components.annotation.CompiledMask.from_instance_masks"]], "from_iterable() (datumaro.components.annotation.labelcategories class method)": [[198, "datumaro.components.annotation.LabelCategories.from_iterable"]], "from_iterable() (datumaro.components.annotation.pointscategories class method)": [[198, "datumaro.components.annotation.PointsCategories.from_iterable"]], "from_iterable() (datumaro.components.annotation.tabularcategories class method)": [[198, "datumaro.components.annotation.TabularCategories.from_iterable"]], "from_rectangle() (datumaro.components.annotation.rotatedbbox class method)": [[198, "id26"]], "from_rectangle() (datumaro.components.annotation.rotatedbbox method)": [[198, "datumaro.components.annotation.RotatedBbox.from_rectangle"]], "from_str() (datumaro.components.annotation.grouptype class method)": [[198, "datumaro.components.annotation.GroupType.from_str"]], "generate() (datumaro.components.annotation.maskcategories class method)": [[198, "datumaro.components.annotation.MaskCategories.generate"]], "get_area() (datumaro.components.annotation.bbox method)": [[198, "datumaro.components.annotation.Bbox.get_area"], [198, "id21"]], "get_area() (datumaro.components.annotation.ellipse method)": [[198, "datumaro.components.annotation.Ellipse.get_area"]], "get_area() (datumaro.components.annotation.mask method)": [[198, "datumaro.components.annotation.Mask.get_area"]], "get_area() (datumaro.components.annotation.points method)": [[198, "datumaro.components.annotation.Points.get_area"], [198, "id42"]], "get_area() (datumaro.components.annotation.polyline method)": [[198, "datumaro.components.annotation.PolyLine.get_area"], [198, "id10"]], "get_area() (datumaro.components.annotation.polygon method)": [[198, "datumaro.components.annotation.Polygon.get_area"], [198, "id15"]], "get_area() (datumaro.components.annotation.rlemask method)": [[198, "datumaro.components.annotation.RleMask.get_area"]], "get_area() (datumaro.components.annotation.rotatedbbox method)": [[198, "datumaro.components.annotation.RotatedBbox.get_area"], [198, "id32"]], "get_area() (datumaro.components.annotation.shape method)": [[198, "datumaro.components.annotation.Shape.get_area"], [198, "id5"]], "get_bbox() (datumaro.components.annotation.bbox method)": [[198, "datumaro.components.annotation.Bbox.get_bbox"], [198, "id22"]], "get_bbox() (datumaro.components.annotation.ellipse method)": [[198, "datumaro.components.annotation.Ellipse.get_bbox"]], "get_bbox() (datumaro.components.annotation.mask method)": [[198, "datumaro.components.annotation.Mask.get_bbox"]], "get_bbox() (datumaro.components.annotation.points method)": [[198, "datumaro.components.annotation.Points.get_bbox"], [198, "id43"]], "get_bbox() (datumaro.components.annotation.rlemask method)": [[198, "datumaro.components.annotation.RleMask.get_bbox"]], "get_bbox() (datumaro.components.annotation.rotatedbbox method)": [[198, "datumaro.components.annotation.RotatedBbox.get_bbox"], [198, "id33"]], "get_bbox() (datumaro.components.annotation.shape method)": [[198, "datumaro.components.annotation.Shape.get_bbox"], [198, "id7"]], "get_instance_labels() (datumaro.components.annotation.compiledmask method)": [[198, "datumaro.components.annotation.CompiledMask.get_instance_labels"]], "get_points() (datumaro.components.annotation.ellipse method)": [[198, "datumaro.components.annotation.Ellipse.get_points"]], "get_points() (datumaro.components.annotation.shape method)": [[198, "datumaro.components.annotation.Shape.get_points"], [198, "id8"]], "get_rotated_bbox() (datumaro.components.annotation.rotatedbbox method)": [[198, "datumaro.components.annotation.RotatedBbox.get_rotated_bbox"], [198, "id34"]], "get_semantic_seg_mask() (datumaro.components.annotation.annotations method)": [[198, "datumaro.components.annotation.Annotations.get_semantic_seg_mask"]], "group (datumaro.components.annotation.annotation attribute)": [[198, "datumaro.components.annotation.Annotation.group"]], "group (datumaro.components.annotation.featurevector attribute)": [[198, "datumaro.components.annotation.FeatureVector.group"]], "group_type (datumaro.components.annotation.labelcategories.labelgroup attribute)": [[198, "datumaro.components.annotation.LabelCategories.LabelGroup.group_type"]], "h (datumaro.components.annotation.bbox property)": [[198, "id20"]], "h (datumaro.components.annotation.ellipse property)": [[198, "datumaro.components.annotation.Ellipse.h"]], "h (datumaro.components.annotation.rotatedbbox property)": [[198, "id30"]], "h() (datumaro.components.annotation.bbox method)": [[198, "datumaro.components.annotation.Bbox.h"]], "h() (datumaro.components.annotation.rotatedbbox method)": [[198, "datumaro.components.annotation.RotatedBbox.h"]], "hash_key (datumaro.components.annotation.annotationtype attribute)": [[198, "datumaro.components.annotation.AnnotationType.hash_key"]], "hash_key (datumaro.components.annotation.hashkey attribute)": [[198, "datumaro.components.annotation.HashKey.hash_key"]], "hidden (datumaro.components.annotation.points.visibility attribute)": [[198, "datumaro.components.annotation.Points.Visibility.hidden"], [198, "id39"]], "id (datumaro.components.annotation.annotation attribute)": [[198, "datumaro.components.annotation.Annotation.id"]], "id (datumaro.components.annotation.featurevector attribute)": [[198, "datumaro.components.annotation.FeatureVector.id"]], "image (datumaro.components.annotation.extractedmask property)": [[198, "datumaro.components.annotation.ExtractedMask.image"]], "image (datumaro.components.annotation.mask property)": [[198, "datumaro.components.annotation.Mask.image"]], "image (datumaro.components.annotation.rlemask property)": [[198, "datumaro.components.annotation.RleMask.image"]], "index (datumaro.components.annotation.extractedmask attribute)": [[198, "datumaro.components.annotation.ExtractedMask.index"], [198, "id1"]], "index_mask (datumaro.components.annotation.extractedmask attribute)": [[198, "datumaro.components.annotation.ExtractedMask.index_mask"], [198, "id0"]], "instance_count (datumaro.components.annotation.compiledmask property)": [[198, "datumaro.components.annotation.CompiledMask.instance_count"]], "instance_mask (datumaro.components.annotation.compiledmask property)": [[198, "datumaro.components.annotation.CompiledMask.instance_mask"]], "inverse_colormap (datumaro.components.annotation.maskcategories property)": [[198, "datumaro.components.annotation.MaskCategories.inverse_colormap"]], "iou() (datumaro.components.annotation.bbox method)": [[198, "datumaro.components.annotation.Bbox.iou"], [198, "id24"]], "iou() (datumaro.components.annotation.ellipse method)": [[198, "datumaro.components.annotation.Ellipse.iou"]], "iou() (datumaro.components.annotation.rotatedbbox method)": [[198, "datumaro.components.annotation.RotatedBbox.iou"], [198, "id36"]], "items (datumaro.components.annotation.labelcategories attribute)": [[198, "datumaro.components.annotation.LabelCategories.items"]], "items (datumaro.components.annotation.pointscategories attribute)": [[198, "datumaro.components.annotation.PointsCategories.items"]], "items (datumaro.components.annotation.tabularcategories attribute)": [[198, "datumaro.components.annotation.TabularCategories.items"]], "joints (datumaro.components.annotation.pointscategories.category attribute)": [[198, "datumaro.components.annotation.PointsCategories.Category.joints"]], "label (datumaro.components.annotation.annotationtype attribute)": [[198, "datumaro.components.annotation.AnnotationType.label"]], "label (datumaro.components.annotation.cuboid3d attribute)": [[198, "datumaro.components.annotation.Cuboid3d.label"], [198, "id11"]], "label (datumaro.components.annotation.label attribute)": [[198, "datumaro.components.annotation.Label.label"]], "label (datumaro.components.annotation.mask attribute)": [[198, "datumaro.components.annotation.Mask.label"]], "label (datumaro.components.annotation.shape attribute)": [[198, "datumaro.components.annotation.Shape.label"], [198, "id3"]], "label_groups (datumaro.components.annotation.labelcategories attribute)": [[198, "datumaro.components.annotation.LabelCategories.label_groups"]], "labels (datumaro.components.annotation.labelcategories.labelgroup attribute)": [[198, "datumaro.components.annotation.LabelCategories.LabelGroup.labels"]], "labels (datumaro.components.annotation.pointscategories.category attribute)": [[198, "datumaro.components.annotation.PointsCategories.Category.labels"]], "labels (datumaro.components.annotation.tabularcategories.category attribute)": [[198, "datumaro.components.annotation.TabularCategories.Category.labels"]], "lazy_extract() (datumaro.components.annotation.compiledmask method)": [[198, "datumaro.components.annotation.CompiledMask.lazy_extract"]], "mask (datumaro.components.annotation.annotationtype attribute)": [[198, "datumaro.components.annotation.AnnotationType.mask"]], "name (datumaro.components.annotation.labelcategories.category attribute)": [[198, "datumaro.components.annotation.LabelCategories.Category.name"]], "name (datumaro.components.annotation.labelcategories.labelgroup attribute)": [[198, "datumaro.components.annotation.LabelCategories.LabelGroup.name"]], "name (datumaro.components.annotation.tabularcategories.category attribute)": [[198, "datumaro.components.annotation.TabularCategories.Category.name"]], "object_id (datumaro.components.annotation.annotation attribute)": [[198, "datumaro.components.annotation.Annotation.object_id"]], "object_id (datumaro.components.annotation.featurevector attribute)": [[198, "datumaro.components.annotation.FeatureVector.object_id"]], "paint() (datumaro.components.annotation.mask method)": [[198, "datumaro.components.annotation.Mask.paint"]], "parent (datumaro.components.annotation.labelcategories.category attribute)": [[198, "datumaro.components.annotation.LabelCategories.Category.parent"]], "points (datumaro.components.annotation.annotationtype attribute)": [[198, "datumaro.components.annotation.AnnotationType.points"]], "points (datumaro.components.annotation.shape attribute)": [[198, "datumaro.components.annotation.Shape.points"], [198, "id2"]], "polygon (datumaro.components.annotation.annotationtype attribute)": [[198, "datumaro.components.annotation.AnnotationType.polygon"]], "polyline (datumaro.components.annotation.annotationtype attribute)": [[198, "datumaro.components.annotation.AnnotationType.polyline"]], "position (datumaro.components.annotation.cuboid3d property)": [[198, "id12"]], "position() (datumaro.components.annotation.cuboid3d method)": [[198, "datumaro.components.annotation.Cuboid3d.position"]], "r (datumaro.components.annotation.rotatedbbox property)": [[198, "id31"]], "r() (datumaro.components.annotation.rotatedbbox method)": [[198, "datumaro.components.annotation.RotatedBbox.r"]], "rle (datumaro.components.annotation.rlemask property)": [[198, "datumaro.components.annotation.RleMask.rle"]], "rotated_bbox (datumaro.components.annotation.annotationtype attribute)": [[198, "datumaro.components.annotation.AnnotationType.rotated_bbox"]], "rotation (datumaro.components.annotation.cuboid3d property)": [[198, "id13"]], "rotation() (datumaro.components.annotation.cuboid3d method)": [[198, "datumaro.components.annotation.Cuboid3d.rotation"]], "scale (datumaro.components.annotation.cuboid3d property)": [[198, "id14"]], "scale() (datumaro.components.annotation.cuboid3d method)": [[198, "datumaro.components.annotation.Cuboid3d.scale"]], "super_resolution_annotation (datumaro.components.annotation.annotationtype attribute)": [[198, "datumaro.components.annotation.AnnotationType.super_resolution_annotation"]], "tabular (datumaro.components.annotation.annotationtype attribute)": [[198, "datumaro.components.annotation.AnnotationType.tabular"]], "to_str() (datumaro.components.annotation.grouptype method)": [[198, "datumaro.components.annotation.GroupType.to_str"]], "type (datumaro.components.annotation.annotation property)": [[198, "datumaro.components.annotation.Annotation.type"]], "unknown (datumaro.components.annotation.annotationtype attribute)": [[198, "datumaro.components.annotation.AnnotationType.unknown"]], "values (datumaro.components.annotation.tabular attribute)": [[198, "datumaro.components.annotation.Tabular.values"]], "vector (datumaro.components.annotation.featurevector attribute)": [[198, "datumaro.components.annotation.FeatureVector.vector"]], "visibility (datumaro.components.annotation.points attribute)": [[198, "datumaro.components.annotation.Points.visibility"], [198, "id41"]], "visible (datumaro.components.annotation.points.visibility attribute)": [[198, "datumaro.components.annotation.Points.Visibility.visible"], [198, "id40"]], "w (datumaro.components.annotation.bbox property)": [[198, "id19"]], "w (datumaro.components.annotation.ellipse property)": [[198, "datumaro.components.annotation.Ellipse.w"]], "w (datumaro.components.annotation.rotatedbbox property)": [[198, "id29"]], "w() (datumaro.components.annotation.bbox method)": [[198, "datumaro.components.annotation.Bbox.w"]], "w() (datumaro.components.annotation.rotatedbbox method)": [[198, "datumaro.components.annotation.RotatedBbox.w"]], "wrap() (datumaro.components.annotation.annotation method)": [[198, "datumaro.components.annotation.Annotation.wrap"]], "wrap() (datumaro.components.annotation.bbox method)": [[198, "datumaro.components.annotation.Bbox.wrap"], [198, "id25"]], "wrap() (datumaro.components.annotation.ellipse method)": [[198, "datumaro.components.annotation.Ellipse.wrap"]], "wrap() (datumaro.components.annotation.rotatedbbox method)": [[198, "datumaro.components.annotation.RotatedBbox.wrap"], [198, "id37"]], "x (datumaro.components.annotation.bbox property)": [[198, "id17"]], "x() (datumaro.components.annotation.bbox method)": [[198, "datumaro.components.annotation.Bbox.x"]], "x1 (datumaro.components.annotation.ellipse property)": [[198, "datumaro.components.annotation.Ellipse.x1"]], "x2 (datumaro.components.annotation.ellipse property)": [[198, "datumaro.components.annotation.Ellipse.x2"]], "y (datumaro.components.annotation.bbox property)": [[198, "id18"]], "y() (datumaro.components.annotation.bbox method)": [[198, "datumaro.components.annotation.Bbox.y"]], "y1 (datumaro.components.annotation.ellipse property)": [[198, "datumaro.components.annotation.Ellipse.y1"]], "y2 (datumaro.components.annotation.ellipse property)": [[198, "datumaro.components.annotation.Ellipse.y2"]], "z_order (datumaro.components.annotation.mask attribute)": [[198, "datumaro.components.annotation.Mask.z_order"]], "z_order (datumaro.components.annotation.shape attribute)": [[198, "datumaro.components.annotation.Shape.z_order"], [198, "id4"]], "datumaro.components.annotations": [[199, "module-datumaro.components.annotations"]], "annotation (class in datumaro.components.annotations.matcher)": [[200, "datumaro.components.annotations.matcher.Annotation"]], "annotationmatcher (class in datumaro.components.annotations.matcher)": [[200, "datumaro.components.annotations.matcher.AnnotationMatcher"]], "bboxmatcher (class in datumaro.components.annotations.matcher)": [[200, "datumaro.components.annotations.matcher.BboxMatcher"]], "captionsmatcher (class in datumaro.components.annotations.matcher)": [[200, "datumaro.components.annotations.matcher.CaptionsMatcher"]], "cuboid3dmatcher (class in datumaro.components.annotations.matcher)": [[200, "datumaro.components.annotations.matcher.Cuboid3dMatcher"]], "featurevectormatcher (class in datumaro.components.annotations.matcher)": [[200, "datumaro.components.annotations.matcher.FeatureVectorMatcher"]], "hashkeymatcher (class in datumaro.components.annotations.matcher)": [[200, "datumaro.components.annotations.matcher.HashKeyMatcher"]], "imatchercontext (class in datumaro.components.annotations.matcher)": [[200, "datumaro.components.annotations.matcher.IMatcherContext"]], "imergercontext (class in datumaro.components.annotations.matcher)": [[200, "datumaro.components.annotations.matcher.IMergerContext"]], "imageannotationmatcher (class in datumaro.components.annotations.matcher)": [[200, "datumaro.components.annotations.matcher.ImageAnnotationMatcher"]], "labelmatcher (class in datumaro.components.annotations.matcher)": [[200, "datumaro.components.annotations.matcher.LabelMatcher"]], "linematcher (class in datumaro.components.annotations.matcher)": [[200, "datumaro.components.annotations.matcher.LineMatcher"]], "maskmatcher (class in datumaro.components.annotations.matcher)": [[200, "datumaro.components.annotations.matcher.MaskMatcher"]], "oks() (in module datumaro.components.annotations.matcher)": [[200, "datumaro.components.annotations.matcher.OKS"]], "pep 681": [[200, "index-0"], [201, "index-0"], [229, "index-0"]], "points (class in datumaro.components.annotations.matcher)": [[200, "datumaro.components.annotations.matcher.Points"]], "points.visibility (class in datumaro.components.annotations.matcher)": [[200, "datumaro.components.annotations.matcher.Points.Visibility"]], "pointsmatcher (class in datumaro.components.annotations.matcher)": [[200, "datumaro.components.annotations.matcher.PointsMatcher"]], "polygonmatcher (class in datumaro.components.annotations.matcher)": [[200, "datumaro.components.annotations.matcher.PolygonMatcher"]], "python enhancement proposals": [[200, "index-0"], [201, "index-0"], [229, "index-0"]], "rotatedbboxmatcher (class in datumaro.components.annotations.matcher)": [[200, "datumaro.components.annotations.matcher.RotatedBboxMatcher"]], "shapematcher (class in datumaro.components.annotations.matcher)": [[200, "datumaro.components.annotations.matcher.ShapeMatcher"]], "tabularmatcher (class in datumaro.components.annotations.matcher)": [[200, "datumaro.components.annotations.matcher.TabularMatcher"]], "__attrs_post_init__() (datumaro.components.annotations.matcher.points method)": [[200, "datumaro.components.annotations.matcher.Points.__attrs_post_init__"]], "_type (datumaro.components.annotations.matcher.points attribute)": [[200, "datumaro.components.annotations.matcher.Points._type"]], "absent (datumaro.components.annotations.matcher.points.visibility attribute)": [[200, "datumaro.components.annotations.matcher.Points.Visibility.absent"], [200, "id0"]], "approximate_line() (in module datumaro.components.annotations.matcher)": [[200, "datumaro.components.annotations.matcher.approximate_line"]], "as_dict() (datumaro.components.annotations.matcher.annotation method)": [[200, "datumaro.components.annotations.matcher.Annotation.as_dict"]], "attrib() (in module datumaro.components.annotations.matcher)": [[200, "datumaro.components.annotations.matcher.attrib"]], "attributes (datumaro.components.annotations.matcher.annotation attribute)": [[200, "datumaro.components.annotations.matcher.Annotation.attributes"]], "attrs() (in module datumaro.components.annotations.matcher)": [[200, "datumaro.components.annotations.matcher.attrs"]], "bbox_iou() (in module datumaro.components.annotations.matcher)": [[200, "datumaro.components.annotations.matcher.bbox_iou"]], "datumaro.components.annotations.matcher": [[200, "module-datumaro.components.annotations.matcher"]], "distance() (datumaro.components.annotations.matcher.cuboid3dmatcher method)": [[200, "datumaro.components.annotations.matcher.Cuboid3dMatcher.distance"]], "distance() (datumaro.components.annotations.matcher.labelmatcher method)": [[200, "datumaro.components.annotations.matcher.LabelMatcher.distance"]], "distance() (datumaro.components.annotations.matcher.linematcher method)": [[200, "datumaro.components.annotations.matcher.LineMatcher.distance"]], "distance() (datumaro.components.annotations.matcher.pointsmatcher method)": [[200, "datumaro.components.annotations.matcher.PointsMatcher.distance"]], "distance() (datumaro.components.annotations.matcher.rotatedbboxmatcher method)": [[200, "datumaro.components.annotations.matcher.RotatedBboxMatcher.distance"]], "distance() (datumaro.components.annotations.matcher.shapematcher method)": [[200, "datumaro.components.annotations.matcher.ShapeMatcher.distance"]], "get_any_label_name() (datumaro.components.annotations.matcher.imatchercontext method)": [[200, "datumaro.components.annotations.matcher.IMatcherContext.get_any_label_name"]], "get_area() (datumaro.components.annotations.matcher.points method)": [[200, "datumaro.components.annotations.matcher.Points.get_area"], [200, "id4"]], "get_bbox() (datumaro.components.annotations.matcher.points method)": [[200, "datumaro.components.annotations.matcher.Points.get_bbox"], [200, "id5"]], "group (datumaro.components.annotations.matcher.annotation attribute)": [[200, "datumaro.components.annotations.matcher.Annotation.group"]], "hidden (datumaro.components.annotations.matcher.points.visibility attribute)": [[200, "datumaro.components.annotations.matcher.Points.Visibility.hidden"], [200, "id1"]], "id (datumaro.components.annotations.matcher.annotation attribute)": [[200, "datumaro.components.annotations.matcher.Annotation.id"]], "label_matcher() (datumaro.components.annotations.matcher.shapematcher method)": [[200, "datumaro.components.annotations.matcher.ShapeMatcher.label_matcher"]], "match_annotations() (datumaro.components.annotations.matcher.annotationmatcher method)": [[200, "datumaro.components.annotations.matcher.AnnotationMatcher.match_annotations"]], "match_annotations() (datumaro.components.annotations.matcher.captionsmatcher method)": [[200, "datumaro.components.annotations.matcher.CaptionsMatcher.match_annotations"]], "match_annotations() (datumaro.components.annotations.matcher.featurevectormatcher method)": [[200, "datumaro.components.annotations.matcher.FeatureVectorMatcher.match_annotations"]], "match_annotations() (datumaro.components.annotations.matcher.hashkeymatcher method)": [[200, "datumaro.components.annotations.matcher.HashKeyMatcher.match_annotations"]], "match_annotations() (datumaro.components.annotations.matcher.imageannotationmatcher method)": [[200, "datumaro.components.annotations.matcher.ImageAnnotationMatcher.match_annotations"]], "match_annotations() (datumaro.components.annotations.matcher.labelmatcher method)": [[200, "datumaro.components.annotations.matcher.LabelMatcher.match_annotations"]], "match_annotations() (datumaro.components.annotations.matcher.shapematcher method)": [[200, "datumaro.components.annotations.matcher.ShapeMatcher.match_annotations"]], "match_annotations() (datumaro.components.annotations.matcher.tabularmatcher method)": [[200, "datumaro.components.annotations.matcher.TabularMatcher.match_annotations"]], "match_segments_more_than_pair() (in module datumaro.components.annotations.matcher)": [[200, "datumaro.components.annotations.matcher.match_segments_more_than_pair"]], "match_segments_pair() (in module datumaro.components.annotations.matcher)": [[200, "datumaro.components.annotations.matcher.match_segments_pair"]], "max_bbox() (in module datumaro.components.annotations.matcher)": [[200, "datumaro.components.annotations.matcher.max_bbox"]], "mean_bbox() (in module datumaro.components.annotations.matcher)": [[200, "datumaro.components.annotations.matcher.mean_bbox"]], "merge() (datumaro.components.annotations.matcher.imergercontext method)": [[200, "datumaro.components.annotations.matcher.IMergerContext.merge"]], "merge_categories() (datumaro.components.annotations.matcher.imergercontext method)": [[200, "datumaro.components.annotations.matcher.IMergerContext.merge_categories"]], "merge_infos() (datumaro.components.annotations.matcher.imergercontext method)": [[200, "datumaro.components.annotations.matcher.IMergerContext.merge_infos"]], "merge_media_types() (datumaro.components.annotations.matcher.imergercontext method)": [[200, "datumaro.components.annotations.matcher.IMergerContext.merge_media_types"]], "object_id (datumaro.components.annotations.matcher.annotation attribute)": [[200, "datumaro.components.annotations.matcher.Annotation.object_id"]], "segment_iou() (in module datumaro.components.annotations.matcher)": [[200, "datumaro.components.annotations.matcher.segment_iou"]], "sigma (datumaro.components.annotations.matcher.pointsmatcher attribute)": [[200, "datumaro.components.annotations.matcher.PointsMatcher.sigma"]], "sigma (datumaro.components.annotations.matcher.rotatedbboxmatcher attribute)": [[200, "datumaro.components.annotations.matcher.RotatedBboxMatcher.sigma"]], "type (datumaro.components.annotations.matcher.annotation property)": [[200, "datumaro.components.annotations.matcher.Annotation.type"]], "visibility (datumaro.components.annotations.matcher.points attribute)": [[200, "datumaro.components.annotations.matcher.Points.visibility"], [200, "id3"]], "visible (datumaro.components.annotations.matcher.points.visibility attribute)": [[200, "datumaro.components.annotations.matcher.Points.Visibility.visible"], [200, "id2"]], "wrap() (datumaro.components.annotations.matcher.annotation method)": [[200, "datumaro.components.annotations.matcher.Annotation.wrap"]], "annotationmatcher (class in datumaro.components.annotations.merger)": [[201, "datumaro.components.annotations.merger.AnnotationMatcher"]], "annotationmerger (class in datumaro.components.annotations.merger)": [[201, "datumaro.components.annotations.merger.AnnotationMerger"]], "bbox (class in datumaro.components.annotations.merger)": [[201, "datumaro.components.annotations.merger.Bbox"]], "bboxmatcher (class in datumaro.components.annotations.merger)": [[201, "datumaro.components.annotations.merger.BboxMatcher"]], "bboxmerger (class in datumaro.components.annotations.merger)": [[201, "datumaro.components.annotations.merger.BboxMerger"]], "captionsmatcher (class in datumaro.components.annotations.merger)": [[201, "datumaro.components.annotations.merger.CaptionsMatcher"]], "captionsmerger (class in datumaro.components.annotations.merger)": [[201, "datumaro.components.annotations.merger.CaptionsMerger"]], "cuboid3dmatcher (class in datumaro.components.annotations.merger)": [[201, "datumaro.components.annotations.merger.Cuboid3dMatcher"]], "cuboid3dmerger (class in datumaro.components.annotations.merger)": [[201, "datumaro.components.annotations.merger.Cuboid3dMerger"]], "ellipsemerger (class in datumaro.components.annotations.merger)": [[201, "datumaro.components.annotations.merger.EllipseMerger"]], "failedlabelvotingerror": [[201, "datumaro.components.annotations.merger.FailedLabelVotingError"], [214, "datumaro.components.errors.FailedLabelVotingError"]], "featurevectormatcher (class in datumaro.components.annotations.merger)": [[201, "datumaro.components.annotations.merger.FeatureVectorMatcher"]], "featurevectormerger (class in datumaro.components.annotations.merger)": [[201, "datumaro.components.annotations.merger.FeatureVectorMerger"]], "hashkeymatcher (class in datumaro.components.annotations.merger)": [[201, "datumaro.components.annotations.merger.HashKeyMatcher"]], "hashkeymerger (class in datumaro.components.annotations.merger)": [[201, "datumaro.components.annotations.merger.HashKeyMerger"]], "imageannotationmatcher (class in datumaro.components.annotations.merger)": [[201, "datumaro.components.annotations.merger.ImageAnnotationMatcher"]], "imageannotationmerger (class in datumaro.components.annotations.merger)": [[201, "datumaro.components.annotations.merger.ImageAnnotationMerger"]], "label (class in datumaro.components.annotations.merger)": [[201, "datumaro.components.annotations.merger.Label"]], "labelmatcher (class in datumaro.components.annotations.merger)": [[201, "datumaro.components.annotations.merger.LabelMatcher"]], "labelmerger (class in datumaro.components.annotations.merger)": [[201, "datumaro.components.annotations.merger.LabelMerger"]], "linematcher (class in datumaro.components.annotations.merger)": [[201, "datumaro.components.annotations.merger.LineMatcher"]], "linemerger (class in datumaro.components.annotations.merger)": [[201, "datumaro.components.annotations.merger.LineMerger"]], "maskmatcher (class in datumaro.components.annotations.merger)": [[201, "datumaro.components.annotations.merger.MaskMatcher"]], "maskmerger (class in datumaro.components.annotations.merger)": [[201, "datumaro.components.annotations.merger.MaskMerger"]], "pointsmatcher (class in datumaro.components.annotations.merger)": [[201, "datumaro.components.annotations.merger.PointsMatcher"]], "pointsmerger (class in datumaro.components.annotations.merger)": [[201, "datumaro.components.annotations.merger.PointsMerger"]], "polygonmatcher (class in datumaro.components.annotations.merger)": [[201, "datumaro.components.annotations.merger.PolygonMatcher"]], "polygonmerger (class in datumaro.components.annotations.merger)": [[201, "datumaro.components.annotations.merger.PolygonMerger"]], "rotatedbboxmatcher (class in datumaro.components.annotations.merger)": [[201, "datumaro.components.annotations.merger.RotatedBboxMatcher"]], "rotatedbboxmerger (class in datumaro.components.annotations.merger)": [[201, "datumaro.components.annotations.merger.RotatedBboxMerger"]], "shapematcher (class in datumaro.components.annotations.merger)": [[201, "datumaro.components.annotations.merger.ShapeMatcher"]], "tabularmatcher (class in datumaro.components.annotations.merger)": [[201, "datumaro.components.annotations.merger.TabularMatcher"]], "tabularmerger (class in datumaro.components.annotations.merger)": [[201, "datumaro.components.annotations.merger.TabularMerger"]], "__init__() (datumaro.components.annotations.merger.bbox method)": [[201, "datumaro.components.annotations.merger.Bbox.__init__"]], "_type (datumaro.components.annotations.merger.bbox attribute)": [[201, "datumaro.components.annotations.merger.Bbox._type"]], "ann (datumaro.components.annotations.merger.failedlabelvotingerror attribute)": [[201, "datumaro.components.annotations.merger.FailedLabelVotingError.ann"]], "as_polygon() (datumaro.components.annotations.merger.bbox method)": [[201, "datumaro.components.annotations.merger.Bbox.as_polygon"], [201, "id6"]], "attrib() (in module datumaro.components.annotations.merger)": [[201, "datumaro.components.annotations.merger.attrib"]], "attrs() (in module datumaro.components.annotations.merger)": [[201, "datumaro.components.annotations.merger.attrs"]], "datumaro.components.annotations.merger": [[201, "module-datumaro.components.annotations.merger"]], "distance() (datumaro.components.annotations.merger.cuboid3dmatcher method)": [[201, "datumaro.components.annotations.merger.Cuboid3dMatcher.distance"]], "distance() (datumaro.components.annotations.merger.labelmatcher method)": [[201, "datumaro.components.annotations.merger.LabelMatcher.distance"]], "distance() (datumaro.components.annotations.merger.linematcher method)": [[201, "datumaro.components.annotations.merger.LineMatcher.distance"]], "distance() (datumaro.components.annotations.merger.pointsmatcher method)": [[201, "datumaro.components.annotations.merger.PointsMatcher.distance"]], "distance() (datumaro.components.annotations.merger.rotatedbboxmatcher method)": [[201, "datumaro.components.annotations.merger.RotatedBboxMatcher.distance"]], "distance() (datumaro.components.annotations.merger.shapematcher method)": [[201, "datumaro.components.annotations.merger.ShapeMatcher.distance"]], "get_area() (datumaro.components.annotations.merger.bbox method)": [[201, "datumaro.components.annotations.merger.Bbox.get_area"], [201, "id4"]], "get_bbox() (datumaro.components.annotations.merger.bbox method)": [[201, "datumaro.components.annotations.merger.Bbox.get_bbox"], [201, "id5"]], "h (datumaro.components.annotations.merger.bbox property)": [[201, "id3"]], "h() (datumaro.components.annotations.merger.bbox method)": [[201, "datumaro.components.annotations.merger.Bbox.h"]], "iou() (datumaro.components.annotations.merger.bbox method)": [[201, "datumaro.components.annotations.merger.Bbox.iou"], [201, "id7"]], "item_id (datumaro.components.annotations.merger.failedlabelvotingerror attribute)": [[201, "datumaro.components.annotations.merger.FailedLabelVotingError.item_id"]], "label (datumaro.components.annotations.merger.label attribute)": [[201, "datumaro.components.annotations.merger.Label.label"]], "label_matcher() (datumaro.components.annotations.merger.shapematcher method)": [[201, "datumaro.components.annotations.merger.ShapeMatcher.label_matcher"]], "match_annotations() (datumaro.components.annotations.merger.annotationmatcher method)": [[201, "datumaro.components.annotations.merger.AnnotationMatcher.match_annotations"]], "match_annotations() (datumaro.components.annotations.merger.captionsmatcher method)": [[201, "datumaro.components.annotations.merger.CaptionsMatcher.match_annotations"]], "match_annotations() (datumaro.components.annotations.merger.featurevectormatcher method)": [[201, "datumaro.components.annotations.merger.FeatureVectorMatcher.match_annotations"]], "match_annotations() (datumaro.components.annotations.merger.hashkeymatcher method)": [[201, "datumaro.components.annotations.merger.HashKeyMatcher.match_annotations"]], "match_annotations() (datumaro.components.annotations.merger.imageannotationmatcher method)": [[201, "datumaro.components.annotations.merger.ImageAnnotationMatcher.match_annotations"]], "match_annotations() (datumaro.components.annotations.merger.labelmatcher method)": [[201, "datumaro.components.annotations.merger.LabelMatcher.match_annotations"]], "match_annotations() (datumaro.components.annotations.merger.shapematcher method)": [[201, "datumaro.components.annotations.merger.ShapeMatcher.match_annotations"]], "match_annotations() (datumaro.components.annotations.merger.tabularmatcher method)": [[201, "datumaro.components.annotations.merger.TabularMatcher.match_annotations"]], "mean_bbox() (in module datumaro.components.annotations.merger)": [[201, "datumaro.components.annotations.merger.mean_bbox"]], "merge_cluster() (datumaro.components.annotations.merger.cuboid3dmerger method)": [[201, "datumaro.components.annotations.merger.Cuboid3dMerger.merge_cluster"]], "merge_clusters() (datumaro.components.annotations.merger.annotationmerger method)": [[201, "datumaro.components.annotations.merger.AnnotationMerger.merge_clusters"]], "merge_clusters() (datumaro.components.annotations.merger.labelmerger method)": [[201, "datumaro.components.annotations.merger.LabelMerger.merge_clusters"]], "segment_iou() (in module datumaro.components.annotations.merger)": [[201, "datumaro.components.annotations.merger.segment_iou"]], "sigma (datumaro.components.annotations.merger.pointsmatcher attribute)": [[201, "datumaro.components.annotations.merger.PointsMatcher.sigma"]], "sigma (datumaro.components.annotations.merger.rotatedbboxmatcher attribute)": [[201, "datumaro.components.annotations.merger.RotatedBboxMatcher.sigma"]], "votes (datumaro.components.annotations.merger.failedlabelvotingerror attribute)": [[201, "datumaro.components.annotations.merger.FailedLabelVotingError.votes"]], "w (datumaro.components.annotations.merger.bbox property)": [[201, "id2"]], "w() (datumaro.components.annotations.merger.bbox method)": [[201, "datumaro.components.annotations.merger.Bbox.w"]], "wrap() (datumaro.components.annotations.merger.bbox method)": [[201, "datumaro.components.annotations.merger.Bbox.wrap"], [201, "id8"]], "x (datumaro.components.annotations.merger.bbox property)": [[201, "id0"]], "x() (datumaro.components.annotations.merger.bbox method)": [[201, "datumaro.components.annotations.merger.Bbox.x"]], "y (datumaro.components.annotations.merger.bbox property)": [[201, "id1"]], "y() (datumaro.components.annotations.merger.bbox method)": [[201, "datumaro.components.annotations.merger.Bbox.y"]], "cliplugin (class in datumaro.components.cli_plugin)": [[202, "datumaro.components.cli_plugin.CliPlugin"]], "name (datumaro.components.cli_plugin.cliplugin attribute)": [[202, "datumaro.components.cli_plugin.CliPlugin.NAME"]], "build_cmdline_parser() (datumaro.components.cli_plugin.cliplugin class method)": [[202, "datumaro.components.cli_plugin.CliPlugin.build_cmdline_parser"]], "datumaro.components.cli_plugin": [[202, "module-datumaro.components.cli_plugin"]], "parse_cmdline() (datumaro.components.cli_plugin.cliplugin class method)": [[202, "datumaro.components.cli_plugin.CliPlugin.parse_cmdline"]], "plugin_types() (in module datumaro.components.cli_plugin)": [[202, "datumaro.components.cli_plugin.plugin_types"]], "remove_plugin_type() (in module datumaro.components.cli_plugin)": [[202, "datumaro.components.cli_plugin.remove_plugin_type"]], "distancecomparator (class in datumaro.components.comparator)": [[203, "datumaro.components.comparator.DistanceComparator"]], "equalitycomparator (class in datumaro.components.comparator)": [[203, "datumaro.components.comparator.EqualityComparator"]], "tablecomparator (class in datumaro.components.comparator)": [[203, "datumaro.components.comparator.TableComparator"]], "compare_datasets() (datumaro.components.comparator.equalitycomparator method)": [[203, "datumaro.components.comparator.EqualityComparator.compare_datasets"]], "compare_datasets() (datumaro.components.comparator.tablecomparator method)": [[203, "datumaro.components.comparator.TableComparator.compare_datasets"]], "datumaro.components.comparator": [[203, "module-datumaro.components.comparator"]], "errors (datumaro.components.comparator.equalitycomparator attribute)": [[203, "datumaro.components.comparator.EqualityComparator.errors"]], "match_annotations() (datumaro.components.comparator.distancecomparator method)": [[203, "datumaro.components.comparator.DistanceComparator.match_annotations"]], "match_boxes() (datumaro.components.comparator.distancecomparator method)": [[203, "datumaro.components.comparator.DistanceComparator.match_boxes"]], "match_images (datumaro.components.comparator.equalitycomparator attribute)": [[203, "datumaro.components.comparator.EqualityComparator.match_images"]], "match_labels() (datumaro.components.comparator.distancecomparator method)": [[203, "datumaro.components.comparator.DistanceComparator.match_labels"]], "match_lines() (datumaro.components.comparator.distancecomparator method)": [[203, "datumaro.components.comparator.DistanceComparator.match_lines"]], "match_masks() (datumaro.components.comparator.distancecomparator method)": [[203, "datumaro.components.comparator.DistanceComparator.match_masks"]], "match_points() (datumaro.components.comparator.distancecomparator method)": [[203, "datumaro.components.comparator.DistanceComparator.match_points"]], "match_polygons() (datumaro.components.comparator.distancecomparator method)": [[203, "datumaro.components.comparator.DistanceComparator.match_polygons"]], "save_compare_report() (datumaro.components.comparator.equalitycomparator static method)": [[203, "datumaro.components.comparator.EqualityComparator.save_compare_report"]], "save_compare_report() (datumaro.components.comparator.tablecomparator static method)": [[203, "datumaro.components.comparator.TableComparator.save_compare_report"]], "config (class in datumaro.components.config)": [[204, "datumaro.components.config.Config"]], "dictconfig (class in datumaro.components.config)": [[204, "datumaro.components.config.DictConfig"]], "schema (class in datumaro.components.config)": [[204, "datumaro.components.config.Schema"]], "schema.item (class in datumaro.components.config)": [[204, "datumaro.components.config.Schema.Item"]], "schemabuilder (class in datumaro.components.config)": [[204, "datumaro.components.config.SchemaBuilder"]], "add() (datumaro.components.config.schemabuilder method)": [[204, "datumaro.components.config.SchemaBuilder.add"]], "build() (datumaro.components.config.schemabuilder method)": [[204, "datumaro.components.config.SchemaBuilder.build"]], "datumaro.components.config": [[204, "module-datumaro.components.config"]], "dump() (datumaro.components.config.config method)": [[204, "datumaro.components.config.Config.dump"]], "get() (datumaro.components.config.config method)": [[204, "datumaro.components.config.Config.get"]], "get() (datumaro.components.config.schema method)": [[204, "datumaro.components.config.Schema.get"]], "items() (datumaro.components.config.config method)": [[204, "datumaro.components.config.Config.items"]], "items() (datumaro.components.config.schema method)": [[204, "datumaro.components.config.Schema.items"]], "keys() (datumaro.components.config.config method)": [[204, "datumaro.components.config.Config.keys"]], "keys() (datumaro.components.config.schema method)": [[204, "datumaro.components.config.Schema.keys"]], "parse() (datumaro.components.config.config class method)": [[204, "datumaro.components.config.Config.parse"]], "remove() (datumaro.components.config.config method)": [[204, "datumaro.components.config.Config.remove"]], "set() (datumaro.components.config.config method)": [[204, "datumaro.components.config.Config.set"]], "set() (datumaro.components.config.dictconfig method)": [[204, "datumaro.components.config.DictConfig.set"]], "update() (datumaro.components.config.config method)": [[204, "datumaro.components.config.Config.update"]], "values() (datumaro.components.config.config method)": [[204, "datumaro.components.config.Config.values"]], "values() (datumaro.components.config.schema method)": [[204, "datumaro.components.config.Schema.values"]], "yaml_representer() (datumaro.components.config.config static method)": [[204, "datumaro.components.config.Config.yaml_representer"]], "buildstage (class in datumaro.components.config_model)": [[205, "datumaro.components.config_model.BuildStage"]], "buildtarget (class in datumaro.components.config_model)": [[205, "datumaro.components.config_model.BuildTarget"]], "model (class in datumaro.components.config_model)": [[205, "datumaro.components.config_model.Model"]], "pipelineconfig (class in datumaro.components.config_model)": [[205, "datumaro.components.config_model.PipelineConfig"]], "projectconfig (class in datumaro.components.config_model)": [[205, "datumaro.components.config_model.ProjectConfig"]], "projectlayout (class in datumaro.components.config_model)": [[205, "datumaro.components.config_model.ProjectLayout"]], "source (class in datumaro.components.config_model)": [[205, "datumaro.components.config_model.Source"]], "treeconfig (class in datumaro.components.config_model)": [[205, "datumaro.components.config_model.TreeConfig"]], "treelayout (class in datumaro.components.config_model)": [[205, "datumaro.components.config_model.TreeLayout"]], "aux_dir (datumaro.components.config_model.projectlayout attribute)": [[205, "datumaro.components.config_model.ProjectLayout.aux_dir"]], "cache_dir (datumaro.components.config_model.projectlayout attribute)": [[205, "datumaro.components.config_model.ProjectLayout.cache_dir"]], "conf_file (datumaro.components.config_model.projectlayout attribute)": [[205, "datumaro.components.config_model.ProjectLayout.conf_file"]], "conf_file (datumaro.components.config_model.treelayout attribute)": [[205, "datumaro.components.config_model.TreeLayout.conf_file"]], "datumaro.components.config_model": [[205, "module-datumaro.components.config_model"]], "find_stage() (datumaro.components.config_model.buildtarget method)": [[205, "datumaro.components.config_model.BuildTarget.find_stage"]], "get_stage() (datumaro.components.config_model.buildtarget method)": [[205, "datumaro.components.config_model.BuildTarget.get_stage"]], "has_stages (datumaro.components.config_model.buildtarget property)": [[205, "datumaro.components.config_model.BuildTarget.has_stages"]], "head (datumaro.components.config_model.buildtarget property)": [[205, "datumaro.components.config_model.BuildTarget.head"]], "head_file (datumaro.components.config_model.projectlayout attribute)": [[205, "datumaro.components.config_model.ProjectLayout.head_file"]], "index_dir (datumaro.components.config_model.projectlayout attribute)": [[205, "datumaro.components.config_model.ProjectLayout.index_dir"]], "is_generated (datumaro.components.config_model.source property)": [[205, "datumaro.components.config_model.Source.is_generated"]], "models_dir (datumaro.components.config_model.projectlayout attribute)": [[205, "datumaro.components.config_model.ProjectLayout.models_dir"]], "plugins_dir (datumaro.components.config_model.projectlayout attribute)": [[205, "datumaro.components.config_model.ProjectLayout.plugins_dir"]], "root (datumaro.components.config_model.buildtarget property)": [[205, "datumaro.components.config_model.BuildTarget.root"]], "sources_dir (datumaro.components.config_model.treelayout attribute)": [[205, "datumaro.components.config_model.TreeLayout.sources_dir"]], "tmp_dir (datumaro.components.config_model.projectlayout attribute)": [[205, "datumaro.components.config_model.ProjectLayout.tmp_dir"]], "working_tree_dir (datumaro.components.config_model.projectlayout attribute)": [[205, "datumaro.components.config_model.ProjectLayout.working_tree_dir"]], "datumaro.components.contexts": [[206, "module-datumaro.components.contexts"]], "failingimporterrorpolicy (class in datumaro.components.contexts.importer)": [[207, "datumaro.components.contexts.importer.FailingImportErrorPolicy"]], "importcontext (class in datumaro.components.contexts.importer)": [[207, "datumaro.components.contexts.importer.ImportContext"]], "importerrorpolicy (class in datumaro.components.contexts.importer)": [[207, "datumaro.components.contexts.importer.ImportErrorPolicy"]], "nullimportcontext (class in datumaro.components.contexts.importer)": [[207, "datumaro.components.contexts.importer.NullImportContext"]], "datumaro.components.contexts.importer": [[207, "module-datumaro.components.contexts.importer"]], "error_policy (datumaro.components.contexts.importer.importcontext attribute)": [[207, "datumaro.components.contexts.importer.ImportContext.error_policy"]], "error_policy (datumaro.components.contexts.importer.nullimportcontext attribute)": [[207, "datumaro.components.contexts.importer.NullImportContext.error_policy"]], "fail() (datumaro.components.contexts.importer.importerrorpolicy method)": [[207, "datumaro.components.contexts.importer.ImportErrorPolicy.fail"]], "progress_reporter (datumaro.components.contexts.importer.importcontext attribute)": [[207, "datumaro.components.contexts.importer.ImportContext.progress_reporter"]], "progress_reporter (datumaro.components.contexts.importer.nullimportcontext attribute)": [[207, "datumaro.components.contexts.importer.NullImportContext.progress_reporter"]], "report_annotation_error() (datumaro.components.contexts.importer.importerrorpolicy method)": [[207, "datumaro.components.contexts.importer.ImportErrorPolicy.report_annotation_error"]], "report_item_error() (datumaro.components.contexts.importer.importerrorpolicy method)": [[207, "datumaro.components.contexts.importer.ImportErrorPolicy.report_item_error"]], "crypter (class in datumaro.components.crypter)": [[208, "datumaro.components.crypter.Crypter"]], "fernet_key_len (datumaro.components.crypter.crypter attribute)": [[208, "datumaro.components.crypter.Crypter.FERNET_KEY_LEN"]], "key_prefix (datumaro.components.crypter.crypter attribute)": [[208, "datumaro.components.crypter.Crypter.KEY_PREFIX"]], "key_prefix_len (datumaro.components.crypter.crypter attribute)": [[208, "datumaro.components.crypter.Crypter.KEY_PREFIX_LEN"]], "nullcrypter (class in datumaro.components.crypter)": [[208, "datumaro.components.crypter.NullCrypter"]], "datumaro.components.crypter": [[208, "module-datumaro.components.crypter"]], "decrypt() (datumaro.components.crypter.crypter method)": [[208, "datumaro.components.crypter.Crypter.decrypt"]], "decrypt() (datumaro.components.crypter.nullcrypter method)": [[208, "datumaro.components.crypter.NullCrypter.decrypt"]], "encrypt() (datumaro.components.crypter.crypter method)": [[208, "datumaro.components.crypter.Crypter.encrypt"]], "encrypt() (datumaro.components.crypter.nullcrypter method)": [[208, "datumaro.components.crypter.NullCrypter.encrypt"]], "gen_key() (datumaro.components.crypter.crypter class method)": [[208, "datumaro.components.crypter.Crypter.gen_key"]], "handshake() (datumaro.components.crypter.crypter method)": [[208, "datumaro.components.crypter.Crypter.handshake"]], "handshake() (datumaro.components.crypter.nullcrypter method)": [[208, "datumaro.components.crypter.NullCrypter.handshake"]], "is_null_crypter (datumaro.components.crypter.crypter property)": [[208, "datumaro.components.crypter.Crypter.is_null_crypter"]], "key (datumaro.components.crypter.crypter property)": [[208, "datumaro.components.crypter.Crypter.key"]], "key (datumaro.components.crypter.nullcrypter property)": [[208, "datumaro.components.crypter.NullCrypter.key"]], "annotation (class in datumaro.components.dataset)": [[209, "datumaro.components.dataset.Annotation"]], "annotationtype (class in datumaro.components.dataset)": [[209, "datumaro.components.dataset.AnnotationType"]], "default_image_ext (datumaro.components.dataset.exporter attribute)": [[209, "datumaro.components.dataset.Exporter.DEFAULT_IMAGE_EXT"]], "dataset (class in datumaro.components.dataset)": [[209, "datumaro.components.dataset.Dataset"]], "datasetbase (class in datumaro.components.dataset)": [[209, "datumaro.components.dataset.DatasetBase"]], "datasetimporterror": [[209, "datumaro.components.dataset.DatasetImportError"], [214, "datumaro.components.errors.DatasetImportError"], [221, "datumaro.components.importer.DatasetImportError"], [253, "datumaro.plugins.data_formats.arrow.importer.DatasetImportError"], [282, "datumaro.plugins.data_formats.datumaro.base.DatasetImportError"], [374, "datumaro.plugins.data_formats.yolo.base.DatasetImportError"]], "datasetitem (class in datumaro.components.dataset)": [[209, "datumaro.components.dataset.DatasetItem"]], "datasetitemstoragedatasetview (class in datumaro.components.dataset)": [[209, "datumaro.components.dataset.DatasetItemStorageDatasetView"]], "datasetitemstoragedatasetview.subset (class in datumaro.components.dataset)": [[209, "datumaro.components.dataset.DatasetItemStorageDatasetView.Subset"]], "datasetpatch (class in datumaro.components.dataset)": [[209, "datumaro.components.dataset.DatasetPatch"]], "datasetpatch.datasetpatchwrapper (class in datumaro.components.dataset)": [[209, "datumaro.components.dataset.DatasetPatch.DatasetPatchWrapper"]], "datasetstorage (class in datumaro.components.dataset)": [[209, "datumaro.components.dataset.DatasetStorage"]], "datasetsubset (class in datumaro.components.dataset)": [[209, "datumaro.components.dataset.DatasetSubset"]], "datumaroerror": [[209, "datumaro.components.dataset.DatumaroError"], [214, "datumaro.components.errors.DatumaroError"], [254, "datumaro.plugins.data_formats.arrow.mapper.DatumaroError"], [292, "datumaro.plugins.data_formats.datumaro_binary.mapper.DatumaroError"], [382, "datumaro.plugins.inference_server_plugin.ovms.DatumaroError"], [385, "datumaro.plugins.inference_server_plugin.triton.DatumaroError"]], "environment (class in datumaro.components.dataset)": [[209, "datumaro.components.dataset.Environment"]], "exportcontext (class in datumaro.components.dataset)": [[209, "datumaro.components.dataset.ExportContext"]], "exporterrorpolicy (class in datumaro.components.dataset)": [[209, "datumaro.components.dataset.ExportErrorPolicy"]], "exporter (class in datumaro.components.dataset)": [[209, "datumaro.components.dataset.Exporter"]], "idataset (class in datumaro.components.dataset)": [[209, "datumaro.components.dataset.IDataset"]], "image (class in datumaro.components.dataset)": [[209, "datumaro.components.dataset.Image"]], "importcontext (class in datumaro.components.dataset)": [[209, "datumaro.components.dataset.ImportContext"]], "importerrorpolicy (class in datumaro.components.dataset)": [[209, "datumaro.components.dataset.ImportErrorPolicy"]], "itemtransform (class in datumaro.components.dataset)": [[209, "datumaro.components.dataset.ItemTransform"]], "labelcategories (class in datumaro.components.dataset)": [[209, "datumaro.components.dataset.LabelCategories"]], "labelcategories.category (class in datumaro.components.dataset)": [[209, "datumaro.components.dataset.LabelCategories.Category"]], "labelcategories.labelgroup (class in datumaro.components.dataset)": [[209, "datumaro.components.dataset.LabelCategories.LabelGroup"]], "launcher (class in datumaro.components.dataset)": [[209, "datumaro.components.dataset.Launcher"]], "mediaelement (class in datumaro.components.dataset)": [[209, "datumaro.components.dataset.MediaElement"]], "modeltransform (class in datumaro.components.dataset)": [[209, "datumaro.components.dataset.ModelTransform"]], "multipleformatsmatcherror": [[209, "datumaro.components.dataset.MultipleFormatsMatchError"], [214, "datumaro.components.errors.MultipleFormatsMatchError"]], "nomatchingformatserror": [[209, "datumaro.components.dataset.NoMatchingFormatsError"], [214, "datumaro.components.errors.NoMatchingFormatsError"]], "nullprogressreporter (class in datumaro.components.dataset)": [[209, "datumaro.components.dataset.NullProgressReporter"]], "progressreporter (class in datumaro.components.dataset)": [[209, "datumaro.components.dataset.ProgressReporter"]], "source (class in datumaro.components.dataset)": [[209, "datumaro.components.dataset.Source"]], "streamdataset (class in datumaro.components.dataset)": [[209, "datumaro.components.dataset.StreamDataset"]], "streamdatasetstorage (class in datumaro.components.dataset)": [[209, "datumaro.components.dataset.StreamDatasetStorage"]], "streameditemerror": [[209, "datumaro.components.dataset.StreamedItemError"], [214, "datumaro.components.errors.StreamedItemError"]], "tabularcategories (class in datumaro.components.dataset)": [[209, "datumaro.components.dataset.TabularCategories"]], "tabularcategories.category (class in datumaro.components.dataset)": [[209, "datumaro.components.dataset.TabularCategories.Category"]], "transform (class in datumaro.components.dataset)": [[209, "datumaro.components.dataset.Transform"]], "unknownformaterror": [[209, "datumaro.components.dataset.UnknownFormatError"], [214, "datumaro.components.errors.UnknownFormatError"]], "userfunctionannotationsfilter (class in datumaro.components.dataset)": [[209, "datumaro.components.dataset.UserFunctionAnnotationsFilter"]], "userfunctiondatasetfilter (class in datumaro.components.dataset)": [[209, "datumaro.components.dataset.UserFunctionDatasetFilter"]], "xpathannotationsfilter (class in datumaro.components.dataset)": [[209, "datumaro.components.dataset.XPathAnnotationsFilter"]], "xpathdatasetfilter (class in datumaro.components.dataset)": [[209, "datumaro.components.dataset.XPathDatasetFilter"]], "add() (datumaro.components.dataset.labelcategories method)": [[209, "datumaro.components.dataset.LabelCategories.add"]], "add() (datumaro.components.dataset.tabularcategories method)": [[209, "datumaro.components.dataset.TabularCategories.add"]], "add_label_group() (datumaro.components.dataset.labelcategories method)": [[209, "datumaro.components.dataset.LabelCategories.add_label_group"]], "ann_types() (datumaro.components.dataset.dataset method)": [[209, "datumaro.components.dataset.Dataset.ann_types"]], "ann_types() (datumaro.components.dataset.datasetbase method)": [[209, "datumaro.components.dataset.DatasetBase.ann_types"]], "ann_types() (datumaro.components.dataset.datasetitemstoragedatasetview method)": [[209, "datumaro.components.dataset.DatasetItemStorageDatasetView.ann_types"]], "ann_types() (datumaro.components.dataset.datasetitemstoragedatasetview.subset method)": [[209, "datumaro.components.dataset.DatasetItemStorageDatasetView.Subset.ann_types"]], "ann_types() (datumaro.components.dataset.datasetstorage method)": [[209, "datumaro.components.dataset.DatasetStorage.ann_types"]], "ann_types() (datumaro.components.dataset.datasetsubset method)": [[209, "datumaro.components.dataset.DatasetSubset.ann_types"]], "ann_types() (datumaro.components.dataset.idataset method)": [[209, "datumaro.components.dataset.IDataset.ann_types"]], "annotations (datumaro.components.dataset.datasetitem attribute)": [[209, "datumaro.components.dataset.DatasetItem.annotations"]], "apply() (datumaro.components.dataset.exporter method)": [[209, "datumaro.components.dataset.Exporter.apply"]], "as_dataset() (datumaro.components.dataset.datasetpatch method)": [[209, "datumaro.components.dataset.DatasetPatch.as_dataset"]], "as_dataset() (datumaro.components.dataset.datasetsubset method)": [[209, "datumaro.components.dataset.DatasetSubset.as_dataset"]], "as_dict() (datumaro.components.dataset.annotation method)": [[209, "datumaro.components.dataset.Annotation.as_dict"]], "as_dict() (datumaro.components.dataset.mediaelement method)": [[209, "datumaro.components.dataset.MediaElement.as_dict"]], "attributes (datumaro.components.dataset.annotation attribute)": [[209, "datumaro.components.dataset.Annotation.attributes"]], "attributes (datumaro.components.dataset.datasetitem attribute)": [[209, "datumaro.components.dataset.DatasetItem.attributes"]], "attributes (datumaro.components.dataset.labelcategories.category attribute)": [[209, "datumaro.components.dataset.LabelCategories.Category.attributes"]], "bbox (datumaro.components.dataset.annotationtype attribute)": [[209, "datumaro.components.dataset.AnnotationType.bbox"]], "bind() (datumaro.components.dataset.dataset method)": [[209, "datumaro.components.dataset.Dataset.bind"]], "build_cmdline_parser() (datumaro.components.dataset.exporter class method)": [[209, "datumaro.components.dataset.Exporter.build_cmdline_parser"]], "bytes (datumaro.components.dataset.mediaelement property)": [[209, "datumaro.components.dataset.MediaElement.bytes"]], "can_stream (datumaro.components.dataset.exporter property)": [[209, "datumaro.components.dataset.Exporter.can_stream"]], "caption (datumaro.components.dataset.annotationtype attribute)": [[209, "datumaro.components.dataset.AnnotationType.caption"]], "categories() (datumaro.components.dataset.dataset method)": [[209, "datumaro.components.dataset.Dataset.categories"]], "categories() (datumaro.components.dataset.datasetitemstoragedatasetview method)": [[209, "datumaro.components.dataset.DatasetItemStorageDatasetView.categories"]], "categories() (datumaro.components.dataset.datasetitemstoragedatasetview.subset method)": [[209, "datumaro.components.dataset.DatasetItemStorageDatasetView.Subset.categories"]], "categories() (datumaro.components.dataset.datasetstorage method)": [[209, "datumaro.components.dataset.DatasetStorage.categories"]], "categories() (datumaro.components.dataset.datasetsubset method)": [[209, "datumaro.components.dataset.DatasetSubset.categories"]], "categories() (datumaro.components.dataset.idataset method)": [[209, "datumaro.components.dataset.IDataset.categories"]], "categories() (datumaro.components.dataset.launcher method)": [[209, "datumaro.components.dataset.Launcher.categories"]], "categories() (datumaro.components.dataset.modeltransform method)": [[209, "datumaro.components.dataset.ModelTransform.categories"]], "categories() (datumaro.components.dataset.streamdatasetstorage method)": [[209, "datumaro.components.dataset.StreamDatasetStorage.categories"]], "categories() (datumaro.components.dataset.transform method)": [[209, "datumaro.components.dataset.Transform.categories"]], "clone() (datumaro.components.dataset.dataset method)": [[209, "datumaro.components.dataset.Dataset.clone"]], "contextmanager() (in module datumaro.components.dataset)": [[209, "datumaro.components.dataset.contextmanager"]], "convert() (datumaro.components.dataset.exporter class method)": [[209, "datumaro.components.dataset.Exporter.convert"]], "copy() (in module datumaro.components.dataset)": [[209, "datumaro.components.dataset.copy"]], "cuboid_3d (datumaro.components.dataset.annotationtype attribute)": [[209, "datumaro.components.dataset.AnnotationType.cuboid_3d"]], "data (datumaro.components.dataset.mediaelement property)": [[209, "datumaro.components.dataset.MediaElement.data"]], "data_path (datumaro.components.dataset.dataset property)": [[209, "datumaro.components.dataset.Dataset.data_path"]], "datumaro.components.dataset": [[209, "module-datumaro.components.dataset"]], "deepcopy() (in module datumaro.components.dataset)": [[209, "datumaro.components.dataset.deepcopy"]], "define_categories() (datumaro.components.dataset.dataset method)": [[209, "datumaro.components.dataset.Dataset.define_categories"]], "define_categories() (datumaro.components.dataset.datasetstorage method)": [[209, "datumaro.components.dataset.DatasetStorage.define_categories"]], "define_infos() (datumaro.components.dataset.dataset method)": [[209, "datumaro.components.dataset.Dataset.define_infos"]], "define_infos() (datumaro.components.dataset.datasetstorage method)": [[209, "datumaro.components.dataset.DatasetStorage.define_infos"]], "depth_annotation (datumaro.components.dataset.annotationtype attribute)": [[209, "datumaro.components.dataset.AnnotationType.depth_annotation"]], "detect() (datumaro.components.dataset.dataset static method)": [[209, "datumaro.components.dataset.Dataset.detect"]], "detect_dataset() (datumaro.components.dataset.environment method)": [[209, "datumaro.components.dataset.Environment.detect_dataset"]], "dtype (datumaro.components.dataset.tabularcategories.category attribute)": [[209, "datumaro.components.dataset.TabularCategories.Category.dtype"]], "eager_mode() (in module datumaro.components.dataset)": [[209, "datumaro.components.dataset.eager_mode"]], "ellipse (datumaro.components.dataset.annotationtype attribute)": [[209, "datumaro.components.dataset.AnnotationType.ellipse"]], "env (datumaro.components.dataset.dataset property)": [[209, "datumaro.components.dataset.Dataset.env"]], "error_policy (datumaro.components.dataset.exportcontext attribute)": [[209, "datumaro.components.dataset.ExportContext.error_policy"]], "error_policy (datumaro.components.dataset.importcontext attribute)": [[209, "datumaro.components.dataset.ImportContext.error_policy"]], "export() (datumaro.components.dataset.dataset method)": [[209, "datumaro.components.dataset.Dataset.export"]], "exporters (datumaro.components.dataset.environment property)": [[209, "datumaro.components.dataset.Environment.exporters"]], "ext (datumaro.components.dataset.image property)": [[209, "datumaro.components.dataset.Image.ext"]], "extractors (datumaro.components.dataset.environment property)": [[209, "datumaro.components.dataset.Environment.extractors"]], "fail() (datumaro.components.dataset.exporterrorpolicy method)": [[209, "datumaro.components.dataset.ExportErrorPolicy.fail"]], "fail() (datumaro.components.dataset.importerrorpolicy method)": [[209, "datumaro.components.dataset.ImportErrorPolicy.fail"]], "feature_vector (datumaro.components.dataset.annotationtype attribute)": [[209, "datumaro.components.dataset.AnnotationType.feature_vector"]], "filter() (datumaro.components.dataset.dataset method)": [[209, "datumaro.components.dataset.Dataset.filter"]], "find() (datumaro.components.dataset.labelcategories method)": [[209, "datumaro.components.dataset.LabelCategories.find"]], "find() (datumaro.components.dataset.tabularcategories method)": [[209, "datumaro.components.dataset.TabularCategories.find"]], "finish() (datumaro.components.dataset.progressreporter method)": [[209, "datumaro.components.dataset.ProgressReporter.finish"]], "flush_changes() (datumaro.components.dataset.dataset method)": [[209, "datumaro.components.dataset.Dataset.flush_changes"]], "flush_changes() (datumaro.components.dataset.datasetstorage method)": [[209, "datumaro.components.dataset.DatasetStorage.flush_changes"]], "flush_changes() (datumaro.components.dataset.streamdatasetstorage method)": [[209, "datumaro.components.dataset.StreamDatasetStorage.flush_changes"]], "format (datumaro.components.dataset.dataset property)": [[209, "datumaro.components.dataset.Dataset.format"]], "format (datumaro.components.dataset.unknownformaterror attribute)": [[209, "datumaro.components.dataset.UnknownFormatError.format"]], "formats (datumaro.components.dataset.multipleformatsmatcherror attribute)": [[209, "datumaro.components.dataset.MultipleFormatsMatchError.formats"]], "from_bytes() (datumaro.components.dataset.image class method)": [[209, "datumaro.components.dataset.Image.from_bytes"]], "from_extractors() (datumaro.components.dataset.dataset class method)": [[209, "datumaro.components.dataset.Dataset.from_extractors"]], "from_extractors() (datumaro.components.dataset.streamdataset class method)": [[209, "datumaro.components.dataset.StreamDataset.from_extractors"]], "from_file() (datumaro.components.dataset.image class method)": [[209, "datumaro.components.dataset.Image.from_file"]], "from_iterable() (datumaro.components.dataset.dataset class method)": [[209, "datumaro.components.dataset.Dataset.from_iterable"]], "from_iterable() (datumaro.components.dataset.labelcategories class method)": [[209, "datumaro.components.dataset.LabelCategories.from_iterable"]], "from_iterable() (datumaro.components.dataset.tabularcategories class method)": [[209, "datumaro.components.dataset.TabularCategories.from_iterable"]], "from_numpy() (datumaro.components.dataset.image class method)": [[209, "datumaro.components.dataset.Image.from_numpy"]], "from_self() (datumaro.components.dataset.mediaelement method)": [[209, "datumaro.components.dataset.MediaElement.from_self"]], "generators (datumaro.components.dataset.environment property)": [[209, "datumaro.components.dataset.Environment.generators"]], "get() (datumaro.components.dataset.dataset method)": [[209, "datumaro.components.dataset.Dataset.get"]], "get() (datumaro.components.dataset.datasetitemstoragedatasetview method)": [[209, "datumaro.components.dataset.DatasetItemStorageDatasetView.get"]], "get() (datumaro.components.dataset.datasetitemstoragedatasetview.subset method)": [[209, "datumaro.components.dataset.DatasetItemStorageDatasetView.Subset.get"]], "get() (datumaro.components.dataset.datasetstorage method)": [[209, "datumaro.components.dataset.DatasetStorage.get"]], "get() (datumaro.components.dataset.datasetsubset method)": [[209, "datumaro.components.dataset.DatasetSubset.get"]], "get() (datumaro.components.dataset.idataset method)": [[209, "datumaro.components.dataset.IDataset.get"]], "get() (datumaro.components.dataset.streamdatasetstorage method)": [[209, "datumaro.components.dataset.StreamDatasetStorage.get"]], "get_annotated_items() (datumaro.components.dataset.dataset method)": [[209, "datumaro.components.dataset.Dataset.get_annotated_items"]], "get_annotated_items() (datumaro.components.dataset.datasetstorage method)": [[209, "datumaro.components.dataset.DatasetStorage.get_annotated_items"]], "get_annotated_items() (datumaro.components.dataset.datasetsubset method)": [[209, "datumaro.components.dataset.DatasetSubset.get_annotated_items"]], "get_annotated_items() (datumaro.components.dataset.streamdatasetstorage method)": [[209, "datumaro.components.dataset.StreamDatasetStorage.get_annotated_items"]], "get_annotations() (datumaro.components.dataset.dataset method)": [[209, "datumaro.components.dataset.Dataset.get_annotations"]], "get_annotations() (datumaro.components.dataset.datasetstorage method)": [[209, "datumaro.components.dataset.DatasetStorage.get_annotations"]], "get_annotations() (datumaro.components.dataset.datasetsubset method)": [[209, "datumaro.components.dataset.DatasetSubset.get_annotations"]], "get_annotations() (datumaro.components.dataset.streamdatasetstorage method)": [[209, "datumaro.components.dataset.StreamDatasetStorage.get_annotations"]], "get_categories_info() (datumaro.components.dataset.dataset method)": [[209, "datumaro.components.dataset.Dataset.get_categories_info"]], "get_datasetitem_by_path() (datumaro.components.dataset.dataset method)": [[209, "datumaro.components.dataset.Dataset.get_datasetitem_by_path"]], "get_datasetitem_by_path() (datumaro.components.dataset.datasetstorage method)": [[209, "datumaro.components.dataset.DatasetStorage.get_datasetitem_by_path"]], "get_datasetitem_by_path() (datumaro.components.dataset.streamdatasetstorage method)": [[209, "datumaro.components.dataset.StreamDatasetStorage.get_datasetitem_by_path"]], "get_infos() (datumaro.components.dataset.dataset method)": [[209, "datumaro.components.dataset.Dataset.get_infos"]], "get_label_cat_names() (datumaro.components.dataset.dataset method)": [[209, "datumaro.components.dataset.Dataset.get_label_cat_names"]], "get_patch() (datumaro.components.dataset.dataset method)": [[209, "datumaro.components.dataset.Dataset.get_patch"]], "get_patch() (datumaro.components.dataset.datasetstorage method)": [[209, "datumaro.components.dataset.DatasetStorage.get_patch"]], "get_patch() (datumaro.components.dataset.streamdatasetstorage method)": [[209, "datumaro.components.dataset.StreamDatasetStorage.get_patch"]], "get_subset() (datumaro.components.dataset.dataset method)": [[209, "datumaro.components.dataset.Dataset.get_subset"]], "get_subset() (datumaro.components.dataset.datasetitemstoragedatasetview method)": [[209, "datumaro.components.dataset.DatasetItemStorageDatasetView.get_subset"]], "get_subset() (datumaro.components.dataset.datasetitemstoragedatasetview.subset method)": [[209, "datumaro.components.dataset.DatasetItemStorageDatasetView.Subset.get_subset"]], "get_subset() (datumaro.components.dataset.datasetstorage method)": [[209, "datumaro.components.dataset.DatasetStorage.get_subset"]], "get_subset() (datumaro.components.dataset.datasetsubset method)": [[209, "datumaro.components.dataset.DatasetSubset.get_subset"]], "get_subset() (datumaro.components.dataset.idataset method)": [[209, "datumaro.components.dataset.IDataset.get_subset"]], "get_subset() (datumaro.components.dataset.modeltransform method)": [[209, "datumaro.components.dataset.ModelTransform.get_subset"]], "get_subset() (datumaro.components.dataset.streamdatasetstorage method)": [[209, "datumaro.components.dataset.StreamDatasetStorage.get_subset"]], "get_subset_info() (datumaro.components.dataset.dataset method)": [[209, "datumaro.components.dataset.Dataset.get_subset_info"]], "group (datumaro.components.dataset.annotation attribute)": [[209, "datumaro.components.dataset.Annotation.group"]], "group_type (datumaro.components.dataset.labelcategories.labelgroup attribute)": [[209, "datumaro.components.dataset.LabelCategories.LabelGroup.group_type"]], "has_data (datumaro.components.dataset.mediaelement property)": [[209, "datumaro.components.dataset.MediaElement.has_data"]], "has_size (datumaro.components.dataset.image property)": [[209, "datumaro.components.dataset.Image.has_size"]], "has_updated_items() (datumaro.components.dataset.datasetstorage method)": [[209, "datumaro.components.dataset.DatasetStorage.has_updated_items"]], "hash_key (datumaro.components.dataset.annotationtype attribute)": [[209, "datumaro.components.dataset.AnnotationType.hash_key"]], "id (datumaro.components.dataset.annotation attribute)": [[209, "datumaro.components.dataset.Annotation.id"]], "id (datumaro.components.dataset.datasetitem attribute)": [[209, "datumaro.components.dataset.DatasetItem.id"]], "import_from() (datumaro.components.dataset.dataset class method)": [[209, "datumaro.components.dataset.Dataset.import_from"]], "importers (datumaro.components.dataset.environment property)": [[209, "datumaro.components.dataset.Environment.importers"]], "infer() (datumaro.components.dataset.launcher method)": [[209, "datumaro.components.dataset.Launcher.infer"]], "infos() (datumaro.components.dataset.dataset method)": [[209, "datumaro.components.dataset.Dataset.infos"]], "infos() (datumaro.components.dataset.datasetitemstoragedatasetview method)": [[209, "datumaro.components.dataset.DatasetItemStorageDatasetView.infos"]], "infos() (datumaro.components.dataset.datasetitemstoragedatasetview.subset method)": [[209, "datumaro.components.dataset.DatasetItemStorageDatasetView.Subset.infos"]], "infos() (datumaro.components.dataset.datasetstorage method)": [[209, "datumaro.components.dataset.DatasetStorage.infos"]], "infos() (datumaro.components.dataset.datasetsubset method)": [[209, "datumaro.components.dataset.DatasetSubset.infos"]], "infos() (datumaro.components.dataset.idataset method)": [[209, "datumaro.components.dataset.IDataset.infos"]], "infos() (datumaro.components.dataset.launcher method)": [[209, "datumaro.components.dataset.Launcher.infos"]], "infos() (datumaro.components.dataset.modeltransform method)": [[209, "datumaro.components.dataset.ModelTransform.infos"]], "infos() (datumaro.components.dataset.streamdatasetstorage method)": [[209, "datumaro.components.dataset.StreamDatasetStorage.infos"]], "infos() (datumaro.components.dataset.transform method)": [[209, "datumaro.components.dataset.Transform.infos"]], "init_cache() (datumaro.components.dataset.dataset method)": [[209, "datumaro.components.dataset.Dataset.init_cache"]], "init_cache() (datumaro.components.dataset.datasetstorage method)": [[209, "datumaro.components.dataset.DatasetStorage.init_cache"]], "init_cache() (datumaro.components.dataset.streamdatasetstorage method)": [[209, "datumaro.components.dataset.StreamDatasetStorage.init_cache"]], "interval (datumaro.components.dataset.nullprogressreporter property)": [[209, "datumaro.components.dataset.NullProgressReporter.interval"]], "interval (datumaro.components.dataset.progressreporter property)": [[209, "datumaro.components.dataset.ProgressReporter.interval"]], "is_bound (datumaro.components.dataset.dataset property)": [[209, "datumaro.components.dataset.Dataset.is_bound"]], "is_cache_initialized (datumaro.components.dataset.dataset property)": [[209, "datumaro.components.dataset.Dataset.is_cache_initialized"]], "is_cache_initialized() (datumaro.components.dataset.datasetstorage method)": [[209, "datumaro.components.dataset.DatasetStorage.is_cache_initialized"]], "is_cache_initialized() (datumaro.components.dataset.streamdatasetstorage method)": [[209, "datumaro.components.dataset.StreamDatasetStorage.is_cache_initialized"]], "is_eager (datumaro.components.dataset.dataset property)": [[209, "datumaro.components.dataset.Dataset.is_eager"]], "is_eager (datumaro.components.dataset.streamdataset property)": [[209, "datumaro.components.dataset.StreamDataset.is_eager"]], "is_encrypted (datumaro.components.dataset.mediaelement property)": [[209, "datumaro.components.dataset.MediaElement.is_encrypted"]], "is_format_known() (datumaro.components.dataset.environment method)": [[209, "datumaro.components.dataset.Environment.is_format_known"]], "is_generated (datumaro.components.dataset.source property)": [[209, "datumaro.components.dataset.Source.is_generated"]], "is_modified (datumaro.components.dataset.dataset property)": [[209, "datumaro.components.dataset.Dataset.is_modified"]], "is_stream (datumaro.components.dataset.dataset property)": [[209, "datumaro.components.dataset.Dataset.is_stream"]], "is_stream (datumaro.components.dataset.idataset property)": [[209, "datumaro.components.dataset.IDataset.is_stream"]], "is_stream (datumaro.components.dataset.streamdatasetstorage property)": [[209, "datumaro.components.dataset.StreamDatasetStorage.is_stream"]], "items (datumaro.components.dataset.labelcategories attribute)": [[209, "datumaro.components.dataset.LabelCategories.items"]], "items (datumaro.components.dataset.tabularcategories attribute)": [[209, "datumaro.components.dataset.TabularCategories.items"]], "iter() (datumaro.components.dataset.nullprogressreporter method)": [[209, "datumaro.components.dataset.NullProgressReporter.iter"]], "iter() (datumaro.components.dataset.progressreporter method)": [[209, "datumaro.components.dataset.ProgressReporter.iter"]], "label (datumaro.components.dataset.annotationtype attribute)": [[209, "datumaro.components.dataset.AnnotationType.label"]], "label_groups (datumaro.components.dataset.labelcategories attribute)": [[209, "datumaro.components.dataset.LabelCategories.label_groups"]], "labels (datumaro.components.dataset.labelcategories.labelgroup attribute)": [[209, "datumaro.components.dataset.LabelCategories.LabelGroup.labels"]], "labels (datumaro.components.dataset.tabularcategories.category attribute)": [[209, "datumaro.components.dataset.TabularCategories.Category.labels"]], "launch() (datumaro.components.dataset.launcher method)": [[209, "datumaro.components.dataset.Launcher.launch"]], "launchers (datumaro.components.dataset.environment property)": [[209, "datumaro.components.dataset.Environment.launchers"]], "load() (datumaro.components.dataset.dataset class method)": [[209, "datumaro.components.dataset.Dataset.load"]], "load_hash_key() (in module datumaro.components.dataset)": [[209, "datumaro.components.dataset.load_hash_key"]], "load_plugins() (datumaro.components.dataset.environment method)": [[209, "datumaro.components.dataset.Environment.load_plugins"]], "logging_disabled() (in module datumaro.components.dataset)": [[209, "datumaro.components.dataset.logging_disabled"]], "make_exporter() (datumaro.components.dataset.environment method)": [[209, "datumaro.components.dataset.Environment.make_exporter"]], "make_extractor() (datumaro.components.dataset.environment method)": [[209, "datumaro.components.dataset.Environment.make_extractor"]], "make_importer() (datumaro.components.dataset.environment method)": [[209, "datumaro.components.dataset.Environment.make_importer"]], "make_launcher() (datumaro.components.dataset.environment method)": [[209, "datumaro.components.dataset.Environment.make_launcher"]], "make_transform() (datumaro.components.dataset.environment method)": [[209, "datumaro.components.dataset.Environment.make_transform"]], "mask (datumaro.components.dataset.annotationtype attribute)": [[209, "datumaro.components.dataset.AnnotationType.mask"]], "media (datumaro.components.dataset.datasetitem attribute)": [[209, "datumaro.components.dataset.DatasetItem.media"]], "media_as() (datumaro.components.dataset.datasetitem method)": [[209, "datumaro.components.dataset.DatasetItem.media_as"]], "media_type() (datumaro.components.dataset.dataset method)": [[209, "datumaro.components.dataset.Dataset.media_type"]], "media_type() (datumaro.components.dataset.datasetbase method)": [[209, "datumaro.components.dataset.DatasetBase.media_type"]], "media_type() (datumaro.components.dataset.datasetitemstoragedatasetview method)": [[209, "datumaro.components.dataset.DatasetItemStorageDatasetView.media_type"]], "media_type() (datumaro.components.dataset.datasetitemstoragedatasetview.subset method)": [[209, "datumaro.components.dataset.DatasetItemStorageDatasetView.Subset.media_type"]], "media_type() (datumaro.components.dataset.datasetstorage method)": [[209, "datumaro.components.dataset.DatasetStorage.media_type"]], "media_type() (datumaro.components.dataset.datasetsubset method)": [[209, "datumaro.components.dataset.DatasetSubset.media_type"]], "media_type() (datumaro.components.dataset.idataset method)": [[209, "datumaro.components.dataset.IDataset.media_type"]], "media_type() (datumaro.components.dataset.transform method)": [[209, "datumaro.components.dataset.Transform.media_type"]], "merge() (datumaro.components.dataset.environment class method)": [[209, "datumaro.components.dataset.Environment.merge"]], "name (datumaro.components.dataset.labelcategories.category attribute)": [[209, "datumaro.components.dataset.LabelCategories.Category.name"]], "name (datumaro.components.dataset.labelcategories.labelgroup attribute)": [[209, "datumaro.components.dataset.LabelCategories.LabelGroup.name"]], "name (datumaro.components.dataset.tabularcategories.category attribute)": [[209, "datumaro.components.dataset.TabularCategories.Category.name"]], "object_id (datumaro.components.dataset.annotation attribute)": [[209, "datumaro.components.dataset.Annotation.object_id"]], "on_error_do() (in module datumaro.components.dataset)": [[209, "datumaro.components.dataset.on_error_do"]], "options (datumaro.components.dataset.dataset property)": [[209, "datumaro.components.dataset.Dataset.options"]], "overload() (in module datumaro.components.dataset)": [[209, "datumaro.components.dataset.overload"]], "parent (datumaro.components.dataset.labelcategories.category attribute)": [[209, "datumaro.components.dataset.LabelCategories.Category.parent"]], "patch() (datumaro.components.dataset.exporter class method)": [[209, "datumaro.components.dataset.Exporter.patch"]], "period (datumaro.components.dataset.nullprogressreporter property)": [[209, "datumaro.components.dataset.NullProgressReporter.period"]], "period (datumaro.components.dataset.progressreporter property)": [[209, "datumaro.components.dataset.ProgressReporter.period"]], "points (datumaro.components.dataset.annotationtype attribute)": [[209, "datumaro.components.dataset.AnnotationType.points"]], "polygon (datumaro.components.dataset.annotationtype attribute)": [[209, "datumaro.components.dataset.AnnotationType.polygon"]], "polyline (datumaro.components.dataset.annotationtype attribute)": [[209, "datumaro.components.dataset.AnnotationType.polyline"]], "postprocess() (datumaro.components.dataset.launcher method)": [[209, "datumaro.components.dataset.Launcher.postprocess"]], "preprocess() (datumaro.components.dataset.launcher method)": [[209, "datumaro.components.dataset.Launcher.preprocess"]], "progress_reporter (datumaro.components.dataset.exportcontext attribute)": [[209, "datumaro.components.dataset.ExportContext.progress_reporter"]], "progress_reporter (datumaro.components.dataset.importcontext attribute)": [[209, "datumaro.components.dataset.ImportContext.progress_reporter"]], "put() (datumaro.components.dataset.dataset method)": [[209, "datumaro.components.dataset.Dataset.put"]], "put() (datumaro.components.dataset.datasetitemstoragedatasetview.subset method)": [[209, "datumaro.components.dataset.DatasetItemStorageDatasetView.Subset.put"]], "put() (datumaro.components.dataset.datasetstorage method)": [[209, "datumaro.components.dataset.DatasetStorage.put"]], "put() (datumaro.components.dataset.datasetsubset method)": [[209, "datumaro.components.dataset.DatasetSubset.put"]], "put() (datumaro.components.dataset.streamdatasetstorage method)": [[209, "datumaro.components.dataset.StreamDatasetStorage.put"]], "register_plugins() (datumaro.components.dataset.environment method)": [[209, "datumaro.components.dataset.Environment.register_plugins"]], "release_builtin_plugins() (datumaro.components.dataset.environment class method)": [[209, "datumaro.components.dataset.Environment.release_builtin_plugins"]], "remove() (datumaro.components.dataset.dataset method)": [[209, "datumaro.components.dataset.Dataset.remove"]], "remove() (datumaro.components.dataset.datasetitemstoragedatasetview.subset method)": [[209, "datumaro.components.dataset.DatasetItemStorageDatasetView.Subset.remove"]], "remove() (datumaro.components.dataset.datasetstorage method)": [[209, "datumaro.components.dataset.DatasetStorage.remove"]], "remove() (datumaro.components.dataset.datasetsubset method)": [[209, "datumaro.components.dataset.DatasetSubset.remove"]], "remove() (datumaro.components.dataset.streamdatasetstorage method)": [[209, "datumaro.components.dataset.StreamDatasetStorage.remove"]], "report_annotation_error() (datumaro.components.dataset.exporterrorpolicy method)": [[209, "datumaro.components.dataset.ExportErrorPolicy.report_annotation_error"]], "report_annotation_error() (datumaro.components.dataset.importerrorpolicy method)": [[209, "datumaro.components.dataset.ImportErrorPolicy.report_annotation_error"]], "report_item_error() (datumaro.components.dataset.exporterrorpolicy method)": [[209, "datumaro.components.dataset.ExportErrorPolicy.report_item_error"]], "report_item_error() (datumaro.components.dataset.importerrorpolicy method)": [[209, "datumaro.components.dataset.ImportErrorPolicy.report_item_error"]], "report_status() (datumaro.components.dataset.nullprogressreporter method)": [[209, "datumaro.components.dataset.NullProgressReporter.report_status"]], "report_status() (datumaro.components.dataset.progressreporter method)": [[209, "datumaro.components.dataset.ProgressReporter.report_status"]], "rmtree() (in module datumaro.components.dataset)": [[209, "datumaro.components.dataset.rmtree"]], "rotated_bbox (datumaro.components.dataset.annotationtype attribute)": [[209, "datumaro.components.dataset.AnnotationType.rotated_bbox"]], "run_model() (datumaro.components.dataset.dataset method)": [[209, "datumaro.components.dataset.Dataset.run_model"]], "save() (datumaro.components.dataset.dataset method)": [[209, "datumaro.components.dataset.Dataset.save"]], "save() (datumaro.components.dataset.mediaelement method)": [[209, "datumaro.components.dataset.MediaElement.save"]], "scoped() (in module datumaro.components.dataset)": [[209, "datumaro.components.dataset.scoped"]], "select() (datumaro.components.dataset.dataset method)": [[209, "datumaro.components.dataset.Dataset.select"]], "set_crypter() (datumaro.components.dataset.image method)": [[209, "datumaro.components.dataset.Image.set_crypter"]], "set_crypter() (datumaro.components.dataset.mediaelement method)": [[209, "datumaro.components.dataset.MediaElement.set_crypter"]], "size (datumaro.components.dataset.image property)": [[209, "datumaro.components.dataset.Image.size"]], "split() (datumaro.components.dataset.nullprogressreporter method)": [[209, "datumaro.components.dataset.NullProgressReporter.split"]], "split() (datumaro.components.dataset.progressreporter method)": [[209, "datumaro.components.dataset.ProgressReporter.split"]], "stacked_transform (datumaro.components.dataset.streamdatasetstorage property)": [[209, "datumaro.components.dataset.StreamDatasetStorage.stacked_transform"]], "start() (datumaro.components.dataset.nullprogressreporter method)": [[209, "datumaro.components.dataset.NullProgressReporter.start"]], "start() (datumaro.components.dataset.progressreporter method)": [[209, "datumaro.components.dataset.ProgressReporter.start"]], "subset (datumaro.components.dataset.datasetitem attribute)": [[209, "datumaro.components.dataset.DatasetItem.subset"]], "subset_names (datumaro.components.dataset.streamdatasetstorage property)": [[209, "datumaro.components.dataset.StreamDatasetStorage.subset_names"]], "subsets() (datumaro.components.dataset.dataset method)": [[209, "datumaro.components.dataset.Dataset.subsets"]], "subsets() (datumaro.components.dataset.datasetitemstoragedatasetview method)": [[209, "datumaro.components.dataset.DatasetItemStorageDatasetView.subsets"]], "subsets() (datumaro.components.dataset.datasetitemstoragedatasetview.subset method)": [[209, "datumaro.components.dataset.DatasetItemStorageDatasetView.Subset.subsets"]], "subsets() (datumaro.components.dataset.datasetpatch.datasetpatchwrapper method)": [[209, "datumaro.components.dataset.DatasetPatch.DatasetPatchWrapper.subsets"]], "subsets() (datumaro.components.dataset.datasetstorage method)": [[209, "datumaro.components.dataset.DatasetStorage.subsets"]], "subsets() (datumaro.components.dataset.datasetsubset method)": [[209, "datumaro.components.dataset.DatasetSubset.subsets"]], "subsets() (datumaro.components.dataset.idataset method)": [[209, "datumaro.components.dataset.IDataset.subsets"]], "subsets() (datumaro.components.dataset.streamdatasetstorage method)": [[209, "datumaro.components.dataset.StreamDatasetStorage.subsets"]], "subsets() (datumaro.components.dataset.transform method)": [[209, "datumaro.components.dataset.Transform.subsets"]], "super_resolution_annotation (datumaro.components.dataset.annotationtype attribute)": [[209, "datumaro.components.dataset.AnnotationType.super_resolution_annotation"]], "tabular (datumaro.components.dataset.annotationtype attribute)": [[209, "datumaro.components.dataset.AnnotationType.tabular"]], "transform() (datumaro.components.dataset.dataset method)": [[209, "datumaro.components.dataset.Dataset.transform"]], "transform() (datumaro.components.dataset.datasetstorage method)": [[209, "datumaro.components.dataset.DatasetStorage.transform"]], "transform() (datumaro.components.dataset.streamdatasetstorage method)": [[209, "datumaro.components.dataset.StreamDatasetStorage.transform"]], "transform_item() (datumaro.components.dataset.itemtransform method)": [[209, "datumaro.components.dataset.ItemTransform.transform_item"]], "transform_item() (datumaro.components.dataset.modeltransform method)": [[209, "datumaro.components.dataset.ModelTransform.transform_item"]], "transform_item() (datumaro.components.dataset.userfunctionannotationsfilter method)": [[209, "datumaro.components.dataset.UserFunctionAnnotationsFilter.transform_item"]], "transform_item() (datumaro.components.dataset.userfunctiondatasetfilter method)": [[209, "datumaro.components.dataset.UserFunctionDatasetFilter.transform_item"]], "transform_item() (datumaro.components.dataset.xpathannotationsfilter method)": [[209, "datumaro.components.dataset.XPathAnnotationsFilter.transform_item"]], "transform_item() (datumaro.components.dataset.xpathdatasetfilter method)": [[209, "datumaro.components.dataset.XPathDatasetFilter.transform_item"]], "transforms (datumaro.components.dataset.environment property)": [[209, "datumaro.components.dataset.Environment.transforms"]], "type (datumaro.components.dataset.annotation property)": [[209, "datumaro.components.dataset.Annotation.type"]], "type (datumaro.components.dataset.mediaelement property)": [[209, "datumaro.components.dataset.MediaElement.type"]], "type_check() (datumaro.components.dataset.launcher method)": [[209, "datumaro.components.dataset.Launcher.type_check"]], "unknown (datumaro.components.dataset.annotationtype attribute)": [[209, "datumaro.components.dataset.AnnotationType.unknown"]], "update() (datumaro.components.dataset.dataset method)": [[209, "datumaro.components.dataset.Dataset.update"]], "update() (datumaro.components.dataset.datasetstorage method)": [[209, "datumaro.components.dataset.DatasetStorage.update"]], "update() (datumaro.components.dataset.streamdatasetstorage method)": [[209, "datumaro.components.dataset.StreamDatasetStorage.update"]], "updated_subsets (datumaro.components.dataset.datasetpatch property)": [[209, "datumaro.components.dataset.DatasetPatch.updated_subsets"]], "validators (datumaro.components.dataset.environment property)": [[209, "datumaro.components.dataset.Environment.validators"]], "wrap() (datumaro.components.dataset.annotation method)": [[209, "datumaro.components.dataset.Annotation.wrap"]], "wrap() (datumaro.components.dataset.datasetitem method)": [[209, "datumaro.components.dataset.DatasetItem.wrap"]], "wrap_item() (datumaro.components.dataset.transform static method)": [[209, "datumaro.components.dataset.Transform.wrap_item"]], "datasetbase (class in datumaro.components.dataset_base)": [[210, "datumaro.components.dataset_base.DatasetBase"]], "datasetitem (class in datumaro.components.dataset_base)": [[210, "datumaro.components.dataset_base.DatasetItem"]], "idataset (class in datumaro.components.dataset_base)": [[210, "datumaro.components.dataset_base.IDataset"]], "subsetbase (class in datumaro.components.dataset_base)": [[210, "datumaro.components.dataset_base.SubsetBase"]], "ann_types() (datumaro.components.dataset_base.datasetbase method)": [[210, "datumaro.components.dataset_base.DatasetBase.ann_types"]], "ann_types() (datumaro.components.dataset_base.idataset method)": [[210, "datumaro.components.dataset_base.IDataset.ann_types"]], "annotations (datumaro.components.dataset_base.datasetitem attribute)": [[210, "datumaro.components.dataset_base.DatasetItem.annotations"]], "attributes (datumaro.components.dataset_base.datasetitem attribute)": [[210, "datumaro.components.dataset_base.DatasetItem.attributes"]], "categories() (datumaro.components.dataset_base.idataset method)": [[210, "datumaro.components.dataset_base.IDataset.categories"]], "categories() (datumaro.components.dataset_base.subsetbase method)": [[210, "datumaro.components.dataset_base.SubsetBase.categories"]], "datumaro.components.dataset_base": [[210, "module-datumaro.components.dataset_base"]], "get() (datumaro.components.dataset_base.idataset method)": [[210, "datumaro.components.dataset_base.IDataset.get"]], "get() (datumaro.components.dataset_base.subsetbase method)": [[210, "datumaro.components.dataset_base.SubsetBase.get"]], "get_subset() (datumaro.components.dataset_base.idataset method)": [[210, "datumaro.components.dataset_base.IDataset.get_subset"]], "id (datumaro.components.dataset_base.datasetitem attribute)": [[210, "datumaro.components.dataset_base.DatasetItem.id"]], "infos() (datumaro.components.dataset_base.idataset method)": [[210, "datumaro.components.dataset_base.IDataset.infos"]], "infos() (datumaro.components.dataset_base.subsetbase method)": [[210, "datumaro.components.dataset_base.SubsetBase.infos"]], "is_stream (datumaro.components.dataset_base.idataset property)": [[210, "datumaro.components.dataset_base.IDataset.is_stream"]], "media (datumaro.components.dataset_base.datasetitem attribute)": [[210, "datumaro.components.dataset_base.DatasetItem.media"]], "media_as() (datumaro.components.dataset_base.datasetitem method)": [[210, "datumaro.components.dataset_base.DatasetItem.media_as"]], "media_type() (datumaro.components.dataset_base.datasetbase method)": [[210, "datumaro.components.dataset_base.DatasetBase.media_type"]], "media_type() (datumaro.components.dataset_base.idataset method)": [[210, "datumaro.components.dataset_base.IDataset.media_type"]], "subset (datumaro.components.dataset_base.datasetitem attribute)": [[210, "datumaro.components.dataset_base.DatasetItem.subset"]], "subset (datumaro.components.dataset_base.subsetbase property)": [[210, "datumaro.components.dataset_base.SubsetBase.subset"]], "subsets() (datumaro.components.dataset_base.idataset method)": [[210, "datumaro.components.dataset_base.IDataset.subsets"]], "wrap() (datumaro.components.dataset_base.datasetitem method)": [[210, "datumaro.components.dataset_base.DatasetItem.wrap"]], "annotationtype (class in datumaro.components.dataset_item_storage)": [[211, "datumaro.components.dataset_item_storage.AnnotationType"]], "datasetitem (class in datumaro.components.dataset_item_storage)": [[211, "datumaro.components.dataset_item_storage.DatasetItem"]], "datasetitemstorage (class in datumaro.components.dataset_item_storage)": [[211, "datumaro.components.dataset_item_storage.DatasetItemStorage"]], "datasetitemstoragedatasetview (class in datumaro.components.dataset_item_storage)": [[211, "datumaro.components.dataset_item_storage.DatasetItemStorageDatasetView"]], "datasetitemstoragedatasetview.subset (class in datumaro.components.dataset_item_storage)": [[211, "datumaro.components.dataset_item_storage.DatasetItemStorageDatasetView.Subset"]], "enum (class in datumaro.components.dataset_item_storage)": [[211, "datumaro.components.dataset_item_storage.Enum"]], "idataset (class in datumaro.components.dataset_item_storage)": [[211, "datumaro.components.dataset_item_storage.IDataset"]], "itemstatus (class in datumaro.components.dataset_item_storage)": [[211, "datumaro.components.dataset_item_storage.ItemStatus"]], "mediaelement (class in datumaro.components.dataset_item_storage)": [[211, "datumaro.components.dataset_item_storage.MediaElement"]], "added (datumaro.components.dataset_item_storage.itemstatus attribute)": [[211, "datumaro.components.dataset_item_storage.ItemStatus.added"]], "ann_types() (datumaro.components.dataset_item_storage.datasetitemstoragedatasetview method)": [[211, "datumaro.components.dataset_item_storage.DatasetItemStorageDatasetView.ann_types"]], "ann_types() (datumaro.components.dataset_item_storage.datasetitemstoragedatasetview.subset method)": [[211, "datumaro.components.dataset_item_storage.DatasetItemStorageDatasetView.Subset.ann_types"]], "ann_types() (datumaro.components.dataset_item_storage.idataset method)": [[211, "datumaro.components.dataset_item_storage.IDataset.ann_types"]], "annotations (datumaro.components.dataset_item_storage.datasetitem attribute)": [[211, "datumaro.components.dataset_item_storage.DatasetItem.annotations"]], "as_dict() (datumaro.components.dataset_item_storage.mediaelement method)": [[211, "datumaro.components.dataset_item_storage.MediaElement.as_dict"]], "attributes (datumaro.components.dataset_item_storage.datasetitem attribute)": [[211, "datumaro.components.dataset_item_storage.DatasetItem.attributes"]], "auto (class in datumaro.components.dataset_item_storage)": [[211, "datumaro.components.dataset_item_storage.auto"]], "bbox (datumaro.components.dataset_item_storage.annotationtype attribute)": [[211, "datumaro.components.dataset_item_storage.AnnotationType.bbox"]], "bytes (datumaro.components.dataset_item_storage.mediaelement property)": [[211, "datumaro.components.dataset_item_storage.MediaElement.bytes"]], "caption (datumaro.components.dataset_item_storage.annotationtype attribute)": [[211, "datumaro.components.dataset_item_storage.AnnotationType.caption"]], "categories() (datumaro.components.dataset_item_storage.datasetitemstoragedatasetview method)": [[211, "datumaro.components.dataset_item_storage.DatasetItemStorageDatasetView.categories"]], "categories() (datumaro.components.dataset_item_storage.datasetitemstoragedatasetview.subset method)": [[211, "datumaro.components.dataset_item_storage.DatasetItemStorageDatasetView.Subset.categories"]], "categories() (datumaro.components.dataset_item_storage.idataset method)": [[211, "datumaro.components.dataset_item_storage.IDataset.categories"]], "copy() (in module datumaro.components.dataset_item_storage)": [[211, "datumaro.components.dataset_item_storage.copy"]], "cuboid_3d (datumaro.components.dataset_item_storage.annotationtype attribute)": [[211, "datumaro.components.dataset_item_storage.AnnotationType.cuboid_3d"]], "data (datumaro.components.dataset_item_storage.mediaelement property)": [[211, "datumaro.components.dataset_item_storage.MediaElement.data"]], "datumaro.components.dataset_item_storage": [[211, "module-datumaro.components.dataset_item_storage"]], "depth_annotation (datumaro.components.dataset_item_storage.annotationtype attribute)": [[211, "datumaro.components.dataset_item_storage.AnnotationType.depth_annotation"]], "ellipse (datumaro.components.dataset_item_storage.annotationtype attribute)": [[211, "datumaro.components.dataset_item_storage.AnnotationType.ellipse"]], "feature_vector (datumaro.components.dataset_item_storage.annotationtype attribute)": [[211, "datumaro.components.dataset_item_storage.AnnotationType.feature_vector"]], "from_self() (datumaro.components.dataset_item_storage.mediaelement method)": [[211, "datumaro.components.dataset_item_storage.MediaElement.from_self"]], "get() (datumaro.components.dataset_item_storage.datasetitemstorage method)": [[211, "datumaro.components.dataset_item_storage.DatasetItemStorage.get"]], "get() (datumaro.components.dataset_item_storage.datasetitemstoragedatasetview method)": [[211, "datumaro.components.dataset_item_storage.DatasetItemStorageDatasetView.get"]], "get() (datumaro.components.dataset_item_storage.datasetitemstoragedatasetview.subset method)": [[211, "datumaro.components.dataset_item_storage.DatasetItemStorageDatasetView.Subset.get"]], "get() (datumaro.components.dataset_item_storage.idataset method)": [[211, "datumaro.components.dataset_item_storage.IDataset.get"]], "get_annotated_items() (datumaro.components.dataset_item_storage.datasetitemstorage method)": [[211, "datumaro.components.dataset_item_storage.DatasetItemStorage.get_annotated_items"]], "get_annotations() (datumaro.components.dataset_item_storage.datasetitemstorage method)": [[211, "datumaro.components.dataset_item_storage.DatasetItemStorage.get_annotations"]], "get_datasetitem_by_path() (datumaro.components.dataset_item_storage.datasetitemstorage method)": [[211, "datumaro.components.dataset_item_storage.DatasetItemStorage.get_datasetitem_by_path"]], "get_subset() (datumaro.components.dataset_item_storage.datasetitemstorage method)": [[211, "datumaro.components.dataset_item_storage.DatasetItemStorage.get_subset"]], "get_subset() (datumaro.components.dataset_item_storage.datasetitemstoragedatasetview method)": [[211, "datumaro.components.dataset_item_storage.DatasetItemStorageDatasetView.get_subset"]], "get_subset() (datumaro.components.dataset_item_storage.datasetitemstoragedatasetview.subset method)": [[211, "datumaro.components.dataset_item_storage.DatasetItemStorageDatasetView.Subset.get_subset"]], "get_subset() (datumaro.components.dataset_item_storage.idataset method)": [[211, "datumaro.components.dataset_item_storage.IDataset.get_subset"]], "has_data (datumaro.components.dataset_item_storage.mediaelement property)": [[211, "datumaro.components.dataset_item_storage.MediaElement.has_data"]], "hash_key (datumaro.components.dataset_item_storage.annotationtype attribute)": [[211, "datumaro.components.dataset_item_storage.AnnotationType.hash_key"]], "id (datumaro.components.dataset_item_storage.datasetitem attribute)": [[211, "datumaro.components.dataset_item_storage.DatasetItem.id"]], "infos() (datumaro.components.dataset_item_storage.datasetitemstoragedatasetview method)": [[211, "datumaro.components.dataset_item_storage.DatasetItemStorageDatasetView.infos"]], "infos() (datumaro.components.dataset_item_storage.datasetitemstoragedatasetview.subset method)": [[211, "datumaro.components.dataset_item_storage.DatasetItemStorageDatasetView.Subset.infos"]], "infos() (datumaro.components.dataset_item_storage.idataset method)": [[211, "datumaro.components.dataset_item_storage.IDataset.infos"]], "is_empty() (datumaro.components.dataset_item_storage.datasetitemstorage method)": [[211, "datumaro.components.dataset_item_storage.DatasetItemStorage.is_empty"]], "is_encrypted (datumaro.components.dataset_item_storage.mediaelement property)": [[211, "datumaro.components.dataset_item_storage.MediaElement.is_encrypted"]], "is_stream (datumaro.components.dataset_item_storage.idataset property)": [[211, "datumaro.components.dataset_item_storage.IDataset.is_stream"]], "label (datumaro.components.dataset_item_storage.annotationtype attribute)": [[211, "datumaro.components.dataset_item_storage.AnnotationType.label"]], "mask (datumaro.components.dataset_item_storage.annotationtype attribute)": [[211, "datumaro.components.dataset_item_storage.AnnotationType.mask"]], "media (datumaro.components.dataset_item_storage.datasetitem attribute)": [[211, "datumaro.components.dataset_item_storage.DatasetItem.media"]], "media_as() (datumaro.components.dataset_item_storage.datasetitem method)": [[211, "datumaro.components.dataset_item_storage.DatasetItem.media_as"]], "media_type() (datumaro.components.dataset_item_storage.datasetitemstoragedatasetview method)": [[211, "datumaro.components.dataset_item_storage.DatasetItemStorageDatasetView.media_type"]], "media_type() (datumaro.components.dataset_item_storage.datasetitemstoragedatasetview.subset method)": [[211, "datumaro.components.dataset_item_storage.DatasetItemStorageDatasetView.Subset.media_type"]], "media_type() (datumaro.components.dataset_item_storage.idataset method)": [[211, "datumaro.components.dataset_item_storage.IDataset.media_type"]], "modified (datumaro.components.dataset_item_storage.itemstatus attribute)": [[211, "datumaro.components.dataset_item_storage.ItemStatus.modified"]], "name (datumaro.components.dataset_item_storage.enum attribute)": [[211, "datumaro.components.dataset_item_storage.Enum.name"]], "points (datumaro.components.dataset_item_storage.annotationtype attribute)": [[211, "datumaro.components.dataset_item_storage.AnnotationType.points"]], "polygon (datumaro.components.dataset_item_storage.annotationtype attribute)": [[211, "datumaro.components.dataset_item_storage.AnnotationType.polygon"]], "polyline (datumaro.components.dataset_item_storage.annotationtype attribute)": [[211, "datumaro.components.dataset_item_storage.AnnotationType.polyline"]], "put() (datumaro.components.dataset_item_storage.datasetitemstorage method)": [[211, "datumaro.components.dataset_item_storage.DatasetItemStorage.put"]], "put() (datumaro.components.dataset_item_storage.datasetitemstoragedatasetview.subset method)": [[211, "datumaro.components.dataset_item_storage.DatasetItemStorageDatasetView.Subset.put"]], "remove() (datumaro.components.dataset_item_storage.datasetitemstorage method)": [[211, "datumaro.components.dataset_item_storage.DatasetItemStorage.remove"]], "remove() (datumaro.components.dataset_item_storage.datasetitemstoragedatasetview.subset method)": [[211, "datumaro.components.dataset_item_storage.DatasetItemStorageDatasetView.Subset.remove"]], "removed (datumaro.components.dataset_item_storage.itemstatus attribute)": [[211, "datumaro.components.dataset_item_storage.ItemStatus.removed"]], "rotated_bbox (datumaro.components.dataset_item_storage.annotationtype attribute)": [[211, "datumaro.components.dataset_item_storage.AnnotationType.rotated_bbox"]], "save() (datumaro.components.dataset_item_storage.mediaelement method)": [[211, "datumaro.components.dataset_item_storage.MediaElement.save"]], "set_crypter() (datumaro.components.dataset_item_storage.mediaelement method)": [[211, "datumaro.components.dataset_item_storage.MediaElement.set_crypter"]], "subset (datumaro.components.dataset_item_storage.datasetitem attribute)": [[211, "datumaro.components.dataset_item_storage.DatasetItem.subset"]], "subsets() (datumaro.components.dataset_item_storage.datasetitemstorage method)": [[211, "datumaro.components.dataset_item_storage.DatasetItemStorage.subsets"]], "subsets() (datumaro.components.dataset_item_storage.datasetitemstoragedatasetview method)": [[211, "datumaro.components.dataset_item_storage.DatasetItemStorageDatasetView.subsets"]], "subsets() (datumaro.components.dataset_item_storage.datasetitemstoragedatasetview.subset method)": [[211, "datumaro.components.dataset_item_storage.DatasetItemStorageDatasetView.Subset.subsets"]], "subsets() (datumaro.components.dataset_item_storage.idataset method)": [[211, "datumaro.components.dataset_item_storage.IDataset.subsets"]], "super_resolution_annotation (datumaro.components.dataset_item_storage.annotationtype attribute)": [[211, "datumaro.components.dataset_item_storage.AnnotationType.super_resolution_annotation"]], "tabular (datumaro.components.dataset_item_storage.annotationtype attribute)": [[211, "datumaro.components.dataset_item_storage.AnnotationType.tabular"]], "type (datumaro.components.dataset_item_storage.mediaelement property)": [[211, "datumaro.components.dataset_item_storage.MediaElement.type"]], "unknown (datumaro.components.dataset_item_storage.annotationtype attribute)": [[211, "datumaro.components.dataset_item_storage.AnnotationType.unknown"]], "value (datumaro.components.dataset_item_storage.enum attribute)": [[211, "datumaro.components.dataset_item_storage.Enum.value"]], "value (datumaro.components.dataset_item_storage.auto attribute)": [[211, "datumaro.components.dataset_item_storage.auto.value"]], "wrap() (datumaro.components.dataset_item_storage.datasetitem method)": [[211, "datumaro.components.dataset_item_storage.DatasetItem.wrap"]], "annotationtype (class in datumaro.components.dataset_storage)": [[212, "datumaro.components.dataset_storage.AnnotationType"]], "categoriesredefinederror": [[212, "datumaro.components.dataset_storage.CategoriesRedefinedError"], [214, "datumaro.components.errors.CategoriesRedefinedError"]], "datasetbase (class in datumaro.components.dataset_storage)": [[212, "datumaro.components.dataset_storage.DatasetBase"]], "datasetinfosredefinederror": [[212, "datumaro.components.dataset_storage.DatasetInfosRedefinedError"], [214, "datumaro.components.errors.DatasetInfosRedefinedError"]], "datasetitem (class in datumaro.components.dataset_storage)": [[212, "datumaro.components.dataset_storage.DatasetItem"]], "datasetitemstorage (class in datumaro.components.dataset_storage)": [[212, "datumaro.components.dataset_storage.DatasetItemStorage"]], "datasetitemstoragedatasetview (class in datumaro.components.dataset_storage)": [[212, "datumaro.components.dataset_storage.DatasetItemStorageDatasetView"]], "datasetitemstoragedatasetview.subset (class in datumaro.components.dataset_storage)": [[212, "datumaro.components.dataset_storage.DatasetItemStorageDatasetView.Subset"]], "datasetpatch (class in datumaro.components.dataset_storage)": [[212, "datumaro.components.dataset_storage.DatasetPatch"]], "datasetpatch.datasetpatchwrapper (class in datumaro.components.dataset_storage)": [[212, "datumaro.components.dataset_storage.DatasetPatch.DatasetPatchWrapper"]], "datasetstorage (class in datumaro.components.dataset_storage)": [[212, "datumaro.components.dataset_storage.DatasetStorage"]], "idataset (class in datumaro.components.dataset_storage)": [[212, "datumaro.components.dataset_storage.IDataset"]], "itemstatus (class in datumaro.components.dataset_storage)": [[212, "datumaro.components.dataset_storage.ItemStatus"]], "itemtransform (class in datumaro.components.dataset_storage)": [[212, "datumaro.components.dataset_storage.ItemTransform"]], "labelcategories (class in datumaro.components.dataset_storage)": [[212, "datumaro.components.dataset_storage.LabelCategories"]], "labelcategories.category (class in datumaro.components.dataset_storage)": [[212, "datumaro.components.dataset_storage.LabelCategories.Category"]], "labelcategories.labelgroup (class in datumaro.components.dataset_storage)": [[212, "datumaro.components.dataset_storage.LabelCategories.LabelGroup"]], "mediaelement (class in datumaro.components.dataset_storage)": [[212, "datumaro.components.dataset_storage.MediaElement"]], "mediatypeerror": [[212, "datumaro.components.dataset_storage.MediaTypeError"], [214, "datumaro.components.errors.MediaTypeError"], [282, "datumaro.plugins.data_formats.datumaro.base.MediaTypeError"]], "notavailableerror": [[212, "datumaro.components.dataset_storage.NotAvailableError"], [214, "datumaro.components.errors.NotAvailableError"]], "repeateditemerror": [[212, "datumaro.components.dataset_storage.RepeatedItemError"], [214, "datumaro.components.errors.RepeatedItemError"]], "streamdatasetstorage (class in datumaro.components.dataset_storage)": [[212, "datumaro.components.dataset_storage.StreamDatasetStorage"]], "streamsubset (class in datumaro.components.dataset_storage)": [[212, "datumaro.components.dataset_storage.StreamSubset"]], "transform (class in datumaro.components.dataset_storage)": [[212, "datumaro.components.dataset_storage.Transform"]], "add() (datumaro.components.dataset_storage.labelcategories method)": [[212, "datumaro.components.dataset_storage.LabelCategories.add"]], "add_label_group() (datumaro.components.dataset_storage.labelcategories method)": [[212, "datumaro.components.dataset_storage.LabelCategories.add_label_group"]], "added (datumaro.components.dataset_storage.itemstatus attribute)": [[212, "datumaro.components.dataset_storage.ItemStatus.added"]], "ann_types() (datumaro.components.dataset_storage.datasetbase method)": [[212, "datumaro.components.dataset_storage.DatasetBase.ann_types"]], "ann_types() (datumaro.components.dataset_storage.datasetitemstoragedatasetview method)": [[212, "datumaro.components.dataset_storage.DatasetItemStorageDatasetView.ann_types"]], "ann_types() (datumaro.components.dataset_storage.datasetitemstoragedatasetview.subset method)": [[212, "datumaro.components.dataset_storage.DatasetItemStorageDatasetView.Subset.ann_types"]], "ann_types() (datumaro.components.dataset_storage.datasetstorage method)": [[212, "datumaro.components.dataset_storage.DatasetStorage.ann_types"]], "ann_types() (datumaro.components.dataset_storage.idataset method)": [[212, "datumaro.components.dataset_storage.IDataset.ann_types"]], "ann_types() (datumaro.components.dataset_storage.streamsubset method)": [[212, "datumaro.components.dataset_storage.StreamSubset.ann_types"]], "annotations (datumaro.components.dataset_storage.datasetitem attribute)": [[212, "datumaro.components.dataset_storage.DatasetItem.annotations"]], "as_dataset() (datumaro.components.dataset_storage.datasetpatch method)": [[212, "datumaro.components.dataset_storage.DatasetPatch.as_dataset"]], "as_dict() (datumaro.components.dataset_storage.mediaelement method)": [[212, "datumaro.components.dataset_storage.MediaElement.as_dict"]], "attributes (datumaro.components.dataset_storage.datasetitem attribute)": [[212, "datumaro.components.dataset_storage.DatasetItem.attributes"]], "attributes (datumaro.components.dataset_storage.labelcategories.category attribute)": [[212, "datumaro.components.dataset_storage.LabelCategories.Category.attributes"]], "bbox (datumaro.components.dataset_storage.annotationtype attribute)": [[212, "datumaro.components.dataset_storage.AnnotationType.bbox"]], "bytes (datumaro.components.dataset_storage.mediaelement property)": [[212, "datumaro.components.dataset_storage.MediaElement.bytes"]], "caption (datumaro.components.dataset_storage.annotationtype attribute)": [[212, "datumaro.components.dataset_storage.AnnotationType.caption"]], "categories() (datumaro.components.dataset_storage.datasetitemstoragedatasetview method)": [[212, "datumaro.components.dataset_storage.DatasetItemStorageDatasetView.categories"]], "categories() (datumaro.components.dataset_storage.datasetitemstoragedatasetview.subset method)": [[212, "datumaro.components.dataset_storage.DatasetItemStorageDatasetView.Subset.categories"]], "categories() (datumaro.components.dataset_storage.datasetstorage method)": [[212, "datumaro.components.dataset_storage.DatasetStorage.categories"]], "categories() (datumaro.components.dataset_storage.idataset method)": [[212, "datumaro.components.dataset_storage.IDataset.categories"]], "categories() (datumaro.components.dataset_storage.streamdatasetstorage method)": [[212, "datumaro.components.dataset_storage.StreamDatasetStorage.categories"]], "categories() (datumaro.components.dataset_storage.streamsubset method)": [[212, "datumaro.components.dataset_storage.StreamSubset.categories"]], "categories() (datumaro.components.dataset_storage.transform method)": [[212, "datumaro.components.dataset_storage.Transform.categories"]], "cuboid_3d (datumaro.components.dataset_storage.annotationtype attribute)": [[212, "datumaro.components.dataset_storage.AnnotationType.cuboid_3d"]], "data (datumaro.components.dataset_storage.mediaelement property)": [[212, "datumaro.components.dataset_storage.MediaElement.data"]], "datumaro.components.dataset_storage": [[212, "module-datumaro.components.dataset_storage"]], "define_categories() (datumaro.components.dataset_storage.datasetstorage method)": [[212, "datumaro.components.dataset_storage.DatasetStorage.define_categories"]], "define_infos() (datumaro.components.dataset_storage.datasetstorage method)": [[212, "datumaro.components.dataset_storage.DatasetStorage.define_infos"]], "depth_annotation (datumaro.components.dataset_storage.annotationtype attribute)": [[212, "datumaro.components.dataset_storage.AnnotationType.depth_annotation"]], "ellipse (datumaro.components.dataset_storage.annotationtype attribute)": [[212, "datumaro.components.dataset_storage.AnnotationType.ellipse"]], "feature_vector (datumaro.components.dataset_storage.annotationtype attribute)": [[212, "datumaro.components.dataset_storage.AnnotationType.feature_vector"]], "find() (datumaro.components.dataset_storage.labelcategories method)": [[212, "datumaro.components.dataset_storage.LabelCategories.find"]], "flush_changes() (datumaro.components.dataset_storage.datasetstorage method)": [[212, "datumaro.components.dataset_storage.DatasetStorage.flush_changes"]], "flush_changes() (datumaro.components.dataset_storage.streamdatasetstorage method)": [[212, "datumaro.components.dataset_storage.StreamDatasetStorage.flush_changes"]], "from_iterable() (datumaro.components.dataset_storage.labelcategories class method)": [[212, "datumaro.components.dataset_storage.LabelCategories.from_iterable"]], "from_self() (datumaro.components.dataset_storage.mediaelement method)": [[212, "datumaro.components.dataset_storage.MediaElement.from_self"]], "get() (datumaro.components.dataset_storage.datasetitemstorage method)": [[212, "datumaro.components.dataset_storage.DatasetItemStorage.get"]], "get() (datumaro.components.dataset_storage.datasetitemstoragedatasetview method)": [[212, "datumaro.components.dataset_storage.DatasetItemStorageDatasetView.get"]], "get() (datumaro.components.dataset_storage.datasetitemstoragedatasetview.subset method)": [[212, "datumaro.components.dataset_storage.DatasetItemStorageDatasetView.Subset.get"]], "get() (datumaro.components.dataset_storage.datasetstorage method)": [[212, "datumaro.components.dataset_storage.DatasetStorage.get"]], "get() (datumaro.components.dataset_storage.idataset method)": [[212, "datumaro.components.dataset_storage.IDataset.get"]], "get() (datumaro.components.dataset_storage.streamdatasetstorage method)": [[212, "datumaro.components.dataset_storage.StreamDatasetStorage.get"]], "get() (datumaro.components.dataset_storage.streamsubset method)": [[212, "datumaro.components.dataset_storage.StreamSubset.get"]], "get_annotated_items() (datumaro.components.dataset_storage.datasetitemstorage method)": [[212, "datumaro.components.dataset_storage.DatasetItemStorage.get_annotated_items"]], "get_annotated_items() (datumaro.components.dataset_storage.datasetstorage method)": [[212, "datumaro.components.dataset_storage.DatasetStorage.get_annotated_items"]], "get_annotated_items() (datumaro.components.dataset_storage.streamdatasetstorage method)": [[212, "datumaro.components.dataset_storage.StreamDatasetStorage.get_annotated_items"]], "get_annotations() (datumaro.components.dataset_storage.datasetitemstorage method)": [[212, "datumaro.components.dataset_storage.DatasetItemStorage.get_annotations"]], "get_annotations() (datumaro.components.dataset_storage.datasetstorage method)": [[212, "datumaro.components.dataset_storage.DatasetStorage.get_annotations"]], "get_annotations() (datumaro.components.dataset_storage.streamdatasetstorage method)": [[212, "datumaro.components.dataset_storage.StreamDatasetStorage.get_annotations"]], "get_datasetitem_by_path() (datumaro.components.dataset_storage.datasetitemstorage method)": [[212, "datumaro.components.dataset_storage.DatasetItemStorage.get_datasetitem_by_path"]], "get_datasetitem_by_path() (datumaro.components.dataset_storage.datasetstorage method)": [[212, "datumaro.components.dataset_storage.DatasetStorage.get_datasetitem_by_path"]], "get_datasetitem_by_path() (datumaro.components.dataset_storage.streamdatasetstorage method)": [[212, "datumaro.components.dataset_storage.StreamDatasetStorage.get_datasetitem_by_path"]], "get_patch() (datumaro.components.dataset_storage.datasetstorage method)": [[212, "datumaro.components.dataset_storage.DatasetStorage.get_patch"]], "get_patch() (datumaro.components.dataset_storage.streamdatasetstorage method)": [[212, "datumaro.components.dataset_storage.StreamDatasetStorage.get_patch"]], "get_subset() (datumaro.components.dataset_storage.datasetitemstorage method)": [[212, "datumaro.components.dataset_storage.DatasetItemStorage.get_subset"]], "get_subset() (datumaro.components.dataset_storage.datasetitemstoragedatasetview method)": [[212, "datumaro.components.dataset_storage.DatasetItemStorageDatasetView.get_subset"]], "get_subset() (datumaro.components.dataset_storage.datasetitemstoragedatasetview.subset method)": [[212, "datumaro.components.dataset_storage.DatasetItemStorageDatasetView.Subset.get_subset"]], "get_subset() (datumaro.components.dataset_storage.datasetstorage method)": [[212, "datumaro.components.dataset_storage.DatasetStorage.get_subset"]], "get_subset() (datumaro.components.dataset_storage.idataset method)": [[212, "datumaro.components.dataset_storage.IDataset.get_subset"]], "get_subset() (datumaro.components.dataset_storage.streamdatasetstorage method)": [[212, "datumaro.components.dataset_storage.StreamDatasetStorage.get_subset"]], "get_subset() (datumaro.components.dataset_storage.streamsubset method)": [[212, "datumaro.components.dataset_storage.StreamSubset.get_subset"]], "group_type (datumaro.components.dataset_storage.labelcategories.labelgroup attribute)": [[212, "datumaro.components.dataset_storage.LabelCategories.LabelGroup.group_type"]], "has_data (datumaro.components.dataset_storage.mediaelement property)": [[212, "datumaro.components.dataset_storage.MediaElement.has_data"]], "has_updated_items() (datumaro.components.dataset_storage.datasetstorage method)": [[212, "datumaro.components.dataset_storage.DatasetStorage.has_updated_items"]], "hash_key (datumaro.components.dataset_storage.annotationtype attribute)": [[212, "datumaro.components.dataset_storage.AnnotationType.hash_key"]], "id (datumaro.components.dataset_storage.datasetitem attribute)": [[212, "datumaro.components.dataset_storage.DatasetItem.id"]], "infos() (datumaro.components.dataset_storage.datasetitemstoragedatasetview method)": [[212, "datumaro.components.dataset_storage.DatasetItemStorageDatasetView.infos"]], "infos() (datumaro.components.dataset_storage.datasetitemstoragedatasetview.subset method)": [[212, "datumaro.components.dataset_storage.DatasetItemStorageDatasetView.Subset.infos"]], "infos() (datumaro.components.dataset_storage.datasetstorage method)": [[212, "datumaro.components.dataset_storage.DatasetStorage.infos"]], "infos() (datumaro.components.dataset_storage.idataset method)": [[212, "datumaro.components.dataset_storage.IDataset.infos"]], "infos() (datumaro.components.dataset_storage.streamdatasetstorage method)": [[212, "datumaro.components.dataset_storage.StreamDatasetStorage.infos"]], "infos() (datumaro.components.dataset_storage.streamsubset method)": [[212, "datumaro.components.dataset_storage.StreamSubset.infos"]], "infos() (datumaro.components.dataset_storage.transform method)": [[212, "datumaro.components.dataset_storage.Transform.infos"]], "init_cache() (datumaro.components.dataset_storage.datasetstorage method)": [[212, "datumaro.components.dataset_storage.DatasetStorage.init_cache"]], "init_cache() (datumaro.components.dataset_storage.streamdatasetstorage method)": [[212, "datumaro.components.dataset_storage.StreamDatasetStorage.init_cache"]], "is_cache_initialized() (datumaro.components.dataset_storage.datasetstorage method)": [[212, "datumaro.components.dataset_storage.DatasetStorage.is_cache_initialized"]], "is_cache_initialized() (datumaro.components.dataset_storage.streamdatasetstorage method)": [[212, "datumaro.components.dataset_storage.StreamDatasetStorage.is_cache_initialized"]], "is_empty() (datumaro.components.dataset_storage.datasetitemstorage method)": [[212, "datumaro.components.dataset_storage.DatasetItemStorage.is_empty"]], "is_encrypted (datumaro.components.dataset_storage.mediaelement property)": [[212, "datumaro.components.dataset_storage.MediaElement.is_encrypted"]], "is_method_redefined() (in module datumaro.components.dataset_storage)": [[212, "datumaro.components.dataset_storage.is_method_redefined"]], "is_stream (datumaro.components.dataset_storage.idataset property)": [[212, "datumaro.components.dataset_storage.IDataset.is_stream"]], "is_stream (datumaro.components.dataset_storage.streamdatasetstorage property)": [[212, "datumaro.components.dataset_storage.StreamDatasetStorage.is_stream"]], "is_stream (datumaro.components.dataset_storage.streamsubset property)": [[212, "datumaro.components.dataset_storage.StreamSubset.is_stream"]], "item_id (datumaro.components.dataset_storage.repeateditemerror attribute)": [[212, "datumaro.components.dataset_storage.RepeatedItemError.item_id"]], "items (datumaro.components.dataset_storage.labelcategories attribute)": [[212, "datumaro.components.dataset_storage.LabelCategories.items"]], "label (datumaro.components.dataset_storage.annotationtype attribute)": [[212, "datumaro.components.dataset_storage.AnnotationType.label"]], "label_groups (datumaro.components.dataset_storage.labelcategories attribute)": [[212, "datumaro.components.dataset_storage.LabelCategories.label_groups"]], "labels (datumaro.components.dataset_storage.labelcategories.labelgroup attribute)": [[212, "datumaro.components.dataset_storage.LabelCategories.LabelGroup.labels"]], "mask (datumaro.components.dataset_storage.annotationtype attribute)": [[212, "datumaro.components.dataset_storage.AnnotationType.mask"]], "media (datumaro.components.dataset_storage.datasetitem attribute)": [[212, "datumaro.components.dataset_storage.DatasetItem.media"]], "media_as() (datumaro.components.dataset_storage.datasetitem method)": [[212, "datumaro.components.dataset_storage.DatasetItem.media_as"]], "media_type() (datumaro.components.dataset_storage.datasetbase method)": [[212, "datumaro.components.dataset_storage.DatasetBase.media_type"]], "media_type() (datumaro.components.dataset_storage.datasetitemstoragedatasetview method)": [[212, "datumaro.components.dataset_storage.DatasetItemStorageDatasetView.media_type"]], "media_type() (datumaro.components.dataset_storage.datasetitemstoragedatasetview.subset method)": [[212, "datumaro.components.dataset_storage.DatasetItemStorageDatasetView.Subset.media_type"]], "media_type() (datumaro.components.dataset_storage.datasetstorage method)": [[212, "datumaro.components.dataset_storage.DatasetStorage.media_type"]], "media_type() (datumaro.components.dataset_storage.idataset method)": [[212, "datumaro.components.dataset_storage.IDataset.media_type"]], "media_type() (datumaro.components.dataset_storage.streamsubset method)": [[212, "datumaro.components.dataset_storage.StreamSubset.media_type"]], "media_type() (datumaro.components.dataset_storage.transform method)": [[212, "datumaro.components.dataset_storage.Transform.media_type"]], "modified (datumaro.components.dataset_storage.itemstatus attribute)": [[212, "datumaro.components.dataset_storage.ItemStatus.modified"]], "name (datumaro.components.dataset_storage.labelcategories.category attribute)": [[212, "datumaro.components.dataset_storage.LabelCategories.Category.name"]], "name (datumaro.components.dataset_storage.labelcategories.labelgroup attribute)": [[212, "datumaro.components.dataset_storage.LabelCategories.LabelGroup.name"]], "parent (datumaro.components.dataset_storage.labelcategories.category attribute)": [[212, "datumaro.components.dataset_storage.LabelCategories.Category.parent"]], "points (datumaro.components.dataset_storage.annotationtype attribute)": [[212, "datumaro.components.dataset_storage.AnnotationType.points"]], "polygon (datumaro.components.dataset_storage.annotationtype attribute)": [[212, "datumaro.components.dataset_storage.AnnotationType.polygon"]], "polyline (datumaro.components.dataset_storage.annotationtype attribute)": [[212, "datumaro.components.dataset_storage.AnnotationType.polyline"]], "put() (datumaro.components.dataset_storage.datasetitemstorage method)": [[212, "datumaro.components.dataset_storage.DatasetItemStorage.put"]], "put() (datumaro.components.dataset_storage.datasetitemstoragedatasetview.subset method)": [[212, "datumaro.components.dataset_storage.DatasetItemStorageDatasetView.Subset.put"]], "put() (datumaro.components.dataset_storage.datasetstorage method)": [[212, "datumaro.components.dataset_storage.DatasetStorage.put"]], "put() (datumaro.components.dataset_storage.streamdatasetstorage method)": [[212, "datumaro.components.dataset_storage.StreamDatasetStorage.put"]], "remove() (datumaro.components.dataset_storage.datasetitemstorage method)": [[212, "datumaro.components.dataset_storage.DatasetItemStorage.remove"]], "remove() (datumaro.components.dataset_storage.datasetitemstoragedatasetview.subset method)": [[212, "datumaro.components.dataset_storage.DatasetItemStorageDatasetView.Subset.remove"]], "remove() (datumaro.components.dataset_storage.datasetstorage method)": [[212, "datumaro.components.dataset_storage.DatasetStorage.remove"]], "remove() (datumaro.components.dataset_storage.streamdatasetstorage method)": [[212, "datumaro.components.dataset_storage.StreamDatasetStorage.remove"]], "removed (datumaro.components.dataset_storage.itemstatus attribute)": [[212, "datumaro.components.dataset_storage.ItemStatus.removed"]], "rotated_bbox (datumaro.components.dataset_storage.annotationtype attribute)": [[212, "datumaro.components.dataset_storage.AnnotationType.rotated_bbox"]], "save() (datumaro.components.dataset_storage.mediaelement method)": [[212, "datumaro.components.dataset_storage.MediaElement.save"]], "set_crypter() (datumaro.components.dataset_storage.mediaelement method)": [[212, "datumaro.components.dataset_storage.MediaElement.set_crypter"]], "sources (datumaro.components.dataset_storage.conflictingcategorieserror attribute)": [[212, "datumaro.components.dataset_storage.ConflictingCategoriesError.sources"]], "stacked_transform (datumaro.components.dataset_storage.streamdatasetstorage property)": [[212, "datumaro.components.dataset_storage.StreamDatasetStorage.stacked_transform"]], "subset (datumaro.components.dataset_storage.datasetitem attribute)": [[212, "datumaro.components.dataset_storage.DatasetItem.subset"]], "subset_names (datumaro.components.dataset_storage.streamdatasetstorage property)": [[212, "datumaro.components.dataset_storage.StreamDatasetStorage.subset_names"]], "subsets() (datumaro.components.dataset_storage.datasetitemstorage method)": [[212, "datumaro.components.dataset_storage.DatasetItemStorage.subsets"]], "subsets() (datumaro.components.dataset_storage.datasetitemstoragedatasetview method)": [[212, "datumaro.components.dataset_storage.DatasetItemStorageDatasetView.subsets"]], "subsets() (datumaro.components.dataset_storage.datasetitemstoragedatasetview.subset method)": [[212, "datumaro.components.dataset_storage.DatasetItemStorageDatasetView.Subset.subsets"]], "subsets() (datumaro.components.dataset_storage.datasetpatch.datasetpatchwrapper method)": [[212, "datumaro.components.dataset_storage.DatasetPatch.DatasetPatchWrapper.subsets"]], "subsets() (datumaro.components.dataset_storage.datasetstorage method)": [[212, "datumaro.components.dataset_storage.DatasetStorage.subsets"]], "subsets() (datumaro.components.dataset_storage.idataset method)": [[212, "datumaro.components.dataset_storage.IDataset.subsets"]], "subsets() (datumaro.components.dataset_storage.streamdatasetstorage method)": [[212, "datumaro.components.dataset_storage.StreamDatasetStorage.subsets"]], "subsets() (datumaro.components.dataset_storage.streamsubset method)": [[212, "datumaro.components.dataset_storage.StreamSubset.subsets"]], "subsets() (datumaro.components.dataset_storage.transform method)": [[212, "datumaro.components.dataset_storage.Transform.subsets"]], "super_resolution_annotation (datumaro.components.dataset_storage.annotationtype attribute)": [[212, "datumaro.components.dataset_storage.AnnotationType.super_resolution_annotation"]], "tabular (datumaro.components.dataset_storage.annotationtype attribute)": [[212, "datumaro.components.dataset_storage.AnnotationType.tabular"]], "transform() (datumaro.components.dataset_storage.datasetstorage method)": [[212, "datumaro.components.dataset_storage.DatasetStorage.transform"]], "transform() (datumaro.components.dataset_storage.streamdatasetstorage method)": [[212, "datumaro.components.dataset_storage.StreamDatasetStorage.transform"]], "transform_item() (datumaro.components.dataset_storage.itemtransform method)": [[212, "datumaro.components.dataset_storage.ItemTransform.transform_item"]], "type (datumaro.components.dataset_storage.mediaelement property)": [[212, "datumaro.components.dataset_storage.MediaElement.type"]], "unknown (datumaro.components.dataset_storage.annotationtype attribute)": [[212, "datumaro.components.dataset_storage.AnnotationType.unknown"]], "update() (datumaro.components.dataset_storage.datasetstorage method)": [[212, "datumaro.components.dataset_storage.DatasetStorage.update"]], "update() (datumaro.components.dataset_storage.streamdatasetstorage method)": [[212, "datumaro.components.dataset_storage.StreamDatasetStorage.update"]], "updated_subsets (datumaro.components.dataset_storage.datasetpatch property)": [[212, "datumaro.components.dataset_storage.DatasetPatch.updated_subsets"]], "wrap() (datumaro.components.dataset_storage.datasetitem method)": [[212, "datumaro.components.dataset_storage.DatasetItem.wrap"]], "wrap_item() (datumaro.components.dataset_storage.transform static method)": [[212, "datumaro.components.dataset_storage.Transform.wrap_item"]], "environment (class in datumaro.components.environment)": [[213, "datumaro.components.environment.Environment"]], "datumaro.components.environment": [[213, "module-datumaro.components.environment"]], "detect_dataset() (datumaro.components.environment.environment method)": [[213, "datumaro.components.environment.Environment.detect_dataset"]], "exporters (datumaro.components.environment.environment property)": [[213, "datumaro.components.environment.Environment.exporters"]], "extractors (datumaro.components.environment.environment property)": [[213, "datumaro.components.environment.Environment.extractors"]], "generators (datumaro.components.environment.environment property)": [[213, "datumaro.components.environment.Environment.generators"]], "importers (datumaro.components.environment.environment property)": [[213, "datumaro.components.environment.Environment.importers"]], "is_format_known() (datumaro.components.environment.environment method)": [[213, "datumaro.components.environment.Environment.is_format_known"]], "launchers (datumaro.components.environment.environment property)": [[213, "datumaro.components.environment.Environment.launchers"]], "load_plugins() (datumaro.components.environment.environment method)": [[213, "datumaro.components.environment.Environment.load_plugins"]], "make_exporter() (datumaro.components.environment.environment method)": [[213, "datumaro.components.environment.Environment.make_exporter"]], "make_extractor() (datumaro.components.environment.environment method)": [[213, "datumaro.components.environment.Environment.make_extractor"]], "make_importer() (datumaro.components.environment.environment method)": [[213, "datumaro.components.environment.Environment.make_importer"]], "make_launcher() (datumaro.components.environment.environment method)": [[213, "datumaro.components.environment.Environment.make_launcher"]], "make_transform() (datumaro.components.environment.environment method)": [[213, "datumaro.components.environment.Environment.make_transform"]], "merge() (datumaro.components.environment.environment class method)": [[213, "datumaro.components.environment.Environment.merge"]], "register_plugins() (datumaro.components.environment.environment method)": [[213, "datumaro.components.environment.Environment.register_plugins"]], "release_builtin_plugins() (datumaro.components.environment.environment class method)": [[213, "datumaro.components.environment.Environment.release_builtin_plugins"]], "transforms (datumaro.components.environment.environment property)": [[213, "datumaro.components.environment.Environment.transforms"]], "validators (datumaro.components.environment.environment property)": [[213, "datumaro.components.environment.Environment.validators"]], "annotationexporterror": [[214, "datumaro.components.errors.AnnotationExportError"]], "annotationimporterror": [[214, "datumaro.components.errors.AnnotationImportError"]], "annotationtypeerror": [[214, "datumaro.components.errors.AnnotationTypeError"]], "annotationstoocloseerror": [[214, "datumaro.components.errors.AnnotationsTooCloseError"], [229, "datumaro.components.merge.intersect_merge.AnnotationsTooCloseError"]], "attributedefinedbutnotfound": [[214, "datumaro.components.errors.AttributeDefinedButNotFound"]], "brokenannotation": [[214, "datumaro.components.errors.BrokenAnnotation"]], "datasetexporterror": [[214, "datumaro.components.errors.DatasetExportError"]], "datasetitemvalidationerror": [[214, "datumaro.components.errors.DatasetItemValidationError"]], "datasetmergeerror": [[214, "datumaro.components.errors.DatasetMergeError"], [227, "datumaro.components.merge.exact_merge.DatasetMergeError"]], "datasetnotfounderror": [[214, "datumaro.components.errors.DatasetNotFoundError"], [221, "datumaro.components.importer.DatasetNotFoundError"]], "datasetqualityerror": [[214, "datumaro.components.errors.DatasetQualityError"]], "datasetvalidationerror": [[214, "datumaro.components.errors.DatasetValidationError"]], "emptycaption": [[214, "datumaro.components.errors.EmptyCaption"]], "emptycommiterror": [[214, "datumaro.components.errors.EmptyCommitError"]], "emptylabel": [[214, "datumaro.components.errors.EmptyLabel"]], "emptypipelineerror": [[214, "datumaro.components.errors.EmptyPipelineError"]], "failedattrvotingerror": [[214, "datumaro.components.errors.FailedAttrVotingError"], [229, "datumaro.components.merge.intersect_merge.FailedAttrVotingError"]], "farfromattrmean": [[214, "datumaro.components.errors.FarFromAttrMean"]], "farfromcaptionmean": [[214, "datumaro.components.errors.FarFromCaptionMean"]], "farfromlabelmean": [[214, "datumaro.components.errors.FarFromLabelMean"]], "fewsamplesinattribute": [[214, "datumaro.components.errors.FewSamplesInAttribute"]], "fewsamplesincaption": [[214, "datumaro.components.errors.FewSamplesInCaption"]], "fewsamplesinlabel": [[214, "datumaro.components.errors.FewSamplesInLabel"]], "foreignchangeserror": [[214, "datumaro.components.errors.ForeignChangesError"]], "imbalancedattribute": [[214, "datumaro.components.errors.ImbalancedAttribute"]], "imbalancedcaptions": [[214, "datumaro.components.errors.ImbalancedCaptions"]], "imbalanceddistinattribute": [[214, "datumaro.components.errors.ImbalancedDistInAttribute"]], "imbalanceddistincaption": [[214, "datumaro.components.errors.ImbalancedDistInCaption"]], "imbalanceddistinlabel": [[214, "datumaro.components.errors.ImbalancedDistInLabel"]], "imbalancedlabels": [[214, "datumaro.components.errors.ImbalancedLabels"]], "immutableobjecterror": [[214, "datumaro.components.errors.ImmutableObjectError"]], "invalidannotationerror": [[214, "datumaro.components.errors.InvalidAnnotationError"], [374, "datumaro.plugins.data_formats.yolo.base.InvalidAnnotationError"]], "invalidfielderror": [[214, "datumaro.components.errors.InvalidFieldError"]], "invalidfieldtypeerror": [[214, "datumaro.components.errors.InvalidFieldTypeError"]], "invalidpipelineerror": [[214, "datumaro.components.errors.InvalidPipelineError"]], "invalidstageerror": [[214, "datumaro.components.errors.InvalidStageError"]], "invalidvalue": [[214, "datumaro.components.errors.InvalidValue"]], "itemexporterror": [[214, "datumaro.components.errors.ItemExportError"]], "itemimporterror": [[214, "datumaro.components.errors.ItemImportError"]], "labeldefinedbutnotfound": [[214, "datumaro.components.errors.LabelDefinedButNotFound"]], "mediashapeerror": [[214, "datumaro.components.errors.MediaShapeError"]], "migrationerror": [[214, "datumaro.components.errors.MigrationError"]], "mismatchingattributeserror": [[214, "datumaro.components.errors.MismatchingAttributesError"], [227, "datumaro.components.merge.exact_merge.MismatchingAttributesError"]], "mismatchingimageinfoerror": [[214, "datumaro.components.errors.MismatchingImageInfoError"], [227, "datumaro.components.merge.exact_merge.MismatchingImageInfoError"]], "mismatchingmediaerror": [[214, "datumaro.components.errors.MismatchingMediaError"], [227, "datumaro.components.merge.exact_merge.MismatchingMediaError"]], "mismatchingmediapatherror": [[214, "datumaro.components.errors.MismatchingMediaPathError"], [227, "datumaro.components.merge.exact_merge.MismatchingMediaPathError"]], "mismatchingobjecterror": [[214, "datumaro.components.errors.MismatchingObjectError"]], "missingannotation": [[214, "datumaro.components.errors.MissingAnnotation"]], "missingattribute": [[214, "datumaro.components.errors.MissingAttribute"]], "missingfielderror": [[214, "datumaro.components.errors.MissingFieldError"]], "missinglabelcategories": [[214, "datumaro.components.errors.MissingLabelCategories"]], "missingobjecterror": [[214, "datumaro.components.errors.MissingObjectError"]], "missingpipelineheaderror": [[214, "datumaro.components.errors.MissingPipelineHeadError"]], "missingsourcehasherror": [[214, "datumaro.components.errors.MissingSourceHashError"]], "multilabelannotations": [[214, "datumaro.components.errors.MultiLabelAnnotations"]], "multiplepipelineheadserror": [[214, "datumaro.components.errors.MultiplePipelineHeadsError"]], "negativelength": [[214, "datumaro.components.errors.NegativeLength"]], "nomatchingannerror": [[214, "datumaro.components.errors.NoMatchingAnnError"], [229, "datumaro.components.merge.intersect_merge.NoMatchingAnnError"]], "nomatchingitemerror": [[214, "datumaro.components.errors.NoMatchingItemError"], [229, "datumaro.components.merge.intersect_merge.NoMatchingItemError"]], "oldprojecterror": [[214, "datumaro.components.errors.OldProjectError"]], "onlyoneattributevalue": [[214, "datumaro.components.errors.OnlyOneAttributeValue"]], "onlyonelabel": [[214, "datumaro.components.errors.OnlyOneLabel"]], "outlierincaption": [[214, "datumaro.components.errors.OutlierInCaption"]], "pathoutsidesourceerror": [[214, "datumaro.components.errors.PathOutsideSourceError"]], "pipelineerror": [[214, "datumaro.components.errors.PipelineError"]], "projectalreadyexists": [[214, "datumaro.components.errors.ProjectAlreadyExists"]], "readonlydataseterror": [[214, "datumaro.components.errors.ReadonlyDatasetError"]], "readonlyprojecterror": [[214, "datumaro.components.errors.ReadonlyProjectError"]], "redundanciesincaption": [[214, "datumaro.components.errors.RedundanciesInCaption"]], "sourceexistserror": [[214, "datumaro.components.errors.SourceExistsError"]], "sourceurlinsideprojecterror": [[214, "datumaro.components.errors.SourceUrlInsideProjectError"]], "undeclaredlabelerror": [[214, "datumaro.components.errors.UndeclaredLabelError"], [374, "datumaro.plugins.data_formats.yolo.base.UndeclaredLabelError"]], "undefinedattribute": [[214, "datumaro.components.errors.UndefinedAttribute"]], "undefinedlabel": [[214, "datumaro.components.errors.UndefinedLabel"]], "unexpectedurlerror": [[214, "datumaro.components.errors.UnexpectedUrlError"]], "unknownreferror": [[214, "datumaro.components.errors.UnknownRefError"]], "unknownsourceerror": [[214, "datumaro.components.errors.UnknownSourceError"]], "unknownstageerror": [[214, "datumaro.components.errors.UnknownStageError"]], "unknowntargeterror": [[214, "datumaro.components.errors.UnknownTargetError"]], "unsavedchangeserror": [[214, "datumaro.components.errors.UnsavedChangesError"]], "vcsalreadyexists": [[214, "datumaro.components.errors.VcsAlreadyExists"]], "vcserror": [[214, "datumaro.components.errors.VcsError"]], "videomergeerror": [[214, "datumaro.components.errors.VideoMergeError"], [227, "datumaro.components.merge.exact_merge.VideoMergeError"]], "wronggrouperror": [[214, "datumaro.components.errors.WrongGroupError"], [229, "datumaro.components.merge.intersect_merge.WrongGroupError"]], "a (datumaro.components.errors.annotationstoocloseerror attribute)": [[214, "datumaro.components.errors.AnnotationsTooCloseError.a"]], "a (datumaro.components.errors.mismatchingattributeserror attribute)": [[214, "datumaro.components.errors.MismatchingAttributesError.a"]], "a (datumaro.components.errors.mismatchingimageinfoerror attribute)": [[214, "datumaro.components.errors.MismatchingImageInfoError.a"]], "a (datumaro.components.errors.mismatchingmediaerror attribute)": [[214, "datumaro.components.errors.MismatchingMediaError.a"]], "a (datumaro.components.errors.mismatchingmediapatherror attribute)": [[214, "datumaro.components.errors.MismatchingMediaPathError.a"]], "actual (datumaro.components.errors.invalidfieldtypeerror attribute)": [[214, "datumaro.components.errors.InvalidFieldTypeError.actual"]], "ann (datumaro.components.errors.failedattrvotingerror attribute)": [[214, "datumaro.components.errors.FailedAttrVotingError.ann"]], "ann (datumaro.components.errors.failedlabelvotingerror attribute)": [[214, "datumaro.components.errors.FailedLabelVotingError.ann"]], "ann (datumaro.components.errors.nomatchingannerror attribute)": [[214, "datumaro.components.errors.NoMatchingAnnError.ann"]], "ann_id (datumaro.components.errors.farfromattrmean attribute)": [[214, "datumaro.components.errors.FarFromAttrMean.ann_id"]], "ann_id (datumaro.components.errors.farfromlabelmean attribute)": [[214, "datumaro.components.errors.FarFromLabelMean.ann_id"]], "ann_id (datumaro.components.errors.invalidvalue attribute)": [[214, "datumaro.components.errors.InvalidValue.ann_id"]], "ann_id (datumaro.components.errors.negativelength attribute)": [[214, "datumaro.components.errors.NegativeLength.ann_id"]], "ann_type (datumaro.components.errors.brokenannotation attribute)": [[214, "datumaro.components.errors.BrokenAnnotation.ann_type"]], "ann_type (datumaro.components.errors.missingannotation attribute)": [[214, "datumaro.components.errors.MissingAnnotation.ann_type"]], "attr (datumaro.components.errors.failedattrvotingerror attribute)": [[214, "datumaro.components.errors.FailedAttrVotingError.attr"]], "attr_name (datumaro.components.errors.attributedefinedbutnotfound attribute)": [[214, "datumaro.components.errors.AttributeDefinedButNotFound.attr_name"]], "attr_name (datumaro.components.errors.farfromattrmean attribute)": [[214, "datumaro.components.errors.FarFromAttrMean.attr_name"]], "attr_name (datumaro.components.errors.fewsamplesinattribute attribute)": [[214, "datumaro.components.errors.FewSamplesInAttribute.attr_name"]], "attr_name (datumaro.components.errors.imbalancedattribute attribute)": [[214, "datumaro.components.errors.ImbalancedAttribute.attr_name"]], "attr_name (datumaro.components.errors.imbalanceddistinattribute attribute)": [[214, "datumaro.components.errors.ImbalancedDistInAttribute.attr_name"]], "attr_name (datumaro.components.errors.missingattribute attribute)": [[214, "datumaro.components.errors.MissingAttribute.attr_name"]], "attr_name (datumaro.components.errors.onlyoneattributevalue attribute)": [[214, "datumaro.components.errors.OnlyOneAttributeValue.attr_name"]], "attr_name (datumaro.components.errors.undefinedattribute attribute)": [[214, "datumaro.components.errors.UndefinedAttribute.attr_name"]], "attr_value (datumaro.components.errors.farfromattrmean attribute)": [[214, "datumaro.components.errors.FarFromAttrMean.attr_value"]], "attr_value (datumaro.components.errors.fewsamplesinattribute attribute)": [[214, "datumaro.components.errors.FewSamplesInAttribute.attr_value"]], "attr_value (datumaro.components.errors.imbalanceddistinattribute attribute)": [[214, "datumaro.components.errors.ImbalancedDistInAttribute.attr_value"]], "b (datumaro.components.errors.annotationstoocloseerror attribute)": [[214, "datumaro.components.errors.AnnotationsTooCloseError.b"]], "b (datumaro.components.errors.mismatchingattributeserror attribute)": [[214, "datumaro.components.errors.MismatchingAttributesError.b"]], "b (datumaro.components.errors.mismatchingimageinfoerror attribute)": [[214, "datumaro.components.errors.MismatchingImageInfoError.b"]], "b (datumaro.components.errors.mismatchingmediaerror attribute)": [[214, "datumaro.components.errors.MismatchingMediaError.b"]], "b (datumaro.components.errors.mismatchingmediapatherror attribute)": [[214, "datumaro.components.errors.MismatchingMediaPathError.b"]], "caption_name (datumaro.components.errors.emptycaption attribute)": [[214, "datumaro.components.errors.EmptyCaption.caption_name"]], "caption_name (datumaro.components.errors.farfromcaptionmean attribute)": [[214, "datumaro.components.errors.FarFromCaptionMean.caption_name"]], "caption_name (datumaro.components.errors.fewsamplesincaption attribute)": [[214, "datumaro.components.errors.FewSamplesInCaption.caption_name"]], "caption_name (datumaro.components.errors.imbalanceddistincaption attribute)": [[214, "datumaro.components.errors.ImbalancedDistInCaption.caption_name"]], "caption_name (datumaro.components.errors.outlierincaption attribute)": [[214, "datumaro.components.errors.OutlierInCaption.caption_name"]], "caption_name (datumaro.components.errors.redundanciesincaption attribute)": [[214, "datumaro.components.errors.RedundanciesInCaption.caption_name"]], "count (datumaro.components.errors.fewsamplesinattribute attribute)": [[214, "datumaro.components.errors.FewSamplesInAttribute.count"]], "count (datumaro.components.errors.fewsamplesincaption attribute)": [[214, "datumaro.components.errors.FewSamplesInCaption.count"]], "count (datumaro.components.errors.fewsamplesinlabel attribute)": [[214, "datumaro.components.errors.FewSamplesInLabel.count"]], "count (datumaro.components.errors.redundanciesincaption attribute)": [[214, "datumaro.components.errors.RedundanciesInCaption.count"]], "datumaro.components.errors": [[214, "module-datumaro.components.errors"]], "distance (datumaro.components.errors.annotationstoocloseerror attribute)": [[214, "datumaro.components.errors.AnnotationsTooCloseError.distance"]], "expected (datumaro.components.errors.invalidfieldtypeerror attribute)": [[214, "datumaro.components.errors.InvalidFieldTypeError.expected"]], "expected (datumaro.components.errors.wronggrouperror attribute)": [[214, "datumaro.components.errors.WrongGroupError.expected"]], "format (datumaro.components.errors.datasetnotfounderror attribute)": [[214, "datumaro.components.errors.DatasetNotFoundError.format"]], "format (datumaro.components.errors.unknownformaterror attribute)": [[214, "datumaro.components.errors.UnknownFormatError.format"]], "formats (datumaro.components.errors.multipleformatsmatcherror attribute)": [[214, "datumaro.components.errors.MultipleFormatsMatchError.formats"]], "found (datumaro.components.errors.wronggrouperror attribute)": [[214, "datumaro.components.errors.WrongGroupError.found"]], "group (datumaro.components.errors.wronggrouperror attribute)": [[214, "datumaro.components.errors.WrongGroupError.group"]], "id (datumaro.components.errors.undeclaredlabelerror attribute)": [[214, "datumaro.components.errors.UndeclaredLabelError.id"]], "item_id (datumaro.components.errors.annotationexporterror attribute)": [[214, "datumaro.components.errors.AnnotationExportError.item_id"]], "item_id (datumaro.components.errors.annotationimporterror attribute)": [[214, "datumaro.components.errors.AnnotationImportError.item_id"]], "item_id (datumaro.components.errors.annotationstoocloseerror attribute)": [[214, "datumaro.components.errors.AnnotationsTooCloseError.item_id"]], "item_id (datumaro.components.errors.datasetitemvalidationerror attribute)": [[214, "datumaro.components.errors.DatasetItemValidationError.item_id"]], "item_id (datumaro.components.errors.failedattrvotingerror attribute)": [[214, "datumaro.components.errors.FailedAttrVotingError.item_id"]], "item_id (datumaro.components.errors.failedlabelvotingerror attribute)": [[214, "datumaro.components.errors.FailedLabelVotingError.item_id"]], "item_id (datumaro.components.errors.itemexporterror attribute)": [[214, "datumaro.components.errors.ItemExportError.item_id"]], "item_id (datumaro.components.errors.itemimporterror attribute)": [[214, "datumaro.components.errors.ItemImportError.item_id"]], "item_id (datumaro.components.errors.mismatchingattributeserror attribute)": [[214, "datumaro.components.errors.MismatchingAttributesError.item_id"]], "item_id (datumaro.components.errors.mismatchingimageinfoerror attribute)": [[214, "datumaro.components.errors.MismatchingImageInfoError.item_id"]], "item_id (datumaro.components.errors.mismatchingmediaerror attribute)": [[214, "datumaro.components.errors.MismatchingMediaError.item_id"]], "item_id (datumaro.components.errors.mismatchingmediapatherror attribute)": [[214, "datumaro.components.errors.MismatchingMediaPathError.item_id"]], "item_id (datumaro.components.errors.nomatchingannerror attribute)": [[214, "datumaro.components.errors.NoMatchingAnnError.item_id"]], "item_id (datumaro.components.errors.nomatchingitemerror attribute)": [[214, "datumaro.components.errors.NoMatchingItemError.item_id"]], "item_id (datumaro.components.errors.repeateditemerror attribute)": [[214, "datumaro.components.errors.RepeatedItemError.item_id"]], "item_id (datumaro.components.errors.videomergeerror attribute)": [[214, "datumaro.components.errors.VideoMergeError.item_id"]], "item_id (datumaro.components.errors.wronggrouperror attribute)": [[214, "datumaro.components.errors.WrongGroupError.item_id"]], "key (datumaro.components.errors.mismatchingattributeserror attribute)": [[214, "datumaro.components.errors.MismatchingAttributesError.key"]], "label_name (datumaro.components.errors.attributedefinedbutnotfound attribute)": [[214, "datumaro.components.errors.AttributeDefinedButNotFound.label_name"]], "label_name (datumaro.components.errors.emptylabel attribute)": [[214, "datumaro.components.errors.EmptyLabel.label_name"]], "label_name (datumaro.components.errors.farfromattrmean attribute)": [[214, "datumaro.components.errors.FarFromAttrMean.label_name"]], "label_name (datumaro.components.errors.farfromlabelmean attribute)": [[214, "datumaro.components.errors.FarFromLabelMean.label_name"]], "label_name (datumaro.components.errors.fewsamplesinattribute attribute)": [[214, "datumaro.components.errors.FewSamplesInAttribute.label_name"]], "label_name (datumaro.components.errors.fewsamplesinlabel attribute)": [[214, "datumaro.components.errors.FewSamplesInLabel.label_name"]], "label_name (datumaro.components.errors.imbalancedattribute attribute)": [[214, "datumaro.components.errors.ImbalancedAttribute.label_name"]], "label_name (datumaro.components.errors.imbalanceddistinattribute attribute)": [[214, "datumaro.components.errors.ImbalancedDistInAttribute.label_name"]], "label_name (datumaro.components.errors.imbalanceddistinlabel attribute)": [[214, "datumaro.components.errors.ImbalancedDistInLabel.label_name"]], "label_name (datumaro.components.errors.labeldefinedbutnotfound attribute)": [[214, "datumaro.components.errors.LabelDefinedButNotFound.label_name"]], "label_name (datumaro.components.errors.missingattribute attribute)": [[214, "datumaro.components.errors.MissingAttribute.label_name"]], "label_name (datumaro.components.errors.onlyoneattributevalue attribute)": [[214, "datumaro.components.errors.OnlyOneAttributeValue.label_name"]], "label_name (datumaro.components.errors.onlyonelabel attribute)": [[214, "datumaro.components.errors.OnlyOneLabel.label_name"]], "label_name (datumaro.components.errors.undefinedattribute attribute)": [[214, "datumaro.components.errors.UndefinedAttribute.label_name"]], "label_name (datumaro.components.errors.undefinedlabel attribute)": [[214, "datumaro.components.errors.UndefinedLabel.label_name"]], "lower_bound (datumaro.components.errors.farfromcaptionmean attribute)": [[214, "datumaro.components.errors.FarFromCaptionMean.lower_bound"]], "lower_bound (datumaro.components.errors.outlierincaption attribute)": [[214, "datumaro.components.errors.OutlierInCaption.lower_bound"]], "mean (datumaro.components.errors.farfromattrmean attribute)": [[214, "datumaro.components.errors.FarFromAttrMean.mean"]], "mean (datumaro.components.errors.farfromcaptionmean attribute)": [[214, "datumaro.components.errors.FarFromCaptionMean.mean"]], "mean (datumaro.components.errors.farfromlabelmean attribute)": [[214, "datumaro.components.errors.FarFromLabelMean.mean"]], "name (datumaro.components.errors.invalidfielderror attribute)": [[214, "datumaro.components.errors.InvalidFieldError.name"]], "name (datumaro.components.errors.sourceexistserror attribute)": [[214, "datumaro.components.errors.SourceExistsError.name"]], "name (datumaro.components.errors.unknownsourceerror attribute)": [[214, "datumaro.components.errors.UnknownSourceError.name"]], "name (datumaro.components.errors.unknowntargeterror attribute)": [[214, "datumaro.components.errors.UnknownTargetError.name"]], "path (datumaro.components.errors.datasetnotfounderror attribute)": [[214, "datumaro.components.errors.DatasetNotFoundError.path"]], "path (datumaro.components.errors.projectalreadyexists attribute)": [[214, "datumaro.components.errors.ProjectAlreadyExists.path"]], "path (datumaro.components.errors.projectnotfounderror attribute)": [[214, "datumaro.components.errors.ProjectNotFoundError.path"]], "path (datumaro.components.errors.vcsalreadyexists attribute)": [[214, "datumaro.components.errors.VcsAlreadyExists.path"]], "paths (datumaro.components.errors.unsavedchangeserror attribute)": [[214, "datumaro.components.errors.UnsavedChangesError.paths"]], "prop (datumaro.components.errors.farfromattrmean attribute)": [[214, "datumaro.components.errors.FarFromAttrMean.prop"]], "prop (datumaro.components.errors.farfromlabelmean attribute)": [[214, "datumaro.components.errors.FarFromLabelMean.prop"]], "prop (datumaro.components.errors.imbalanceddistinattribute attribute)": [[214, "datumaro.components.errors.ImbalancedDistInAttribute.prop"]], "prop (datumaro.components.errors.imbalanceddistinlabel attribute)": [[214, "datumaro.components.errors.ImbalancedDistInLabel.prop"]], "prop (datumaro.components.errors.invalidvalue attribute)": [[214, "datumaro.components.errors.InvalidValue.prop"]], "prop (datumaro.components.errors.negativelength attribute)": [[214, "datumaro.components.errors.NegativeLength.prop"]], "redundancy_type (datumaro.components.errors.redundanciesincaption attribute)": [[214, "datumaro.components.errors.RedundanciesInCaption.redundancy_type"]], "ref (datumaro.components.errors.unknownreferror attribute)": [[214, "datumaro.components.errors.UnknownRefError.ref"]], "severity (datumaro.components.errors.datasetvalidationerror attribute)": [[214, "datumaro.components.errors.DatasetValidationError.severity"]], "sources (datumaro.components.errors.conflictingcategorieserror attribute)": [[214, "datumaro.components.errors.ConflictingCategoriesError.sources"]], "sources (datumaro.components.errors.datasetmergeerror attribute)": [[214, "datumaro.components.errors.DatasetMergeError.sources"]], "subset (datumaro.components.errors.datasetitemvalidationerror attribute)": [[214, "datumaro.components.errors.DatasetItemValidationError.subset"]], "template (datumaro.components.errors.datasetnotfounderror attribute)": [[214, "datumaro.components.errors.DatasetNotFoundError.template"]], "to_dict() (datumaro.components.errors.datasetitemvalidationerror method)": [[214, "datumaro.components.errors.DatasetItemValidationError.to_dict"]], "to_dict() (datumaro.components.errors.datasetvalidationerror method)": [[214, "datumaro.components.errors.DatasetValidationError.to_dict"]], "upper_bound (datumaro.components.errors.farfromcaptionmean attribute)": [[214, "datumaro.components.errors.FarFromCaptionMean.upper_bound"]], "upper_bound (datumaro.components.errors.outlierincaption attribute)": [[214, "datumaro.components.errors.OutlierInCaption.upper_bound"]], "val (datumaro.components.errors.farfromattrmean attribute)": [[214, "datumaro.components.errors.FarFromAttrMean.val"]], "val (datumaro.components.errors.farfromcaptionmean attribute)": [[214, "datumaro.components.errors.FarFromCaptionMean.val"]], "val (datumaro.components.errors.farfromlabelmean attribute)": [[214, "datumaro.components.errors.FarFromLabelMean.val"]], "val (datumaro.components.errors.negativelength attribute)": [[214, "datumaro.components.errors.NegativeLength.val"]], "val (datumaro.components.errors.outlierincaption attribute)": [[214, "datumaro.components.errors.OutlierInCaption.val"]], "value (datumaro.components.errors.onlyoneattributevalue attribute)": [[214, "datumaro.components.errors.OnlyOneAttributeValue.value"]], "votes (datumaro.components.errors.failedattrvotingerror attribute)": [[214, "datumaro.components.errors.FailedAttrVotingError.votes"]], "votes (datumaro.components.errors.failedlabelvotingerror attribute)": [[214, "datumaro.components.errors.FailedLabelVotingError.votes"]], "default_image_ext (datumaro.components.exporter.exporter attribute)": [[215, "datumaro.components.exporter.Exporter.DEFAULT_IMAGE_EXT"]], "exportcontext (class in datumaro.components.exporter)": [[215, "datumaro.components.exporter.ExportContext"]], "exportcontextcomponent (class in datumaro.components.exporter)": [[215, "datumaro.components.exporter.ExportContextComponent"]], "exporterrorpolicy (class in datumaro.components.exporter)": [[215, "datumaro.components.exporter.ExportErrorPolicy"]], "exporter (class in datumaro.components.exporter)": [[215, "datumaro.components.exporter.Exporter"]], "failingexporterrorpolicy (class in datumaro.components.exporter)": [[215, "datumaro.components.exporter.FailingExportErrorPolicy"]], "nullexportcontext (class in datumaro.components.exporter)": [[215, "datumaro.components.exporter.NullExportContext"]], "apply() (datumaro.components.exporter.exporter method)": [[215, "datumaro.components.exporter.Exporter.apply"]], "build_cmdline_parser() (datumaro.components.exporter.exporter class method)": [[215, "datumaro.components.exporter.Exporter.build_cmdline_parser"]], "can_stream (datumaro.components.exporter.exporter property)": [[215, "datumaro.components.exporter.Exporter.can_stream"]], "convert() (datumaro.components.exporter.exporter class method)": [[215, "datumaro.components.exporter.Exporter.convert"]], "crypter (datumaro.components.exporter.exportcontextcomponent property)": [[215, "datumaro.components.exporter.ExportContextComponent.crypter"]], "datumaro.components.exporter": [[215, "module-datumaro.components.exporter"]], "error_policy (datumaro.components.exporter.exportcontext attribute)": [[215, "datumaro.components.exporter.ExportContext.error_policy"]], "error_policy (datumaro.components.exporter.nullexportcontext attribute)": [[215, "datumaro.components.exporter.NullExportContext.error_policy"]], "fail() (datumaro.components.exporter.exporterrorpolicy method)": [[215, "datumaro.components.exporter.ExportErrorPolicy.fail"]], "find_image_ext() (datumaro.components.exporter.exportcontextcomponent method)": [[215, "datumaro.components.exporter.ExportContextComponent.find_image_ext"]], "images_dir (datumaro.components.exporter.exportcontextcomponent property)": [[215, "datumaro.components.exporter.ExportContextComponent.images_dir"]], "make_image_filename() (datumaro.components.exporter.exportcontextcomponent method)": [[215, "datumaro.components.exporter.ExportContextComponent.make_image_filename"]], "make_pcd_extra_image_filename() (datumaro.components.exporter.exportcontextcomponent method)": [[215, "datumaro.components.exporter.ExportContextComponent.make_pcd_extra_image_filename"]], "make_pcd_filename() (datumaro.components.exporter.exportcontextcomponent method)": [[215, "datumaro.components.exporter.ExportContextComponent.make_pcd_filename"]], "make_video_filename() (datumaro.components.exporter.exportcontextcomponent method)": [[215, "datumaro.components.exporter.ExportContextComponent.make_video_filename"]], "patch() (datumaro.components.exporter.exporter class method)": [[215, "datumaro.components.exporter.Exporter.patch"]], "pcd_dir (datumaro.components.exporter.exportcontextcomponent property)": [[215, "datumaro.components.exporter.ExportContextComponent.pcd_dir"]], "progress_reporter (datumaro.components.exporter.exportcontext attribute)": [[215, "datumaro.components.exporter.ExportContext.progress_reporter"]], "progress_reporter (datumaro.components.exporter.nullexportcontext attribute)": [[215, "datumaro.components.exporter.NullExportContext.progress_reporter"]], "report_annotation_error() (datumaro.components.exporter.exporterrorpolicy method)": [[215, "datumaro.components.exporter.ExportErrorPolicy.report_annotation_error"]], "report_item_error() (datumaro.components.exporter.exporterrorpolicy method)": [[215, "datumaro.components.exporter.ExportErrorPolicy.report_item_error"]], "save_dir (datumaro.components.exporter.exportcontextcomponent property)": [[215, "datumaro.components.exporter.ExportContextComponent.save_dir"]], "save_image() (datumaro.components.exporter.exportcontextcomponent method)": [[215, "datumaro.components.exporter.ExportContextComponent.save_image"]], "save_media (datumaro.components.exporter.exportcontextcomponent property)": [[215, "datumaro.components.exporter.ExportContextComponent.save_media"]], "save_point_cloud() (datumaro.components.exporter.exportcontextcomponent method)": [[215, "datumaro.components.exporter.ExportContextComponent.save_point_cloud"]], "save_video() (datumaro.components.exporter.exportcontextcomponent method)": [[215, "datumaro.components.exporter.ExportContextComponent.save_video"]], "source_path (datumaro.components.exporter.exportcontextcomponent property)": [[215, "datumaro.components.exporter.ExportContextComponent.source_path"]], "tfdsdataset (class in datumaro.components.extractor_tfds)": [[216, "datumaro.components.extractor_tfds.TfdsDataset"]], "tfdsdatasetmetadata (class in datumaro.components.extractor_tfds)": [[216, "datumaro.components.extractor_tfds.TfdsDatasetMetadata"]], "tfdsdatasetremotemetadata (class in datumaro.components.extractor_tfds)": [[216, "datumaro.components.extractor_tfds.TfdsDatasetRemoteMetadata"]], "tfdssubsetremotemetadata (class in datumaro.components.extractor_tfds)": [[216, "datumaro.components.extractor_tfds.TfdsSubsetRemoteMetadata"]], "datumaro.components.extractor_tfds": [[216, "module-datumaro.components.extractor_tfds"]], "default_output_format (datumaro.components.extractor_tfds.tfdsdatasetmetadata attribute)": [[216, "datumaro.components.extractor_tfds.TfdsDatasetMetadata.default_output_format"]], "description (datumaro.components.extractor_tfds.tfdsdatasetremotemetadata attribute)": [[216, "datumaro.components.extractor_tfds.TfdsDatasetRemoteMetadata.description"]], "download_size (datumaro.components.extractor_tfds.tfdsdatasetremotemetadata attribute)": [[216, "datumaro.components.extractor_tfds.TfdsDatasetRemoteMetadata.download_size"]], "home_url (datumaro.components.extractor_tfds.tfdsdatasetmetadata attribute)": [[216, "datumaro.components.extractor_tfds.TfdsDatasetMetadata.home_url"]], "human_name (datumaro.components.extractor_tfds.tfdsdatasetmetadata attribute)": [[216, "datumaro.components.extractor_tfds.TfdsDatasetMetadata.human_name"]], "make_extractor() (datumaro.components.extractor_tfds.tfdsdataset method)": [[216, "datumaro.components.extractor_tfds.TfdsDataset.make_extractor"]], "media_type (datumaro.components.extractor_tfds.tfdsdatasetmetadata attribute)": [[216, "datumaro.components.extractor_tfds.TfdsDatasetMetadata.media_type"]], "metadata (datumaro.components.extractor_tfds.tfdsdataset property)": [[216, "datumaro.components.extractor_tfds.TfdsDataset.metadata"]], "num_classes (datumaro.components.extractor_tfds.tfdsdatasetremotemetadata attribute)": [[216, "datumaro.components.extractor_tfds.TfdsDatasetRemoteMetadata.num_classes"]], "num_items (datumaro.components.extractor_tfds.tfdssubsetremotemetadata attribute)": [[216, "datumaro.components.extractor_tfds.TfdsSubsetRemoteMetadata.num_items"]], "query_remote_metadata() (datumaro.components.extractor_tfds.tfdsdataset method)": [[216, "datumaro.components.extractor_tfds.TfdsDataset.query_remote_metadata"]], "subsets (datumaro.components.extractor_tfds.tfdsdatasetremotemetadata attribute)": [[216, "datumaro.components.extractor_tfds.TfdsDatasetRemoteMetadata.subsets"]], "version (datumaro.components.extractor_tfds.tfdsdatasetremotemetadata attribute)": [[216, "datumaro.components.extractor_tfds.TfdsDatasetRemoteMetadata.version"]], "annotation (class in datumaro.components.filter)": [[217, "datumaro.components.filter.Annotation"]], "annotationtype (class in datumaro.components.filter)": [[217, "datumaro.components.filter.AnnotationType"]], "bbox (class in datumaro.components.filter)": [[217, "datumaro.components.filter.Bbox"]], "caption (class in datumaro.components.filter)": [[217, "datumaro.components.filter.Caption"]], "datasetitemencoder (class in datumaro.components.filter)": [[217, "datumaro.components.filter.DatasetItemEncoder"]], "ellipse (class in datumaro.components.filter)": [[217, "datumaro.components.filter.Ellipse"]], "hashkey (class in datumaro.components.filter)": [[217, "datumaro.components.filter.HashKey"]], "image (class in datumaro.components.filter)": [[217, "datumaro.components.filter.Image"]], "itemtransform (class in datumaro.components.filter)": [[217, "datumaro.components.filter.ItemTransform"]], "label (class in datumaro.components.filter)": [[217, "datumaro.components.filter.Label"]], "mask (class in datumaro.components.filter)": [[217, "datumaro.components.filter.Mask"]], "points (class in datumaro.components.filter)": [[217, "datumaro.components.filter.Points"]], "points.visibility (class in datumaro.components.filter)": [[217, "datumaro.components.filter.Points.Visibility"]], "polyline (class in datumaro.components.filter)": [[217, "datumaro.components.filter.PolyLine"]], "polygon (class in datumaro.components.filter)": [[217, "datumaro.components.filter.Polygon"]], "userfunctionannotationsfilter (class in datumaro.components.filter)": [[217, "datumaro.components.filter.UserFunctionAnnotationsFilter"]], "userfunctiondatasetfilter (class in datumaro.components.filter)": [[217, "datumaro.components.filter.UserFunctionDatasetFilter"]], "xpathannotationsfilter (class in datumaro.components.filter)": [[217, "datumaro.components.filter.XPathAnnotationsFilter"]], "xpathdatasetfilter (class in datumaro.components.filter)": [[217, "datumaro.components.filter.XPathDatasetFilter"]], "__attrs_post_init__() (datumaro.components.filter.points method)": [[217, "datumaro.components.filter.Points.__attrs_post_init__"]], "__attrs_post_init__() (datumaro.components.filter.polygon method)": [[217, "datumaro.components.filter.Polygon.__attrs_post_init__"]], "__eq__() (datumaro.components.filter.polygon method)": [[217, "datumaro.components.filter.Polygon.__eq__"]], "__init__() (datumaro.components.filter.bbox method)": [[217, "datumaro.components.filter.Bbox.__init__"]], "_get_shoelace_area() (datumaro.components.filter.polygon method)": [[217, "datumaro.components.filter.Polygon._get_shoelace_area"]], "_type (datumaro.components.filter.bbox attribute)": [[217, "datumaro.components.filter.Bbox._type"]], "_type (datumaro.components.filter.points attribute)": [[217, "datumaro.components.filter.Points._type"]], "_type (datumaro.components.filter.polyline attribute)": [[217, "datumaro.components.filter.PolyLine._type"]], "_type (datumaro.components.filter.polygon attribute)": [[217, "datumaro.components.filter.Polygon._type"]], "absent (datumaro.components.filter.points.visibility attribute)": [[217, "datumaro.components.filter.Points.Visibility.absent"], [217, "id9"]], "as_class_mask() (datumaro.components.filter.mask method)": [[217, "datumaro.components.filter.Mask.as_class_mask"]], "as_dict() (datumaro.components.filter.annotation method)": [[217, "datumaro.components.filter.Annotation.as_dict"]], "as_instance_mask() (datumaro.components.filter.mask method)": [[217, "datumaro.components.filter.Mask.as_instance_mask"]], "as_polygon() (datumaro.components.filter.bbox method)": [[217, "datumaro.components.filter.Bbox.as_polygon"], [217, "id6"]], "as_polygon() (datumaro.components.filter.ellipse method)": [[217, "datumaro.components.filter.Ellipse.as_polygon"]], "as_polygon() (datumaro.components.filter.polyline method)": [[217, "datumaro.components.filter.PolyLine.as_polygon"], [217, "id15"]], "as_polygon() (datumaro.components.filter.polygon method)": [[217, "datumaro.components.filter.Polygon.as_polygon"], [217, "id18"]], "attributes (datumaro.components.filter.annotation attribute)": [[217, "datumaro.components.filter.Annotation.attributes"]], "bbox (datumaro.components.filter.annotationtype attribute)": [[217, "datumaro.components.filter.AnnotationType.bbox"]], "c_x (datumaro.components.filter.ellipse property)": [[217, "datumaro.components.filter.Ellipse.c_x"]], "c_y (datumaro.components.filter.ellipse property)": [[217, "datumaro.components.filter.Ellipse.c_y"]], "caption (datumaro.components.filter.annotationtype attribute)": [[217, "datumaro.components.filter.AnnotationType.caption"]], "caption (datumaro.components.filter.caption attribute)": [[217, "datumaro.components.filter.Caption.caption"]], "cuboid_3d (datumaro.components.filter.annotationtype attribute)": [[217, "datumaro.components.filter.AnnotationType.cuboid_3d"]], "datumaro.components.filter": [[217, "module-datumaro.components.filter"]], "depth_annotation (datumaro.components.filter.annotationtype attribute)": [[217, "datumaro.components.filter.AnnotationType.depth_annotation"]], "ellipse (datumaro.components.filter.annotationtype attribute)": [[217, "datumaro.components.filter.AnnotationType.ellipse"]], "encode() (datumaro.components.filter.datasetitemencoder class method)": [[217, "datumaro.components.filter.DatasetItemEncoder.encode"]], "encode_annotation() (datumaro.components.filter.datasetitemencoder class method)": [[217, "datumaro.components.filter.DatasetItemEncoder.encode_annotation"]], "encode_annotation_base() (datumaro.components.filter.datasetitemencoder class method)": [[217, "datumaro.components.filter.DatasetItemEncoder.encode_annotation_base"]], "encode_bbox_object() (datumaro.components.filter.datasetitemencoder class method)": [[217, "datumaro.components.filter.DatasetItemEncoder.encode_bbox_object"]], "encode_caption_object() (datumaro.components.filter.datasetitemencoder class method)": [[217, "datumaro.components.filter.DatasetItemEncoder.encode_caption_object"]], "encode_ellipse_object() (datumaro.components.filter.datasetitemencoder class method)": [[217, "datumaro.components.filter.DatasetItemEncoder.encode_ellipse_object"]], "encode_image() (datumaro.components.filter.datasetitemencoder class method)": [[217, "datumaro.components.filter.DatasetItemEncoder.encode_image"]], "encode_label_object() (datumaro.components.filter.datasetitemencoder class method)": [[217, "datumaro.components.filter.DatasetItemEncoder.encode_label_object"]], "encode_mask_object() (datumaro.components.filter.datasetitemencoder class method)": [[217, "datumaro.components.filter.DatasetItemEncoder.encode_mask_object"]], "encode_points_object() (datumaro.components.filter.datasetitemencoder class method)": [[217, "datumaro.components.filter.DatasetItemEncoder.encode_points_object"]], "encode_polygon_object() (datumaro.components.filter.datasetitemencoder class method)": [[217, "datumaro.components.filter.DatasetItemEncoder.encode_polygon_object"]], "encode_polyline_object() (datumaro.components.filter.datasetitemencoder class method)": [[217, "datumaro.components.filter.DatasetItemEncoder.encode_polyline_object"]], "ext (datumaro.components.filter.image property)": [[217, "datumaro.components.filter.Image.ext"]], "feature_vector (datumaro.components.filter.annotationtype attribute)": [[217, "datumaro.components.filter.AnnotationType.feature_vector"]], "from_bytes() (datumaro.components.filter.image class method)": [[217, "datumaro.components.filter.Image.from_bytes"]], "from_file() (datumaro.components.filter.image class method)": [[217, "datumaro.components.filter.Image.from_file"]], "from_numpy() (datumaro.components.filter.image class method)": [[217, "datumaro.components.filter.Image.from_numpy"]], "get_area() (datumaro.components.filter.bbox method)": [[217, "datumaro.components.filter.Bbox.get_area"], [217, "id4"]], "get_area() (datumaro.components.filter.ellipse method)": [[217, "datumaro.components.filter.Ellipse.get_area"]], "get_area() (datumaro.components.filter.mask method)": [[217, "datumaro.components.filter.Mask.get_area"]], "get_area() (datumaro.components.filter.points method)": [[217, "datumaro.components.filter.Points.get_area"], [217, "id13"]], "get_area() (datumaro.components.filter.polyline method)": [[217, "datumaro.components.filter.PolyLine.get_area"], [217, "id16"]], "get_area() (datumaro.components.filter.polygon method)": [[217, "datumaro.components.filter.Polygon.get_area"], [217, "id17"]], "get_bbox() (datumaro.components.filter.bbox method)": [[217, "datumaro.components.filter.Bbox.get_bbox"], [217, "id5"]], "get_bbox() (datumaro.components.filter.ellipse method)": [[217, "datumaro.components.filter.Ellipse.get_bbox"]], "get_bbox() (datumaro.components.filter.mask method)": [[217, "datumaro.components.filter.Mask.get_bbox"]], "get_bbox() (datumaro.components.filter.points method)": [[217, "datumaro.components.filter.Points.get_bbox"], [217, "id14"]], "get_points() (datumaro.components.filter.ellipse method)": [[217, "datumaro.components.filter.Ellipse.get_points"]], "group (datumaro.components.filter.annotation attribute)": [[217, "datumaro.components.filter.Annotation.group"]], "h (datumaro.components.filter.bbox property)": [[217, "id3"]], "h (datumaro.components.filter.ellipse property)": [[217, "datumaro.components.filter.Ellipse.h"]], "h() (datumaro.components.filter.bbox method)": [[217, "datumaro.components.filter.Bbox.h"]], "has_size (datumaro.components.filter.image property)": [[217, "datumaro.components.filter.Image.has_size"]], "hash_key (datumaro.components.filter.annotationtype attribute)": [[217, "datumaro.components.filter.AnnotationType.hash_key"]], "hash_key (datumaro.components.filter.hashkey attribute)": [[217, "datumaro.components.filter.HashKey.hash_key"]], "hidden (datumaro.components.filter.points.visibility attribute)": [[217, "datumaro.components.filter.Points.Visibility.hidden"], [217, "id10"]], "id (datumaro.components.filter.annotation attribute)": [[217, "datumaro.components.filter.Annotation.id"]], "image (datumaro.components.filter.mask property)": [[217, "datumaro.components.filter.Mask.image"]], "iou() (datumaro.components.filter.bbox method)": [[217, "datumaro.components.filter.Bbox.iou"], [217, "id7"]], "iou() (datumaro.components.filter.ellipse method)": [[217, "datumaro.components.filter.Ellipse.iou"]], "label (datumaro.components.filter.annotationtype attribute)": [[217, "datumaro.components.filter.AnnotationType.label"]], "label (datumaro.components.filter.label attribute)": [[217, "datumaro.components.filter.Label.label"]], "label (datumaro.components.filter.mask attribute)": [[217, "datumaro.components.filter.Mask.label"]], "mask (datumaro.components.filter.annotationtype attribute)": [[217, "datumaro.components.filter.AnnotationType.mask"]], "object_id (datumaro.components.filter.annotation attribute)": [[217, "datumaro.components.filter.Annotation.object_id"]], "paint() (datumaro.components.filter.mask method)": [[217, "datumaro.components.filter.Mask.paint"]], "points (datumaro.components.filter.annotationtype attribute)": [[217, "datumaro.components.filter.AnnotationType.points"]], "polygon (datumaro.components.filter.annotationtype attribute)": [[217, "datumaro.components.filter.AnnotationType.polygon"]], "polyline (datumaro.components.filter.annotationtype attribute)": [[217, "datumaro.components.filter.AnnotationType.polyline"]], "rotated_bbox (datumaro.components.filter.annotationtype attribute)": [[217, "datumaro.components.filter.AnnotationType.rotated_bbox"]], "set_crypter() (datumaro.components.filter.image method)": [[217, "datumaro.components.filter.Image.set_crypter"]], "size (datumaro.components.filter.image property)": [[217, "datumaro.components.filter.Image.size"]], "super_resolution_annotation (datumaro.components.filter.annotationtype attribute)": [[217, "datumaro.components.filter.AnnotationType.super_resolution_annotation"]], "tabular (datumaro.components.filter.annotationtype attribute)": [[217, "datumaro.components.filter.AnnotationType.tabular"]], "to_string() (datumaro.components.filter.datasetitemencoder static method)": [[217, "datumaro.components.filter.DatasetItemEncoder.to_string"]], "transform_item() (datumaro.components.filter.itemtransform method)": [[217, "datumaro.components.filter.ItemTransform.transform_item"]], "transform_item() (datumaro.components.filter.userfunctionannotationsfilter method)": [[217, "datumaro.components.filter.UserFunctionAnnotationsFilter.transform_item"]], "transform_item() (datumaro.components.filter.userfunctiondatasetfilter method)": [[217, "datumaro.components.filter.UserFunctionDatasetFilter.transform_item"]], "transform_item() (datumaro.components.filter.xpathannotationsfilter method)": [[217, "datumaro.components.filter.XPathAnnotationsFilter.transform_item"]], "transform_item() (datumaro.components.filter.xpathdatasetfilter method)": [[217, "datumaro.components.filter.XPathDatasetFilter.transform_item"]], "type (datumaro.components.filter.annotation property)": [[217, "datumaro.components.filter.Annotation.type"]], "unknown (datumaro.components.filter.annotationtype attribute)": [[217, "datumaro.components.filter.AnnotationType.unknown"]], "visibility (datumaro.components.filter.points attribute)": [[217, "datumaro.components.filter.Points.visibility"], [217, "id12"]], "visible (datumaro.components.filter.points.visibility attribute)": [[217, "datumaro.components.filter.Points.Visibility.visible"], [217, "id11"]], "w (datumaro.components.filter.bbox property)": [[217, "id2"]], "w (datumaro.components.filter.ellipse property)": [[217, "datumaro.components.filter.Ellipse.w"]], "w() (datumaro.components.filter.bbox method)": [[217, "datumaro.components.filter.Bbox.w"]], "wrap() (datumaro.components.filter.annotation method)": [[217, "datumaro.components.filter.Annotation.wrap"]], "wrap() (datumaro.components.filter.bbox method)": [[217, "datumaro.components.filter.Bbox.wrap"], [217, "id8"]], "wrap() (datumaro.components.filter.ellipse method)": [[217, "datumaro.components.filter.Ellipse.wrap"]], "x (datumaro.components.filter.bbox property)": [[217, "id0"]], "x() (datumaro.components.filter.bbox method)": [[217, "datumaro.components.filter.Bbox.x"]], "x1 (datumaro.components.filter.ellipse property)": [[217, "datumaro.components.filter.Ellipse.x1"]], "x2 (datumaro.components.filter.ellipse property)": [[217, "datumaro.components.filter.Ellipse.x2"]], "y (datumaro.components.filter.bbox property)": [[217, "id1"]], "y() (datumaro.components.filter.bbox method)": [[217, "datumaro.components.filter.Bbox.y"]], "y1 (datumaro.components.filter.ellipse property)": [[217, "datumaro.components.filter.Ellipse.y1"]], "y2 (datumaro.components.filter.ellipse property)": [[217, "datumaro.components.filter.Ellipse.y2"]], "z_order (datumaro.components.filter.mask attribute)": [[217, "datumaro.components.filter.Mask.z_order"]], "detectedformat (class in datumaro.components.format_detection)": [[218, "datumaro.components.format_detection.DetectedFormat"]], "extreme_low (datumaro.components.format_detection.formatdetectionconfidence attribute)": [[218, "datumaro.components.format_detection.FormatDetectionConfidence.EXTREME_LOW"]], "formatdetectionconfidence (class in datumaro.components.format_detection)": [[218, "datumaro.components.format_detection.FormatDetectionConfidence"]], "formatdetectioncontext (class in datumaro.components.format_detection)": [[218, "datumaro.components.format_detection.FormatDetectionContext"]], "formatdetectionunsupported": [[218, "datumaro.components.format_detection.FormatDetectionUnsupported"]], "formatdetector (in module datumaro.components.format_detection)": [[218, "datumaro.components.format_detection.FormatDetector"]], "formatrequirementsunmet": [[218, "datumaro.components.format_detection.FormatRequirementsUnmet"]], "low (datumaro.components.format_detection.formatdetectionconfidence attribute)": [[218, "datumaro.components.format_detection.FormatDetectionConfidence.LOW"]], "medium (datumaro.components.format_detection.formatdetectionconfidence attribute)": [[218, "datumaro.components.format_detection.FormatDetectionConfidence.MEDIUM"]], "none (datumaro.components.format_detection.formatdetectionconfidence attribute)": [[218, "datumaro.components.format_detection.FormatDetectionConfidence.NONE"]], "rejectioncallback (class in datumaro.components.format_detection)": [[218, "datumaro.components.format_detection.RejectionCallback"]], "rejectionreason (class in datumaro.components.format_detection)": [[218, "datumaro.components.format_detection.RejectionReason"]], "alternative() (datumaro.components.format_detection.formatdetectioncontext method)": [[218, "datumaro.components.format_detection.FormatDetectionContext.alternative"]], "apply_format_detector() (in module datumaro.components.format_detection)": [[218, "datumaro.components.format_detection.apply_format_detector"]], "confidence (datumaro.components.format_detection.detectedformat attribute)": [[218, "datumaro.components.format_detection.DetectedFormat.confidence"]], "datumaro.components.format_detection": [[218, "module-datumaro.components.format_detection"]], "detect_dataset_format() (in module datumaro.components.format_detection)": [[218, "datumaro.components.format_detection.detect_dataset_format"]], "detection_unsupported (datumaro.components.format_detection.rejectionreason attribute)": [[218, "datumaro.components.format_detection.RejectionReason.detection_unsupported"]], "fail() (datumaro.components.format_detection.formatdetectioncontext method)": [[218, "datumaro.components.format_detection.FormatDetectionContext.fail"]], "insufficient_confidence (datumaro.components.format_detection.rejectionreason attribute)": [[218, "datumaro.components.format_detection.RejectionReason.insufficient_confidence"]], "name (datumaro.components.format_detection.detectedformat attribute)": [[218, "datumaro.components.format_detection.DetectedFormat.name"]], "probe_text_file() (datumaro.components.format_detection.formatdetectioncontext method)": [[218, "datumaro.components.format_detection.FormatDetectionContext.probe_text_file"]], "raise_unsupported() (datumaro.components.format_detection.formatdetectioncontext method)": [[218, "datumaro.components.format_detection.FormatDetectionContext.raise_unsupported"]], "reason (datumaro.components.format_detection.formatdetectionunsupported property)": [[218, "datumaro.components.format_detection.FormatDetectionUnsupported.reason"]], "reason (datumaro.components.format_detection.formatrequirementsunmet property)": [[218, "datumaro.components.format_detection.FormatRequirementsUnmet.reason"]], "require_any() (datumaro.components.format_detection.formatdetectioncontext method)": [[218, "datumaro.components.format_detection.FormatDetectionContext.require_any"]], "require_file() (datumaro.components.format_detection.formatdetectioncontext method)": [[218, "datumaro.components.format_detection.FormatDetectionContext.require_file"]], "require_files() (datumaro.components.format_detection.formatdetectioncontext method)": [[218, "datumaro.components.format_detection.FormatDetectionContext.require_files"]], "require_files_iter() (datumaro.components.format_detection.formatdetectioncontext method)": [[218, "datumaro.components.format_detection.FormatDetectionContext.require_files_iter"]], "root_path (datumaro.components.format_detection.formatdetectioncontext property)": [[218, "datumaro.components.format_detection.FormatDetectionContext.root_path"]], "unmet_requirements (datumaro.components.format_detection.rejectionreason attribute)": [[218, "datumaro.components.format_detection.RejectionReason.unmet_requirements"]], "datasetgenerator (class in datumaro.components.generator)": [[219, "datumaro.components.generator.DatasetGenerator"]], "datumaro.components.generator": [[219, "module-datumaro.components.generator"]], "generate() (datumaro.components.generator.datasetgenerator class method)": [[219, "datumaro.components.generator.DatasetGenerator.generate"]], "generate_dataset() (datumaro.components.generator.datasetgenerator method)": [[219, "datumaro.components.generator.DatasetGenerator.generate_dataset"]], "default_format (datumaro.components.hl_ops.distancecomparevisualizer attribute)": [[220, "datumaro.components.hl_ops.DistanceCompareVisualizer.DEFAULT_FORMAT"]], "default_image_ext (datumaro.components.hl_ops.exporter attribute)": [[220, "datumaro.components.hl_ops.Exporter.DEFAULT_IMAGE_EXT"]], "dataset (class in datumaro.components.hl_ops)": [[220, "datumaro.components.hl_ops.Dataset"]], "distancecomparator (class in datumaro.components.hl_ops)": [[220, "datumaro.components.hl_ops.DistanceComparator"]], "distancecomparevisualizer (class in datumaro.components.hl_ops)": [[220, "datumaro.components.hl_ops.DistanceCompareVisualizer"]], "distancecomparevisualizer.outputformat (class in datumaro.components.hl_ops)": [[220, "datumaro.components.hl_ops.DistanceCompareVisualizer.OutputFormat"]], "environment (class in datumaro.components.hl_ops)": [[220, "datumaro.components.hl_ops.Environment"]], "equalitycomparator (class in datumaro.components.hl_ops)": [[220, "datumaro.components.hl_ops.EqualityComparator"]], "exporter (class in datumaro.components.hl_ops)": [[220, "datumaro.components.hl_ops.Exporter"]], "hlops (class in datumaro.components.hl_ops)": [[220, "datumaro.components.hl_ops.HLOps"]], "idataset (class in datumaro.components.hl_ops)": [[220, "datumaro.components.hl_ops.IDataset"]], "launcher (class in datumaro.components.hl_ops)": [[220, "datumaro.components.hl_ops.Launcher"]], "modeltransform (class in datumaro.components.hl_ops)": [[220, "datumaro.components.hl_ops.ModelTransform"]], "tablecomparator (class in datumaro.components.hl_ops)": [[220, "datumaro.components.hl_ops.TableComparator"]], "tasktype (class in datumaro.components.hl_ops)": [[220, "datumaro.components.hl_ops.TaskType"]], "transform (class in datumaro.components.hl_ops)": [[220, "datumaro.components.hl_ops.Transform"]], "userfunctionannotationsfilter (class in datumaro.components.hl_ops)": [[220, "datumaro.components.hl_ops.UserFunctionAnnotationsFilter"]], "userfunctiondatasetfilter (class in datumaro.components.hl_ops)": [[220, "datumaro.components.hl_ops.UserFunctionDatasetFilter"]], "validator (class in datumaro.components.hl_ops)": [[220, "datumaro.components.hl_ops.Validator"]], "xpathannotationsfilter (class in datumaro.components.hl_ops)": [[220, "datumaro.components.hl_ops.XPathAnnotationsFilter"]], "xpathdatasetfilter (class in datumaro.components.hl_ops)": [[220, "datumaro.components.hl_ops.XPathDatasetFilter"]], "aggregate() (datumaro.components.hl_ops.hlops static method)": [[220, "datumaro.components.hl_ops.HLOps.aggregate"]], "ann_types() (datumaro.components.hl_ops.dataset method)": [[220, "datumaro.components.hl_ops.Dataset.ann_types"]], "ann_types() (datumaro.components.hl_ops.idataset method)": [[220, "datumaro.components.hl_ops.IDataset.ann_types"]], "apply() (datumaro.components.hl_ops.exporter method)": [[220, "datumaro.components.hl_ops.Exporter.apply"]], "bind() (datumaro.components.hl_ops.dataset method)": [[220, "datumaro.components.hl_ops.Dataset.bind"]], "build_cmdline_parser() (datumaro.components.hl_ops.exporter class method)": [[220, "datumaro.components.hl_ops.Exporter.build_cmdline_parser"]], "can_stream (datumaro.components.hl_ops.exporter property)": [[220, "datumaro.components.hl_ops.Exporter.can_stream"]], "categories() (datumaro.components.hl_ops.dataset method)": [[220, "datumaro.components.hl_ops.Dataset.categories"]], "categories() (datumaro.components.hl_ops.idataset method)": [[220, "datumaro.components.hl_ops.IDataset.categories"]], "categories() (datumaro.components.hl_ops.launcher method)": [[220, "datumaro.components.hl_ops.Launcher.categories"]], "categories() (datumaro.components.hl_ops.modeltransform method)": [[220, "datumaro.components.hl_ops.ModelTransform.categories"]], "categories() (datumaro.components.hl_ops.transform method)": [[220, "datumaro.components.hl_ops.Transform.categories"]], "classification (datumaro.components.hl_ops.tasktype attribute)": [[220, "datumaro.components.hl_ops.TaskType.classification"]], "clone() (datumaro.components.hl_ops.dataset method)": [[220, "datumaro.components.hl_ops.Dataset.clone"]], "compare() (datumaro.components.hl_ops.hlops static method)": [[220, "datumaro.components.hl_ops.HLOps.compare"]], "compare_datasets() (datumaro.components.hl_ops.equalitycomparator method)": [[220, "datumaro.components.hl_ops.EqualityComparator.compare_datasets"]], "compare_datasets() (datumaro.components.hl_ops.tablecomparator method)": [[220, "datumaro.components.hl_ops.TableComparator.compare_datasets"]], "compute_statistics() (datumaro.components.hl_ops.validator method)": [[220, "datumaro.components.hl_ops.Validator.compute_statistics"]], "convert() (datumaro.components.hl_ops.exporter class method)": [[220, "datumaro.components.hl_ops.Exporter.convert"]], "data_path (datumaro.components.hl_ops.dataset property)": [[220, "datumaro.components.hl_ops.Dataset.data_path"]], "datumaro.components.hl_ops": [[220, "module-datumaro.components.hl_ops"]], "define_categories() (datumaro.components.hl_ops.dataset method)": [[220, "datumaro.components.hl_ops.Dataset.define_categories"]], "define_infos() (datumaro.components.hl_ops.dataset method)": [[220, "datumaro.components.hl_ops.Dataset.define_infos"]], "detect() (datumaro.components.hl_ops.dataset static method)": [[220, "datumaro.components.hl_ops.Dataset.detect"]], "detect_dataset() (datumaro.components.hl_ops.environment method)": [[220, "datumaro.components.hl_ops.Environment.detect_dataset"]], "detection (datumaro.components.hl_ops.tasktype attribute)": [[220, "datumaro.components.hl_ops.TaskType.detection"]], "draw_bbox() (datumaro.components.hl_ops.distancecomparevisualizer method)": [[220, "datumaro.components.hl_ops.DistanceCompareVisualizer.draw_bbox"]], "draw_detection_roi() (datumaro.components.hl_ops.distancecomparevisualizer method)": [[220, "datumaro.components.hl_ops.DistanceCompareVisualizer.draw_detection_roi"]], "draw_text_with_background() (datumaro.components.hl_ops.distancecomparevisualizer class method)": [[220, "datumaro.components.hl_ops.DistanceCompareVisualizer.draw_text_with_background"]], "env (datumaro.components.hl_ops.dataset property)": [[220, "datumaro.components.hl_ops.Dataset.env"]], "errors (datumaro.components.hl_ops.equalitycomparator attribute)": [[220, "datumaro.components.hl_ops.EqualityComparator.errors"]], "export() (datumaro.components.hl_ops.dataset method)": [[220, "datumaro.components.hl_ops.Dataset.export"]], "export() (datumaro.components.hl_ops.hlops static method)": [[220, "datumaro.components.hl_ops.HLOps.export"]], "exporters (datumaro.components.hl_ops.environment property)": [[220, "datumaro.components.hl_ops.Environment.exporters"]], "extractors (datumaro.components.hl_ops.environment property)": [[220, "datumaro.components.hl_ops.Environment.extractors"]], "filter() (datumaro.components.hl_ops.dataset method)": [[220, "datumaro.components.hl_ops.Dataset.filter"]], "filter() (datumaro.components.hl_ops.hlops method)": [[220, "datumaro.components.hl_ops.HLOps.filter"]], "flush_changes() (datumaro.components.hl_ops.dataset method)": [[220, "datumaro.components.hl_ops.Dataset.flush_changes"]], "format (datumaro.components.hl_ops.dataset property)": [[220, "datumaro.components.hl_ops.Dataset.format"]], "from_extractors() (datumaro.components.hl_ops.dataset class method)": [[220, "datumaro.components.hl_ops.Dataset.from_extractors"]], "from_iterable() (datumaro.components.hl_ops.dataset class method)": [[220, "datumaro.components.hl_ops.Dataset.from_iterable"]], "generate_reports() (datumaro.components.hl_ops.validator method)": [[220, "datumaro.components.hl_ops.Validator.generate_reports"]], "generators (datumaro.components.hl_ops.environment property)": [[220, "datumaro.components.hl_ops.Environment.generators"]], "get() (datumaro.components.hl_ops.dataset method)": [[220, "datumaro.components.hl_ops.Dataset.get"]], "get() (datumaro.components.hl_ops.idataset method)": [[220, "datumaro.components.hl_ops.IDataset.get"]], "get_a_label() (datumaro.components.hl_ops.distancecomparevisualizer method)": [[220, "datumaro.components.hl_ops.DistanceCompareVisualizer.get_a_label"]], "get_annotated_items() (datumaro.components.hl_ops.dataset method)": [[220, "datumaro.components.hl_ops.Dataset.get_annotated_items"]], "get_annotations() (datumaro.components.hl_ops.dataset method)": [[220, "datumaro.components.hl_ops.Dataset.get_annotations"]], "get_b_label() (datumaro.components.hl_ops.distancecomparevisualizer method)": [[220, "datumaro.components.hl_ops.DistanceCompareVisualizer.get_b_label"]], "get_categories_info() (datumaro.components.hl_ops.dataset method)": [[220, "datumaro.components.hl_ops.Dataset.get_categories_info"]], "get_datasetitem_by_path() (datumaro.components.hl_ops.dataset method)": [[220, "datumaro.components.hl_ops.Dataset.get_datasetitem_by_path"]], "get_infos() (datumaro.components.hl_ops.dataset method)": [[220, "datumaro.components.hl_ops.Dataset.get_infos"]], "get_label_cat_names() (datumaro.components.hl_ops.dataset method)": [[220, "datumaro.components.hl_ops.Dataset.get_label_cat_names"]], "get_label_diff_file() (datumaro.components.hl_ops.distancecomparevisualizer method)": [[220, "datumaro.components.hl_ops.DistanceCompareVisualizer.get_label_diff_file"]], "get_merger() (in module datumaro.components.hl_ops)": [[220, "datumaro.components.hl_ops.get_merger"]], "get_patch() (datumaro.components.hl_ops.dataset method)": [[220, "datumaro.components.hl_ops.Dataset.get_patch"]], "get_subset() (datumaro.components.hl_ops.dataset method)": [[220, "datumaro.components.hl_ops.Dataset.get_subset"]], "get_subset() (datumaro.components.hl_ops.idataset method)": [[220, "datumaro.components.hl_ops.IDataset.get_subset"]], "get_subset() (datumaro.components.hl_ops.modeltransform method)": [[220, "datumaro.components.hl_ops.ModelTransform.get_subset"]], "get_subset_info() (datumaro.components.hl_ops.dataset method)": [[220, "datumaro.components.hl_ops.Dataset.get_subset_info"]], "import_from() (datumaro.components.hl_ops.dataset class method)": [[220, "datumaro.components.hl_ops.Dataset.import_from"]], "importers (datumaro.components.hl_ops.environment property)": [[220, "datumaro.components.hl_ops.Environment.importers"]], "infer() (datumaro.components.hl_ops.launcher method)": [[220, "datumaro.components.hl_ops.Launcher.infer"]], "infos() (datumaro.components.hl_ops.dataset method)": [[220, "datumaro.components.hl_ops.Dataset.infos"]], "infos() (datumaro.components.hl_ops.idataset method)": [[220, "datumaro.components.hl_ops.IDataset.infos"]], "infos() (datumaro.components.hl_ops.launcher method)": [[220, "datumaro.components.hl_ops.Launcher.infos"]], "infos() (datumaro.components.hl_ops.modeltransform method)": [[220, "datumaro.components.hl_ops.ModelTransform.infos"]], "infos() (datumaro.components.hl_ops.transform method)": [[220, "datumaro.components.hl_ops.Transform.infos"]], "init_cache() (datumaro.components.hl_ops.dataset method)": [[220, "datumaro.components.hl_ops.Dataset.init_cache"]], "is_bound (datumaro.components.hl_ops.dataset property)": [[220, "datumaro.components.hl_ops.Dataset.is_bound"]], "is_cache_initialized (datumaro.components.hl_ops.dataset property)": [[220, "datumaro.components.hl_ops.Dataset.is_cache_initialized"]], "is_eager (datumaro.components.hl_ops.dataset property)": [[220, "datumaro.components.hl_ops.Dataset.is_eager"]], "is_format_known() (datumaro.components.hl_ops.environment method)": [[220, "datumaro.components.hl_ops.Environment.is_format_known"]], "is_modified (datumaro.components.hl_ops.dataset property)": [[220, "datumaro.components.hl_ops.Dataset.is_modified"]], "is_stream (datumaro.components.hl_ops.dataset property)": [[220, "datumaro.components.hl_ops.Dataset.is_stream"]], "is_stream (datumaro.components.hl_ops.idataset property)": [[220, "datumaro.components.hl_ops.IDataset.is_stream"]], "launch() (datumaro.components.hl_ops.launcher method)": [[220, "datumaro.components.hl_ops.Launcher.launch"]], "launchers (datumaro.components.hl_ops.environment property)": [[220, "datumaro.components.hl_ops.Environment.launchers"]], "load() (datumaro.components.hl_ops.dataset class method)": [[220, "datumaro.components.hl_ops.Dataset.load"]], "load_plugins() (datumaro.components.hl_ops.environment method)": [[220, "datumaro.components.hl_ops.Environment.load_plugins"]], "make_exporter() (datumaro.components.hl_ops.environment method)": [[220, "datumaro.components.hl_ops.Environment.make_exporter"]], "make_extractor() (datumaro.components.hl_ops.environment method)": [[220, "datumaro.components.hl_ops.Environment.make_extractor"]], "make_importer() (datumaro.components.hl_ops.environment method)": [[220, "datumaro.components.hl_ops.Environment.make_importer"]], "make_launcher() (datumaro.components.hl_ops.environment method)": [[220, "datumaro.components.hl_ops.Environment.make_launcher"]], "make_transform() (datumaro.components.hl_ops.environment method)": [[220, "datumaro.components.hl_ops.Environment.make_transform"]], "match_annotations() (datumaro.components.hl_ops.distancecomparator method)": [[220, "datumaro.components.hl_ops.DistanceComparator.match_annotations"]], "match_boxes() (datumaro.components.hl_ops.distancecomparator method)": [[220, "datumaro.components.hl_ops.DistanceComparator.match_boxes"]], "match_images (datumaro.components.hl_ops.equalitycomparator attribute)": [[220, "datumaro.components.hl_ops.EqualityComparator.match_images"]], "match_labels() (datumaro.components.hl_ops.distancecomparator method)": [[220, "datumaro.components.hl_ops.DistanceComparator.match_labels"]], "match_lines() (datumaro.components.hl_ops.distancecomparator method)": [[220, "datumaro.components.hl_ops.DistanceComparator.match_lines"]], "match_masks() (datumaro.components.hl_ops.distancecomparator method)": [[220, "datumaro.components.hl_ops.DistanceComparator.match_masks"]], "match_points() (datumaro.components.hl_ops.distancecomparator method)": [[220, "datumaro.components.hl_ops.DistanceComparator.match_points"]], "match_polygons() (datumaro.components.hl_ops.distancecomparator method)": [[220, "datumaro.components.hl_ops.DistanceComparator.match_polygons"]], "media_type() (datumaro.components.hl_ops.dataset method)": [[220, "datumaro.components.hl_ops.Dataset.media_type"]], "media_type() (datumaro.components.hl_ops.idataset method)": [[220, "datumaro.components.hl_ops.IDataset.media_type"]], "media_type() (datumaro.components.hl_ops.transform method)": [[220, "datumaro.components.hl_ops.Transform.media_type"]], "merge() (datumaro.components.hl_ops.environment class method)": [[220, "datumaro.components.hl_ops.Environment.merge"]], "merge() (datumaro.components.hl_ops.hlops static method)": [[220, "datumaro.components.hl_ops.HLOps.merge"]], "on_error_do() (in module datumaro.components.hl_ops)": [[220, "datumaro.components.hl_ops.on_error_do"]], "options (datumaro.components.hl_ops.dataset property)": [[220, "datumaro.components.hl_ops.Dataset.options"]], "overload() (in module datumaro.components.hl_ops)": [[220, "datumaro.components.hl_ops.overload"]], "parse_str_enum_value() (in module datumaro.components.hl_ops)": [[220, "datumaro.components.hl_ops.parse_str_enum_value"]], "patch() (datumaro.components.hl_ops.exporter class method)": [[220, "datumaro.components.hl_ops.Exporter.patch"]], "postprocess() (datumaro.components.hl_ops.launcher method)": [[220, "datumaro.components.hl_ops.Launcher.postprocess"]], "preprocess() (datumaro.components.hl_ops.launcher method)": [[220, "datumaro.components.hl_ops.Launcher.preprocess"]], "put() (datumaro.components.hl_ops.dataset method)": [[220, "datumaro.components.hl_ops.Dataset.put"]], "register_plugins() (datumaro.components.hl_ops.environment method)": [[220, "datumaro.components.hl_ops.Environment.register_plugins"]], "release_builtin_plugins() (datumaro.components.hl_ops.environment class method)": [[220, "datumaro.components.hl_ops.Environment.release_builtin_plugins"]], "remove() (datumaro.components.hl_ops.dataset method)": [[220, "datumaro.components.hl_ops.Dataset.remove"]], "run_model() (datumaro.components.hl_ops.dataset method)": [[220, "datumaro.components.hl_ops.Dataset.run_model"]], "run_model() (datumaro.components.hl_ops.hlops static method)": [[220, "datumaro.components.hl_ops.HLOps.run_model"]], "save() (datumaro.components.hl_ops.dataset method)": [[220, "datumaro.components.hl_ops.Dataset.save"]], "save() (datumaro.components.hl_ops.distancecomparevisualizer method)": [[220, "datumaro.components.hl_ops.DistanceCompareVisualizer.save"]], "save_as_tensorboard() (datumaro.components.hl_ops.distancecomparevisualizer method)": [[220, "datumaro.components.hl_ops.DistanceCompareVisualizer.save_as_tensorboard"]], "save_compare_report() (datumaro.components.hl_ops.equalitycomparator static method)": [[220, "datumaro.components.hl_ops.EqualityComparator.save_compare_report"]], "save_compare_report() (datumaro.components.hl_ops.tablecomparator static method)": [[220, "datumaro.components.hl_ops.TableComparator.save_compare_report"]], "save_conf_matrix() (datumaro.components.hl_ops.distancecomparevisualizer method)": [[220, "datumaro.components.hl_ops.DistanceCompareVisualizer.save_conf_matrix"]], "save_item_bbox_diff() (datumaro.components.hl_ops.distancecomparevisualizer method)": [[220, "datumaro.components.hl_ops.DistanceCompareVisualizer.save_item_bbox_diff"]], "save_item_label_diff() (datumaro.components.hl_ops.distancecomparevisualizer method)": [[220, "datumaro.components.hl_ops.DistanceCompareVisualizer.save_item_label_diff"]], "scoped() (in module datumaro.components.hl_ops)": [[220, "datumaro.components.hl_ops.scoped"]], "segmentation (datumaro.components.hl_ops.tasktype attribute)": [[220, "datumaro.components.hl_ops.TaskType.segmentation"]], "select() (datumaro.components.hl_ops.dataset method)": [[220, "datumaro.components.hl_ops.Dataset.select"]], "simple (datumaro.components.hl_ops.distancecomparevisualizer.outputformat attribute)": [[220, "datumaro.components.hl_ops.DistanceCompareVisualizer.OutputFormat.simple"]], "subsets() (datumaro.components.hl_ops.dataset method)": [[220, "datumaro.components.hl_ops.Dataset.subsets"]], "subsets() (datumaro.components.hl_ops.idataset method)": [[220, "datumaro.components.hl_ops.IDataset.subsets"]], "subsets() (datumaro.components.hl_ops.transform method)": [[220, "datumaro.components.hl_ops.Transform.subsets"]], "tabular (datumaro.components.hl_ops.tasktype attribute)": [[220, "datumaro.components.hl_ops.TaskType.tabular"]], "tensorboard (datumaro.components.hl_ops.distancecomparevisualizer.outputformat attribute)": [[220, "datumaro.components.hl_ops.DistanceCompareVisualizer.OutputFormat.tensorboard"]], "transform() (datumaro.components.hl_ops.dataset method)": [[220, "datumaro.components.hl_ops.Dataset.transform"]], "transform() (datumaro.components.hl_ops.hlops static method)": [[220, "datumaro.components.hl_ops.HLOps.transform"]], "transform_item() (datumaro.components.hl_ops.modeltransform method)": [[220, "datumaro.components.hl_ops.ModelTransform.transform_item"]], "transform_item() (datumaro.components.hl_ops.userfunctionannotationsfilter method)": [[220, "datumaro.components.hl_ops.UserFunctionAnnotationsFilter.transform_item"]], "transform_item() (datumaro.components.hl_ops.userfunctiondatasetfilter method)": [[220, "datumaro.components.hl_ops.UserFunctionDatasetFilter.transform_item"]], "transform_item() (datumaro.components.hl_ops.xpathannotationsfilter method)": [[220, "datumaro.components.hl_ops.XPathAnnotationsFilter.transform_item"]], "transform_item() (datumaro.components.hl_ops.xpathdatasetfilter method)": [[220, "datumaro.components.hl_ops.XPathDatasetFilter.transform_item"]], "transforms (datumaro.components.hl_ops.environment property)": [[220, "datumaro.components.hl_ops.Environment.transforms"]], "type_check() (datumaro.components.hl_ops.launcher method)": [[220, "datumaro.components.hl_ops.Launcher.type_check"]], "update() (datumaro.components.hl_ops.dataset method)": [[220, "datumaro.components.hl_ops.Dataset.update"]], "update_bbox_confusion() (datumaro.components.hl_ops.distancecomparevisualizer method)": [[220, "datumaro.components.hl_ops.DistanceCompareVisualizer.update_bbox_confusion"]], "update_label_confusion() (datumaro.components.hl_ops.distancecomparevisualizer method)": [[220, "datumaro.components.hl_ops.DistanceCompareVisualizer.update_label_confusion"]], "update_mask_confusion() (datumaro.components.hl_ops.distancecomparevisualizer method)": [[220, "datumaro.components.hl_ops.DistanceCompareVisualizer.update_mask_confusion"]], "update_polygon_confusion() (datumaro.components.hl_ops.distancecomparevisualizer method)": [[220, "datumaro.components.hl_ops.DistanceCompareVisualizer.update_polygon_confusion"]], "validate() (datumaro.components.hl_ops.hlops static method)": [[220, "datumaro.components.hl_ops.HLOps.validate"]], "validate() (datumaro.components.hl_ops.validator method)": [[220, "datumaro.components.hl_ops.Validator.validate"]], "validators (datumaro.components.hl_ops.environment property)": [[220, "datumaro.components.hl_ops.Environment.validators"]], "wrap_item() (datumaro.components.hl_ops.transform static method)": [[220, "datumaro.components.hl_ops.Transform.wrap_item"]], "cliplugin (class in datumaro.components.importer)": [[221, "datumaro.components.importer.CliPlugin"]], "detect_confidence (datumaro.components.importer.importer attribute)": [[221, "datumaro.components.importer.Importer.DETECT_CONFIDENCE"]], "extreme_low (datumaro.components.importer.formatdetectionconfidence attribute)": [[221, "datumaro.components.importer.FormatDetectionConfidence.EXTREME_LOW"]], "extractormerger (class in datumaro.components.importer)": [[221, "datumaro.components.importer.ExtractorMerger"]], "failingimporterrorpolicy (class in datumaro.components.importer)": [[221, "datumaro.components.importer.FailingImportErrorPolicy"]], "formatdetectionconfidence (class in datumaro.components.importer)": [[221, "datumaro.components.importer.FormatDetectionConfidence"]], "formatdetectioncontext (class in datumaro.components.importer)": [[221, "datumaro.components.importer.FormatDetectionContext"]], "importcontext (class in datumaro.components.importer)": [[221, "datumaro.components.importer.ImportContext"]], "importerrorpolicy (class in datumaro.components.importer)": [[221, "datumaro.components.importer.ImportErrorPolicy"]], "importer (class in datumaro.components.importer)": [[221, "datumaro.components.importer.Importer"]], "low (datumaro.components.importer.formatdetectionconfidence attribute)": [[221, "datumaro.components.importer.FormatDetectionConfidence.LOW"]], "medium (datumaro.components.importer.formatdetectionconfidence attribute)": [[221, "datumaro.components.importer.FormatDetectionConfidence.MEDIUM"]], "name (datumaro.components.importer.cliplugin attribute)": [[221, "datumaro.components.importer.CliPlugin.NAME"]], "none (datumaro.components.importer.formatdetectionconfidence attribute)": [[221, "datumaro.components.importer.FormatDetectionConfidence.NONE"]], "nullimportcontext (class in datumaro.components.importer)": [[221, "datumaro.components.importer.NullImportContext"]], "typevar (class in datumaro.components.importer)": [[221, "datumaro.components.importer.TypeVar"]], "alternative() (datumaro.components.importer.formatdetectioncontext method)": [[221, "datumaro.components.importer.FormatDetectionContext.alternative"]], "build_cmdline_parser() (datumaro.components.importer.cliplugin class method)": [[221, "datumaro.components.importer.CliPlugin.build_cmdline_parser"]], "can_stream (datumaro.components.importer.importer property)": [[221, "datumaro.components.importer.Importer.can_stream"]], "categories() (datumaro.components.importer.extractormerger method)": [[221, "datumaro.components.importer.ExtractorMerger.categories"]], "contextmanager() (in module datumaro.components.importer)": [[221, "datumaro.components.importer.contextmanager"]], "datumaro.components.importer": [[221, "module-datumaro.components.importer"]], "detect() (datumaro.components.importer.importer class method)": [[221, "datumaro.components.importer.Importer.detect"]], "error_policy (datumaro.components.importer.importcontext attribute)": [[221, "datumaro.components.importer.ImportContext.error_policy"]], "error_policy (datumaro.components.importer.nullimportcontext attribute)": [[221, "datumaro.components.importer.NullImportContext.error_policy"]], "fail() (datumaro.components.importer.formatdetectioncontext method)": [[221, "datumaro.components.importer.FormatDetectionContext.fail"]], "fail() (datumaro.components.importer.importerrorpolicy method)": [[221, "datumaro.components.importer.ImportErrorPolicy.fail"]], "find_sources() (datumaro.components.importer.importer class method)": [[221, "datumaro.components.importer.Importer.find_sources"]], "find_sources_with_params() (datumaro.components.importer.importer class method)": [[221, "datumaro.components.importer.Importer.find_sources_with_params"]], "format (datumaro.components.importer.datasetnotfounderror attribute)": [[221, "datumaro.components.importer.DatasetNotFoundError.format"]], "get() (datumaro.components.importer.extractormerger method)": [[221, "datumaro.components.importer.ExtractorMerger.get"]], "get_extractor_merger() (datumaro.components.importer.importer method)": [[221, "datumaro.components.importer.Importer.get_extractor_merger"]], "get_file_extensions() (datumaro.components.importer.importer class method)": [[221, "datumaro.components.importer.Importer.get_file_extensions"]], "iglob() (in module datumaro.components.importer)": [[221, "datumaro.components.importer.iglob"]], "infos() (datumaro.components.importer.extractormerger method)": [[221, "datumaro.components.importer.ExtractorMerger.infos"]], "is_stream (datumaro.components.importer.extractormerger property)": [[221, "datumaro.components.importer.ExtractorMerger.is_stream"]], "parse_cmdline() (datumaro.components.importer.cliplugin class method)": [[221, "datumaro.components.importer.CliPlugin.parse_cmdline"]], "path (datumaro.components.importer.datasetnotfounderror attribute)": [[221, "datumaro.components.importer.DatasetNotFoundError.path"]], "probe_text_file() (datumaro.components.importer.formatdetectioncontext method)": [[221, "datumaro.components.importer.FormatDetectionContext.probe_text_file"]], "progress_reporter (datumaro.components.importer.importcontext attribute)": [[221, "datumaro.components.importer.ImportContext.progress_reporter"]], "progress_reporter (datumaro.components.importer.nullimportcontext attribute)": [[221, "datumaro.components.importer.NullImportContext.progress_reporter"]], "raise_unsupported() (datumaro.components.importer.formatdetectioncontext method)": [[221, "datumaro.components.importer.FormatDetectionContext.raise_unsupported"]], "report_annotation_error() (datumaro.components.importer.importerrorpolicy method)": [[221, "datumaro.components.importer.ImportErrorPolicy.report_annotation_error"]], "report_item_error() (datumaro.components.importer.importerrorpolicy method)": [[221, "datumaro.components.importer.ImportErrorPolicy.report_item_error"]], "require_any() (datumaro.components.importer.formatdetectioncontext method)": [[221, "datumaro.components.importer.FormatDetectionContext.require_any"]], "require_file() (datumaro.components.importer.formatdetectioncontext method)": [[221, "datumaro.components.importer.FormatDetectionContext.require_file"]], "require_files() (datumaro.components.importer.formatdetectioncontext method)": [[221, "datumaro.components.importer.FormatDetectionContext.require_files"]], "require_files_iter() (datumaro.components.importer.formatdetectioncontext method)": [[221, "datumaro.components.importer.FormatDetectionContext.require_files_iter"]], "root_path (datumaro.components.importer.formatdetectioncontext property)": [[221, "datumaro.components.importer.FormatDetectionContext.root_path"]], "template (datumaro.components.importer.datasetnotfounderror attribute)": [[221, "datumaro.components.importer.DatasetNotFoundError.template"]], "with_subset_dirs() (in module datumaro.components.importer)": [[221, "datumaro.components.importer.with_subset_dirs"]], "wraps() (in module datumaro.components.importer)": [[221, "datumaro.components.importer.wraps"]], "launcher (class in datumaro.components.launcher)": [[222, "datumaro.components.launcher.Launcher"]], "launcherwithmodelinterpreter (class in datumaro.components.launcher)": [[222, "datumaro.components.launcher.LauncherWithModelInterpreter"]], "categories() (datumaro.components.launcher.launcher method)": [[222, "datumaro.components.launcher.Launcher.categories"]], "categories() (datumaro.components.launcher.launcherwithmodelinterpreter method)": [[222, "datumaro.components.launcher.LauncherWithModelInterpreter.categories"]], "datumaro.components.launcher": [[222, "module-datumaro.components.launcher"]], "infer() (datumaro.components.launcher.launcher method)": [[222, "datumaro.components.launcher.Launcher.infer"]], "infos() (datumaro.components.launcher.launcher method)": [[222, "datumaro.components.launcher.Launcher.infos"]], "launch() (datumaro.components.launcher.launcher method)": [[222, "datumaro.components.launcher.Launcher.launch"]], "postprocess() (datumaro.components.launcher.launcher method)": [[222, "datumaro.components.launcher.Launcher.postprocess"]], "postprocess() (datumaro.components.launcher.launcherwithmodelinterpreter method)": [[222, "datumaro.components.launcher.LauncherWithModelInterpreter.postprocess"]], "preprocess() (datumaro.components.launcher.launcher method)": [[222, "datumaro.components.launcher.Launcher.preprocess"]], "preprocess() (datumaro.components.launcher.launcherwithmodelinterpreter method)": [[222, "datumaro.components.launcher.LauncherWithModelInterpreter.preprocess"]], "type_check() (datumaro.components.launcher.launcher method)": [[222, "datumaro.components.launcher.Launcher.type_check"]], "lazyplugin (class in datumaro.components.lazy_plugin)": [[223, "datumaro.components.lazy_plugin.LazyPlugin"]], "name (datumaro.components.lazy_plugin.lazyplugin attribute)": [[223, "datumaro.components.lazy_plugin.LazyPlugin.NAME"]], "datumaro.components.lazy_plugin": [[223, "module-datumaro.components.lazy_plugin"]], "extra_deps() (in module datumaro.components.lazy_plugin)": [[223, "datumaro.components.lazy_plugin.extra_deps"]], "get_extra_deps() (in module datumaro.components.lazy_plugin)": [[223, "datumaro.components.lazy_plugin.get_extra_deps"]], "get_lazy_plugin() (in module datumaro.components.lazy_plugin)": [[223, "datumaro.components.lazy_plugin.get_lazy_plugin"]], "get_plugin_cls() (datumaro.components.lazy_plugin.lazyplugin class method)": [[223, "datumaro.components.lazy_plugin.LazyPlugin.get_plugin_cls"]], "byte_image (datumaro.components.media.mediatype attribute)": [[224, "datumaro.components.media.MediaType.BYTE_IMAGE"]], "fromdatamixin (class in datumaro.components.media)": [[224, "datumaro.components.media.FromDataMixin"]], "fromfilemixin (class in datumaro.components.media)": [[224, "datumaro.components.media.FromFileMixin"]], "image (datumaro.components.media.mediatype attribute)": [[224, "datumaro.components.media.MediaType.IMAGE"]], "image (class in datumaro.components.media)": [[224, "datumaro.components.media.Image"]], "imagefrombytes (class in datumaro.components.media)": [[224, "datumaro.components.media.ImageFromBytes"]], "imagefromdata (class in datumaro.components.media)": [[224, "datumaro.components.media.ImageFromData"]], "imagefromfile (class in datumaro.components.media)": [[224, "datumaro.components.media.ImageFromFile"]], "imagefromnumpy (class in datumaro.components.media)": [[224, "datumaro.components.media.ImageFromNumpy"]], "media_element (datumaro.components.media.mediatype attribute)": [[224, "datumaro.components.media.MediaType.MEDIA_ELEMENT"]], "mosaic_image (datumaro.components.media.mediatype attribute)": [[224, "datumaro.components.media.MediaType.MOSAIC_IMAGE"]], "multiframe_image (datumaro.components.media.mediatype attribute)": [[224, "datumaro.components.media.MediaType.MULTIFRAME_IMAGE"]], "mediaelement (class in datumaro.components.media)": [[224, "datumaro.components.media.MediaElement"]], "mediatype (class in datumaro.components.media)": [[224, "datumaro.components.media.MediaType"]], "mosaicimage (class in datumaro.components.media)": [[224, "datumaro.components.media.MosaicImage"]], "mosaicimagefromdata (class in datumaro.components.media)": [[224, "datumaro.components.media.MosaicImageFromData"]], "mosaicimagefromimageroipairs (class in datumaro.components.media)": [[224, "datumaro.components.media.MosaicImageFromImageRoIPairs"]], "multiframeimage (class in datumaro.components.media)": [[224, "datumaro.components.media.MultiframeImage"]], "none (datumaro.components.media.mediatype attribute)": [[224, "datumaro.components.media.MediaType.NONE"]], "point_cloud (datumaro.components.media.mediatype attribute)": [[224, "datumaro.components.media.MediaType.POINT_CLOUD"]], "pointcloud (class in datumaro.components.media)": [[224, "datumaro.components.media.PointCloud"]], "pointcloudfrombytes (class in datumaro.components.media)": [[224, "datumaro.components.media.PointCloudFromBytes"]], "pointcloudfromdata (class in datumaro.components.media)": [[224, "datumaro.components.media.PointCloudFromData"]], "pointcloudfromfile (class in datumaro.components.media)": [[224, "datumaro.components.media.PointCloudFromFile"]], "roi_image (datumaro.components.media.mediatype attribute)": [[224, "datumaro.components.media.MediaType.ROI_IMAGE"]], "roiimage (class in datumaro.components.media)": [[224, "datumaro.components.media.RoIImage"]], "roiimagefrombytes (class in datumaro.components.media)": [[224, "datumaro.components.media.RoIImageFromBytes"]], "roiimagefromdata (class in datumaro.components.media)": [[224, "datumaro.components.media.RoIImageFromData"]], "roiimagefromfile (class in datumaro.components.media)": [[224, "datumaro.components.media.RoIImageFromFile"]], "roiimagefromnumpy (class in datumaro.components.media)": [[224, "datumaro.components.media.RoIImageFromNumpy"]], "table_row (datumaro.components.media.mediatype attribute)": [[224, "datumaro.components.media.MediaType.TABLE_ROW"]], "table (class in datumaro.components.media)": [[224, "datumaro.components.media.Table"]], "tablefromcsv (class in datumaro.components.media)": [[224, "datumaro.components.media.TableFromCSV"]], "tablefromdataframe (class in datumaro.components.media)": [[224, "datumaro.components.media.TableFromDataFrame"]], "tablefromlistofdict (class in datumaro.components.media)": [[224, "datumaro.components.media.TableFromListOfDict"]], "tablerow (class in datumaro.components.media)": [[224, "datumaro.components.media.TableRow"]], "tablerowfromdata (class in datumaro.components.media)": [[224, "datumaro.components.media.TableRowFromData"]], "video (datumaro.components.media.mediatype attribute)": [[224, "datumaro.components.media.MediaType.VIDEO"]], "video_frame (datumaro.components.media.mediatype attribute)": [[224, "datumaro.components.media.MediaType.VIDEO_FRAME"]], "video (class in datumaro.components.media)": [[224, "datumaro.components.media.Video"]], "videoframe (class in datumaro.components.media)": [[224, "datumaro.components.media.VideoFrame"]], "as_dict() (datumaro.components.media.mediaelement method)": [[224, "datumaro.components.media.MediaElement.as_dict"]], "as_dict() (datumaro.components.media.mosaicimagefromimageroipairs method)": [[224, "datumaro.components.media.MosaicImageFromImageRoIPairs.as_dict"]], "as_dict() (datumaro.components.media.roiimage method)": [[224, "datumaro.components.media.RoIImage.as_dict"]], "as_dict() (datumaro.components.media.videoframe method)": [[224, "datumaro.components.media.VideoFrame.as_dict"]], "bytes (datumaro.components.media.fromdatamixin property)": [[224, "datumaro.components.media.FromDataMixin.bytes"]], "bytes (datumaro.components.media.fromfilemixin property)": [[224, "datumaro.components.media.FromFileMixin.bytes"]], "bytes (datumaro.components.media.mediaelement property)": [[224, "datumaro.components.media.MediaElement.bytes"]], "close() (datumaro.components.media.video method)": [[224, "datumaro.components.media.Video.close"]], "columns (datumaro.components.media.table property)": [[224, "datumaro.components.media.Table.columns"]], "data (datumaro.components.media.fromdatamixin property)": [[224, "datumaro.components.media.FromDataMixin.data"]], "data (datumaro.components.media.imagefrombytes property)": [[224, "datumaro.components.media.ImageFromBytes.data"]], "data (datumaro.components.media.imagefromfile property)": [[224, "datumaro.components.media.ImageFromFile.data"]], "data (datumaro.components.media.imagefromnumpy property)": [[224, "datumaro.components.media.ImageFromNumpy.data"]], "data (datumaro.components.media.mediaelement property)": [[224, "datumaro.components.media.MediaElement.data"]], "data (datumaro.components.media.multiframeimage property)": [[224, "datumaro.components.media.MultiframeImage.data"]], "data (datumaro.components.media.pointcloudfrombytes property)": [[224, "datumaro.components.media.PointCloudFromBytes.data"]], "data (datumaro.components.media.pointcloudfromfile property)": [[224, "datumaro.components.media.PointCloudFromFile.data"]], "data (datumaro.components.media.roiimagefrombytes property)": [[224, "datumaro.components.media.RoIImageFromBytes.data"]], "data (datumaro.components.media.roiimagefromfile property)": [[224, "datumaro.components.media.RoIImageFromFile.data"]], "data (datumaro.components.media.roiimagefromnumpy property)": [[224, "datumaro.components.media.RoIImageFromNumpy.data"]], "data (datumaro.components.media.tablefromcsv property)": [[224, "datumaro.components.media.TableFromCSV.data"]], "data (datumaro.components.media.tablefromdataframe property)": [[224, "datumaro.components.media.TableFromDataFrame.data"]], "data (datumaro.components.media.tablerowfromdata property)": [[224, "datumaro.components.media.TableRowFromData.data"]], "data() (datumaro.components.media.tablerow method)": [[224, "datumaro.components.media.TableRow.data"]], "datumaro.components.media": [[224, "module-datumaro.components.media"]], "dtype() (datumaro.components.media.table method)": [[224, "datumaro.components.media.Table.dtype"]], "ext (datumaro.components.media.image property)": [[224, "datumaro.components.media.Image.ext"]], "ext (datumaro.components.media.multiframeimage property)": [[224, "datumaro.components.media.MultiframeImage.ext"]], "ext (datumaro.components.media.video property)": [[224, "datumaro.components.media.Video.ext"]], "extra_images (datumaro.components.media.pointcloud property)": [[224, "datumaro.components.media.PointCloud.extra_images"]], "features() (datumaro.components.media.table method)": [[224, "datumaro.components.media.Table.features"]], "frame_size (datumaro.components.media.video property)": [[224, "datumaro.components.media.Video.frame_size"]], "from_bytes() (datumaro.components.media.image class method)": [[224, "datumaro.components.media.Image.from_bytes"]], "from_bytes() (datumaro.components.media.mosaicimage class method)": [[224, "datumaro.components.media.MosaicImage.from_bytes"]], "from_bytes() (datumaro.components.media.pointcloud class method)": [[224, "datumaro.components.media.PointCloud.from_bytes"]], "from_bytes() (datumaro.components.media.roiimage class method)": [[224, "datumaro.components.media.RoIImage.from_bytes"]], "from_csv() (datumaro.components.media.table class method)": [[224, "datumaro.components.media.Table.from_csv"]], "from_data() (datumaro.components.media.tablerow class method)": [[224, "datumaro.components.media.TableRow.from_data"]], "from_dataframe() (datumaro.components.media.table class method)": [[224, "datumaro.components.media.Table.from_dataframe"]], "from_file() (datumaro.components.media.image class method)": [[224, "datumaro.components.media.Image.from_file"]], "from_file() (datumaro.components.media.mosaicimage class method)": [[224, "datumaro.components.media.MosaicImage.from_file"]], "from_file() (datumaro.components.media.pointcloud class method)": [[224, "datumaro.components.media.PointCloud.from_file"]], "from_file() (datumaro.components.media.roiimage class method)": [[224, "datumaro.components.media.RoIImage.from_file"]], "from_image() (datumaro.components.media.roiimage class method)": [[224, "datumaro.components.media.RoIImage.from_image"]], "from_image_roi_pairs() (datumaro.components.media.mosaicimage class method)": [[224, "datumaro.components.media.MosaicImage.from_image_roi_pairs"]], "from_list() (datumaro.components.media.table class method)": [[224, "datumaro.components.media.Table.from_list"]], "from_numpy() (datumaro.components.media.image class method)": [[224, "datumaro.components.media.Image.from_numpy"]], "from_numpy() (datumaro.components.media.mosaicimage class method)": [[224, "datumaro.components.media.MosaicImage.from_numpy"]], "from_numpy() (datumaro.components.media.roiimage class method)": [[224, "datumaro.components.media.RoIImage.from_numpy"]], "from_self() (datumaro.components.media.mediaelement method)": [[224, "datumaro.components.media.MediaElement.from_self"]], "from_self() (datumaro.components.media.videoframe method)": [[224, "datumaro.components.media.VideoFrame.from_self"]], "get_data_as_dtype() (datumaro.components.media.imagefrombytes method)": [[224, "datumaro.components.media.ImageFromBytes.get_data_as_dtype"]], "get_data_as_dtype() (datumaro.components.media.imagefromfile method)": [[224, "datumaro.components.media.ImageFromFile.get_data_as_dtype"]], "get_data_as_dtype() (datumaro.components.media.imagefromnumpy method)": [[224, "datumaro.components.media.ImageFromNumpy.get_data_as_dtype"]], "get_frame_data() (datumaro.components.media.video method)": [[224, "datumaro.components.media.Video.get_frame_data"]], "has_data (datumaro.components.media.fromdatamixin property)": [[224, "datumaro.components.media.FromDataMixin.has_data"]], "has_data (datumaro.components.media.fromfilemixin property)": [[224, "datumaro.components.media.FromFileMixin.has_data"]], "has_data (datumaro.components.media.mediaelement property)": [[224, "datumaro.components.media.MediaElement.has_data"]], "has_data (datumaro.components.media.tablerow property)": [[224, "datumaro.components.media.TableRow.has_data"]], "has_size (datumaro.components.media.image property)": [[224, "datumaro.components.media.Image.has_size"]], "has_size (datumaro.components.media.imagefromnumpy property)": [[224, "datumaro.components.media.ImageFromNumpy.has_size"]], "index (datumaro.components.media.tablerow property)": [[224, "datumaro.components.media.TableRow.index"]], "index (datumaro.components.media.videoframe property)": [[224, "datumaro.components.media.VideoFrame.index"]], "is_encrypted (datumaro.components.media.mediaelement property)": [[224, "datumaro.components.media.MediaElement.is_encrypted"]], "length (datumaro.components.media.video property)": [[224, "datumaro.components.media.Video.length"]], "media (datumaro.components.media.mediatype property)": [[224, "datumaro.components.media.MediaType.media"]], "path (datumaro.components.media.fromfilemixin property)": [[224, "datumaro.components.media.FromFileMixin.path"]], "path (datumaro.components.media.multiframeimage property)": [[224, "datumaro.components.media.MultiframeImage.path"]], "path (datumaro.components.media.tablerow property)": [[224, "datumaro.components.media.TableRow.path"]], "path (datumaro.components.media.video property)": [[224, "datumaro.components.media.Video.path"]], "path (datumaro.components.media.videoframe property)": [[224, "datumaro.components.media.VideoFrame.path"]], "roi (datumaro.components.media.roiimage property)": [[224, "datumaro.components.media.RoIImage.roi"]], "save() (datumaro.components.media.imagefromdata method)": [[224, "datumaro.components.media.ImageFromData.save"]], "save() (datumaro.components.media.imagefromfile method)": [[224, "datumaro.components.media.ImageFromFile.save"]], "save() (datumaro.components.media.mediaelement method)": [[224, "datumaro.components.media.MediaElement.save"]], "save() (datumaro.components.media.mosaicimagefromdata method)": [[224, "datumaro.components.media.MosaicImageFromData.save"]], "save() (datumaro.components.media.pointcloudfromdata method)": [[224, "datumaro.components.media.PointCloudFromData.save"]], "save() (datumaro.components.media.pointcloudfromfile method)": [[224, "datumaro.components.media.PointCloudFromFile.save"]], "save() (datumaro.components.media.roiimage method)": [[224, "datumaro.components.media.RoIImage.save"]], "save() (datumaro.components.media.table method)": [[224, "datumaro.components.media.Table.save"]], "save() (datumaro.components.media.video method)": [[224, "datumaro.components.media.Video.save"]], "select() (datumaro.components.media.tablefromcsv method)": [[224, "datumaro.components.media.TableFromCSV.select"]], "set_crypter() (datumaro.components.media.image method)": [[224, "datumaro.components.media.Image.set_crypter"]], "set_crypter() (datumaro.components.media.imagefromfile method)": [[224, "datumaro.components.media.ImageFromFile.set_crypter"]], "set_crypter() (datumaro.components.media.mediaelement method)": [[224, "datumaro.components.media.MediaElement.set_crypter"]], "shape (datumaro.components.media.table property)": [[224, "datumaro.components.media.Table.shape"]], "size (datumaro.components.media.image property)": [[224, "datumaro.components.media.Image.size"]], "size (datumaro.components.media.imagefromfile property)": [[224, "datumaro.components.media.ImageFromFile.size"]], "size (datumaro.components.media.videoframe property)": [[224, "datumaro.components.media.VideoFrame.size"]], "table (datumaro.components.media.tablerow property)": [[224, "datumaro.components.media.TableRow.table"]], "type (datumaro.components.media.mediaelement property)": [[224, "datumaro.components.media.MediaElement.type"]], "video (datumaro.components.media.videoframe property)": [[224, "datumaro.components.media.VideoFrame.video"]], "datumaro.components.merge": [[225, "module-datumaro.components.merge"]], "get_merger() (in module datumaro.components.merge)": [[225, "datumaro.components.merge.get_merger"]], "merger (class in datumaro.components.merge.base)": [[226, "datumaro.components.merge.base.Merger"]], "datumaro.components.merge.base": [[226, "module-datumaro.components.merge.base"]], "get_any_label_name() (datumaro.components.merge.base.merger method)": [[226, "datumaro.components.merge.base.Merger.get_any_label_name"]], "merge_ann_types() (datumaro.components.merge.base.merger static method)": [[226, "datumaro.components.merge.base.Merger.merge_ann_types"]], "merge_categories() (datumaro.components.merge.base.merger static method)": [[226, "datumaro.components.merge.base.Merger.merge_categories"]], "merge_infos() (datumaro.components.merge.base.merger static method)": [[226, "datumaro.components.merge.base.Merger.merge_infos"]], "merge_media_types() (datumaro.components.merge.base.merger static method)": [[226, "datumaro.components.merge.base.Merger.merge_media_types"]], "save_merge_report() (datumaro.components.merge.base.merger method)": [[226, "datumaro.components.merge.base.Merger.save_merge_report"]], "annotation (class in datumaro.components.merge.exact_merge)": [[227, "datumaro.components.merge.exact_merge.Annotation"]], "datasetitem (class in datumaro.components.merge.exact_merge)": [[227, "datumaro.components.merge.exact_merge.DatasetItem"]], "datasetitemstorage (class in datumaro.components.merge.exact_merge)": [[227, "datumaro.components.merge.exact_merge.DatasetItemStorage"]], "exactmerge (class in datumaro.components.merge.exact_merge)": [[227, "datumaro.components.merge.exact_merge.ExactMerge"]], "idataset (class in datumaro.components.merge.exact_merge)": [[227, "datumaro.components.merge.exact_merge.IDataset"]], "image (class in datumaro.components.merge.exact_merge)": [[227, "datumaro.components.merge.exact_merge.Image"]], "mediaelement (class in datumaro.components.merge.exact_merge)": [[227, "datumaro.components.merge.exact_merge.MediaElement"]], "merger (class in datumaro.components.merge.exact_merge)": [[227, "datumaro.components.merge.exact_merge.Merger"]], "multiframeimage (class in datumaro.components.merge.exact_merge)": [[227, "datumaro.components.merge.exact_merge.MultiframeImage"]], "pointcloud (class in datumaro.components.merge.exact_merge)": [[227, "datumaro.components.merge.exact_merge.PointCloud"]], "video (class in datumaro.components.merge.exact_merge)": [[227, "datumaro.components.merge.exact_merge.Video"]], "a (datumaro.components.merge.exact_merge.mismatchingattributeserror attribute)": [[227, "datumaro.components.merge.exact_merge.MismatchingAttributesError.a"]], "a (datumaro.components.merge.exact_merge.mismatchingimageinfoerror attribute)": [[227, "datumaro.components.merge.exact_merge.MismatchingImageInfoError.a"]], "a (datumaro.components.merge.exact_merge.mismatchingmediaerror attribute)": [[227, "datumaro.components.merge.exact_merge.MismatchingMediaError.a"]], "a (datumaro.components.merge.exact_merge.mismatchingmediapatherror attribute)": [[227, "datumaro.components.merge.exact_merge.MismatchingMediaPathError.a"]], "ann_types() (datumaro.components.merge.exact_merge.idataset method)": [[227, "datumaro.components.merge.exact_merge.IDataset.ann_types"]], "annotations (datumaro.components.merge.exact_merge.datasetitem attribute)": [[227, "datumaro.components.merge.exact_merge.DatasetItem.annotations"]], "as_dict() (datumaro.components.merge.exact_merge.annotation method)": [[227, "datumaro.components.merge.exact_merge.Annotation.as_dict"]], "as_dict() (datumaro.components.merge.exact_merge.mediaelement method)": [[227, "datumaro.components.merge.exact_merge.MediaElement.as_dict"]], "attributes (datumaro.components.merge.exact_merge.annotation attribute)": [[227, "datumaro.components.merge.exact_merge.Annotation.attributes"]], "attributes (datumaro.components.merge.exact_merge.datasetitem attribute)": [[227, "datumaro.components.merge.exact_merge.DatasetItem.attributes"]], "b (datumaro.components.merge.exact_merge.mismatchingattributeserror attribute)": [[227, "datumaro.components.merge.exact_merge.MismatchingAttributesError.b"]], "b (datumaro.components.merge.exact_merge.mismatchingimageinfoerror attribute)": [[227, "datumaro.components.merge.exact_merge.MismatchingImageInfoError.b"]], "b (datumaro.components.merge.exact_merge.mismatchingmediaerror attribute)": [[227, "datumaro.components.merge.exact_merge.MismatchingMediaError.b"]], "b (datumaro.components.merge.exact_merge.mismatchingmediapatherror attribute)": [[227, "datumaro.components.merge.exact_merge.MismatchingMediaPathError.b"]], "bytes (datumaro.components.merge.exact_merge.mediaelement property)": [[227, "datumaro.components.merge.exact_merge.MediaElement.bytes"]], "categories() (datumaro.components.merge.exact_merge.idataset method)": [[227, "datumaro.components.merge.exact_merge.IDataset.categories"]], "close() (datumaro.components.merge.exact_merge.video method)": [[227, "datumaro.components.merge.exact_merge.Video.close"]], "data (datumaro.components.merge.exact_merge.mediaelement property)": [[227, "datumaro.components.merge.exact_merge.MediaElement.data"]], "data (datumaro.components.merge.exact_merge.multiframeimage property)": [[227, "datumaro.components.merge.exact_merge.MultiframeImage.data"]], "datumaro.components.merge.exact_merge": [[227, "module-datumaro.components.merge.exact_merge"]], "ext (datumaro.components.merge.exact_merge.image property)": [[227, "datumaro.components.merge.exact_merge.Image.ext"]], "ext (datumaro.components.merge.exact_merge.multiframeimage property)": [[227, "datumaro.components.merge.exact_merge.MultiframeImage.ext"]], "ext (datumaro.components.merge.exact_merge.video property)": [[227, "datumaro.components.merge.exact_merge.Video.ext"]], "extra_images (datumaro.components.merge.exact_merge.pointcloud property)": [[227, "datumaro.components.merge.exact_merge.PointCloud.extra_images"]], "frame_size (datumaro.components.merge.exact_merge.video property)": [[227, "datumaro.components.merge.exact_merge.Video.frame_size"]], "from_bytes() (datumaro.components.merge.exact_merge.image class method)": [[227, "datumaro.components.merge.exact_merge.Image.from_bytes"]], "from_bytes() (datumaro.components.merge.exact_merge.pointcloud class method)": [[227, "datumaro.components.merge.exact_merge.PointCloud.from_bytes"]], "from_file() (datumaro.components.merge.exact_merge.image class method)": [[227, "datumaro.components.merge.exact_merge.Image.from_file"]], "from_file() (datumaro.components.merge.exact_merge.pointcloud class method)": [[227, "datumaro.components.merge.exact_merge.PointCloud.from_file"]], "from_numpy() (datumaro.components.merge.exact_merge.image class method)": [[227, "datumaro.components.merge.exact_merge.Image.from_numpy"]], "from_self() (datumaro.components.merge.exact_merge.mediaelement method)": [[227, "datumaro.components.merge.exact_merge.MediaElement.from_self"]], "get() (datumaro.components.merge.exact_merge.datasetitemstorage method)": [[227, "datumaro.components.merge.exact_merge.DatasetItemStorage.get"]], "get() (datumaro.components.merge.exact_merge.idataset method)": [[227, "datumaro.components.merge.exact_merge.IDataset.get"]], "get_annotated_items() (datumaro.components.merge.exact_merge.datasetitemstorage method)": [[227, "datumaro.components.merge.exact_merge.DatasetItemStorage.get_annotated_items"]], "get_annotations() (datumaro.components.merge.exact_merge.datasetitemstorage method)": [[227, "datumaro.components.merge.exact_merge.DatasetItemStorage.get_annotations"]], "get_any_label_name() (datumaro.components.merge.exact_merge.merger method)": [[227, "datumaro.components.merge.exact_merge.Merger.get_any_label_name"]], "get_datasetitem_by_path() (datumaro.components.merge.exact_merge.datasetitemstorage method)": [[227, "datumaro.components.merge.exact_merge.DatasetItemStorage.get_datasetitem_by_path"]], "get_frame_data() (datumaro.components.merge.exact_merge.video method)": [[227, "datumaro.components.merge.exact_merge.Video.get_frame_data"]], "get_subset() (datumaro.components.merge.exact_merge.datasetitemstorage method)": [[227, "datumaro.components.merge.exact_merge.DatasetItemStorage.get_subset"]], "get_subset() (datumaro.components.merge.exact_merge.idataset method)": [[227, "datumaro.components.merge.exact_merge.IDataset.get_subset"]], "group (datumaro.components.merge.exact_merge.annotation attribute)": [[227, "datumaro.components.merge.exact_merge.Annotation.group"]], "has_data (datumaro.components.merge.exact_merge.mediaelement property)": [[227, "datumaro.components.merge.exact_merge.MediaElement.has_data"]], "has_size (datumaro.components.merge.exact_merge.image property)": [[227, "datumaro.components.merge.exact_merge.Image.has_size"]], "id (datumaro.components.merge.exact_merge.annotation attribute)": [[227, "datumaro.components.merge.exact_merge.Annotation.id"]], "id (datumaro.components.merge.exact_merge.datasetitem attribute)": [[227, "datumaro.components.merge.exact_merge.DatasetItem.id"]], "infos() (datumaro.components.merge.exact_merge.idataset method)": [[227, "datumaro.components.merge.exact_merge.IDataset.infos"]], "is_empty() (datumaro.components.merge.exact_merge.datasetitemstorage method)": [[227, "datumaro.components.merge.exact_merge.DatasetItemStorage.is_empty"]], "is_encrypted (datumaro.components.merge.exact_merge.mediaelement property)": [[227, "datumaro.components.merge.exact_merge.MediaElement.is_encrypted"]], "is_stream (datumaro.components.merge.exact_merge.idataset property)": [[227, "datumaro.components.merge.exact_merge.IDataset.is_stream"]], "item_id (datumaro.components.merge.exact_merge.mismatchingattributeserror attribute)": [[227, "datumaro.components.merge.exact_merge.MismatchingAttributesError.item_id"]], "item_id (datumaro.components.merge.exact_merge.mismatchingimageinfoerror attribute)": [[227, "datumaro.components.merge.exact_merge.MismatchingImageInfoError.item_id"]], "item_id (datumaro.components.merge.exact_merge.mismatchingmediaerror attribute)": [[227, "datumaro.components.merge.exact_merge.MismatchingMediaError.item_id"]], "item_id (datumaro.components.merge.exact_merge.mismatchingmediapatherror attribute)": [[227, "datumaro.components.merge.exact_merge.MismatchingMediaPathError.item_id"]], "item_id (datumaro.components.merge.exact_merge.videomergeerror attribute)": [[227, "datumaro.components.merge.exact_merge.VideoMergeError.item_id"]], "key (datumaro.components.merge.exact_merge.mismatchingattributeserror attribute)": [[227, "datumaro.components.merge.exact_merge.MismatchingAttributesError.key"]], "length (datumaro.components.merge.exact_merge.video property)": [[227, "datumaro.components.merge.exact_merge.Video.length"]], "media (datumaro.components.merge.exact_merge.datasetitem attribute)": [[227, "datumaro.components.merge.exact_merge.DatasetItem.media"]], "media_as() (datumaro.components.merge.exact_merge.datasetitem method)": [[227, "datumaro.components.merge.exact_merge.DatasetItem.media_as"]], "media_type() (datumaro.components.merge.exact_merge.idataset method)": [[227, "datumaro.components.merge.exact_merge.IDataset.media_type"]], "merge() (datumaro.components.merge.exact_merge.exactmerge class method)": [[227, "datumaro.components.merge.exact_merge.ExactMerge.merge"]], "merge_ann_types() (datumaro.components.merge.exact_merge.merger static method)": [[227, "datumaro.components.merge.exact_merge.Merger.merge_ann_types"]], "merge_categories() (datumaro.components.merge.exact_merge.merger static method)": [[227, "datumaro.components.merge.exact_merge.Merger.merge_categories"]], "merge_infos() (datumaro.components.merge.exact_merge.merger static method)": [[227, "datumaro.components.merge.exact_merge.Merger.merge_infos"]], "merge_items() (datumaro.components.merge.exact_merge.exactmerge class method)": [[227, "datumaro.components.merge.exact_merge.ExactMerge.merge_items"]], "merge_media_types() (datumaro.components.merge.exact_merge.merger static method)": [[227, "datumaro.components.merge.exact_merge.Merger.merge_media_types"]], "object_id (datumaro.components.merge.exact_merge.annotation attribute)": [[227, "datumaro.components.merge.exact_merge.Annotation.object_id"]], "path (datumaro.components.merge.exact_merge.multiframeimage property)": [[227, "datumaro.components.merge.exact_merge.MultiframeImage.path"]], "path (datumaro.components.merge.exact_merge.video property)": [[227, "datumaro.components.merge.exact_merge.Video.path"]], "put() (datumaro.components.merge.exact_merge.datasetitemstorage method)": [[227, "datumaro.components.merge.exact_merge.DatasetItemStorage.put"]], "remove() (datumaro.components.merge.exact_merge.datasetitemstorage method)": [[227, "datumaro.components.merge.exact_merge.DatasetItemStorage.remove"]], "save() (datumaro.components.merge.exact_merge.mediaelement method)": [[227, "datumaro.components.merge.exact_merge.MediaElement.save"]], "save() (datumaro.components.merge.exact_merge.video method)": [[227, "datumaro.components.merge.exact_merge.Video.save"]], "save_merge_report() (datumaro.components.merge.exact_merge.merger method)": [[227, "datumaro.components.merge.exact_merge.Merger.save_merge_report"]], "set_crypter() (datumaro.components.merge.exact_merge.image method)": [[227, "datumaro.components.merge.exact_merge.Image.set_crypter"]], "set_crypter() (datumaro.components.merge.exact_merge.mediaelement method)": [[227, "datumaro.components.merge.exact_merge.MediaElement.set_crypter"]], "size (datumaro.components.merge.exact_merge.image property)": [[227, "datumaro.components.merge.exact_merge.Image.size"]], "sources (datumaro.components.merge.exact_merge.datasetmergeerror attribute)": [[227, "datumaro.components.merge.exact_merge.DatasetMergeError.sources"]], "subset (datumaro.components.merge.exact_merge.datasetitem attribute)": [[227, "datumaro.components.merge.exact_merge.DatasetItem.subset"]], "subsets() (datumaro.components.merge.exact_merge.datasetitemstorage method)": [[227, "datumaro.components.merge.exact_merge.DatasetItemStorage.subsets"]], "subsets() (datumaro.components.merge.exact_merge.idataset method)": [[227, "datumaro.components.merge.exact_merge.IDataset.subsets"]], "type (datumaro.components.merge.exact_merge.annotation property)": [[227, "datumaro.components.merge.exact_merge.Annotation.type"]], "type (datumaro.components.merge.exact_merge.mediaelement property)": [[227, "datumaro.components.merge.exact_merge.MediaElement.type"]], "wrap() (datumaro.components.merge.exact_merge.annotation method)": [[227, "datumaro.components.merge.exact_merge.Annotation.wrap"]], "wrap() (datumaro.components.merge.exact_merge.datasetitem method)": [[227, "datumaro.components.merge.exact_merge.DatasetItem.wrap"]], "extractormerger (class in datumaro.components.merge.extractor_merger)": [[228, "datumaro.components.merge.extractor_merger.ExtractorMerger"]], "categories() (datumaro.components.merge.extractor_merger.extractormerger method)": [[228, "datumaro.components.merge.extractor_merger.ExtractorMerger.categories"]], "check_identicalness() (in module datumaro.components.merge.extractor_merger)": [[228, "datumaro.components.merge.extractor_merger.check_identicalness"]], "datumaro.components.merge.extractor_merger": [[228, "module-datumaro.components.merge.extractor_merger"]], "get() (datumaro.components.merge.extractor_merger.extractormerger method)": [[228, "datumaro.components.merge.extractor_merger.ExtractorMerger.get"]], "infos() (datumaro.components.merge.extractor_merger.extractormerger method)": [[228, "datumaro.components.merge.extractor_merger.ExtractorMerger.infos"]], "is_stream (datumaro.components.merge.extractor_merger.extractormerger property)": [[228, "datumaro.components.merge.extractor_merger.ExtractorMerger.is_stream"]], "annotationmerger (class in datumaro.components.merge.intersect_merge)": [[229, "datumaro.components.merge.intersect_merge.AnnotationMerger"]], "annotationtype (class in datumaro.components.merge.intersect_merge)": [[229, "datumaro.components.merge.intersect_merge.AnnotationType"]], "bboxmerger (class in datumaro.components.merge.intersect_merge)": [[229, "datumaro.components.merge.intersect_merge.BboxMerger"]], "captionsmerger (class in datumaro.components.merge.intersect_merge)": [[229, "datumaro.components.merge.intersect_merge.CaptionsMerger"]], "cuboid3dmerger (class in datumaro.components.merge.intersect_merge)": [[229, "datumaro.components.merge.intersect_merge.Cuboid3dMerger"]], "datasetitem (class in datumaro.components.merge.intersect_merge)": [[229, "datumaro.components.merge.intersect_merge.DatasetItem"]], "datasetitemstorage (class in datumaro.components.merge.intersect_merge)": [[229, "datumaro.components.merge.intersect_merge.DatasetItemStorage"]], "datasetitemstoragedatasetview (class in datumaro.components.merge.intersect_merge)": [[229, "datumaro.components.merge.intersect_merge.DatasetItemStorageDatasetView"]], "datasetitemstoragedatasetview.subset (class in datumaro.components.merge.intersect_merge)": [[229, "datumaro.components.merge.intersect_merge.DatasetItemStorageDatasetView.Subset"]], "ellipsemerger (class in datumaro.components.merge.intersect_merge)": [[229, "datumaro.components.merge.intersect_merge.EllipseMerger"]], "featurevectormerger (class in datumaro.components.merge.intersect_merge)": [[229, "datumaro.components.merge.intersect_merge.FeatureVectorMerger"]], "hashkeymerger (class in datumaro.components.merge.intersect_merge)": [[229, "datumaro.components.merge.intersect_merge.HashKeyMerger"]], "idataset (class in datumaro.components.merge.intersect_merge)": [[229, "datumaro.components.merge.intersect_merge.IDataset"]], "imageannotationmerger (class in datumaro.components.merge.intersect_merge)": [[229, "datumaro.components.merge.intersect_merge.ImageAnnotationMerger"]], "intersectmerge (class in datumaro.components.merge.intersect_merge)": [[229, "datumaro.components.merge.intersect_merge.IntersectMerge"]], "intersectmerge.conf (class in datumaro.components.merge.intersect_merge)": [[229, "datumaro.components.merge.intersect_merge.IntersectMerge.Conf"]], "labelcategories (class in datumaro.components.merge.intersect_merge)": [[229, "datumaro.components.merge.intersect_merge.LabelCategories"]], "labelcategories.category (class in datumaro.components.merge.intersect_merge)": [[229, "datumaro.components.merge.intersect_merge.LabelCategories.Category"]], "labelcategories.labelgroup (class in datumaro.components.merge.intersect_merge)": [[229, "datumaro.components.merge.intersect_merge.LabelCategories.LabelGroup"]], "labelmerger (class in datumaro.components.merge.intersect_merge)": [[229, "datumaro.components.merge.intersect_merge.LabelMerger"]], "linemerger (class in datumaro.components.merge.intersect_merge)": [[229, "datumaro.components.merge.intersect_merge.LineMerger"]], "maskcategories (class in datumaro.components.merge.intersect_merge)": [[229, "datumaro.components.merge.intersect_merge.MaskCategories"]], "maskmerger (class in datumaro.components.merge.intersect_merge)": [[229, "datumaro.components.merge.intersect_merge.MaskMerger"]], "merger (class in datumaro.components.merge.intersect_merge)": [[229, "datumaro.components.merge.intersect_merge.Merger"]], "ordereddict (class in datumaro.components.merge.intersect_merge)": [[229, "datumaro.components.merge.intersect_merge.OrderedDict"]], "pointscategories (class in datumaro.components.merge.intersect_merge)": [[229, "datumaro.components.merge.intersect_merge.PointsCategories"]], "pointscategories.category (class in datumaro.components.merge.intersect_merge)": [[229, "datumaro.components.merge.intersect_merge.PointsCategories.Category"]], "pointsmerger (class in datumaro.components.merge.intersect_merge)": [[229, "datumaro.components.merge.intersect_merge.PointsMerger"]], "polygonmerger (class in datumaro.components.merge.intersect_merge)": [[229, "datumaro.components.merge.intersect_merge.PolygonMerger"]], "rotatedbboxmerger (class in datumaro.components.merge.intersect_merge)": [[229, "datumaro.components.merge.intersect_merge.RotatedBboxMerger"]], "tabularmerger (class in datumaro.components.merge.intersect_merge)": [[229, "datumaro.components.merge.intersect_merge.TabularMerger"]], "a (datumaro.components.merge.intersect_merge.annotationstoocloseerror attribute)": [[229, "datumaro.components.merge.intersect_merge.AnnotationsTooCloseError.a"]], "add() (datumaro.components.merge.intersect_merge.labelcategories method)": [[229, "datumaro.components.merge.intersect_merge.LabelCategories.add"]], "add() (datumaro.components.merge.intersect_merge.pointscategories method)": [[229, "datumaro.components.merge.intersect_merge.PointsCategories.add"]], "add_item_error() (datumaro.components.merge.intersect_merge.intersectmerge method)": [[229, "datumaro.components.merge.intersect_merge.IntersectMerge.add_item_error"]], "add_label_group() (datumaro.components.merge.intersect_merge.labelcategories method)": [[229, "datumaro.components.merge.intersect_merge.LabelCategories.add_label_group"]], "ann (datumaro.components.merge.intersect_merge.failedattrvotingerror attribute)": [[229, "datumaro.components.merge.intersect_merge.FailedAttrVotingError.ann"]], "ann (datumaro.components.merge.intersect_merge.nomatchingannerror attribute)": [[229, "datumaro.components.merge.intersect_merge.NoMatchingAnnError.ann"]], "ann_types() (datumaro.components.merge.intersect_merge.datasetitemstoragedatasetview method)": [[229, "datumaro.components.merge.intersect_merge.DatasetItemStorageDatasetView.ann_types"]], "ann_types() (datumaro.components.merge.intersect_merge.datasetitemstoragedatasetview.subset method)": [[229, "datumaro.components.merge.intersect_merge.DatasetItemStorageDatasetView.Subset.ann_types"]], "ann_types() (datumaro.components.merge.intersect_merge.idataset method)": [[229, "datumaro.components.merge.intersect_merge.IDataset.ann_types"]], "annotations (datumaro.components.merge.intersect_merge.datasetitem attribute)": [[229, "datumaro.components.merge.intersect_merge.DatasetItem.annotations"]], "attr (datumaro.components.merge.intersect_merge.failedattrvotingerror attribute)": [[229, "datumaro.components.merge.intersect_merge.FailedAttrVotingError.attr"]], "attrib() (in module datumaro.components.merge.intersect_merge)": [[229, "datumaro.components.merge.intersect_merge.attrib"]], "attributes (datumaro.components.merge.intersect_merge.datasetitem attribute)": [[229, "datumaro.components.merge.intersect_merge.DatasetItem.attributes"]], "attributes (datumaro.components.merge.intersect_merge.labelcategories.category attribute)": [[229, "datumaro.components.merge.intersect_merge.LabelCategories.Category.attributes"]], "attrs() (in module datumaro.components.merge.intersect_merge)": [[229, "datumaro.components.merge.intersect_merge.attrs"]], "b (datumaro.components.merge.intersect_merge.annotationstoocloseerror attribute)": [[229, "datumaro.components.merge.intersect_merge.AnnotationsTooCloseError.b"]], "bbox (datumaro.components.merge.intersect_merge.annotationtype attribute)": [[229, "datumaro.components.merge.intersect_merge.AnnotationType.bbox"]], "caption (datumaro.components.merge.intersect_merge.annotationtype attribute)": [[229, "datumaro.components.merge.intersect_merge.AnnotationType.caption"]], "categories() (datumaro.components.merge.intersect_merge.datasetitemstoragedatasetview method)": [[229, "datumaro.components.merge.intersect_merge.DatasetItemStorageDatasetView.categories"]], "categories() (datumaro.components.merge.intersect_merge.datasetitemstoragedatasetview.subset method)": [[229, "datumaro.components.merge.intersect_merge.DatasetItemStorageDatasetView.Subset.categories"]], "categories() (datumaro.components.merge.intersect_merge.idataset method)": [[229, "datumaro.components.merge.intersect_merge.IDataset.categories"]], "clear() (datumaro.components.merge.intersect_merge.ordereddict method)": [[229, "datumaro.components.merge.intersect_merge.OrderedDict.clear"]], "colormap (datumaro.components.merge.intersect_merge.maskcategories attribute)": [[229, "datumaro.components.merge.intersect_merge.MaskCategories.colormap"]], "copy() (datumaro.components.merge.intersect_merge.ordereddict method)": [[229, "datumaro.components.merge.intersect_merge.OrderedDict.copy"]], "cuboid_3d (datumaro.components.merge.intersect_merge.annotationtype attribute)": [[229, "datumaro.components.merge.intersect_merge.AnnotationType.cuboid_3d"]], "datumaro.components.merge.intersect_merge": [[229, "module-datumaro.components.merge.intersect_merge"]], "depth_annotation (datumaro.components.merge.intersect_merge.annotationtype attribute)": [[229, "datumaro.components.merge.intersect_merge.AnnotationType.depth_annotation"]], "distance (datumaro.components.merge.intersect_merge.annotationstoocloseerror attribute)": [[229, "datumaro.components.merge.intersect_merge.AnnotationsTooCloseError.distance"]], "ellipse (datumaro.components.merge.intersect_merge.annotationtype attribute)": [[229, "datumaro.components.merge.intersect_merge.AnnotationType.ellipse"]], "ensure_cls() (in module datumaro.components.merge.intersect_merge)": [[229, "datumaro.components.merge.intersect_merge.ensure_cls"]], "expected (datumaro.components.merge.intersect_merge.wronggrouperror attribute)": [[229, "datumaro.components.merge.intersect_merge.WrongGroupError.expected"]], "feature_vector (datumaro.components.merge.intersect_merge.annotationtype attribute)": [[229, "datumaro.components.merge.intersect_merge.AnnotationType.feature_vector"]], "find() (datumaro.components.merge.intersect_merge.labelcategories method)": [[229, "datumaro.components.merge.intersect_merge.LabelCategories.find"]], "find() (in module datumaro.components.merge.intersect_merge)": [[229, "datumaro.components.merge.intersect_merge.find"]], "find_instances() (in module datumaro.components.merge.intersect_merge)": [[229, "datumaro.components.merge.intersect_merge.find_instances"]], "found (datumaro.components.merge.intersect_merge.wronggrouperror attribute)": [[229, "datumaro.components.merge.intersect_merge.WrongGroupError.found"]], "from_iterable() (datumaro.components.merge.intersect_merge.labelcategories class method)": [[229, "datumaro.components.merge.intersect_merge.LabelCategories.from_iterable"]], "from_iterable() (datumaro.components.merge.intersect_merge.pointscategories class method)": [[229, "datumaro.components.merge.intersect_merge.PointsCategories.from_iterable"]], "fromkeys() (datumaro.components.merge.intersect_merge.ordereddict method)": [[229, "datumaro.components.merge.intersect_merge.OrderedDict.fromkeys"]], "generate() (datumaro.components.merge.intersect_merge.maskcategories class method)": [[229, "datumaro.components.merge.intersect_merge.MaskCategories.generate"]], "get() (datumaro.components.merge.intersect_merge.datasetitemstorage method)": [[229, "datumaro.components.merge.intersect_merge.DatasetItemStorage.get"]], "get() (datumaro.components.merge.intersect_merge.datasetitemstoragedatasetview method)": [[229, "datumaro.components.merge.intersect_merge.DatasetItemStorageDatasetView.get"]], "get() (datumaro.components.merge.intersect_merge.datasetitemstoragedatasetview.subset method)": [[229, "datumaro.components.merge.intersect_merge.DatasetItemStorageDatasetView.Subset.get"]], "get() (datumaro.components.merge.intersect_merge.idataset method)": [[229, "datumaro.components.merge.intersect_merge.IDataset.get"]], "get_ann_source() (datumaro.components.merge.intersect_merge.intersectmerge method)": [[229, "datumaro.components.merge.intersect_merge.IntersectMerge.get_ann_source"]], "get_annotated_items() (datumaro.components.merge.intersect_merge.datasetitemstorage method)": [[229, "datumaro.components.merge.intersect_merge.DatasetItemStorage.get_annotated_items"]], "get_annotations() (datumaro.components.merge.intersect_merge.datasetitemstorage method)": [[229, "datumaro.components.merge.intersect_merge.DatasetItemStorage.get_annotations"]], "get_any_label_name() (datumaro.components.merge.intersect_merge.intersectmerge method)": [[229, "datumaro.components.merge.intersect_merge.IntersectMerge.get_any_label_name"]], "get_any_label_name() (datumaro.components.merge.intersect_merge.merger method)": [[229, "datumaro.components.merge.intersect_merge.Merger.get_any_label_name"]], "get_datasetitem_by_path() (datumaro.components.merge.intersect_merge.datasetitemstorage method)": [[229, "datumaro.components.merge.intersect_merge.DatasetItemStorage.get_datasetitem_by_path"]], "get_subset() (datumaro.components.merge.intersect_merge.datasetitemstorage method)": [[229, "datumaro.components.merge.intersect_merge.DatasetItemStorage.get_subset"]], "get_subset() (datumaro.components.merge.intersect_merge.datasetitemstoragedatasetview method)": [[229, "datumaro.components.merge.intersect_merge.DatasetItemStorageDatasetView.get_subset"]], "get_subset() (datumaro.components.merge.intersect_merge.datasetitemstoragedatasetview.subset method)": [[229, "datumaro.components.merge.intersect_merge.DatasetItemStorageDatasetView.Subset.get_subset"]], "get_subset() (datumaro.components.merge.intersect_merge.idataset method)": [[229, "datumaro.components.merge.intersect_merge.IDataset.get_subset"]], "group (datumaro.components.merge.intersect_merge.wronggrouperror attribute)": [[229, "datumaro.components.merge.intersect_merge.WrongGroupError.group"]], "group_type (datumaro.components.merge.intersect_merge.labelcategories.labelgroup attribute)": [[229, "datumaro.components.merge.intersect_merge.LabelCategories.LabelGroup.group_type"]], "hash_key (datumaro.components.merge.intersect_merge.annotationtype attribute)": [[229, "datumaro.components.merge.intersect_merge.AnnotationType.hash_key"]], "id (datumaro.components.merge.intersect_merge.datasetitem attribute)": [[229, "datumaro.components.merge.intersect_merge.DatasetItem.id"]], "infos() (datumaro.components.merge.intersect_merge.datasetitemstoragedatasetview method)": [[229, "datumaro.components.merge.intersect_merge.DatasetItemStorageDatasetView.infos"]], "infos() (datumaro.components.merge.intersect_merge.datasetitemstoragedatasetview.subset method)": [[229, "datumaro.components.merge.intersect_merge.DatasetItemStorageDatasetView.Subset.infos"]], "infos() (datumaro.components.merge.intersect_merge.idataset method)": [[229, "datumaro.components.merge.intersect_merge.IDataset.infos"]], "inverse_colormap (datumaro.components.merge.intersect_merge.maskcategories property)": [[229, "datumaro.components.merge.intersect_merge.MaskCategories.inverse_colormap"]], "is_empty() (datumaro.components.merge.intersect_merge.datasetitemstorage method)": [[229, "datumaro.components.merge.intersect_merge.DatasetItemStorage.is_empty"]], "is_stream (datumaro.components.merge.intersect_merge.idataset property)": [[229, "datumaro.components.merge.intersect_merge.IDataset.is_stream"]], "item_id (datumaro.components.merge.intersect_merge.annotationstoocloseerror attribute)": [[229, "datumaro.components.merge.intersect_merge.AnnotationsTooCloseError.item_id"]], "item_id (datumaro.components.merge.intersect_merge.failedattrvotingerror attribute)": [[229, "datumaro.components.merge.intersect_merge.FailedAttrVotingError.item_id"]], "item_id (datumaro.components.merge.intersect_merge.nomatchingannerror attribute)": [[229, "datumaro.components.merge.intersect_merge.NoMatchingAnnError.item_id"]], "item_id (datumaro.components.merge.intersect_merge.nomatchingitemerror attribute)": [[229, "datumaro.components.merge.intersect_merge.NoMatchingItemError.item_id"]], "item_id (datumaro.components.merge.intersect_merge.wronggrouperror attribute)": [[229, "datumaro.components.merge.intersect_merge.WrongGroupError.item_id"]], "items (datumaro.components.merge.intersect_merge.labelcategories attribute)": [[229, "datumaro.components.merge.intersect_merge.LabelCategories.items"]], "items (datumaro.components.merge.intersect_merge.pointscategories attribute)": [[229, "datumaro.components.merge.intersect_merge.PointsCategories.items"]], "items() (datumaro.components.merge.intersect_merge.ordereddict method)": [[229, "datumaro.components.merge.intersect_merge.OrderedDict.items"]], "joints (datumaro.components.merge.intersect_merge.pointscategories.category attribute)": [[229, "datumaro.components.merge.intersect_merge.PointsCategories.Category.joints"]], "keys() (datumaro.components.merge.intersect_merge.ordereddict method)": [[229, "datumaro.components.merge.intersect_merge.OrderedDict.keys"]], "label (datumaro.components.merge.intersect_merge.annotationtype attribute)": [[229, "datumaro.components.merge.intersect_merge.AnnotationType.label"]], "label_groups (datumaro.components.merge.intersect_merge.labelcategories attribute)": [[229, "datumaro.components.merge.intersect_merge.LabelCategories.label_groups"]], "labels (datumaro.components.merge.intersect_merge.labelcategories.labelgroup attribute)": [[229, "datumaro.components.merge.intersect_merge.LabelCategories.LabelGroup.labels"]], "labels (datumaro.components.merge.intersect_merge.pointscategories.category attribute)": [[229, "datumaro.components.merge.intersect_merge.PointsCategories.Category.labels"]], "mask (datumaro.components.merge.intersect_merge.annotationtype attribute)": [[229, "datumaro.components.merge.intersect_merge.AnnotationType.mask"]], "match_items() (datumaro.components.merge.intersect_merge.intersectmerge method)": [[229, "datumaro.components.merge.intersect_merge.IntersectMerge.match_items"]], "max_bbox() (in module datumaro.components.merge.intersect_merge)": [[229, "datumaro.components.merge.intersect_merge.max_bbox"]], "media (datumaro.components.merge.intersect_merge.datasetitem attribute)": [[229, "datumaro.components.merge.intersect_merge.DatasetItem.media"]], "media_as() (datumaro.components.merge.intersect_merge.datasetitem method)": [[229, "datumaro.components.merge.intersect_merge.DatasetItem.media_as"]], "media_type() (datumaro.components.merge.intersect_merge.datasetitemstoragedatasetview method)": [[229, "datumaro.components.merge.intersect_merge.DatasetItemStorageDatasetView.media_type"]], "media_type() (datumaro.components.merge.intersect_merge.datasetitemstoragedatasetview.subset method)": [[229, "datumaro.components.merge.intersect_merge.DatasetItemStorageDatasetView.Subset.media_type"]], "media_type() (datumaro.components.merge.intersect_merge.idataset method)": [[229, "datumaro.components.merge.intersect_merge.IDataset.media_type"]], "merge() (datumaro.components.merge.intersect_merge.intersectmerge method)": [[229, "datumaro.components.merge.intersect_merge.IntersectMerge.merge"]], "merge_ann_types() (datumaro.components.merge.intersect_merge.merger static method)": [[229, "datumaro.components.merge.intersect_merge.Merger.merge_ann_types"]], "merge_annotations() (datumaro.components.merge.intersect_merge.intersectmerge method)": [[229, "datumaro.components.merge.intersect_merge.IntersectMerge.merge_annotations"]], "merge_categories() (datumaro.components.merge.intersect_merge.intersectmerge method)": [[229, "datumaro.components.merge.intersect_merge.IntersectMerge.merge_categories"]], "merge_categories() (datumaro.components.merge.intersect_merge.merger static method)": [[229, "datumaro.components.merge.intersect_merge.Merger.merge_categories"]], "merge_cluster() (datumaro.components.merge.intersect_merge.cuboid3dmerger method)": [[229, "datumaro.components.merge.intersect_merge.Cuboid3dMerger.merge_cluster"]], "merge_clusters() (datumaro.components.merge.intersect_merge.annotationmerger method)": [[229, "datumaro.components.merge.intersect_merge.AnnotationMerger.merge_clusters"]], "merge_clusters() (datumaro.components.merge.intersect_merge.labelmerger method)": [[229, "datumaro.components.merge.intersect_merge.LabelMerger.merge_clusters"]], "merge_infos() (datumaro.components.merge.intersect_merge.merger static method)": [[229, "datumaro.components.merge.intersect_merge.Merger.merge_infos"]], "merge_items() (datumaro.components.merge.intersect_merge.intersectmerge method)": [[229, "datumaro.components.merge.intersect_merge.IntersectMerge.merge_items"]], "merge_media_types() (datumaro.components.merge.intersect_merge.merger static method)": [[229, "datumaro.components.merge.intersect_merge.Merger.merge_media_types"]], "move_to_end() (datumaro.components.merge.intersect_merge.ordereddict method)": [[229, "datumaro.components.merge.intersect_merge.OrderedDict.move_to_end"]], "name (datumaro.components.merge.intersect_merge.labelcategories.category attribute)": [[229, "datumaro.components.merge.intersect_merge.LabelCategories.Category.name"]], "name (datumaro.components.merge.intersect_merge.labelcategories.labelgroup attribute)": [[229, "datumaro.components.merge.intersect_merge.LabelCategories.LabelGroup.name"]], "parent (datumaro.components.merge.intersect_merge.labelcategories.category attribute)": [[229, "datumaro.components.merge.intersect_merge.LabelCategories.Category.parent"]], "points (datumaro.components.merge.intersect_merge.annotationtype attribute)": [[229, "datumaro.components.merge.intersect_merge.AnnotationType.points"]], "polygon (datumaro.components.merge.intersect_merge.annotationtype attribute)": [[229, "datumaro.components.merge.intersect_merge.AnnotationType.polygon"]], "polyline (datumaro.components.merge.intersect_merge.annotationtype attribute)": [[229, "datumaro.components.merge.intersect_merge.AnnotationType.polyline"]], "pop() (datumaro.components.merge.intersect_merge.ordereddict method)": [[229, "datumaro.components.merge.intersect_merge.OrderedDict.pop"]], "popitem() (datumaro.components.merge.intersect_merge.ordereddict method)": [[229, "datumaro.components.merge.intersect_merge.OrderedDict.popitem"]], "put() (datumaro.components.merge.intersect_merge.datasetitemstorage method)": [[229, "datumaro.components.merge.intersect_merge.DatasetItemStorage.put"]], "put() (datumaro.components.merge.intersect_merge.datasetitemstoragedatasetview.subset method)": [[229, "datumaro.components.merge.intersect_merge.DatasetItemStorageDatasetView.Subset.put"]], "remove() (datumaro.components.merge.intersect_merge.datasetitemstorage method)": [[229, "datumaro.components.merge.intersect_merge.DatasetItemStorage.remove"]], "remove() (datumaro.components.merge.intersect_merge.datasetitemstoragedatasetview.subset method)": [[229, "datumaro.components.merge.intersect_merge.DatasetItemStorageDatasetView.Subset.remove"]], "rotated_bbox (datumaro.components.merge.intersect_merge.annotationtype attribute)": [[229, "datumaro.components.merge.intersect_merge.AnnotationType.rotated_bbox"]], "save_merge_report() (datumaro.components.merge.intersect_merge.merger method)": [[229, "datumaro.components.merge.intersect_merge.Merger.save_merge_report"]], "setdefault() (datumaro.components.merge.intersect_merge.ordereddict method)": [[229, "datumaro.components.merge.intersect_merge.OrderedDict.setdefault"]], "sources (datumaro.components.merge.intersect_merge.conflictingcategorieserror attribute)": [[229, "datumaro.components.merge.intersect_merge.ConflictingCategoriesError.sources"]], "subset (datumaro.components.merge.intersect_merge.datasetitem attribute)": [[229, "datumaro.components.merge.intersect_merge.DatasetItem.subset"]], "subsets() (datumaro.components.merge.intersect_merge.datasetitemstorage method)": [[229, "datumaro.components.merge.intersect_merge.DatasetItemStorage.subsets"]], "subsets() (datumaro.components.merge.intersect_merge.datasetitemstoragedatasetview method)": [[229, "datumaro.components.merge.intersect_merge.DatasetItemStorageDatasetView.subsets"]], "subsets() (datumaro.components.merge.intersect_merge.datasetitemstoragedatasetview.subset method)": [[229, "datumaro.components.merge.intersect_merge.DatasetItemStorageDatasetView.Subset.subsets"]], "subsets() (datumaro.components.merge.intersect_merge.idataset method)": [[229, "datumaro.components.merge.intersect_merge.IDataset.subsets"]], "super_resolution_annotation (datumaro.components.merge.intersect_merge.annotationtype attribute)": [[229, "datumaro.components.merge.intersect_merge.AnnotationType.super_resolution_annotation"]], "tabular (datumaro.components.merge.intersect_merge.annotationtype attribute)": [[229, "datumaro.components.merge.intersect_merge.AnnotationType.tabular"]], "unknown (datumaro.components.merge.intersect_merge.annotationtype attribute)": [[229, "datumaro.components.merge.intersect_merge.AnnotationType.unknown"]], "update() (datumaro.components.merge.intersect_merge.ordereddict method)": [[229, "datumaro.components.merge.intersect_merge.OrderedDict.update"]], "values() (datumaro.components.merge.intersect_merge.ordereddict method)": [[229, "datumaro.components.merge.intersect_merge.OrderedDict.values"]], "votes (datumaro.components.merge.intersect_merge.failedattrvotingerror attribute)": [[229, "datumaro.components.merge.intersect_merge.FailedAttrVotingError.votes"]], "wrap() (datumaro.components.merge.intersect_merge.datasetitem method)": [[229, "datumaro.components.merge.intersect_merge.DatasetItem.wrap"]], "annotationtype (class in datumaro.components.merge.union_merge)": [[230, "datumaro.components.merge.union_merge.AnnotationType"]], "datasetitem (class in datumaro.components.merge.union_merge)": [[230, "datumaro.components.merge.union_merge.DatasetItem"]], "datasetitemstorage (class in datumaro.components.merge.union_merge)": [[230, "datumaro.components.merge.union_merge.DatasetItemStorage"]], "idataset (class in datumaro.components.merge.union_merge)": [[230, "datumaro.components.merge.union_merge.IDataset"]], "labelcategories (class in datumaro.components.merge.union_merge)": [[230, "datumaro.components.merge.union_merge.LabelCategories"]], "labelcategories.category (class in datumaro.components.merge.union_merge)": [[230, "datumaro.components.merge.union_merge.LabelCategories.Category"]], "labelcategories.labelgroup (class in datumaro.components.merge.union_merge)": [[230, "datumaro.components.merge.union_merge.LabelCategories.LabelGroup"]], "merger (class in datumaro.components.merge.union_merge)": [[230, "datumaro.components.merge.union_merge.Merger"]], "unionmerge (class in datumaro.components.merge.union_merge)": [[230, "datumaro.components.merge.union_merge.UnionMerge"]], "add() (datumaro.components.merge.union_merge.labelcategories method)": [[230, "datumaro.components.merge.union_merge.LabelCategories.add"]], "add_label_group() (datumaro.components.merge.union_merge.labelcategories method)": [[230, "datumaro.components.merge.union_merge.LabelCategories.add_label_group"]], "ann_types() (datumaro.components.merge.union_merge.idataset method)": [[230, "datumaro.components.merge.union_merge.IDataset.ann_types"]], "annotations (datumaro.components.merge.union_merge.datasetitem attribute)": [[230, "datumaro.components.merge.union_merge.DatasetItem.annotations"]], "attributes (datumaro.components.merge.union_merge.datasetitem attribute)": [[230, "datumaro.components.merge.union_merge.DatasetItem.attributes"]], "attributes (datumaro.components.merge.union_merge.labelcategories.category attribute)": [[230, "datumaro.components.merge.union_merge.LabelCategories.Category.attributes"]], "bbox (datumaro.components.merge.union_merge.annotationtype attribute)": [[230, "datumaro.components.merge.union_merge.AnnotationType.bbox"]], "caption (datumaro.components.merge.union_merge.annotationtype attribute)": [[230, "datumaro.components.merge.union_merge.AnnotationType.caption"]], "categories() (datumaro.components.merge.union_merge.idataset method)": [[230, "datumaro.components.merge.union_merge.IDataset.categories"]], "copy() (datumaro.components.merge.union_merge.defaultdict method)": [[230, "datumaro.components.merge.union_merge.defaultdict.copy"]], "cuboid_3d (datumaro.components.merge.union_merge.annotationtype attribute)": [[230, "datumaro.components.merge.union_merge.AnnotationType.cuboid_3d"]], "datumaro.components.merge.union_merge": [[230, "module-datumaro.components.merge.union_merge"]], "default_factory (datumaro.components.merge.union_merge.defaultdict attribute)": [[230, "datumaro.components.merge.union_merge.defaultdict.default_factory"]], "defaultdict (class in datumaro.components.merge.union_merge)": [[230, "datumaro.components.merge.union_merge.defaultdict"]], "depth_annotation (datumaro.components.merge.union_merge.annotationtype attribute)": [[230, "datumaro.components.merge.union_merge.AnnotationType.depth_annotation"]], "ellipse (datumaro.components.merge.union_merge.annotationtype attribute)": [[230, "datumaro.components.merge.union_merge.AnnotationType.ellipse"]], "feature_vector (datumaro.components.merge.union_merge.annotationtype attribute)": [[230, "datumaro.components.merge.union_merge.AnnotationType.feature_vector"]], "find() (datumaro.components.merge.union_merge.labelcategories method)": [[230, "datumaro.components.merge.union_merge.LabelCategories.find"]], "from_iterable() (datumaro.components.merge.union_merge.labelcategories class method)": [[230, "datumaro.components.merge.union_merge.LabelCategories.from_iterable"]], "get() (datumaro.components.merge.union_merge.datasetitemstorage method)": [[230, "datumaro.components.merge.union_merge.DatasetItemStorage.get"]], "get() (datumaro.components.merge.union_merge.idataset method)": [[230, "datumaro.components.merge.union_merge.IDataset.get"]], "get_annotated_items() (datumaro.components.merge.union_merge.datasetitemstorage method)": [[230, "datumaro.components.merge.union_merge.DatasetItemStorage.get_annotated_items"]], "get_annotations() (datumaro.components.merge.union_merge.datasetitemstorage method)": [[230, "datumaro.components.merge.union_merge.DatasetItemStorage.get_annotations"]], "get_any_label_name() (datumaro.components.merge.union_merge.merger method)": [[230, "datumaro.components.merge.union_merge.Merger.get_any_label_name"]], "get_datasetitem_by_path() (datumaro.components.merge.union_merge.datasetitemstorage method)": [[230, "datumaro.components.merge.union_merge.DatasetItemStorage.get_datasetitem_by_path"]], "get_subset() (datumaro.components.merge.union_merge.datasetitemstorage method)": [[230, "datumaro.components.merge.union_merge.DatasetItemStorage.get_subset"]], "get_subset() (datumaro.components.merge.union_merge.idataset method)": [[230, "datumaro.components.merge.union_merge.IDataset.get_subset"]], "group_type (datumaro.components.merge.union_merge.labelcategories.labelgroup attribute)": [[230, "datumaro.components.merge.union_merge.LabelCategories.LabelGroup.group_type"]], "hash_key (datumaro.components.merge.union_merge.annotationtype attribute)": [[230, "datumaro.components.merge.union_merge.AnnotationType.hash_key"]], "id (datumaro.components.merge.union_merge.datasetitem attribute)": [[230, "datumaro.components.merge.union_merge.DatasetItem.id"]], "infos() (datumaro.components.merge.union_merge.idataset method)": [[230, "datumaro.components.merge.union_merge.IDataset.infos"]], "is_empty() (datumaro.components.merge.union_merge.datasetitemstorage method)": [[230, "datumaro.components.merge.union_merge.DatasetItemStorage.is_empty"]], "is_stream (datumaro.components.merge.union_merge.idataset property)": [[230, "datumaro.components.merge.union_merge.IDataset.is_stream"]], "items (datumaro.components.merge.union_merge.labelcategories attribute)": [[230, "datumaro.components.merge.union_merge.LabelCategories.items"]], "label (datumaro.components.merge.union_merge.annotationtype attribute)": [[230, "datumaro.components.merge.union_merge.AnnotationType.label"]], "label_groups (datumaro.components.merge.union_merge.labelcategories attribute)": [[230, "datumaro.components.merge.union_merge.LabelCategories.label_groups"]], "labels (datumaro.components.merge.union_merge.labelcategories.labelgroup attribute)": [[230, "datumaro.components.merge.union_merge.LabelCategories.LabelGroup.labels"]], "mask (datumaro.components.merge.union_merge.annotationtype attribute)": [[230, "datumaro.components.merge.union_merge.AnnotationType.mask"]], "media (datumaro.components.merge.union_merge.datasetitem attribute)": [[230, "datumaro.components.merge.union_merge.DatasetItem.media"]], "media_as() (datumaro.components.merge.union_merge.datasetitem method)": [[230, "datumaro.components.merge.union_merge.DatasetItem.media_as"]], "media_type() (datumaro.components.merge.union_merge.idataset method)": [[230, "datumaro.components.merge.union_merge.IDataset.media_type"]], "merge() (datumaro.components.merge.union_merge.unionmerge method)": [[230, "datumaro.components.merge.union_merge.UnionMerge.merge"]], "merge_ann_types() (datumaro.components.merge.union_merge.merger static method)": [[230, "datumaro.components.merge.union_merge.Merger.merge_ann_types"]], "merge_categories() (datumaro.components.merge.union_merge.merger static method)": [[230, "datumaro.components.merge.union_merge.Merger.merge_categories"]], "merge_categories() (datumaro.components.merge.union_merge.unionmerge method)": [[230, "datumaro.components.merge.union_merge.UnionMerge.merge_categories"]], "merge_infos() (datumaro.components.merge.union_merge.merger static method)": [[230, "datumaro.components.merge.union_merge.Merger.merge_infos"]], "merge_media_types() (datumaro.components.merge.union_merge.merger static method)": [[230, "datumaro.components.merge.union_merge.Merger.merge_media_types"]], "name (datumaro.components.merge.union_merge.labelcategories.category attribute)": [[230, "datumaro.components.merge.union_merge.LabelCategories.Category.name"]], "name (datumaro.components.merge.union_merge.labelcategories.labelgroup attribute)": [[230, "datumaro.components.merge.union_merge.LabelCategories.LabelGroup.name"]], "parent (datumaro.components.merge.union_merge.labelcategories.category attribute)": [[230, "datumaro.components.merge.union_merge.LabelCategories.Category.parent"]], "points (datumaro.components.merge.union_merge.annotationtype attribute)": [[230, "datumaro.components.merge.union_merge.AnnotationType.points"]], "polygon (datumaro.components.merge.union_merge.annotationtype attribute)": [[230, "datumaro.components.merge.union_merge.AnnotationType.polygon"]], "polyline (datumaro.components.merge.union_merge.annotationtype attribute)": [[230, "datumaro.components.merge.union_merge.AnnotationType.polyline"]], "put() (datumaro.components.merge.union_merge.datasetitemstorage method)": [[230, "datumaro.components.merge.union_merge.DatasetItemStorage.put"]], "remove() (datumaro.components.merge.union_merge.datasetitemstorage method)": [[230, "datumaro.components.merge.union_merge.DatasetItemStorage.remove"]], "rotated_bbox (datumaro.components.merge.union_merge.annotationtype attribute)": [[230, "datumaro.components.merge.union_merge.AnnotationType.rotated_bbox"]], "save_merge_report() (datumaro.components.merge.union_merge.merger method)": [[230, "datumaro.components.merge.union_merge.Merger.save_merge_report"]], "subset (datumaro.components.merge.union_merge.datasetitem attribute)": [[230, "datumaro.components.merge.union_merge.DatasetItem.subset"]], "subsets() (datumaro.components.merge.union_merge.datasetitemstorage method)": [[230, "datumaro.components.merge.union_merge.DatasetItemStorage.subsets"]], "subsets() (datumaro.components.merge.union_merge.idataset method)": [[230, "datumaro.components.merge.union_merge.IDataset.subsets"]], "super_resolution_annotation (datumaro.components.merge.union_merge.annotationtype attribute)": [[230, "datumaro.components.merge.union_merge.AnnotationType.super_resolution_annotation"]], "tabular (datumaro.components.merge.union_merge.annotationtype attribute)": [[230, "datumaro.components.merge.union_merge.AnnotationType.tabular"]], "unknown (datumaro.components.merge.union_merge.annotationtype attribute)": [[230, "datumaro.components.merge.union_merge.AnnotationType.unknown"]], "wrap() (datumaro.components.merge.union_merge.datasetitem method)": [[230, "datumaro.components.merge.union_merge.DatasetItem.wrap"]], "compute_ann_statistics() (in module datumaro.components.operations)": [[231, "datumaro.components.operations.compute_ann_statistics"]], "compute_image_statistics() (in module datumaro.components.operations)": [[231, "datumaro.components.operations.compute_image_statistics"]], "datumaro.components.operations": [[231, "module-datumaro.components.operations"]], "find_unique_images() (in module datumaro.components.operations)": [[231, "datumaro.components.operations.find_unique_images"]], "match_classes() (in module datumaro.components.operations)": [[231, "datumaro.components.operations.match_classes"]], "match_items_by_id() (in module datumaro.components.operations)": [[231, "datumaro.components.operations.match_items_by_id"]], "match_items_by_image_hash() (in module datumaro.components.operations)": [[231, "datumaro.components.operations.match_items_by_image_hash"]], "mean_std() (in module datumaro.components.operations)": [[231, "datumaro.components.operations.mean_std"]], "nullprogressreporter (class in datumaro.components.progress_reporting)": [[232, "datumaro.components.progress_reporting.NullProgressReporter"]], "progressreporter (class in datumaro.components.progress_reporting)": [[232, "datumaro.components.progress_reporting.ProgressReporter"]], "simpleprogressreporter (class in datumaro.components.progress_reporting)": [[232, "datumaro.components.progress_reporting.SimpleProgressReporter"]], "tqdmprogressreporter (class in datumaro.components.progress_reporting)": [[232, "datumaro.components.progress_reporting.TQDMProgressReporter"]], "datumaro.components.progress_reporting": [[232, "module-datumaro.components.progress_reporting"]], "finish() (datumaro.components.progress_reporting.progressreporter method)": [[232, "datumaro.components.progress_reporting.ProgressReporter.finish"]], "finish() (datumaro.components.progress_reporting.simpleprogressreporter method)": [[232, "datumaro.components.progress_reporting.SimpleProgressReporter.finish"]], "finish() (datumaro.components.progress_reporting.tqdmprogressreporter method)": [[232, "datumaro.components.progress_reporting.TQDMProgressReporter.finish"]], "interval (datumaro.components.progress_reporting.nullprogressreporter property)": [[232, "datumaro.components.progress_reporting.NullProgressReporter.interval"]], "interval (datumaro.components.progress_reporting.progressreporter property)": [[232, "datumaro.components.progress_reporting.ProgressReporter.interval"]], "interval (datumaro.components.progress_reporting.simpleprogressreporter property)": [[232, "datumaro.components.progress_reporting.SimpleProgressReporter.interval"]], "interval (datumaro.components.progress_reporting.tqdmprogressreporter property)": [[232, "datumaro.components.progress_reporting.TQDMProgressReporter.interval"]], "iter() (datumaro.components.progress_reporting.nullprogressreporter method)": [[232, "datumaro.components.progress_reporting.NullProgressReporter.iter"]], "iter() (datumaro.components.progress_reporting.progressreporter method)": [[232, "datumaro.components.progress_reporting.ProgressReporter.iter"]], "period (datumaro.components.progress_reporting.nullprogressreporter property)": [[232, "datumaro.components.progress_reporting.NullProgressReporter.period"]], "period (datumaro.components.progress_reporting.progressreporter property)": [[232, "datumaro.components.progress_reporting.ProgressReporter.period"]], "period (datumaro.components.progress_reporting.simpleprogressreporter property)": [[232, "datumaro.components.progress_reporting.SimpleProgressReporter.period"]], "period (datumaro.components.progress_reporting.tqdmprogressreporter property)": [[232, "datumaro.components.progress_reporting.TQDMProgressReporter.period"]], "report_status() (datumaro.components.progress_reporting.nullprogressreporter method)": [[232, "datumaro.components.progress_reporting.NullProgressReporter.report_status"]], "report_status() (datumaro.components.progress_reporting.progressreporter method)": [[232, "datumaro.components.progress_reporting.ProgressReporter.report_status"]], "report_status() (datumaro.components.progress_reporting.simpleprogressreporter method)": [[232, "datumaro.components.progress_reporting.SimpleProgressReporter.report_status"]], "report_status() (datumaro.components.progress_reporting.tqdmprogressreporter method)": [[232, "datumaro.components.progress_reporting.TQDMProgressReporter.report_status"]], "split() (datumaro.components.progress_reporting.nullprogressreporter method)": [[232, "datumaro.components.progress_reporting.NullProgressReporter.split"]], "split() (datumaro.components.progress_reporting.progressreporter method)": [[232, "datumaro.components.progress_reporting.ProgressReporter.split"]], "split() (datumaro.components.progress_reporting.simpleprogressreporter method)": [[232, "datumaro.components.progress_reporting.SimpleProgressReporter.split"]], "split() (datumaro.components.progress_reporting.tqdmprogressreporter method)": [[232, "datumaro.components.progress_reporting.TQDMProgressReporter.split"]], "start() (datumaro.components.progress_reporting.nullprogressreporter method)": [[232, "datumaro.components.progress_reporting.NullProgressReporter.start"]], "start() (datumaro.components.progress_reporting.progressreporter method)": [[232, "datumaro.components.progress_reporting.ProgressReporter.start"]], "start() (datumaro.components.progress_reporting.simpleprogressreporter method)": [[232, "datumaro.components.progress_reporting.SimpleProgressReporter.start"]], "start() (datumaro.components.progress_reporting.tqdmprogressreporter method)": [[232, "datumaro.components.progress_reporting.TQDMProgressReporter.start"]], "base_stage (datumaro.components.project.projectbuildtargets attribute)": [[233, "datumaro.components.project.ProjectBuildTargets.BASE_STAGE"]], "buildstagetype (class in datumaro.components.project)": [[233, "datumaro.components.project.BuildStageType"]], "crudproxy (class in datumaro.components.project)": [[233, "datumaro.components.project.CrudProxy"]], "dir_hash_len (datumaro.components.project.dvcwrapper attribute)": [[233, "datumaro.components.project.DvcWrapper.DIR_HASH_LEN"]], "dir_hash_suffix (datumaro.components.project.dvcwrapper attribute)": [[233, "datumaro.components.project.DvcWrapper.DIR_HASH_SUFFIX"]], "diffstatus (class in datumaro.components.project)": [[233, "datumaro.components.project.DiffStatus"]], "dvcwrapper (class in datumaro.components.project)": [[233, "datumaro.components.project.DvcWrapper"]], "dvcwrapper.dvcerror": [[233, "datumaro.components.project.DvcWrapper.DvcError"]], "file_hash_len (datumaro.components.project.dvcwrapper attribute)": [[233, "datumaro.components.project.DvcWrapper.FILE_HASH_LEN"]], "gitstatus (datumaro.components.project.gitwrapper attribute)": [[233, "datumaro.components.project.GitWrapper.GitStatus"]], "gittree (datumaro.components.project.gitwrapper attribute)": [[233, "datumaro.components.project.GitWrapper.GitTree"]], "gitwrapper (class in datumaro.components.project)": [[233, "datumaro.components.project.GitWrapper"]], "hash_len (datumaro.components.project.gitwrapper attribute)": [[233, "datumaro.components.project.GitWrapper.HASH_LEN"]], "ignoremode (class in datumaro.components.project)": [[233, "datumaro.components.project.IgnoreMode"]], "main_target (datumaro.components.project.projectbuildtargets attribute)": [[233, "datumaro.components.project.ProjectBuildTargets.MAIN_TARGET"]], "pipeline (class in datumaro.components.project)": [[233, "datumaro.components.project.Pipeline"]], "project (class in datumaro.components.project)": [[233, "datumaro.components.project.Project"]], "projectbuildtargets (class in datumaro.components.project)": [[233, "datumaro.components.project.ProjectBuildTargets"]], "projectbuilder (class in datumaro.components.project)": [[233, "datumaro.components.project.ProjectBuilder"]], "projectsourcedataset (class in datumaro.components.project)": [[233, "datumaro.components.project.ProjectSourceDataset"]], "projectsources (class in datumaro.components.project)": [[233, "datumaro.components.project.ProjectSources"]], "tree (class in datumaro.components.project)": [[233, "datumaro.components.project.Tree"]], "add() (datumaro.components.project.dvcwrapper method)": [[233, "datumaro.components.project.DvcWrapper.add"]], "add() (datumaro.components.project.gitwrapper method)": [[233, "datumaro.components.project.GitWrapper.add"]], "add_convert_stage() (datumaro.components.project.projectbuildtargets method)": [[233, "datumaro.components.project.ProjectBuildTargets.add_convert_stage"]], "add_explore_stage() (datumaro.components.project.projectbuildtargets method)": [[233, "datumaro.components.project.ProjectBuildTargets.add_explore_stage"]], "add_filter_stage() (datumaro.components.project.projectbuildtargets method)": [[233, "datumaro.components.project.ProjectBuildTargets.add_filter_stage"]], "add_inference_stage() (datumaro.components.project.projectbuildtargets method)": [[233, "datumaro.components.project.ProjectBuildTargets.add_inference_stage"]], "add_model() (datumaro.components.project.project method)": [[233, "datumaro.components.project.Project.add_model"]], "add_source() (datumaro.components.project.project method)": [[233, "datumaro.components.project.Project.add_source"]], "add_stage() (datumaro.components.project.projectbuildtargets method)": [[233, "datumaro.components.project.ProjectBuildTargets.add_stage"]], "add_target() (datumaro.components.project.projectbuildtargets method)": [[233, "datumaro.components.project.ProjectBuildTargets.add_target"]], "add_transform_stage() (datumaro.components.project.projectbuildtargets method)": [[233, "datumaro.components.project.ProjectBuildTargets.add_transform_stage"]], "added (datumaro.components.project.diffstatus attribute)": [[233, "datumaro.components.project.DiffStatus.added"]], "ann_types() (datumaro.components.project.projectsourcedataset method)": [[233, "datumaro.components.project.ProjectSourceDataset.ann_types"]], "append (datumaro.components.project.ignoremode attribute)": [[233, "datumaro.components.project.IgnoreMode.append"]], "branch (datumaro.components.project.gitwrapper property)": [[233, "datumaro.components.project.GitWrapper.branch"]], "branch (datumaro.components.project.project property)": [[233, "datumaro.components.project.Project.branch"]], "build_targets (datumaro.components.project.tree property)": [[233, "datumaro.components.project.Tree.build_targets"]], "cache_path() (datumaro.components.project.project method)": [[233, "datumaro.components.project.Project.cache_path"]], "categories() (datumaro.components.project.projectsourcedataset method)": [[233, "datumaro.components.project.ProjectSourceDataset.categories"]], "checkout() (datumaro.components.project.dvcwrapper method)": [[233, "datumaro.components.project.DvcWrapper.checkout"]], "checkout() (datumaro.components.project.gitwrapper method)": [[233, "datumaro.components.project.GitWrapper.checkout"]], "checkout() (datumaro.components.project.project method)": [[233, "datumaro.components.project.Project.checkout"]], "clone() (datumaro.components.project.tree method)": [[233, "datumaro.components.project.Tree.clone"]], "close() (datumaro.components.project.dvcwrapper method)": [[233, "datumaro.components.project.DvcWrapper.close"]], "close() (datumaro.components.project.gitwrapper method)": [[233, "datumaro.components.project.GitWrapper.close"]], "close() (datumaro.components.project.project method)": [[233, "datumaro.components.project.Project.close"]], "commit() (datumaro.components.project.gitwrapper method)": [[233, "datumaro.components.project.GitWrapper.commit"]], "commit() (datumaro.components.project.project method)": [[233, "datumaro.components.project.Project.commit"]], "compute_source_hash() (datumaro.components.project.project method)": [[233, "datumaro.components.project.Project.compute_source_hash"]], "config (datumaro.components.project.project property)": [[233, "datumaro.components.project.Project.config"]], "config (datumaro.components.project.projectsourcedataset property)": [[233, "datumaro.components.project.ProjectSourceDataset.config"]], "config (datumaro.components.project.tree property)": [[233, "datumaro.components.project.Tree.config"]], "convert (datumaro.components.project.buildstagetype attribute)": [[233, "datumaro.components.project.BuildStageType.convert"]], "datumaro.components.project": [[233, "module-datumaro.components.project"]], "diff() (datumaro.components.project.project method)": [[233, "datumaro.components.project.Project.diff"]], "dump() (datumaro.components.project.tree method)": [[233, "datumaro.components.project.Tree.dump"]], "env (datumaro.components.project.project property)": [[233, "datumaro.components.project.Project.env"]], "env (datumaro.components.project.tree property)": [[233, "datumaro.components.project.Tree.env"]], "explore (datumaro.components.project.buildstagetype attribute)": [[233, "datumaro.components.project.BuildStageType.explore"]], "filter (datumaro.components.project.buildstagetype attribute)": [[233, "datumaro.components.project.BuildStageType.filter"]], "find_project_dir() (datumaro.components.project.project static method)": [[233, "datumaro.components.project.Project.find_project_dir"]], "foreign_modified (datumaro.components.project.diffstatus attribute)": [[233, "datumaro.components.project.DiffStatus.foreign_modified"]], "get() (datumaro.components.project.crudproxy method)": [[233, "datumaro.components.project.CrudProxy.get"]], "get() (datumaro.components.project.projectsourcedataset method)": [[233, "datumaro.components.project.ProjectSourceDataset.get"]], "get_hash_from_dvcfile() (datumaro.components.project.dvcwrapper class method)": [[233, "datumaro.components.project.DvcWrapper.get_hash_from_dvcfile"]], "get_rev() (datumaro.components.project.project method)": [[233, "datumaro.components.project.Project.get_rev"]], "get_slice() (datumaro.components.project.pipeline method)": [[233, "datumaro.components.project.Pipeline.get_slice"]], "get_subset() (datumaro.components.project.projectsourcedataset method)": [[233, "datumaro.components.project.ProjectSourceDataset.get_subset"]], "get_tree() (datumaro.components.project.gitwrapper method)": [[233, "datumaro.components.project.GitWrapper.get_tree"]], "has_commits() (datumaro.components.project.gitwrapper method)": [[233, "datumaro.components.project.GitWrapper.has_commits"]], "has_commits() (datumaro.components.project.project method)": [[233, "datumaro.components.project.Project.has_commits"]], "head (datumaro.components.project.gitwrapper property)": [[233, "datumaro.components.project.GitWrapper.head"]], "head (datumaro.components.project.pipeline property)": [[233, "datumaro.components.project.Pipeline.head"]], "head (datumaro.components.project.project property)": [[233, "datumaro.components.project.Project.head"]], "head_node (datumaro.components.project.pipeline property)": [[233, "datumaro.components.project.Pipeline.head_node"]], "head_rev (datumaro.components.project.project property)": [[233, "datumaro.components.project.Project.head_rev"]], "history() (datumaro.components.project.project method)": [[233, "datumaro.components.project.Project.history"]], "ignore() (datumaro.components.project.dvcwrapper method)": [[233, "datumaro.components.project.DvcWrapper.ignore"]], "ignore() (datumaro.components.project.gitwrapper method)": [[233, "datumaro.components.project.GitWrapper.ignore"]], "import_source() (datumaro.components.project.project method)": [[233, "datumaro.components.project.Project.import_source"]], "inference (datumaro.components.project.buildstagetype attribute)": [[233, "datumaro.components.project.BuildStageType.inference"]], "infos() (datumaro.components.project.projectsourcedataset method)": [[233, "datumaro.components.project.ProjectSourceDataset.infos"]], "init() (datumaro.components.project.dvcwrapper method)": [[233, "datumaro.components.project.DvcWrapper.init"]], "init() (datumaro.components.project.gitwrapper method)": [[233, "datumaro.components.project.GitWrapper.init"]], "init() (datumaro.components.project.project class method)": [[233, "datumaro.components.project.Project.init"]], "initialized (datumaro.components.project.dvcwrapper property)": [[233, "datumaro.components.project.DvcWrapper.initialized"]], "initialized (datumaro.components.project.gitwrapper property)": [[233, "datumaro.components.project.GitWrapper.initialized"]], "is_cached() (datumaro.components.project.dvcwrapper method)": [[233, "datumaro.components.project.DvcWrapper.is_cached"]], "is_dir_hash() (datumaro.components.project.dvcwrapper class method)": [[233, "datumaro.components.project.DvcWrapper.is_dir_hash"]], "is_file_hash() (datumaro.components.project.dvcwrapper class method)": [[233, "datumaro.components.project.DvcWrapper.is_file_hash"]], "is_hash() (datumaro.components.project.dvcwrapper class method)": [[233, "datumaro.components.project.DvcWrapper.is_hash"]], "is_hash() (datumaro.components.project.gitwrapper class method)": [[233, "datumaro.components.project.GitWrapper.is_hash"]], "is_obj_cached() (datumaro.components.project.project method)": [[233, "datumaro.components.project.Project.is_obj_cached"]], "is_ref() (datumaro.components.project.gitwrapper method)": [[233, "datumaro.components.project.GitWrapper.is_ref"]], "is_ref() (datumaro.components.project.project method)": [[233, "datumaro.components.project.Project.is_ref"]], "is_rev_cached() (datumaro.components.project.project method)": [[233, "datumaro.components.project.Project.is_rev_cached"]], "is_working_tree (datumaro.components.project.tree property)": [[233, "datumaro.components.project.Tree.is_working_tree"]], "items() (datumaro.components.project.crudproxy method)": [[233, "datumaro.components.project.CrudProxy.items"]], "log() (datumaro.components.project.gitwrapper method)": [[233, "datumaro.components.project.GitWrapper.log"]], "make_dataset() (datumaro.components.project.projectbuilder method)": [[233, "datumaro.components.project.ProjectBuilder.make_dataset"]], "make_dataset() (datumaro.components.project.tree method)": [[233, "datumaro.components.project.Tree.make_dataset"]], "make_model() (datumaro.components.project.project method)": [[233, "datumaro.components.project.Project.make_model"]], "make_pipeline() (datumaro.components.project.projectbuildtargets method)": [[233, "datumaro.components.project.ProjectBuildTargets.make_pipeline"]], "make_pipeline() (datumaro.components.project.tree method)": [[233, "datumaro.components.project.Tree.make_pipeline"]], "make_target_name() (datumaro.components.project.projectbuildtargets static method)": [[233, "datumaro.components.project.ProjectBuildTargets.make_target_name"]], "media_type() (datumaro.components.project.projectsourcedataset method)": [[233, "datumaro.components.project.ProjectSourceDataset.media_type"]], "migrate_from_v1_to_v2() (datumaro.components.project.project static method)": [[233, "datumaro.components.project.Project.migrate_from_v1_to_v2"]], "missing (datumaro.components.project.diffstatus attribute)": [[233, "datumaro.components.project.DiffStatus.missing"]], "model_data_dir() (datumaro.components.project.project method)": [[233, "datumaro.components.project.Project.model_data_dir"]], "models (datumaro.components.project.project property)": [[233, "datumaro.components.project.Project.models"]], "modified (datumaro.components.project.diffstatus attribute)": [[233, "datumaro.components.project.DiffStatus.modified"]], "module() (datumaro.components.project.dvcwrapper static method)": [[233, "datumaro.components.project.DvcWrapper.module"]], "module() (datumaro.components.project.gitwrapper static method)": [[233, "datumaro.components.project.GitWrapper.module"]], "obj_path() (datumaro.components.project.dvcwrapper method)": [[233, "datumaro.components.project.DvcWrapper.obj_path"]], "project (datumaro.components.project.buildstagetype attribute)": [[233, "datumaro.components.project.BuildStageType.project"]], "readonly (datumaro.components.project.project property)": [[233, "datumaro.components.project.Project.readonly"]], "readonly (datumaro.components.project.projectsourcedataset property)": [[233, "datumaro.components.project.ProjectSourceDataset.readonly"]], "refresh_source_hash() (datumaro.components.project.project method)": [[233, "datumaro.components.project.Project.refresh_source_hash"]], "remove (datumaro.components.project.ignoremode attribute)": [[233, "datumaro.components.project.IgnoreMode.remove"]], "remove_cache_obj() (datumaro.components.project.dvcwrapper method)": [[233, "datumaro.components.project.DvcWrapper.remove_cache_obj"]], "remove_cache_obj() (datumaro.components.project.project method)": [[233, "datumaro.components.project.Project.remove_cache_obj"]], "remove_model() (datumaro.components.project.project method)": [[233, "datumaro.components.project.Project.remove_model"]], "remove_source() (datumaro.components.project.project method)": [[233, "datumaro.components.project.Project.remove_source"]], "remove_stage() (datumaro.components.project.projectbuildtargets method)": [[233, "datumaro.components.project.ProjectBuildTargets.remove_stage"]], "remove_target() (datumaro.components.project.projectbuildtargets method)": [[233, "datumaro.components.project.ProjectBuildTargets.remove_target"]], "removed (datumaro.components.project.diffstatus attribute)": [[233, "datumaro.components.project.DiffStatus.removed"]], "rev (datumaro.components.project.tree property)": [[233, "datumaro.components.project.Tree.rev"]], "rev_parse() (datumaro.components.project.gitwrapper method)": [[233, "datumaro.components.project.GitWrapper.rev_parse"]], "rewrite (datumaro.components.project.ignoremode attribute)": [[233, "datumaro.components.project.IgnoreMode.rewrite"]], "save() (datumaro.components.project.project method)": [[233, "datumaro.components.project.Project.save"]], "save() (datumaro.components.project.projectsourcedataset method)": [[233, "datumaro.components.project.ProjectSourceDataset.save"]], "save() (datumaro.components.project.tree method)": [[233, "datumaro.components.project.Tree.save"]], "source (datumaro.components.project.buildstagetype attribute)": [[233, "datumaro.components.project.BuildStageType.source"]], "source_data_dir() (datumaro.components.project.project method)": [[233, "datumaro.components.project.Project.source_data_dir"]], "source_data_dir() (datumaro.components.project.tree method)": [[233, "datumaro.components.project.Tree.source_data_dir"]], "sources (datumaro.components.project.tree property)": [[233, "datumaro.components.project.Tree.sources"]], "split_target_name() (datumaro.components.project.projectbuildtargets class method)": [[233, "datumaro.components.project.ProjectBuildTargets.split_target_name"]], "status() (datumaro.components.project.gitwrapper method)": [[233, "datumaro.components.project.GitWrapper.status"]], "status() (datumaro.components.project.project method)": [[233, "datumaro.components.project.Project.status"]], "strip_target_name() (datumaro.components.project.projectbuildtargets class method)": [[233, "datumaro.components.project.ProjectBuildTargets.strip_target_name"]], "subsets() (datumaro.components.project.projectsourcedataset method)": [[233, "datumaro.components.project.ProjectSourceDataset.subsets"]], "transform (datumaro.components.project.buildstagetype attribute)": [[233, "datumaro.components.project.BuildStageType.transform"]], "validate_source_name() (datumaro.components.project.project method)": [[233, "datumaro.components.project.Project.validate_source_name"]], "working_tree (datumaro.components.project.project property)": [[233, "datumaro.components.project.Project.working_tree"]], "write_obj() (datumaro.components.project.dvcwrapper method)": [[233, "datumaro.components.project.DvcWrapper.write_obj"]], "write_tree() (datumaro.components.project.gitwrapper method)": [[233, "datumaro.components.project.GitWrapper.write_tree"]], "yaml (datumaro.components.project.dvcwrapper attribute)": [[233, "datumaro.components.project.DvcWrapper.yaml"]], "yaml_parser (datumaro.components.project.dvcwrapper attribute)": [[233, "datumaro.components.project.DvcWrapper.yaml_parser"]], "datasetbaseregistry (class in datumaro.components.registry)": [[234, "datumaro.components.registry.DatasetBaseRegistry"]], "exporterregistry (class in datumaro.components.registry)": [[234, "datumaro.components.registry.ExporterRegistry"]], "generatorregistry (class in datumaro.components.registry)": [[234, "datumaro.components.registry.GeneratorRegistry"]], "importerregistry (class in datumaro.components.registry)": [[234, "datumaro.components.registry.ImporterRegistry"]], "launcherregistry (class in datumaro.components.registry)": [[234, "datumaro.components.registry.LauncherRegistry"]], "pluginregistry (class in datumaro.components.registry)": [[234, "datumaro.components.registry.PluginRegistry"]], "registry (class in datumaro.components.registry)": [[234, "datumaro.components.registry.Registry"]], "transformregistry (class in datumaro.components.registry)": [[234, "datumaro.components.registry.TransformRegistry"]], "validatorregistry (class in datumaro.components.registry)": [[234, "datumaro.components.registry.ValidatorRegistry"]], "batch_register() (datumaro.components.registry.pluginregistry method)": [[234, "datumaro.components.registry.PluginRegistry.batch_register"]], "datumaro.components.registry": [[234, "module-datumaro.components.registry"]], "get() (datumaro.components.registry.pluginregistry method)": [[234, "datumaro.components.registry.PluginRegistry.get"]], "get() (datumaro.components.registry.registry method)": [[234, "datumaro.components.registry.Registry.get"]], "items() (datumaro.components.registry.registry method)": [[234, "datumaro.components.registry.Registry.items"]], "register() (datumaro.components.registry.importerregistry method)": [[234, "datumaro.components.registry.ImporterRegistry.register"]], "register() (datumaro.components.registry.registry method)": [[234, "datumaro.components.registry.Registry.register"]], "unregister() (datumaro.components.registry.registry method)": [[234, "datumaro.components.registry.Registry.unregister"]], "featureaccumulator (class in datumaro.components.shift_analyzer)": [[235, "datumaro.components.shift_analyzer.FeatureAccumulator"]], "featureaccumulatorbylabel (class in datumaro.components.shift_analyzer)": [[235, "datumaro.components.shift_analyzer.FeatureAccumulatorByLabel"]], "runningstats1d (class in datumaro.components.shift_analyzer)": [[235, "datumaro.components.shift_analyzer.RunningStats1D"]], "shiftanalyzer (class in datumaro.components.shift_analyzer)": [[235, "datumaro.components.shift_analyzer.ShiftAnalyzer"]], "add() (datumaro.components.shift_analyzer.runningstats1d method)": [[235, "datumaro.components.shift_analyzer.RunningStats1D.add"]], "compute_covariate_shift() (datumaro.components.shift_analyzer.shiftanalyzer method)": [[235, "datumaro.components.shift_analyzer.ShiftAnalyzer.compute_covariate_shift"]], "compute_label_shift() (datumaro.components.shift_analyzer.shiftanalyzer method)": [[235, "datumaro.components.shift_analyzer.ShiftAnalyzer.compute_label_shift"]], "cov (datumaro.components.shift_analyzer.runningstats1d property)": [[235, "datumaro.components.shift_analyzer.RunningStats1D.cov"]], "datumaro.components.shift_analyzer": [[235, "module-datumaro.components.shift_analyzer"]], "get_activation_stats() (datumaro.components.shift_analyzer.featureaccumulator method)": [[235, "datumaro.components.shift_analyzer.FeatureAccumulator.get_activation_stats"]], "get_activation_stats() (datumaro.components.shift_analyzer.featureaccumulatorbylabel method)": [[235, "datumaro.components.shift_analyzer.FeatureAccumulatorByLabel.get_activation_stats"]], "mean (datumaro.components.shift_analyzer.runningstats1d property)": [[235, "datumaro.components.shift_analyzer.RunningStats1D.mean"]], "itemtransform (class in datumaro.components.transformer)": [[236, "datumaro.components.transformer.ItemTransform"]], "modeltransform (class in datumaro.components.transformer)": [[236, "datumaro.components.transformer.ModelTransform"]], "transform (class in datumaro.components.transformer)": [[236, "datumaro.components.transformer.Transform"]], "categories() (datumaro.components.transformer.modeltransform method)": [[236, "datumaro.components.transformer.ModelTransform.categories"]], "categories() (datumaro.components.transformer.transform method)": [[236, "datumaro.components.transformer.Transform.categories"]], "datumaro.components.transformer": [[236, "module-datumaro.components.transformer"]], "get_subset() (datumaro.components.transformer.modeltransform method)": [[236, "datumaro.components.transformer.ModelTransform.get_subset"]], "infos() (datumaro.components.transformer.modeltransform method)": [[236, "datumaro.components.transformer.ModelTransform.infos"]], "infos() (datumaro.components.transformer.transform method)": [[236, "datumaro.components.transformer.Transform.infos"]], "media_type() (datumaro.components.transformer.transform method)": [[236, "datumaro.components.transformer.Transform.media_type"]], "subsets() (datumaro.components.transformer.transform method)": [[236, "datumaro.components.transformer.Transform.subsets"]], "transform_item() (datumaro.components.transformer.itemtransform method)": [[236, "datumaro.components.transformer.ItemTransform.transform_item"]], "transform_item() (datumaro.components.transformer.modeltransform method)": [[236, "datumaro.components.transformer.ModelTransform.transform_item"]], "wrap_item() (datumaro.components.transformer.transform static method)": [[236, "datumaro.components.transformer.Transform.wrap_item"]], "severity (class in datumaro.components.validator)": [[237, "datumaro.components.validator.Severity"]], "tasktype (class in datumaro.components.validator)": [[237, "datumaro.components.validator.TaskType"]], "validator (class in datumaro.components.validator)": [[237, "datumaro.components.validator.Validator"]], "classification (datumaro.components.validator.tasktype attribute)": [[237, "datumaro.components.validator.TaskType.classification"]], "compute_statistics() (datumaro.components.validator.validator method)": [[237, "datumaro.components.validator.Validator.compute_statistics"]], "datumaro.components.validator": [[237, "module-datumaro.components.validator"]], "detection (datumaro.components.validator.tasktype attribute)": [[237, "datumaro.components.validator.TaskType.detection"]], "error (datumaro.components.validator.severity attribute)": [[237, "datumaro.components.validator.Severity.error"]], "generate_reports() (datumaro.components.validator.validator method)": [[237, "datumaro.components.validator.Validator.generate_reports"]], "info (datumaro.components.validator.severity attribute)": [[237, "datumaro.components.validator.Severity.info"]], "segmentation (datumaro.components.validator.tasktype attribute)": [[237, "datumaro.components.validator.TaskType.segmentation"]], "tabular (datumaro.components.validator.tasktype attribute)": [[237, "datumaro.components.validator.TaskType.tabular"]], "validate() (datumaro.components.validator.validator method)": [[237, "datumaro.components.validator.Validator.validate"]], "warning (datumaro.components.validator.severity attribute)": [[237, "datumaro.components.validator.Severity.warning"]], "visualizer (class in datumaro.components.visualizer)": [[238, "datumaro.components.visualizer.Visualizer"]], "datumaro.components.visualizer": [[238, "module-datumaro.components.visualizer"]], "draw_only_image (datumaro.components.visualizer.visualizer property)": [[238, "datumaro.components.visualizer.Visualizer.draw_only_image"]], "get_random_items() (datumaro.components.visualizer.visualizer method)": [[238, "datumaro.components.visualizer.Visualizer.get_random_items"]], "vis_gallery() (datumaro.components.visualizer.visualizer method)": [[238, "datumaro.components.visualizer.Visualizer.vis_gallery"]], "vis_one_sample() (datumaro.components.visualizer.visualizer method)": [[238, "datumaro.components.visualizer.Visualizer.vis_one_sample"]], "datumaro.errors": [[239, "module-datumaro.errors"]], "datumaro.ops": [[240, "module-datumaro.ops"]], "datumaro.plugins": [[241, "module-datumaro.plugins"]], "datumaro.plugins.accuracy_checker_plugin": [[242, "module-datumaro.plugins.accuracy_checker_plugin"]], "datumaro.plugins.accuracy_checker_plugin.details": [[243, "module-datumaro.plugins.accuracy_checker_plugin.details"]], "bboxoverlaps2d (class in datumaro.plugins.anchor_generator)": [[244, "datumaro.plugins.anchor_generator.BboxOverlaps2D"]], "dataawareanchorgenerator (class in datumaro.plugins.anchor_generator)": [[244, "datumaro.plugins.anchor_generator.DataAwareAnchorGenerator"]], "datumaro.plugins.anchor_generator": [[244, "module-datumaro.plugins.anchor_generator"]], "get_anchors() (datumaro.plugins.anchor_generator.dataawareanchorgenerator method)": [[244, "datumaro.plugins.anchor_generator.DataAwareAnchorGenerator.get_anchors"]], "get_loss() (datumaro.plugins.anchor_generator.dataawareanchorgenerator method)": [[244, "datumaro.plugins.anchor_generator.DataAwareAnchorGenerator.get_loss"]], "get_shifts() (datumaro.plugins.anchor_generator.dataawareanchorgenerator method)": [[244, "datumaro.plugins.anchor_generator.DataAwareAnchorGenerator.get_shifts"]], "initialize() (datumaro.plugins.anchor_generator.dataawareanchorgenerator method)": [[244, "datumaro.plugins.anchor_generator.DataAwareAnchorGenerator.initialize"]], "optimize() (datumaro.plugins.anchor_generator.dataawareanchorgenerator method)": [[244, "datumaro.plugins.anchor_generator.DataAwareAnchorGenerator.optimize"]], "all_warnings (datumaro.plugins.configurable_validator.configurablevalidator attribute)": [[245, "datumaro.plugins.configurable_validator.ConfigurableValidator.ALL_WARNINGS"]], "clsstats (class in datumaro.plugins.configurable_validator)": [[245, "datumaro.plugins.configurable_validator.ClsStats"]], "clsstatsdata (class in datumaro.plugins.configurable_validator)": [[245, "datumaro.plugins.configurable_validator.ClsStatsData"]], "configurablevalidator (class in datumaro.plugins.configurable_validator)": [[245, "datumaro.plugins.configurable_validator.ConfigurableValidator"]], "default_dominance_ratio_thr (datumaro.plugins.configurable_validator.configurablevalidator attribute)": [[245, "datumaro.plugins.configurable_validator.ConfigurableValidator.DEFAULT_DOMINANCE_RATIO_THR"]], "default_far_from_mean_thr (datumaro.plugins.configurable_validator.configurablevalidator attribute)": [[245, "datumaro.plugins.configurable_validator.ConfigurableValidator.DEFAULT_FAR_FROM_MEAN_THR"]], "default_few_samples_thr (datumaro.plugins.configurable_validator.configurablevalidator attribute)": [[245, "datumaro.plugins.configurable_validator.ConfigurableValidator.DEFAULT_FEW_SAMPLES_THR"]], "default_imbalance_ratio_thr (datumaro.plugins.configurable_validator.configurablevalidator attribute)": [[245, "datumaro.plugins.configurable_validator.ConfigurableValidator.DEFAULT_IMBALANCE_RATIO_THR"]], "default_topk_bins (datumaro.plugins.configurable_validator.configurablevalidator attribute)": [[245, "datumaro.plugins.configurable_validator.ConfigurableValidator.DEFAULT_TOPK_BINS"]], "detstats (class in datumaro.plugins.configurable_validator)": [[245, "datumaro.plugins.configurable_validator.DetStats"]], "detstatsdata (class in datumaro.plugins.configurable_validator)": [[245, "datumaro.plugins.configurable_validator.DetStatsData"]], "segstats (class in datumaro.plugins.configurable_validator)": [[245, "datumaro.plugins.configurable_validator.SegStats"]], "segstatsdata (class in datumaro.plugins.configurable_validator)": [[245, "datumaro.plugins.configurable_validator.SegStatsData"]], "statsdata (class in datumaro.plugins.configurable_validator)": [[245, "datumaro.plugins.configurable_validator.StatsData"]], "tblstats (class in datumaro.plugins.configurable_validator)": [[245, "datumaro.plugins.configurable_validator.TblStats"]], "tblstatsdata (class in datumaro.plugins.configurable_validator)": [[245, "datumaro.plugins.configurable_validator.TblStatsData"]], "broken_annotations (datumaro.plugins.configurable_validator.tblstatsdata attribute)": [[245, "datumaro.plugins.configurable_validator.TblStatsData.broken_annotations"]], "build_cmdline_parser() (datumaro.plugins.configurable_validator.configurablevalidator class method)": [[245, "datumaro.plugins.configurable_validator.ConfigurableValidator.build_cmdline_parser"]], "categories (datumaro.plugins.configurable_validator.statsdata attribute)": [[245, "datumaro.plugins.configurable_validator.StatsData.categories"]], "categories (datumaro.plugins.configurable_validator.tblstatsdata attribute)": [[245, "datumaro.plugins.configurable_validator.TblStatsData.categories"]], "compute_statistics() (datumaro.plugins.configurable_validator.configurablevalidator method)": [[245, "datumaro.plugins.configurable_validator.ConfigurableValidator.compute_statistics"]], "datumaro.plugins.configurable_validator": [[245, "module-datumaro.plugins.configurable_validator"]], "empty_caption (datumaro.plugins.configurable_validator.tblstatsdata attribute)": [[245, "datumaro.plugins.configurable_validator.TblStatsData.empty_caption"]], "empty_label (datumaro.plugins.configurable_validator.tblstatsdata attribute)": [[245, "datumaro.plugins.configurable_validator.TblStatsData.empty_label"]], "generate_reports() (datumaro.plugins.configurable_validator.configurablevalidator method)": [[245, "datumaro.plugins.configurable_validator.ConfigurableValidator.generate_reports"]], "invalid_value (datumaro.plugins.configurable_validator.detstatsdata attribute)": [[245, "datumaro.plugins.configurable_validator.DetStatsData.invalid_value"]], "invalid_value (datumaro.plugins.configurable_validator.segstatsdata attribute)": [[245, "datumaro.plugins.configurable_validator.SegStatsData.invalid_value"]], "missing_annotations (datumaro.plugins.configurable_validator.tblstatsdata attribute)": [[245, "datumaro.plugins.configurable_validator.TblStatsData.missing_annotations"]], "missing_attribute (datumaro.plugins.configurable_validator.statsdata attribute)": [[245, "datumaro.plugins.configurable_validator.StatsData.missing_attribute"]], "missing_label (datumaro.plugins.configurable_validator.statsdata attribute)": [[245, "datumaro.plugins.configurable_validator.StatsData.missing_label"]], "multiple_label (datumaro.plugins.configurable_validator.clsstatsdata attribute)": [[245, "datumaro.plugins.configurable_validator.ClsStatsData.multiple_label"]], "negative_length (datumaro.plugins.configurable_validator.detstatsdata attribute)": [[245, "datumaro.plugins.configurable_validator.DetStatsData.negative_length"]], "undefined_attribute (datumaro.plugins.configurable_validator.statsdata attribute)": [[245, "datumaro.plugins.configurable_validator.StatsData.undefined_attribute"]], "undefined_label (datumaro.plugins.configurable_validator.statsdata attribute)": [[245, "datumaro.plugins.configurable_validator.StatsData.undefined_label"]], "datumaro.plugins.data_formats": [[246, "module-datumaro.plugins.data_formats"]], "ade20k2017base (class in datumaro.plugins.data_formats.ade20k2017)": [[247, "datumaro.plugins.data_formats.ade20k2017.Ade20k2017Base"]], "ade20k2017importer (class in datumaro.plugins.data_formats.ade20k2017)": [[247, "datumaro.plugins.data_formats.ade20k2017.Ade20k2017Importer"]], "ade20k2017path (class in datumaro.plugins.data_formats.ade20k2017)": [[247, "datumaro.plugins.data_formats.ade20k2017.Ade20k2017Path"]], "mask_pattern (datumaro.plugins.data_formats.ade20k2017.ade20k2017path attribute)": [[247, "datumaro.plugins.data_formats.ade20k2017.Ade20k2017Path.MASK_PATTERN"]], "categories() (datumaro.plugins.data_formats.ade20k2017.ade20k2017base method)": [[247, "datumaro.plugins.data_formats.ade20k2017.Ade20k2017Base.categories"]], "datumaro.plugins.data_formats.ade20k2017": [[247, "module-datumaro.plugins.data_formats.ade20k2017"]], "detect() (datumaro.plugins.data_formats.ade20k2017.ade20k2017importer class method)": [[247, "datumaro.plugins.data_formats.ade20k2017.Ade20k2017Importer.detect"]], "find_sources() (datumaro.plugins.data_formats.ade20k2017.ade20k2017importer class method)": [[247, "datumaro.plugins.data_formats.ade20k2017.Ade20k2017Importer.find_sources"]], "get_file_extensions() (datumaro.plugins.data_formats.ade20k2017.ade20k2017importer class method)": [[247, "datumaro.plugins.data_formats.ade20k2017.Ade20k2017Importer.get_file_extensions"]], "ade20k2020base (class in datumaro.plugins.data_formats.ade20k2020)": [[248, "datumaro.plugins.data_formats.ade20k2020.Ade20k2020Base"]], "ade20k2020importer (class in datumaro.plugins.data_formats.ade20k2020)": [[248, "datumaro.plugins.data_formats.ade20k2020.Ade20k2020Importer"]], "ade20k2020path (class in datumaro.plugins.data_formats.ade20k2020)": [[248, "datumaro.plugins.data_formats.ade20k2020.Ade20k2020Path"]], "mask_pattern (datumaro.plugins.data_formats.ade20k2020.ade20k2020path attribute)": [[248, "datumaro.plugins.data_formats.ade20k2020.Ade20k2020Path.MASK_PATTERN"]], "categories() (datumaro.plugins.data_formats.ade20k2020.ade20k2020base method)": [[248, "datumaro.plugins.data_formats.ade20k2020.Ade20k2020Base.categories"]], "datumaro.plugins.data_formats.ade20k2020": [[248, "module-datumaro.plugins.data_formats.ade20k2020"]], "detect() (datumaro.plugins.data_formats.ade20k2020.ade20k2020importer class method)": [[248, "datumaro.plugins.data_formats.ade20k2020.Ade20k2020Importer.detect"]], "find_sources() (datumaro.plugins.data_formats.ade20k2020.ade20k2020importer class method)": [[248, "datumaro.plugins.data_formats.ade20k2020.Ade20k2020Importer.find_sources"]], "get_file_extensions() (datumaro.plugins.data_formats.ade20k2020.ade20k2020importer class method)": [[248, "datumaro.plugins.data_formats.ade20k2020.Ade20k2020Importer.get_file_extensions"]], "available_image_exts (datumaro.plugins.data_formats.arrow.arrowexporter attribute)": [[249, "datumaro.plugins.data_formats.arrow.ArrowExporter.AVAILABLE_IMAGE_EXTS"]], "arrowbase (class in datumaro.plugins.data_formats.arrow)": [[249, "datumaro.plugins.data_formats.arrow.ArrowBase"]], "arrowexporter (class in datumaro.plugins.data_formats.arrow)": [[249, "datumaro.plugins.data_formats.arrow.ArrowExporter"]], "arrowimporter (class in datumaro.plugins.data_formats.arrow)": [[249, "datumaro.plugins.data_formats.arrow.ArrowImporter"]], "default_image_ext (datumaro.plugins.data_formats.arrow.arrowexporter attribute)": [[249, "datumaro.plugins.data_formats.arrow.ArrowExporter.DEFAULT_IMAGE_EXT"]], "build_cmdline_parser() (datumaro.plugins.data_formats.arrow.arrowexporter class method)": [[249, "datumaro.plugins.data_formats.arrow.ArrowExporter.build_cmdline_parser"]], "categories() (datumaro.plugins.data_formats.arrow.arrowbase method)": [[249, "datumaro.plugins.data_formats.arrow.ArrowBase.categories"]], "datumaro.plugins.data_formats.arrow": [[249, "module-datumaro.plugins.data_formats.arrow"]], "detect() (datumaro.plugins.data_formats.arrow.arrowimporter class method)": [[249, "datumaro.plugins.data_formats.arrow.ArrowImporter.detect"]], "find_sources() (datumaro.plugins.data_formats.arrow.arrowimporter class method)": [[249, "datumaro.plugins.data_formats.arrow.ArrowImporter.find_sources"]], "find_sources_with_params() (datumaro.plugins.data_formats.arrow.arrowimporter class method)": [[249, "datumaro.plugins.data_formats.arrow.ArrowImporter.find_sources_with_params"]], "get() (datumaro.plugins.data_formats.arrow.arrowbase method)": [[249, "datumaro.plugins.data_formats.arrow.ArrowBase.get"]], "get_file_extensions() (datumaro.plugins.data_formats.arrow.arrowimporter class method)": [[249, "datumaro.plugins.data_formats.arrow.ArrowImporter.get_file_extensions"]], "get_subset() (datumaro.plugins.data_formats.arrow.arrowbase method)": [[249, "datumaro.plugins.data_formats.arrow.ArrowBase.get_subset"]], "infos() (datumaro.plugins.data_formats.arrow.arrowbase method)": [[249, "datumaro.plugins.data_formats.arrow.ArrowBase.infos"]], "lookup (datumaro.plugins.data_formats.arrow.arrowbase property)": [[249, "datumaro.plugins.data_formats.arrow.ArrowBase.lookup"]], "patch() (datumaro.plugins.data_formats.arrow.arrowexporter class method)": [[249, "datumaro.plugins.data_formats.arrow.ArrowExporter.patch"]], "subsets() (datumaro.plugins.data_formats.arrow.arrowbase method)": [[249, "datumaro.plugins.data_formats.arrow.ArrowBase.subsets"]], "arrowbase (class in datumaro.plugins.data_formats.arrow.base)": [[250, "datumaro.plugins.data_formats.arrow.base.ArrowBase"]], "arrowsubsetbase (class in datumaro.plugins.data_formats.arrow.base)": [[250, "datumaro.plugins.data_formats.arrow.base.ArrowSubsetBase"]], "metadata (class in datumaro.plugins.data_formats.arrow.base)": [[250, "datumaro.plugins.data_formats.arrow.base.Metadata"]], "categories (datumaro.plugins.data_formats.arrow.base.metadata attribute)": [[250, "datumaro.plugins.data_formats.arrow.base.Metadata.categories"]], "categories() (datumaro.plugins.data_formats.arrow.base.arrowbase method)": [[250, "datumaro.plugins.data_formats.arrow.base.ArrowBase.categories"]], "datumaro.plugins.data_formats.arrow.base": [[250, "module-datumaro.plugins.data_formats.arrow.base"]], "get() (datumaro.plugins.data_formats.arrow.base.arrowbase method)": [[250, "datumaro.plugins.data_formats.arrow.base.ArrowBase.get"]], "get() (datumaro.plugins.data_formats.arrow.base.arrowsubsetbase method)": [[250, "datumaro.plugins.data_formats.arrow.base.ArrowSubsetBase.get"]], "get_subset() (datumaro.plugins.data_formats.arrow.base.arrowbase method)": [[250, "datumaro.plugins.data_formats.arrow.base.ArrowBase.get_subset"]], "infos (datumaro.plugins.data_formats.arrow.base.metadata attribute)": [[250, "datumaro.plugins.data_formats.arrow.base.Metadata.infos"]], "infos() (datumaro.plugins.data_formats.arrow.base.arrowbase method)": [[250, "datumaro.plugins.data_formats.arrow.base.ArrowBase.infos"]], "lookup (datumaro.plugins.data_formats.arrow.base.arrowbase property)": [[250, "datumaro.plugins.data_formats.arrow.base.ArrowBase.lookup"]], "media_type (datumaro.plugins.data_formats.arrow.base.metadata attribute)": [[250, "datumaro.plugins.data_formats.arrow.base.Metadata.media_type"]], "subsets() (datumaro.plugins.data_formats.arrow.base.arrowbase method)": [[250, "datumaro.plugins.data_formats.arrow.base.ArrowBase.subsets"]], "available_image_exts (datumaro.plugins.data_formats.arrow.exporter.arrowexporter attribute)": [[251, "datumaro.plugins.data_formats.arrow.exporter.ArrowExporter.AVAILABLE_IMAGE_EXTS"]], "arrowexporter (class in datumaro.plugins.data_formats.arrow.exporter)": [[251, "datumaro.plugins.data_formats.arrow.exporter.ArrowExporter"]], "default_image_ext (datumaro.plugins.data_formats.arrow.exporter.arrowexporter attribute)": [[251, "datumaro.plugins.data_formats.arrow.exporter.ArrowExporter.DEFAULT_IMAGE_EXT"]], "build_cmdline_parser() (datumaro.plugins.data_formats.arrow.exporter.arrowexporter class method)": [[251, "datumaro.plugins.data_formats.arrow.exporter.ArrowExporter.build_cmdline_parser"]], "datumaro.plugins.data_formats.arrow.exporter": [[251, "module-datumaro.plugins.data_formats.arrow.exporter"]], "patch() (datumaro.plugins.data_formats.arrow.exporter.arrowexporter class method)": [[251, "datumaro.plugins.data_formats.arrow.exporter.ArrowExporter.patch"]], "datumaroarrow (class in datumaro.plugins.data_formats.arrow.format)": [[252, "datumaro.plugins.data_formats.arrow.format.DatumaroArrow"]], "id_field (datumaro.plugins.data_formats.arrow.format.datumaroarrow attribute)": [[252, "datumaro.plugins.data_formats.arrow.format.DatumaroArrow.ID_FIELD"]], "image_field (datumaro.plugins.data_formats.arrow.format.datumaroarrow attribute)": [[252, "datumaro.plugins.data_formats.arrow.format.DatumaroArrow.IMAGE_FIELD"]], "media_field (datumaro.plugins.data_formats.arrow.format.datumaroarrow attribute)": [[252, "datumaro.plugins.data_formats.arrow.format.DatumaroArrow.MEDIA_FIELD"]], "mp_timeout (datumaro.plugins.data_formats.arrow.format.datumaroarrow attribute)": [[252, "datumaro.plugins.data_formats.arrow.format.DatumaroArrow.MP_TIMEOUT"]], "point_cloud_field (datumaro.plugins.data_formats.arrow.format.datumaroarrow attribute)": [[252, "datumaro.plugins.data_formats.arrow.format.DatumaroArrow.POINT_CLOUD_FIELD"]], "schema (datumaro.plugins.data_formats.arrow.format.datumaroarrow attribute)": [[252, "datumaro.plugins.data_formats.arrow.format.DatumaroArrow.SCHEMA"]], "signature (datumaro.plugins.data_formats.arrow.format.datumaroarrow attribute)": [[252, "datumaro.plugins.data_formats.arrow.format.DatumaroArrow.SIGNATURE"]], "subset_field (datumaro.plugins.data_formats.arrow.format.datumaroarrow attribute)": [[252, "datumaro.plugins.data_formats.arrow.format.DatumaroArrow.SUBSET_FIELD"]], "version (datumaro.plugins.data_formats.arrow.format.datumaroarrow attribute)": [[252, "datumaro.plugins.data_formats.arrow.format.DatumaroArrow.VERSION"]], "check_schema() (datumaro.plugins.data_formats.arrow.format.datumaroarrow class method)": [[252, "datumaro.plugins.data_formats.arrow.format.DatumaroArrow.check_schema"]], "check_signature() (datumaro.plugins.data_formats.arrow.format.datumaroarrow class method)": [[252, "datumaro.plugins.data_formats.arrow.format.DatumaroArrow.check_signature"]], "check_version() (datumaro.plugins.data_formats.arrow.format.datumaroarrow class method)": [[252, "datumaro.plugins.data_formats.arrow.format.DatumaroArrow.check_version"]], "create_schema_with_metadata() (datumaro.plugins.data_formats.arrow.format.datumaroarrow class method)": [[252, "datumaro.plugins.data_formats.arrow.format.DatumaroArrow.create_schema_with_metadata"]], "datumaro.plugins.data_formats.arrow.format": [[252, "module-datumaro.plugins.data_formats.arrow.format"]], "arrowimporter (class in datumaro.plugins.data_formats.arrow.importer)": [[253, "datumaro.plugins.data_formats.arrow.importer.ArrowImporter"]], "detect_confidence (datumaro.plugins.data_formats.arrow.importer.importer attribute)": [[253, "datumaro.plugins.data_formats.arrow.importer.Importer.DETECT_CONFIDENCE"]], "datumaroarrow (class in datumaro.plugins.data_formats.arrow.importer)": [[253, "datumaro.plugins.data_formats.arrow.importer.DatumaroArrow"]], "extreme_low (datumaro.plugins.data_formats.arrow.importer.formatdetectionconfidence attribute)": [[253, "datumaro.plugins.data_formats.arrow.importer.FormatDetectionConfidence.EXTREME_LOW"]], "formatdetectionconfidence (class in datumaro.plugins.data_formats.arrow.importer)": [[253, "datumaro.plugins.data_formats.arrow.importer.FormatDetectionConfidence"]], "formatdetectioncontext (class in datumaro.plugins.data_formats.arrow.importer)": [[253, "datumaro.plugins.data_formats.arrow.importer.FormatDetectionContext"]], "id_field (datumaro.plugins.data_formats.arrow.importer.datumaroarrow attribute)": [[253, "datumaro.plugins.data_formats.arrow.importer.DatumaroArrow.ID_FIELD"]], "image_field (datumaro.plugins.data_formats.arrow.importer.datumaroarrow attribute)": [[253, "datumaro.plugins.data_formats.arrow.importer.DatumaroArrow.IMAGE_FIELD"]], "importer (class in datumaro.plugins.data_formats.arrow.importer)": [[253, "datumaro.plugins.data_formats.arrow.importer.Importer"]], "low (datumaro.plugins.data_formats.arrow.importer.formatdetectionconfidence attribute)": [[253, "datumaro.plugins.data_formats.arrow.importer.FormatDetectionConfidence.LOW"]], "media_field (datumaro.plugins.data_formats.arrow.importer.datumaroarrow attribute)": [[253, "datumaro.plugins.data_formats.arrow.importer.DatumaroArrow.MEDIA_FIELD"]], "medium (datumaro.plugins.data_formats.arrow.importer.formatdetectionconfidence attribute)": [[253, "datumaro.plugins.data_formats.arrow.importer.FormatDetectionConfidence.MEDIUM"]], "mp_timeout (datumaro.plugins.data_formats.arrow.importer.datumaroarrow attribute)": [[253, "datumaro.plugins.data_formats.arrow.importer.DatumaroArrow.MP_TIMEOUT"]], "none (datumaro.plugins.data_formats.arrow.importer.formatdetectionconfidence attribute)": [[253, "datumaro.plugins.data_formats.arrow.importer.FormatDetectionConfidence.NONE"]], "point_cloud_field (datumaro.plugins.data_formats.arrow.importer.datumaroarrow attribute)": [[253, "datumaro.plugins.data_formats.arrow.importer.DatumaroArrow.POINT_CLOUD_FIELD"]], "schema (datumaro.plugins.data_formats.arrow.importer.datumaroarrow attribute)": [[253, "datumaro.plugins.data_formats.arrow.importer.DatumaroArrow.SCHEMA"]], "signature (datumaro.plugins.data_formats.arrow.importer.datumaroarrow attribute)": [[253, "datumaro.plugins.data_formats.arrow.importer.DatumaroArrow.SIGNATURE"]], "subset_field (datumaro.plugins.data_formats.arrow.importer.datumaroarrow attribute)": [[253, "datumaro.plugins.data_formats.arrow.importer.DatumaroArrow.SUBSET_FIELD"]], "version (datumaro.plugins.data_formats.arrow.importer.datumaroarrow attribute)": [[253, "datumaro.plugins.data_formats.arrow.importer.DatumaroArrow.VERSION"]], "alternative() (datumaro.plugins.data_formats.arrow.importer.formatdetectioncontext method)": [[253, "datumaro.plugins.data_formats.arrow.importer.FormatDetectionContext.alternative"]], "can_stream (datumaro.plugins.data_formats.arrow.importer.importer property)": [[253, "datumaro.plugins.data_formats.arrow.importer.Importer.can_stream"]], "check_schema() (datumaro.plugins.data_formats.arrow.importer.datumaroarrow class method)": [[253, "datumaro.plugins.data_formats.arrow.importer.DatumaroArrow.check_schema"]], "check_signature() (datumaro.plugins.data_formats.arrow.importer.datumaroarrow class method)": [[253, "datumaro.plugins.data_formats.arrow.importer.DatumaroArrow.check_signature"]], "check_version() (datumaro.plugins.data_formats.arrow.importer.datumaroarrow class method)": [[253, "datumaro.plugins.data_formats.arrow.importer.DatumaroArrow.check_version"]], "create_schema_with_metadata() (datumaro.plugins.data_formats.arrow.importer.datumaroarrow class method)": [[253, "datumaro.plugins.data_formats.arrow.importer.DatumaroArrow.create_schema_with_metadata"]], "datumaro.plugins.data_formats.arrow.importer": [[253, "module-datumaro.plugins.data_formats.arrow.importer"]], "detect() (datumaro.plugins.data_formats.arrow.importer.arrowimporter class method)": [[253, "datumaro.plugins.data_formats.arrow.importer.ArrowImporter.detect"]], "detect() (datumaro.plugins.data_formats.arrow.importer.importer class method)": [[253, "datumaro.plugins.data_formats.arrow.importer.Importer.detect"]], "fail() (datumaro.plugins.data_formats.arrow.importer.formatdetectioncontext method)": [[253, "datumaro.plugins.data_formats.arrow.importer.FormatDetectionContext.fail"]], "find_sources() (datumaro.plugins.data_formats.arrow.importer.arrowimporter class method)": [[253, "datumaro.plugins.data_formats.arrow.importer.ArrowImporter.find_sources"]], "find_sources() (datumaro.plugins.data_formats.arrow.importer.importer class method)": [[253, "datumaro.plugins.data_formats.arrow.importer.Importer.find_sources"]], "find_sources_with_params() (datumaro.plugins.data_formats.arrow.importer.arrowimporter class method)": [[253, "datumaro.plugins.data_formats.arrow.importer.ArrowImporter.find_sources_with_params"]], "find_sources_with_params() (datumaro.plugins.data_formats.arrow.importer.importer class method)": [[253, "datumaro.plugins.data_formats.arrow.importer.Importer.find_sources_with_params"]], "get_extractor_merger() (datumaro.plugins.data_formats.arrow.importer.importer method)": [[253, "datumaro.plugins.data_formats.arrow.importer.Importer.get_extractor_merger"]], "get_file_extensions() (datumaro.plugins.data_formats.arrow.importer.arrowimporter class method)": [[253, "datumaro.plugins.data_formats.arrow.importer.ArrowImporter.get_file_extensions"]], "get_file_extensions() (datumaro.plugins.data_formats.arrow.importer.importer class method)": [[253, "datumaro.plugins.data_formats.arrow.importer.Importer.get_file_extensions"]], "probe_text_file() (datumaro.plugins.data_formats.arrow.importer.formatdetectioncontext method)": [[253, "datumaro.plugins.data_formats.arrow.importer.FormatDetectionContext.probe_text_file"]], "raise_unsupported() (datumaro.plugins.data_formats.arrow.importer.formatdetectioncontext method)": [[253, "datumaro.plugins.data_formats.arrow.importer.FormatDetectionContext.raise_unsupported"]], "require_any() (datumaro.plugins.data_formats.arrow.importer.formatdetectioncontext method)": [[253, "datumaro.plugins.data_formats.arrow.importer.FormatDetectionContext.require_any"]], "require_file() (datumaro.plugins.data_formats.arrow.importer.formatdetectioncontext method)": [[253, "datumaro.plugins.data_formats.arrow.importer.FormatDetectionContext.require_file"]], "require_files() (datumaro.plugins.data_formats.arrow.importer.formatdetectioncontext method)": [[253, "datumaro.plugins.data_formats.arrow.importer.FormatDetectionContext.require_files"]], "require_files_iter() (datumaro.plugins.data_formats.arrow.importer.formatdetectioncontext method)": [[253, "datumaro.plugins.data_formats.arrow.importer.FormatDetectionContext.require_files_iter"]], "root_path (datumaro.plugins.data_formats.arrow.importer.formatdetectioncontext property)": [[253, "datumaro.plugins.data_formats.arrow.importer.FormatDetectionContext.root_path"]], "available_schemes (datumaro.plugins.data_formats.arrow.mapper.imagemapper attribute)": [[254, "datumaro.plugins.data_formats.arrow.mapper.ImageMapper.AVAILABLE_SCHEMES"]], "annotationlistmapper (class in datumaro.plugins.data_formats.arrow.mapper)": [[254, "datumaro.plugins.data_formats.arrow.mapper.AnnotationListMapper"]], "b64_prefix (datumaro.plugins.data_formats.arrow.mapper.pointcloudmapper attribute)": [[254, "datumaro.plugins.data_formats.arrow.mapper.PointCloudMapper.B64_PREFIX"]], "byte_image (datumaro.plugins.data_formats.arrow.mapper.mediatype attribute)": [[254, "datumaro.plugins.data_formats.arrow.mapper.MediaType.BYTE_IMAGE"]], "datasetitem (class in datumaro.plugins.data_formats.arrow.mapper)": [[254, "datumaro.plugins.data_formats.arrow.mapper.DatasetItem"]], "datasetitemmapper (class in datumaro.plugins.data_formats.arrow.mapper)": [[254, "datumaro.plugins.data_formats.arrow.mapper.DatasetItemMapper"]], "dictmapper (class in datumaro.plugins.data_formats.arrow.mapper)": [[254, "datumaro.plugins.data_formats.arrow.mapper.DictMapper"]], "image (datumaro.plugins.data_formats.arrow.mapper.mediatype attribute)": [[254, "datumaro.plugins.data_formats.arrow.mapper.MediaType.IMAGE"]], "image (class in datumaro.plugins.data_formats.arrow.mapper)": [[254, "datumaro.plugins.data_formats.arrow.mapper.Image"]], "imagemapper (class in datumaro.plugins.data_formats.arrow.mapper)": [[254, "datumaro.plugins.data_formats.arrow.mapper.ImageMapper"]], "magic_path (datumaro.plugins.data_formats.arrow.mapper.mediaelementmapper attribute)": [[254, "datumaro.plugins.data_formats.arrow.mapper.MediaElementMapper.MAGIC_PATH"]], "media_element (datumaro.plugins.data_formats.arrow.mapper.mediatype attribute)": [[254, "datumaro.plugins.data_formats.arrow.mapper.MediaType.MEDIA_ELEMENT"]], "media_type (datumaro.plugins.data_formats.arrow.mapper.imagemapper attribute)": [[254, "datumaro.plugins.data_formats.arrow.mapper.ImageMapper.MEDIA_TYPE"]], "media_type (datumaro.plugins.data_formats.arrow.mapper.mediaelementmapper attribute)": [[254, "datumaro.plugins.data_formats.arrow.mapper.MediaElementMapper.MEDIA_TYPE"]], "media_type (datumaro.plugins.data_formats.arrow.mapper.pointcloudmapper attribute)": [[254, "datumaro.plugins.data_formats.arrow.mapper.PointCloudMapper.MEDIA_TYPE"]], "mosaic_image (datumaro.plugins.data_formats.arrow.mapper.mediatype attribute)": [[254, "datumaro.plugins.data_formats.arrow.mapper.MediaType.MOSAIC_IMAGE"]], "multiframe_image (datumaro.plugins.data_formats.arrow.mapper.mediatype attribute)": [[254, "datumaro.plugins.data_formats.arrow.mapper.MediaType.MULTIFRAME_IMAGE"]], "mapper (class in datumaro.plugins.data_formats.arrow.mapper)": [[254, "datumaro.plugins.data_formats.arrow.mapper.Mapper"]], "mediaelement (class in datumaro.plugins.data_formats.arrow.mapper)": [[254, "datumaro.plugins.data_formats.arrow.mapper.MediaElement"]], "mediaelementmapper (class in datumaro.plugins.data_formats.arrow.mapper)": [[254, "datumaro.plugins.data_formats.arrow.mapper.MediaElementMapper"]], "mediamapper (class in datumaro.plugins.data_formats.arrow.mapper)": [[254, "datumaro.plugins.data_formats.arrow.mapper.MediaMapper"]], "mediatype (class in datumaro.plugins.data_formats.arrow.mapper)": [[254, "datumaro.plugins.data_formats.arrow.mapper.MediaType"]], "none (datumaro.plugins.data_formats.arrow.mapper.mediatype attribute)": [[254, "datumaro.plugins.data_formats.arrow.mapper.MediaType.NONE"]], "point_cloud (datumaro.plugins.data_formats.arrow.mapper.mediatype attribute)": [[254, "datumaro.plugins.data_formats.arrow.mapper.MediaType.POINT_CLOUD"]], "pointcloud (class in datumaro.plugins.data_formats.arrow.mapper)": [[254, "datumaro.plugins.data_formats.arrow.mapper.PointCloud"]], "pointcloudmapper (class in datumaro.plugins.data_formats.arrow.mapper)": [[254, "datumaro.plugins.data_formats.arrow.mapper.PointCloudMapper"]], "roi_image (datumaro.plugins.data_formats.arrow.mapper.mediatype attribute)": [[254, "datumaro.plugins.data_formats.arrow.mapper.MediaType.ROI_IMAGE"]], "table_row (datumaro.plugins.data_formats.arrow.mapper.mediatype attribute)": [[254, "datumaro.plugins.data_formats.arrow.mapper.MediaType.TABLE_ROW"]], "video (datumaro.plugins.data_formats.arrow.mapper.mediatype attribute)": [[254, "datumaro.plugins.data_formats.arrow.mapper.MediaType.VIDEO"]], "video_frame (datumaro.plugins.data_formats.arrow.mapper.mediatype attribute)": [[254, "datumaro.plugins.data_formats.arrow.mapper.MediaType.VIDEO_FRAME"]], "annotations (datumaro.plugins.data_formats.arrow.mapper.datasetitem attribute)": [[254, "datumaro.plugins.data_formats.arrow.mapper.DatasetItem.annotations"]], "as_dict() (datumaro.plugins.data_formats.arrow.mapper.mediaelement method)": [[254, "datumaro.plugins.data_formats.arrow.mapper.MediaElement.as_dict"]], "attributes (datumaro.plugins.data_formats.arrow.mapper.datasetitem attribute)": [[254, "datumaro.plugins.data_formats.arrow.mapper.DatasetItem.attributes"]], "backward() (datumaro.plugins.data_formats.arrow.mapper.annotationlistmapper class method)": [[254, "datumaro.plugins.data_formats.arrow.mapper.AnnotationListMapper.backward"]], "backward() (datumaro.plugins.data_formats.arrow.mapper.datasetitemmapper static method)": [[254, "datumaro.plugins.data_formats.arrow.mapper.DatasetItemMapper.backward"]], "backward() (datumaro.plugins.data_formats.arrow.mapper.dictmapper static method)": [[254, "datumaro.plugins.data_formats.arrow.mapper.DictMapper.backward"]], "backward() (datumaro.plugins.data_formats.arrow.mapper.imagemapper class method)": [[254, "datumaro.plugins.data_formats.arrow.mapper.ImageMapper.backward"]], "backward() (datumaro.plugins.data_formats.arrow.mapper.mapper static method)": [[254, "datumaro.plugins.data_formats.arrow.mapper.Mapper.backward"]], "backward() (datumaro.plugins.data_formats.arrow.mapper.mediaelementmapper class method)": [[254, "datumaro.plugins.data_formats.arrow.mapper.MediaElementMapper.backward"]], "backward() (datumaro.plugins.data_formats.arrow.mapper.mediamapper class method)": [[254, "datumaro.plugins.data_formats.arrow.mapper.MediaMapper.backward"]], "backward() (datumaro.plugins.data_formats.arrow.mapper.pointcloudmapper class method)": [[254, "datumaro.plugins.data_formats.arrow.mapper.PointCloudMapper.backward"]], "backward_extra_image() (datumaro.plugins.data_formats.arrow.mapper.imagemapper class method)": [[254, "datumaro.plugins.data_formats.arrow.mapper.ImageMapper.backward_extra_image"]], "backward_map (datumaro.plugins.data_formats.arrow.mapper.annotationlistmapper attribute)": [[254, "datumaro.plugins.data_formats.arrow.mapper.AnnotationListMapper.backward_map"]], "bytes (datumaro.plugins.data_formats.arrow.mapper.mediaelement property)": [[254, "datumaro.plugins.data_formats.arrow.mapper.MediaElement.bytes"]], "data (datumaro.plugins.data_formats.arrow.mapper.mediaelement property)": [[254, "datumaro.plugins.data_formats.arrow.mapper.MediaElement.data"]], "datumaro.plugins.data_formats.arrow.mapper": [[254, "module-datumaro.plugins.data_formats.arrow.mapper"]], "decode() (datumaro.plugins.data_formats.arrow.mapper.imagemapper class method)": [[254, "datumaro.plugins.data_formats.arrow.mapper.ImageMapper.decode"]], "decode_image() (in module datumaro.plugins.data_formats.arrow.mapper)": [[254, "datumaro.plugins.data_formats.arrow.mapper.decode_image"]], "encode() (datumaro.plugins.data_formats.arrow.mapper.imagemapper class method)": [[254, "datumaro.plugins.data_formats.arrow.mapper.ImageMapper.encode"]], "encode_image() (in module datumaro.plugins.data_formats.arrow.mapper)": [[254, "datumaro.plugins.data_formats.arrow.mapper.encode_image"]], "ext (datumaro.plugins.data_formats.arrow.mapper.image property)": [[254, "datumaro.plugins.data_formats.arrow.mapper.Image.ext"]], "extra_images (datumaro.plugins.data_formats.arrow.mapper.pointcloud property)": [[254, "datumaro.plugins.data_formats.arrow.mapper.PointCloud.extra_images"]], "forward() (datumaro.plugins.data_formats.arrow.mapper.annotationlistmapper class method)": [[254, "datumaro.plugins.data_formats.arrow.mapper.AnnotationListMapper.forward"]], "forward() (datumaro.plugins.data_formats.arrow.mapper.datasetitemmapper static method)": [[254, "datumaro.plugins.data_formats.arrow.mapper.DatasetItemMapper.forward"]], "forward() (datumaro.plugins.data_formats.arrow.mapper.dictmapper static method)": [[254, "datumaro.plugins.data_formats.arrow.mapper.DictMapper.forward"]], "forward() (datumaro.plugins.data_formats.arrow.mapper.imagemapper class method)": [[254, "datumaro.plugins.data_formats.arrow.mapper.ImageMapper.forward"]], "forward() (datumaro.plugins.data_formats.arrow.mapper.mapper static method)": [[254, "datumaro.plugins.data_formats.arrow.mapper.Mapper.forward"]], "forward() (datumaro.plugins.data_formats.arrow.mapper.mediaelementmapper class method)": [[254, "datumaro.plugins.data_formats.arrow.mapper.MediaElementMapper.forward"]], "forward() (datumaro.plugins.data_formats.arrow.mapper.mediamapper class method)": [[254, "datumaro.plugins.data_formats.arrow.mapper.MediaMapper.forward"]], "forward() (datumaro.plugins.data_formats.arrow.mapper.pointcloudmapper class method)": [[254, "datumaro.plugins.data_formats.arrow.mapper.PointCloudMapper.forward"]], "from_bytes() (datumaro.plugins.data_formats.arrow.mapper.image class method)": [[254, "datumaro.plugins.data_formats.arrow.mapper.Image.from_bytes"]], "from_bytes() (datumaro.plugins.data_formats.arrow.mapper.pointcloud class method)": [[254, "datumaro.plugins.data_formats.arrow.mapper.PointCloud.from_bytes"]], "from_file() (datumaro.plugins.data_formats.arrow.mapper.image class method)": [[254, "datumaro.plugins.data_formats.arrow.mapper.Image.from_file"]], "from_file() (datumaro.plugins.data_formats.arrow.mapper.pointcloud class method)": [[254, "datumaro.plugins.data_formats.arrow.mapper.PointCloud.from_file"]], "from_numpy() (datumaro.plugins.data_formats.arrow.mapper.image class method)": [[254, "datumaro.plugins.data_formats.arrow.mapper.Image.from_numpy"]], "from_self() (datumaro.plugins.data_formats.arrow.mapper.mediaelement method)": [[254, "datumaro.plugins.data_formats.arrow.mapper.MediaElement.from_self"]], "has_data (datumaro.plugins.data_formats.arrow.mapper.mediaelement property)": [[254, "datumaro.plugins.data_formats.arrow.mapper.MediaElement.has_data"]], "has_size (datumaro.plugins.data_formats.arrow.mapper.image property)": [[254, "datumaro.plugins.data_formats.arrow.mapper.Image.has_size"]], "id (datumaro.plugins.data_formats.arrow.mapper.datasetitem attribute)": [[254, "datumaro.plugins.data_formats.arrow.mapper.DatasetItem.id"]], "is_encrypted (datumaro.plugins.data_formats.arrow.mapper.mediaelement property)": [[254, "datumaro.plugins.data_formats.arrow.mapper.MediaElement.is_encrypted"]], "load_image() (in module datumaro.plugins.data_formats.arrow.mapper)": [[254, "datumaro.plugins.data_formats.arrow.mapper.load_image"]], "media (datumaro.plugins.data_formats.arrow.mapper.datasetitem attribute)": [[254, "datumaro.plugins.data_formats.arrow.mapper.DatasetItem.media"]], "media (datumaro.plugins.data_formats.arrow.mapper.mediatype property)": [[254, "datumaro.plugins.data_formats.arrow.mapper.MediaType.media"]], "media_as() (datumaro.plugins.data_formats.arrow.mapper.datasetitem method)": [[254, "datumaro.plugins.data_formats.arrow.mapper.DatasetItem.media_as"]], "save() (datumaro.plugins.data_formats.arrow.mapper.mediaelement method)": [[254, "datumaro.plugins.data_formats.arrow.mapper.MediaElement.save"]], "set_crypter() (datumaro.plugins.data_formats.arrow.mapper.image method)": [[254, "datumaro.plugins.data_formats.arrow.mapper.Image.set_crypter"]], "set_crypter() (datumaro.plugins.data_formats.arrow.mapper.mediaelement method)": [[254, "datumaro.plugins.data_formats.arrow.mapper.MediaElement.set_crypter"]], "size (datumaro.plugins.data_formats.arrow.mapper.image property)": [[254, "datumaro.plugins.data_formats.arrow.mapper.Image.size"]], "subset (datumaro.plugins.data_formats.arrow.mapper.datasetitem attribute)": [[254, "datumaro.plugins.data_formats.arrow.mapper.DatasetItem.subset"]], "type (datumaro.plugins.data_formats.arrow.mapper.mediaelement property)": [[254, "datumaro.plugins.data_formats.arrow.mapper.MediaElement.type"]], "wrap() (datumaro.plugins.data_formats.arrow.mapper.datasetitem method)": [[254, "datumaro.plugins.data_formats.arrow.mapper.DatasetItem.wrap"]], "datasetitemmapper (class in datumaro.plugins.data_formats.arrow.mapper.dataset_item)": [[255, "datumaro.plugins.data_formats.arrow.mapper.dataset_item.DatasetItemMapper"]], "backward() (datumaro.plugins.data_formats.arrow.mapper.dataset_item.datasetitemmapper static method)": [[255, "datumaro.plugins.data_formats.arrow.mapper.dataset_item.DatasetItemMapper.backward"]], "datumaro.plugins.data_formats.arrow.mapper.dataset_item": [[255, "module-datumaro.plugins.data_formats.arrow.mapper.dataset_item"]], "forward() (datumaro.plugins.data_formats.arrow.mapper.dataset_item.datasetitemmapper static method)": [[255, "datumaro.plugins.data_formats.arrow.mapper.dataset_item.DatasetItemMapper.forward"]], "available_schemes (datumaro.plugins.data_formats.arrow.mapper.media.imagemapper attribute)": [[256, "datumaro.plugins.data_formats.arrow.mapper.media.ImageMapper.AVAILABLE_SCHEMES"]], "b64_prefix (datumaro.plugins.data_formats.arrow.mapper.media.pointcloudmapper attribute)": [[256, "datumaro.plugins.data_formats.arrow.mapper.media.PointCloudMapper.B64_PREFIX"]], "imagemapper (class in datumaro.plugins.data_formats.arrow.mapper.media)": [[256, "datumaro.plugins.data_formats.arrow.mapper.media.ImageMapper"]], "magic_path (datumaro.plugins.data_formats.arrow.mapper.media.mediaelementmapper attribute)": [[256, "datumaro.plugins.data_formats.arrow.mapper.media.MediaElementMapper.MAGIC_PATH"]], "media_type (datumaro.plugins.data_formats.arrow.mapper.media.imagemapper attribute)": [[256, "datumaro.plugins.data_formats.arrow.mapper.media.ImageMapper.MEDIA_TYPE"]], "media_type (datumaro.plugins.data_formats.arrow.mapper.media.mediaelementmapper attribute)": [[256, "datumaro.plugins.data_formats.arrow.mapper.media.MediaElementMapper.MEDIA_TYPE"]], "media_type (datumaro.plugins.data_formats.arrow.mapper.media.pointcloudmapper attribute)": [[256, "datumaro.plugins.data_formats.arrow.mapper.media.PointCloudMapper.MEDIA_TYPE"]], "mediaelementmapper (class in datumaro.plugins.data_formats.arrow.mapper.media)": [[256, "datumaro.plugins.data_formats.arrow.mapper.media.MediaElementMapper"]], "mediamapper (class in datumaro.plugins.data_formats.arrow.mapper.media)": [[256, "datumaro.plugins.data_formats.arrow.mapper.media.MediaMapper"]], "pointcloudmapper (class in datumaro.plugins.data_formats.arrow.mapper.media)": [[256, "datumaro.plugins.data_formats.arrow.mapper.media.PointCloudMapper"]], "backward() (datumaro.plugins.data_formats.arrow.mapper.media.imagemapper class method)": [[256, "datumaro.plugins.data_formats.arrow.mapper.media.ImageMapper.backward"]], "backward() (datumaro.plugins.data_formats.arrow.mapper.media.mediaelementmapper class method)": [[256, "datumaro.plugins.data_formats.arrow.mapper.media.MediaElementMapper.backward"]], "backward() (datumaro.plugins.data_formats.arrow.mapper.media.mediamapper class method)": [[256, "datumaro.plugins.data_formats.arrow.mapper.media.MediaMapper.backward"]], "backward() (datumaro.plugins.data_formats.arrow.mapper.media.pointcloudmapper class method)": [[256, "datumaro.plugins.data_formats.arrow.mapper.media.PointCloudMapper.backward"]], "backward_extra_image() (datumaro.plugins.data_formats.arrow.mapper.media.imagemapper class method)": [[256, "datumaro.plugins.data_formats.arrow.mapper.media.ImageMapper.backward_extra_image"]], "datumaro.plugins.data_formats.arrow.mapper.media": [[256, "module-datumaro.plugins.data_formats.arrow.mapper.media"]], "decode() (datumaro.plugins.data_formats.arrow.mapper.media.imagemapper class method)": [[256, "datumaro.plugins.data_formats.arrow.mapper.media.ImageMapper.decode"]], "encode() (datumaro.plugins.data_formats.arrow.mapper.media.imagemapper class method)": [[256, "datumaro.plugins.data_formats.arrow.mapper.media.ImageMapper.encode"]], "forward() (datumaro.plugins.data_formats.arrow.mapper.media.imagemapper class method)": [[256, "datumaro.plugins.data_formats.arrow.mapper.media.ImageMapper.forward"]], "forward() (datumaro.plugins.data_formats.arrow.mapper.media.mediaelementmapper class method)": [[256, "datumaro.plugins.data_formats.arrow.mapper.media.MediaElementMapper.forward"]], "forward() (datumaro.plugins.data_formats.arrow.mapper.media.mediamapper class method)": [[256, "datumaro.plugins.data_formats.arrow.mapper.media.MediaMapper.forward"]], "forward() (datumaro.plugins.data_formats.arrow.mapper.media.pointcloudmapper class method)": [[256, "datumaro.plugins.data_formats.arrow.mapper.media.PointCloudMapper.forward"]], "datumaro.plugins.data_formats.ava": [[257, "module-datumaro.plugins.data_formats.ava"]], "annotation_dir (datumaro.plugins.data_formats.ava.ava.avapath attribute)": [[258, "datumaro.plugins.data_formats.ava.ava.AvaPath.ANNOTATION_DIR"]], "annotation_ext (datumaro.plugins.data_formats.ava.ava.avapath attribute)": [[258, "datumaro.plugins.data_formats.ava.ava.AvaPath.ANNOTATION_EXT"]], "annotation_prefix (datumaro.plugins.data_formats.ava.ava.avapath attribute)": [[258, "datumaro.plugins.data_formats.ava.ava.AvaPath.ANNOTATION_PREFIX"]], "annotation_version (datumaro.plugins.data_formats.ava.ava.avapath attribute)": [[258, "datumaro.plugins.data_formats.ava.ava.AvaPath.ANNOTATION_VERSION"]], "avabase (class in datumaro.plugins.data_formats.ava.ava)": [[258, "datumaro.plugins.data_formats.ava.ava.AvaBase"]], "avaexporter (class in datumaro.plugins.data_formats.ava.ava)": [[258, "datumaro.plugins.data_formats.ava.ava.AvaExporter"]], "avaimporter (class in datumaro.plugins.data_formats.ava.ava)": [[258, "datumaro.plugins.data_formats.ava.ava.AvaImporter"]], "avapath (class in datumaro.plugins.data_formats.ava.ava)": [[258, "datumaro.plugins.data_formats.ava.ava.AvaPath"]], "default_image_ext (datumaro.plugins.data_formats.ava.ava.avaexporter attribute)": [[258, "datumaro.plugins.data_formats.ava.ava.AvaExporter.DEFAULT_IMAGE_EXT"]], "image_dir (datumaro.plugins.data_formats.ava.ava.avapath attribute)": [[258, "datumaro.plugins.data_formats.ava.ava.AvaPath.IMAGE_DIR"]], "image_ext (datumaro.plugins.data_formats.ava.ava.avapath attribute)": [[258, "datumaro.plugins.data_formats.ava.ava.AvaPath.IMAGE_EXT"]], "label_list (datumaro.plugins.data_formats.ava.ava.avapath attribute)": [[258, "datumaro.plugins.data_formats.ava.ava.AvaPath.LABEL_LIST"]], "proposal_ext (datumaro.plugins.data_formats.ava.ava.avapath attribute)": [[258, "datumaro.plugins.data_formats.ava.ava.AvaPath.PROPOSAL_EXT"]], "datumaro.plugins.data_formats.ava.ava": [[258, "module-datumaro.plugins.data_formats.ava.ava"]], "detect() (datumaro.plugins.data_formats.ava.ava.avaimporter class method)": [[258, "datumaro.plugins.data_formats.ava.ava.AvaImporter.detect"]], "find_sources() (datumaro.plugins.data_formats.ava.ava.avaimporter class method)": [[258, "datumaro.plugins.data_formats.ava.ava.AvaImporter.find_sources"]], "get_file_extensions() (datumaro.plugins.data_formats.ava.ava.avaimporter class method)": [[258, "datumaro.plugins.data_formats.ava.ava.AvaImporter.get_file_extensions"]], "datumaro.plugins.data_formats.ava.ava_label_pb2": [[259, "module-datumaro.plugins.data_formats.ava.ava_label_pb2"]], "bratsbase (class in datumaro.plugins.data_formats.brats)": [[260, "datumaro.plugins.data_formats.brats.BratsBase"]], "bratsimporter (class in datumaro.plugins.data_formats.brats)": [[260, "datumaro.plugins.data_formats.brats.BratsImporter"]], "bratspath (class in datumaro.plugins.data_formats.brats)": [[260, "datumaro.plugins.data_formats.brats.BratsPath"]], "data_ext (datumaro.plugins.data_formats.brats.bratspath attribute)": [[260, "datumaro.plugins.data_formats.brats.BratsPath.DATA_EXT"]], "images_dir (datumaro.plugins.data_formats.brats.bratspath attribute)": [[260, "datumaro.plugins.data_formats.brats.BratsPath.IMAGES_DIR"]], "labels (datumaro.plugins.data_formats.brats.bratspath attribute)": [[260, "datumaro.plugins.data_formats.brats.BratsPath.LABELS"]], "datumaro.plugins.data_formats.brats": [[260, "module-datumaro.plugins.data_formats.brats"]], "detect() (datumaro.plugins.data_formats.brats.bratsimporter class method)": [[260, "datumaro.plugins.data_formats.brats.BratsImporter.detect"]], "find_sources() (datumaro.plugins.data_formats.brats.bratsimporter class method)": [[260, "datumaro.plugins.data_formats.brats.BratsImporter.find_sources"]], "get_file_extensions() (datumaro.plugins.data_formats.brats.bratsimporter class method)": [[260, "datumaro.plugins.data_formats.brats.BratsImporter.get_file_extensions"]], "boxes_file (datumaro.plugins.data_formats.brats_numpy.bratsnumpypath attribute)": [[261, "datumaro.plugins.data_formats.brats_numpy.BratsNumpyPath.BOXES_FILE"]], "bratsnumpybase (class in datumaro.plugins.data_formats.brats_numpy)": [[261, "datumaro.plugins.data_formats.brats_numpy.BratsNumpyBase"]], "bratsnumpyimporter (class in datumaro.plugins.data_formats.brats_numpy)": [[261, "datumaro.plugins.data_formats.brats_numpy.BratsNumpyImporter"]], "bratsnumpypath (class in datumaro.plugins.data_formats.brats_numpy)": [[261, "datumaro.plugins.data_formats.brats_numpy.BratsNumpyPath"]], "data_suffix (datumaro.plugins.data_formats.brats_numpy.bratsnumpypath attribute)": [[261, "datumaro.plugins.data_formats.brats_numpy.BratsNumpyPath.DATA_SUFFIX"]], "ids_file (datumaro.plugins.data_formats.brats_numpy.bratsnumpypath attribute)": [[261, "datumaro.plugins.data_formats.brats_numpy.BratsNumpyPath.IDS_FILE"]], "labels_file (datumaro.plugins.data_formats.brats_numpy.bratsnumpypath attribute)": [[261, "datumaro.plugins.data_formats.brats_numpy.BratsNumpyPath.LABELS_FILE"]], "label_suffix (datumaro.plugins.data_formats.brats_numpy.bratsnumpypath attribute)": [[261, "datumaro.plugins.data_formats.brats_numpy.BratsNumpyPath.LABEL_SUFFIX"]], "datumaro.plugins.data_formats.brats_numpy": [[261, "module-datumaro.plugins.data_formats.brats_numpy"]], "detect() (datumaro.plugins.data_formats.brats_numpy.bratsnumpyimporter class method)": [[261, "datumaro.plugins.data_formats.brats_numpy.BratsNumpyImporter.detect"]], "find_sources() (datumaro.plugins.data_formats.brats_numpy.bratsnumpyimporter class method)": [[261, "datumaro.plugins.data_formats.brats_numpy.BratsNumpyImporter.find_sources"]], "get_file_extensions() (datumaro.plugins.data_formats.brats_numpy.bratsnumpyimporter class method)": [[261, "datumaro.plugins.data_formats.brats_numpy.BratsNumpyImporter.get_file_extensions"]], "camvidbase (class in datumaro.plugins.data_formats.camvid)": [[262, "datumaro.plugins.data_formats.camvid.CamvidBase"]], "camvidexporter (class in datumaro.plugins.data_formats.camvid)": [[262, "datumaro.plugins.data_formats.camvid.CamvidExporter"]], "camvidimporter (class in datumaro.plugins.data_formats.camvid)": [[262, "datumaro.plugins.data_formats.camvid.CamvidImporter"]], "camvidpath (class in datumaro.plugins.data_formats.camvid)": [[262, "datumaro.plugins.data_formats.camvid.CamvidPath"]], "default_image_ext (datumaro.plugins.data_formats.camvid.camvidexporter attribute)": [[262, "datumaro.plugins.data_formats.camvid.CamvidExporter.DEFAULT_IMAGE_EXT"]], "image_ext (datumaro.plugins.data_formats.camvid.camvidpath attribute)": [[262, "datumaro.plugins.data_formats.camvid.CamvidPath.IMAGE_EXT"]], "labelmap_file (datumaro.plugins.data_formats.camvid.camvidpath attribute)": [[262, "datumaro.plugins.data_formats.camvid.CamvidPath.LABELMAP_FILE"]], "labelmaptype (class in datumaro.plugins.data_formats.camvid)": [[262, "datumaro.plugins.data_formats.camvid.LabelmapType"]], "mask_ext (datumaro.plugins.data_formats.camvid.camvidpath attribute)": [[262, "datumaro.plugins.data_formats.camvid.CamvidPath.MASK_EXT"]], "segm_dir (datumaro.plugins.data_formats.camvid.camvidpath attribute)": [[262, "datumaro.plugins.data_formats.camvid.CamvidPath.SEGM_DIR"]], "build_cmdline_parser() (datumaro.plugins.data_formats.camvid.camvidexporter class method)": [[262, "datumaro.plugins.data_formats.camvid.CamvidExporter.build_cmdline_parser"]], "camvid (datumaro.plugins.data_formats.camvid.labelmaptype attribute)": [[262, "datumaro.plugins.data_formats.camvid.LabelmapType.camvid"]], "datumaro.plugins.data_formats.camvid": [[262, "module-datumaro.plugins.data_formats.camvid"]], "detect() (datumaro.plugins.data_formats.camvid.camvidimporter class method)": [[262, "datumaro.plugins.data_formats.camvid.CamvidImporter.detect"]], "find_sources() (datumaro.plugins.data_formats.camvid.camvidimporter class method)": [[262, "datumaro.plugins.data_formats.camvid.CamvidImporter.find_sources"]], "get_file_extensions() (datumaro.plugins.data_formats.camvid.camvidimporter class method)": [[262, "datumaro.plugins.data_formats.camvid.CamvidImporter.get_file_extensions"]], "make_camvid_categories() (in module datumaro.plugins.data_formats.camvid)": [[262, "datumaro.plugins.data_formats.camvid.make_camvid_categories"]], "parse_label_map() (in module datumaro.plugins.data_formats.camvid)": [[262, "datumaro.plugins.data_formats.camvid.parse_label_map"]], "patch() (datumaro.plugins.data_formats.camvid.camvidexporter class method)": [[262, "datumaro.plugins.data_formats.camvid.CamvidExporter.patch"]], "save_label_map() (datumaro.plugins.data_formats.camvid.camvidexporter method)": [[262, "datumaro.plugins.data_formats.camvid.CamvidExporter.save_label_map"]], "save_segm() (datumaro.plugins.data_formats.camvid.camvidexporter method)": [[262, "datumaro.plugins.data_formats.camvid.CamvidExporter.save_segm"]], "save_segm_lists() (datumaro.plugins.data_formats.camvid.camvidexporter method)": [[262, "datumaro.plugins.data_formats.camvid.CamvidExporter.save_segm_lists"]], "source (datumaro.plugins.data_formats.camvid.labelmaptype attribute)": [[262, "datumaro.plugins.data_formats.camvid.LabelmapType.source"]], "write_label_map() (in module datumaro.plugins.data_formats.camvid)": [[262, "datumaro.plugins.data_formats.camvid.write_label_map"]], "datumaro.plugins.data_formats.celeba": [[263, "module-datumaro.plugins.data_formats.celeba"]], "aligncelebabase (class in datumaro.plugins.data_formats.celeba.align_celeba)": [[264, "datumaro.plugins.data_formats.celeba.align_celeba.AlignCelebaBase"]], "aligncelebaimporter (class in datumaro.plugins.data_formats.celeba.align_celeba)": [[264, "datumaro.plugins.data_formats.celeba.align_celeba.AlignCelebaImporter"]], "aligncelebapath (class in datumaro.plugins.data_formats.celeba.align_celeba)": [[264, "datumaro.plugins.data_formats.celeba.align_celeba.AlignCelebaPath"]], "images_dir (datumaro.plugins.data_formats.celeba.align_celeba.aligncelebapath attribute)": [[264, "datumaro.plugins.data_formats.celeba.align_celeba.AlignCelebaPath.IMAGES_DIR"]], "landmarks_file (datumaro.plugins.data_formats.celeba.align_celeba.aligncelebapath attribute)": [[264, "datumaro.plugins.data_formats.celeba.align_celeba.AlignCelebaPath.LANDMARKS_FILE"]], "landmarks_header (datumaro.plugins.data_formats.celeba.align_celeba.aligncelebapath attribute)": [[264, "datumaro.plugins.data_formats.celeba.align_celeba.AlignCelebaPath.LANDMARKS_HEADER"]], "path_cls (datumaro.plugins.data_formats.celeba.align_celeba.aligncelebaimporter attribute)": [[264, "datumaro.plugins.data_formats.celeba.align_celeba.AlignCelebaImporter.PATH_CLS"]], "datumaro.plugins.data_formats.celeba.align_celeba": [[264, "module-datumaro.plugins.data_formats.celeba.align_celeba"]], "split_annotation() (datumaro.plugins.data_formats.celeba.align_celeba.aligncelebabase method)": [[264, "datumaro.plugins.data_formats.celeba.align_celeba.AlignCelebaBase.split_annotation"]], "attrs_file (datumaro.plugins.data_formats.celeba.celeba.celebapath attribute)": [[265, "datumaro.plugins.data_formats.celeba.celeba.CelebaPath.ATTRS_FILE"]], "bboxes_file (datumaro.plugins.data_formats.celeba.celeba.celebapath attribute)": [[265, "datumaro.plugins.data_formats.celeba.celeba.CelebaPath.BBOXES_FILE"]], "bboxes_header (datumaro.plugins.data_formats.celeba.celeba.celebapath attribute)": [[265, "datumaro.plugins.data_formats.celeba.celeba.CelebaPath.BBOXES_HEADER"]], "celebabase (class in datumaro.plugins.data_formats.celeba.celeba)": [[265, "datumaro.plugins.data_formats.celeba.celeba.CelebaBase"]], "celebaimporter (class in datumaro.plugins.data_formats.celeba.celeba)": [[265, "datumaro.plugins.data_formats.celeba.celeba.CelebaImporter"]], "celebapath (class in datumaro.plugins.data_formats.celeba.celeba)": [[265, "datumaro.plugins.data_formats.celeba.celeba.CelebaPath"]], "images_dir (datumaro.plugins.data_formats.celeba.celeba.celebapath attribute)": [[265, "datumaro.plugins.data_formats.celeba.celeba.CelebaPath.IMAGES_DIR"]], "labels_file (datumaro.plugins.data_formats.celeba.celeba.celebapath attribute)": [[265, "datumaro.plugins.data_formats.celeba.celeba.CelebaPath.LABELS_FILE"]], "landmarks_file (datumaro.plugins.data_formats.celeba.celeba.celebapath attribute)": [[265, "datumaro.plugins.data_formats.celeba.celeba.CelebaPath.LANDMARKS_FILE"]], "path_cls (datumaro.plugins.data_formats.celeba.celeba.celebaimporter attribute)": [[265, "datumaro.plugins.data_formats.celeba.celeba.CelebaImporter.PATH_CLS"]], "subsets (datumaro.plugins.data_formats.celeba.celeba.celebapath attribute)": [[265, "datumaro.plugins.data_formats.celeba.celeba.CelebaPath.SUBSETS"]], "subsets_file (datumaro.plugins.data_formats.celeba.celeba.celebapath attribute)": [[265, "datumaro.plugins.data_formats.celeba.celeba.CelebaPath.SUBSETS_FILE"]], "datumaro.plugins.data_formats.celeba.celeba": [[265, "module-datumaro.plugins.data_formats.celeba.celeba"]], "detect() (datumaro.plugins.data_formats.celeba.celeba.celebaimporter class method)": [[265, "datumaro.plugins.data_formats.celeba.celeba.CelebaImporter.detect"]], "find_sources() (datumaro.plugins.data_formats.celeba.celeba.celebaimporter class method)": [[265, "datumaro.plugins.data_formats.celeba.celeba.CelebaImporter.find_sources"]], "get_file_extensions() (datumaro.plugins.data_formats.celeba.celeba.celebaimporter class method)": [[265, "datumaro.plugins.data_formats.celeba.celeba.CelebaImporter.get_file_extensions"]], "split_annotation() (datumaro.plugins.data_formats.celeba.celeba.celebabase method)": [[265, "datumaro.plugins.data_formats.celeba.celeba.CelebaBase.split_annotation"]], "cifarbase (class in datumaro.plugins.data_formats.cifar)": [[266, "datumaro.plugins.data_formats.cifar.CifarBase"]], "cifarexporter (class in datumaro.plugins.data_formats.cifar)": [[266, "datumaro.plugins.data_formats.cifar.CifarExporter"]], "cifarimporter (class in datumaro.plugins.data_formats.cifar)": [[266, "datumaro.plugins.data_formats.cifar.CifarImporter"]], "cifarpath (class in datumaro.plugins.data_formats.cifar)": [[266, "datumaro.plugins.data_formats.cifar.CifarPath"]], "default_image_ext (datumaro.plugins.data_formats.cifar.cifarexporter attribute)": [[266, "datumaro.plugins.data_formats.cifar.CifarExporter.DEFAULT_IMAGE_EXT"]], "image_size (datumaro.plugins.data_formats.cifar.cifarpath attribute)": [[266, "datumaro.plugins.data_formats.cifar.CifarPath.IMAGE_SIZE"]], "meta_100_file (datumaro.plugins.data_formats.cifar.cifarpath attribute)": [[266, "datumaro.plugins.data_formats.cifar.CifarPath.META_100_FILE"]], "meta_10_file (datumaro.plugins.data_formats.cifar.cifarpath attribute)": [[266, "datumaro.plugins.data_formats.cifar.CifarPath.META_10_FILE"]], "train_file_prefix (datumaro.plugins.data_formats.cifar.cifarpath attribute)": [[266, "datumaro.plugins.data_formats.cifar.CifarPath.TRAIN_FILE_PREFIX"]], "useless_file (datumaro.plugins.data_formats.cifar.cifarpath attribute)": [[266, "datumaro.plugins.data_formats.cifar.CifarPath.USELESS_FILE"]], "datumaro.plugins.data_formats.cifar": [[266, "module-datumaro.plugins.data_formats.cifar"]], "detect() (datumaro.plugins.data_formats.cifar.cifarimporter class method)": [[266, "datumaro.plugins.data_formats.cifar.CifarImporter.detect"]], "find_sources() (datumaro.plugins.data_formats.cifar.cifarimporter class method)": [[266, "datumaro.plugins.data_formats.cifar.CifarImporter.find_sources"]], "get_file_extensions() (datumaro.plugins.data_formats.cifar.cifarimporter class method)": [[266, "datumaro.plugins.data_formats.cifar.CifarImporter.get_file_extensions"]], "patch() (datumaro.plugins.data_formats.cifar.cifarexporter class method)": [[266, "datumaro.plugins.data_formats.cifar.CifarExporter.patch"]], "color_image (datumaro.plugins.data_formats.cityscapes.cityscapespath attribute)": [[267, "datumaro.plugins.data_formats.cityscapes.CityscapesPath.COLOR_IMAGE"]], "cityscapesbase (class in datumaro.plugins.data_formats.cityscapes)": [[267, "datumaro.plugins.data_formats.cityscapes.CityscapesBase"]], "cityscapesexporter (class in datumaro.plugins.data_formats.cityscapes)": [[267, "datumaro.plugins.data_formats.cityscapes.CityscapesExporter"]], "cityscapesimporter (class in datumaro.plugins.data_formats.cityscapes)": [[267, "datumaro.plugins.data_formats.cityscapes.CityscapesImporter"]], "cityscapespath (class in datumaro.plugins.data_formats.cityscapes)": [[267, "datumaro.plugins.data_formats.cityscapes.CityscapesPath"]], "default_image_ext (datumaro.plugins.data_formats.cityscapes.cityscapesexporter attribute)": [[267, "datumaro.plugins.data_formats.cityscapes.CityscapesExporter.DEFAULT_IMAGE_EXT"]], "gt_fine_dir (datumaro.plugins.data_formats.cityscapes.cityscapespath attribute)": [[267, "datumaro.plugins.data_formats.cityscapes.CityscapesPath.GT_FINE_DIR"]], "gt_instance_mask_suffix (datumaro.plugins.data_formats.cityscapes.cityscapespath attribute)": [[267, "datumaro.plugins.data_formats.cityscapes.CityscapesPath.GT_INSTANCE_MASK_SUFFIX"]], "imgs_fine_dir (datumaro.plugins.data_formats.cityscapes.cityscapespath attribute)": [[267, "datumaro.plugins.data_formats.cityscapes.CityscapesPath.IMGS_FINE_DIR"]], "instances_image (datumaro.plugins.data_formats.cityscapes.cityscapespath attribute)": [[267, "datumaro.plugins.data_formats.cityscapes.CityscapesPath.INSTANCES_IMAGE"]], "labelids_image (datumaro.plugins.data_formats.cityscapes.cityscapespath attribute)": [[267, "datumaro.plugins.data_formats.cityscapes.CityscapesPath.LABELIDS_IMAGE"]], "labelmap_file (datumaro.plugins.data_formats.cityscapes.cityscapespath attribute)": [[267, "datumaro.plugins.data_formats.cityscapes.CityscapesPath.LABELMAP_FILE"]], "label_train_ids_suffix (datumaro.plugins.data_formats.cityscapes.cityscapespath attribute)": [[267, "datumaro.plugins.data_formats.cityscapes.CityscapesPath.LABEL_TRAIN_IDS_SUFFIX"]], "labelmaptype (class in datumaro.plugins.data_formats.cityscapes)": [[267, "datumaro.plugins.data_formats.cityscapes.LabelmapType"]], "original_image (datumaro.plugins.data_formats.cityscapes.cityscapespath attribute)": [[267, "datumaro.plugins.data_formats.cityscapes.CityscapesPath.ORIGINAL_IMAGE"]], "original_image_dir (datumaro.plugins.data_formats.cityscapes.cityscapespath attribute)": [[267, "datumaro.plugins.data_formats.cityscapes.CityscapesPath.ORIGINAL_IMAGE_DIR"]], "build_cmdline_parser() (datumaro.plugins.data_formats.cityscapes.cityscapesexporter class method)": [[267, "datumaro.plugins.data_formats.cityscapes.CityscapesExporter.build_cmdline_parser"]], "cityscapes (datumaro.plugins.data_formats.cityscapes.labelmaptype attribute)": [[267, "datumaro.plugins.data_formats.cityscapes.LabelmapType.cityscapes"]], "datumaro.plugins.data_formats.cityscapes": [[267, "module-datumaro.plugins.data_formats.cityscapes"]], "detect() (datumaro.plugins.data_formats.cityscapes.cityscapesimporter class method)": [[267, "datumaro.plugins.data_formats.cityscapes.CityscapesImporter.detect"]], "find_sources() (datumaro.plugins.data_formats.cityscapes.cityscapesimporter class method)": [[267, "datumaro.plugins.data_formats.cityscapes.CityscapesImporter.find_sources"]], "get_file_extensions() (datumaro.plugins.data_formats.cityscapes.cityscapesimporter class method)": [[267, "datumaro.plugins.data_formats.cityscapes.CityscapesImporter.get_file_extensions"]], "make_cityscapes_categories() (in module datumaro.plugins.data_formats.cityscapes)": [[267, "datumaro.plugins.data_formats.cityscapes.make_cityscapes_categories"]], "parse_label_map() (in module datumaro.plugins.data_formats.cityscapes)": [[267, "datumaro.plugins.data_formats.cityscapes.parse_label_map"]], "patch() (datumaro.plugins.data_formats.cityscapes.cityscapesexporter class method)": [[267, "datumaro.plugins.data_formats.cityscapes.CityscapesExporter.patch"]], "save_label_map() (datumaro.plugins.data_formats.cityscapes.cityscapesexporter method)": [[267, "datumaro.plugins.data_formats.cityscapes.CityscapesExporter.save_label_map"]], "save_mask() (datumaro.plugins.data_formats.cityscapes.cityscapesexporter method)": [[267, "datumaro.plugins.data_formats.cityscapes.CityscapesExporter.save_mask"]], "source (datumaro.plugins.data_formats.cityscapes.labelmaptype attribute)": [[267, "datumaro.plugins.data_formats.cityscapes.LabelmapType.source"]], "write_label_map() (in module datumaro.plugins.data_formats.cityscapes)": [[267, "datumaro.plugins.data_formats.cityscapes.write_label_map"]], "datumaro.plugins.data_formats.coco": [[268, "module-datumaro.plugins.data_formats.coco"]], "cococaptionsbase (class in datumaro.plugins.data_formats.coco.base)": [[269, "datumaro.plugins.data_formats.coco.base.CocoCaptionsBase"]], "cocoimageinfobase (class in datumaro.plugins.data_formats.coco.base)": [[269, "datumaro.plugins.data_formats.coco.base.CocoImageInfoBase"]], "cocoinstancesbase (class in datumaro.plugins.data_formats.coco.base)": [[269, "datumaro.plugins.data_formats.coco.base.CocoInstancesBase"]], "cocolabelsbase (class in datumaro.plugins.data_formats.coco.base)": [[269, "datumaro.plugins.data_formats.coco.base.CocoLabelsBase"]], "cocopanopticbase (class in datumaro.plugins.data_formats.coco.base)": [[269, "datumaro.plugins.data_formats.coco.base.CocoPanopticBase"]], "cocopersonkeypointsbase (class in datumaro.plugins.data_formats.coco.base)": [[269, "datumaro.plugins.data_formats.coco.base.CocoPersonKeypointsBase"]], "cocostuffbase (class in datumaro.plugins.data_formats.coco.base)": [[269, "datumaro.plugins.data_formats.coco.base.CocoStuffBase"]], "dirpathextracter (class in datumaro.plugins.data_formats.coco.base)": [[269, "datumaro.plugins.data_formats.coco.base.DirPathExtracter"]], "mmdetdirpathextracter (class in datumaro.plugins.data_formats.coco.base)": [[269, "datumaro.plugins.data_formats.coco.base.MmdetDirPathExtracter"]], "roboflowdirpathextracter (class in datumaro.plugins.data_formats.coco.base)": [[269, "datumaro.plugins.data_formats.coco.base.RoboflowDirPathExtracter"]], "datumaro.plugins.data_formats.coco.base": [[269, "module-datumaro.plugins.data_formats.coco.base"]], "find_images_dir() (datumaro.plugins.data_formats.coco.base.dirpathextracter static method)": [[269, "datumaro.plugins.data_formats.coco.base.DirPathExtracter.find_images_dir"]], "find_images_dir() (datumaro.plugins.data_formats.coco.base.mmdetdirpathextracter static method)": [[269, "datumaro.plugins.data_formats.coco.base.MmdetDirPathExtracter.find_images_dir"]], "find_images_dir() (datumaro.plugins.data_formats.coco.base.roboflowdirpathextracter static method)": [[269, "datumaro.plugins.data_formats.coco.base.RoboflowDirPathExtracter.find_images_dir"]], "find_rootpath() (datumaro.plugins.data_formats.coco.base.dirpathextracter static method)": [[269, "datumaro.plugins.data_formats.coco.base.DirPathExtracter.find_rootpath"]], "find_rootpath() (datumaro.plugins.data_formats.coco.base.mmdetdirpathextracter static method)": [[269, "datumaro.plugins.data_formats.coco.base.MmdetDirPathExtracter.find_rootpath"]], "find_rootpath() (datumaro.plugins.data_formats.coco.base.roboflowdirpathextracter static method)": [[269, "datumaro.plugins.data_formats.coco.base.RoboflowDirPathExtracter.find_rootpath"]], "cococaptionsexporter (class in datumaro.plugins.data_formats.coco.exporter)": [[270, "datumaro.plugins.data_formats.coco.exporter.CocoCaptionsExporter"]], "cocoexporter (class in datumaro.plugins.data_formats.coco.exporter)": [[270, "datumaro.plugins.data_formats.coco.exporter.CocoExporter"]], "cocoimageinfoexporter (class in datumaro.plugins.data_formats.coco.exporter)": [[270, "datumaro.plugins.data_formats.coco.exporter.CocoImageInfoExporter"]], "cocoinstancesexporter (class in datumaro.plugins.data_formats.coco.exporter)": [[270, "datumaro.plugins.data_formats.coco.exporter.CocoInstancesExporter"]], "cocolabelsexporter (class in datumaro.plugins.data_formats.coco.exporter)": [[270, "datumaro.plugins.data_formats.coco.exporter.CocoLabelsExporter"]], "cocopanopticexporter (class in datumaro.plugins.data_formats.coco.exporter)": [[270, "datumaro.plugins.data_formats.coco.exporter.CocoPanopticExporter"]], "cocopersonkeypointsexporter (class in datumaro.plugins.data_formats.coco.exporter)": [[270, "datumaro.plugins.data_formats.coco.exporter.CocoPersonKeypointsExporter"]], "cocostuffexporter (class in datumaro.plugins.data_formats.coco.exporter)": [[270, "datumaro.plugins.data_formats.coco.exporter.CocoStuffExporter"]], "default_image_ext (datumaro.plugins.data_formats.coco.exporter.cocoexporter attribute)": [[270, "datumaro.plugins.data_formats.coco.exporter.CocoExporter.DEFAULT_IMAGE_EXT"]], "segmentationmode (class in datumaro.plugins.data_formats.coco.exporter)": [[270, "datumaro.plugins.data_formats.coco.exporter.SegmentationMode"]], "temporarywriters (class in datumaro.plugins.data_formats.coco.exporter)": [[270, "datumaro.plugins.data_formats.coco.exporter.TemporaryWriters"]], "add_anns() (datumaro.plugins.data_formats.coco.exporter.temporarywriters method)": [[270, "datumaro.plugins.data_formats.coco.exporter.TemporaryWriters.add_anns"]], "add_item() (datumaro.plugins.data_formats.coco.exporter.temporarywriters method)": [[270, "datumaro.plugins.data_formats.coco.exporter.TemporaryWriters.add_item"]], "anns (datumaro.plugins.data_formats.coco.exporter.temporarywriters property)": [[270, "datumaro.plugins.data_formats.coco.exporter.TemporaryWriters.anns"]], "build_cmdline_parser() (datumaro.plugins.data_formats.coco.exporter.cocoexporter class method)": [[270, "datumaro.plugins.data_formats.coco.exporter.CocoExporter.build_cmdline_parser"]], "can_stream (datumaro.plugins.data_formats.coco.exporter.cocoexporter property)": [[270, "datumaro.plugins.data_formats.coco.exporter.CocoExporter.can_stream"]], "close() (datumaro.plugins.data_formats.coco.exporter.temporarywriters method)": [[270, "datumaro.plugins.data_formats.coco.exporter.TemporaryWriters.close"]], "datumaro.plugins.data_formats.coco.exporter": [[270, "module-datumaro.plugins.data_formats.coco.exporter"]], "guess (datumaro.plugins.data_formats.coco.exporter.segmentationmode attribute)": [[270, "datumaro.plugins.data_formats.coco.exporter.SegmentationMode.guess"]], "imgs (datumaro.plugins.data_formats.coco.exporter.temporarywriters property)": [[270, "datumaro.plugins.data_formats.coco.exporter.TemporaryWriters.imgs"]], "mask (datumaro.plugins.data_formats.coco.exporter.segmentationmode attribute)": [[270, "datumaro.plugins.data_formats.coco.exporter.SegmentationMode.mask"]], "merge() (datumaro.plugins.data_formats.coco.exporter.temporarywriters method)": [[270, "datumaro.plugins.data_formats.coco.exporter.TemporaryWriters.merge"]], "patch() (datumaro.plugins.data_formats.coco.exporter.cocoexporter class method)": [[270, "datumaro.plugins.data_formats.coco.exporter.CocoExporter.patch"]], "polygons (datumaro.plugins.data_formats.coco.exporter.segmentationmode attribute)": [[270, "datumaro.plugins.data_formats.coco.exporter.SegmentationMode.polygons"]], "remove() (datumaro.plugins.data_formats.coco.exporter.temporarywriters method)": [[270, "datumaro.plugins.data_formats.coco.exporter.TemporaryWriters.remove"]], "reset() (datumaro.plugins.data_formats.coco.exporter.temporarywriters method)": [[270, "datumaro.plugins.data_formats.coco.exporter.TemporaryWriters.reset"]], "cocoextractormerger (class in datumaro.plugins.data_formats.coco.extractor_merger)": [[271, "datumaro.plugins.data_formats.coco.extractor_merger.COCOExtractorMerger"]], "cocotaskmergedbase (class in datumaro.plugins.data_formats.coco.extractor_merger)": [[271, "datumaro.plugins.data_formats.coco.extractor_merger.COCOTaskMergedBase"]], "datumaro.plugins.data_formats.coco.extractor_merger": [[271, "module-datumaro.plugins.data_formats.coco.extractor_merger"]], "is_stream (datumaro.plugins.data_formats.coco.extractor_merger.cocotaskmergedbase property)": [[271, "datumaro.plugins.data_formats.coco.extractor_merger.COCOTaskMergedBase.is_stream"]], "item_keys (datumaro.plugins.data_formats.coco.extractor_merger.cocotaskmergedbase property)": [[271, "datumaro.plugins.data_formats.coco.extractor_merger.COCOTaskMergedBase.item_keys"]], "annotations_dir (datumaro.plugins.data_formats.coco.format.cocopath attribute)": [[272, "datumaro.plugins.data_formats.coco.format.CocoPath.ANNOTATIONS_DIR"]], "cocoimportertype (class in datumaro.plugins.data_formats.coco.format)": [[272, "datumaro.plugins.data_formats.coco.format.CocoImporterType"]], "cocopath (class in datumaro.plugins.data_formats.coco.format)": [[272, "datumaro.plugins.data_formats.coco.format.CocoPath"]], "cocotask (class in datumaro.plugins.data_formats.coco.format)": [[272, "datumaro.plugins.data_formats.coco.format.CocoTask"]], "images_dir (datumaro.plugins.data_formats.coco.format.cocopath attribute)": [[272, "datumaro.plugins.data_formats.coco.format.CocoPath.IMAGES_DIR"]], "image_ext (datumaro.plugins.data_formats.coco.format.cocopath attribute)": [[272, "datumaro.plugins.data_formats.coco.format.CocoPath.IMAGE_EXT"]], "panoptic_ext (datumaro.plugins.data_formats.coco.format.cocopath attribute)": [[272, "datumaro.plugins.data_formats.coco.format.CocoPath.PANOPTIC_EXT"]], "captions (datumaro.plugins.data_formats.coco.format.cocotask attribute)": [[272, "datumaro.plugins.data_formats.coco.format.CocoTask.captions"]], "datumaro.plugins.data_formats.coco.format": [[272, "module-datumaro.plugins.data_formats.coco.format"]], "default (datumaro.plugins.data_formats.coco.format.cocoimportertype attribute)": [[272, "datumaro.plugins.data_formats.coco.format.CocoImporterType.default"]], "image_info (datumaro.plugins.data_formats.coco.format.cocotask attribute)": [[272, "datumaro.plugins.data_formats.coco.format.CocoTask.image_info"]], "instances (datumaro.plugins.data_formats.coco.format.cocotask attribute)": [[272, "datumaro.plugins.data_formats.coco.format.CocoTask.instances"]], "labels (datumaro.plugins.data_formats.coco.format.cocotask attribute)": [[272, "datumaro.plugins.data_formats.coco.format.CocoTask.labels"]], "mmdet (datumaro.plugins.data_formats.coco.format.cocoimportertype attribute)": [[272, "datumaro.plugins.data_formats.coco.format.CocoImporterType.mmdet"]], "panoptic (datumaro.plugins.data_formats.coco.format.cocotask attribute)": [[272, "datumaro.plugins.data_formats.coco.format.CocoTask.panoptic"]], "person_keypoints (datumaro.plugins.data_formats.coco.format.cocotask attribute)": [[272, "datumaro.plugins.data_formats.coco.format.CocoTask.person_keypoints"]], "roboflow (datumaro.plugins.data_formats.coco.format.cocoimportertype attribute)": [[272, "datumaro.plugins.data_formats.coco.format.CocoImporterType.roboflow"]], "stuff (datumaro.plugins.data_formats.coco.format.cocotask attribute)": [[272, "datumaro.plugins.data_formats.coco.format.CocoTask.stuff"]], "cococaptionsimporter (class in datumaro.plugins.data_formats.coco.importer)": [[273, "datumaro.plugins.data_formats.coco.importer.CocoCaptionsImporter"]], "cocoimageinfoimporter (class in datumaro.plugins.data_formats.coco.importer)": [[273, "datumaro.plugins.data_formats.coco.importer.CocoImageInfoImporter"]], "cocoimporter (class in datumaro.plugins.data_formats.coco.importer)": [[273, "datumaro.plugins.data_formats.coco.importer.CocoImporter"]], "cocoinstancesimporter (class in datumaro.plugins.data_formats.coco.importer)": [[273, "datumaro.plugins.data_formats.coco.importer.CocoInstancesImporter"]], "cocolabelsimporter (class in datumaro.plugins.data_formats.coco.importer)": [[273, "datumaro.plugins.data_formats.coco.importer.CocoLabelsImporter"]], "cocopanopticimporter (class in datumaro.plugins.data_formats.coco.importer)": [[273, "datumaro.plugins.data_formats.coco.importer.CocoPanopticImporter"]], "cocopersonkeypointsimporter (class in datumaro.plugins.data_formats.coco.importer)": [[273, "datumaro.plugins.data_formats.coco.importer.CocoPersonKeypointsImporter"]], "cocostuffimporter (class in datumaro.plugins.data_formats.coco.importer)": [[273, "datumaro.plugins.data_formats.coco.importer.CocoStuffImporter"]], "build_cmdline_parser() (datumaro.plugins.data_formats.coco.importer.cocoimporter class method)": [[273, "datumaro.plugins.data_formats.coco.importer.CocoImporter.build_cmdline_parser"]], "can_stream (datumaro.plugins.data_formats.coco.importer.cocoimporter property)": [[273, "datumaro.plugins.data_formats.coco.importer.CocoImporter.can_stream"]], "datumaro.plugins.data_formats.coco.importer": [[273, "module-datumaro.plugins.data_formats.coco.importer"]], "detect() (datumaro.plugins.data_formats.coco.importer.cocoimageinfoimporter class method)": [[273, "datumaro.plugins.data_formats.coco.importer.CocoImageInfoImporter.detect"]], "detect() (datumaro.plugins.data_formats.coco.importer.cocoimporter class method)": [[273, "datumaro.plugins.data_formats.coco.importer.CocoImporter.detect"]], "find_sources() (datumaro.plugins.data_formats.coco.importer.cocoimporter class method)": [[273, "datumaro.plugins.data_formats.coco.importer.CocoImporter.find_sources"]], "get_extractor_merger() (datumaro.plugins.data_formats.coco.importer.cocoimporter method)": [[273, "datumaro.plugins.data_formats.coco.importer.CocoImporter.get_extractor_merger"]], "get_file_extensions() (datumaro.plugins.data_formats.coco.importer.cocoimporter class method)": [[273, "datumaro.plugins.data_formats.coco.importer.CocoImporter.get_file_extensions"]], "cocopagemapper (class in datumaro.plugins.data_formats.coco.page_mapper)": [[274, "datumaro.plugins.data_formats.coco.page_mapper.COCOPageMapper"]], "cocopagemapperimpl (in module datumaro.plugins.data_formats.coco.page_mapper)": [[274, "datumaro.plugins.data_formats.coco.page_mapper.CocoPageMapperImpl"]], "datumaro.plugins.data_formats.coco.page_mapper": [[274, "module-datumaro.plugins.data_formats.coco.page_mapper"]], "get_anns_dict() (datumaro.plugins.data_formats.coco.page_mapper.cocopagemapper method)": [[274, "datumaro.plugins.data_formats.coco.page_mapper.COCOPageMapper.get_anns_dict"]], "get_item_dict() (datumaro.plugins.data_formats.coco.page_mapper.cocopagemapper method)": [[274, "datumaro.plugins.data_formats.coco.page_mapper.COCOPageMapper.get_item_dict"]], "iter_item_ids() (datumaro.plugins.data_formats.coco.page_mapper.cocopagemapper method)": [[274, "datumaro.plugins.data_formats.coco.page_mapper.COCOPageMapper.iter_item_ids"]], "stream_parse_categories_data() (datumaro.plugins.data_formats.coco.page_mapper.cocopagemapper method)": [[274, "datumaro.plugins.data_formats.coco.page_mapper.COCOPageMapper.stream_parse_categories_data"]], "commonsemanticsegmentationbase (class in datumaro.plugins.data_formats.common_semantic_segmentation)": [[275, "datumaro.plugins.data_formats.common_semantic_segmentation.CommonSemanticSegmentationBase"]], "commonsemanticsegmentationimporter (class in datumaro.plugins.data_formats.common_semantic_segmentation)": [[275, "datumaro.plugins.data_formats.common_semantic_segmentation.CommonSemanticSegmentationImporter"]], "commonsemanticsegmentationpath (class in datumaro.plugins.data_formats.common_semantic_segmentation)": [[275, "datumaro.plugins.data_formats.common_semantic_segmentation.CommonSemanticSegmentationPath"]], "commonsemanticsegmentationwithsubsetdirsimporter (class in datumaro.plugins.data_formats.common_semantic_segmentation)": [[275, "datumaro.plugins.data_formats.common_semantic_segmentation.CommonSemanticSegmentationWithSubsetDirsImporter"]], "images_dir (datumaro.plugins.data_formats.common_semantic_segmentation.commonsemanticsegmentationpath attribute)": [[275, "datumaro.plugins.data_formats.common_semantic_segmentation.CommonSemanticSegmentationPath.IMAGES_DIR"]], "masks_dir (datumaro.plugins.data_formats.common_semantic_segmentation.commonsemanticsegmentationpath attribute)": [[275, "datumaro.plugins.data_formats.common_semantic_segmentation.CommonSemanticSegmentationPath.MASKS_DIR"]], "name (datumaro.plugins.data_formats.common_semantic_segmentation.commonsemanticsegmentationwithsubsetdirsimporter attribute)": [[275, "datumaro.plugins.data_formats.common_semantic_segmentation.CommonSemanticSegmentationWithSubsetDirsImporter.NAME"]], "build_cmdline_parser() (datumaro.plugins.data_formats.common_semantic_segmentation.commonsemanticsegmentationimporter class method)": [[275, "datumaro.plugins.data_formats.common_semantic_segmentation.CommonSemanticSegmentationImporter.build_cmdline_parser"]], "datumaro.plugins.data_formats.common_semantic_segmentation": [[275, "module-datumaro.plugins.data_formats.common_semantic_segmentation"]], "detect() (datumaro.plugins.data_formats.common_semantic_segmentation.commonsemanticsegmentationimporter class method)": [[275, "datumaro.plugins.data_formats.common_semantic_segmentation.CommonSemanticSegmentationImporter.detect"]], "detect() (datumaro.plugins.data_formats.common_semantic_segmentation.commonsemanticsegmentationwithsubsetdirsimporter class method)": [[275, "datumaro.plugins.data_formats.common_semantic_segmentation.CommonSemanticSegmentationWithSubsetDirsImporter.detect"]], "find_sources() (datumaro.plugins.data_formats.common_semantic_segmentation.commonsemanticsegmentationimporter class method)": [[275, "datumaro.plugins.data_formats.common_semantic_segmentation.CommonSemanticSegmentationImporter.find_sources"]], "get_file_extensions() (datumaro.plugins.data_formats.common_semantic_segmentation.commonsemanticsegmentationimporter class method)": [[275, "datumaro.plugins.data_formats.common_semantic_segmentation.CommonSemanticSegmentationImporter.get_file_extensions"]], "make_categories() (in module datumaro.plugins.data_formats.common_semantic_segmentation)": [[275, "datumaro.plugins.data_formats.common_semantic_segmentation.make_categories"]], "commonsuperresolutionbase (class in datumaro.plugins.data_formats.common_super_resolution)": [[276, "datumaro.plugins.data_formats.common_super_resolution.CommonSuperResolutionBase"]], "commonsuperresolutionimporter (class in datumaro.plugins.data_formats.common_super_resolution)": [[276, "datumaro.plugins.data_formats.common_super_resolution.CommonSuperResolutionImporter"]], "commonsuperresolutionpath (class in datumaro.plugins.data_formats.common_super_resolution)": [[276, "datumaro.plugins.data_formats.common_super_resolution.CommonSuperResolutionPath"]], "hr_images_dir (datumaro.plugins.data_formats.common_super_resolution.commonsuperresolutionpath attribute)": [[276, "datumaro.plugins.data_formats.common_super_resolution.CommonSuperResolutionPath.HR_IMAGES_DIR"]], "lr_images_dir (datumaro.plugins.data_formats.common_super_resolution.commonsuperresolutionpath attribute)": [[276, "datumaro.plugins.data_formats.common_super_resolution.CommonSuperResolutionPath.LR_IMAGES_DIR"]], "upsampled_images_dir (datumaro.plugins.data_formats.common_super_resolution.commonsuperresolutionpath attribute)": [[276, "datumaro.plugins.data_formats.common_super_resolution.CommonSuperResolutionPath.UPSAMPLED_IMAGES_DIR"]], "datumaro.plugins.data_formats.common_super_resolution": [[276, "module-datumaro.plugins.data_formats.common_super_resolution"]], "detect() (datumaro.plugins.data_formats.common_super_resolution.commonsuperresolutionimporter class method)": [[276, "datumaro.plugins.data_formats.common_super_resolution.CommonSuperResolutionImporter.detect"]], "find_sources() (datumaro.plugins.data_formats.common_super_resolution.commonsuperresolutionimporter class method)": [[276, "datumaro.plugins.data_formats.common_super_resolution.CommonSuperResolutionImporter.find_sources"]], "get_file_extensions() (datumaro.plugins.data_formats.common_super_resolution.commonsuperresolutionimporter class method)": [[276, "datumaro.plugins.data_formats.common_super_resolution.CommonSuperResolutionImporter.get_file_extensions"]], "datumaro.plugins.data_formats.cvat": [[277, "module-datumaro.plugins.data_formats.cvat"]], "cvatbase (class in datumaro.plugins.data_formats.cvat.base)": [[278, "datumaro.plugins.data_formats.cvat.base.CvatBase"]], "cvatimporter (class in datumaro.plugins.data_formats.cvat.base)": [[278, "datumaro.plugins.data_formats.cvat.base.CvatImporter"]], "datumaro.plugins.data_formats.cvat.base": [[278, "module-datumaro.plugins.data_formats.cvat.base"]], "detect() (datumaro.plugins.data_formats.cvat.base.cvatimporter class method)": [[278, "datumaro.plugins.data_formats.cvat.base.CvatImporter.detect"]], "find_sources() (datumaro.plugins.data_formats.cvat.base.cvatimporter class method)": [[278, "datumaro.plugins.data_formats.cvat.base.CvatImporter.find_sources"]], "find_subsets() (datumaro.plugins.data_formats.cvat.base.cvatimporter static method)": [[278, "datumaro.plugins.data_formats.cvat.base.CvatImporter.find_subsets"]], "get_file_extensions() (datumaro.plugins.data_formats.cvat.base.cvatimporter class method)": [[278, "datumaro.plugins.data_formats.cvat.base.CvatImporter.get_file_extensions"]], "cvatexporter (class in datumaro.plugins.data_formats.cvat.exporter)": [[279, "datumaro.plugins.data_formats.cvat.exporter.CvatExporter"]], "default_image_ext (datumaro.plugins.data_formats.cvat.exporter.cvatexporter attribute)": [[279, "datumaro.plugins.data_formats.cvat.exporter.CvatExporter.DEFAULT_IMAGE_EXT"]], "version (datumaro.plugins.data_formats.cvat.exporter.xmlannotationwriter attribute)": [[279, "datumaro.plugins.data_formats.cvat.exporter.XmlAnnotationWriter.VERSION"]], "xmlannotationwriter (class in datumaro.plugins.data_formats.cvat.exporter)": [[279, "datumaro.plugins.data_formats.cvat.exporter.XmlAnnotationWriter"]], "add_attribute() (datumaro.plugins.data_formats.cvat.exporter.xmlannotationwriter method)": [[279, "datumaro.plugins.data_formats.cvat.exporter.XmlAnnotationWriter.add_attribute"]], "build_cmdline_parser() (datumaro.plugins.data_formats.cvat.exporter.cvatexporter class method)": [[279, "datumaro.plugins.data_formats.cvat.exporter.CvatExporter.build_cmdline_parser"]], "close_box() (datumaro.plugins.data_formats.cvat.exporter.xmlannotationwriter method)": [[279, "datumaro.plugins.data_formats.cvat.exporter.XmlAnnotationWriter.close_box"]], "close_image() (datumaro.plugins.data_formats.cvat.exporter.xmlannotationwriter method)": [[279, "datumaro.plugins.data_formats.cvat.exporter.XmlAnnotationWriter.close_image"]], "close_mask() (datumaro.plugins.data_formats.cvat.exporter.xmlannotationwriter method)": [[279, "datumaro.plugins.data_formats.cvat.exporter.XmlAnnotationWriter.close_mask"]], "close_points() (datumaro.plugins.data_formats.cvat.exporter.xmlannotationwriter method)": [[279, "datumaro.plugins.data_formats.cvat.exporter.XmlAnnotationWriter.close_points"]], "close_polygon() (datumaro.plugins.data_formats.cvat.exporter.xmlannotationwriter method)": [[279, "datumaro.plugins.data_formats.cvat.exporter.XmlAnnotationWriter.close_polygon"]], "close_polyline() (datumaro.plugins.data_formats.cvat.exporter.xmlannotationwriter method)": [[279, "datumaro.plugins.data_formats.cvat.exporter.XmlAnnotationWriter.close_polyline"]], "close_root() (datumaro.plugins.data_formats.cvat.exporter.xmlannotationwriter method)": [[279, "datumaro.plugins.data_formats.cvat.exporter.XmlAnnotationWriter.close_root"]], "close_tag() (datumaro.plugins.data_formats.cvat.exporter.xmlannotationwriter method)": [[279, "datumaro.plugins.data_formats.cvat.exporter.XmlAnnotationWriter.close_tag"]], "close_track() (datumaro.plugins.data_formats.cvat.exporter.xmlannotationwriter method)": [[279, "datumaro.plugins.data_formats.cvat.exporter.XmlAnnotationWriter.close_track"]], "datumaro.plugins.data_formats.cvat.exporter": [[279, "module-datumaro.plugins.data_formats.cvat.exporter"]], "open_box() (datumaro.plugins.data_formats.cvat.exporter.xmlannotationwriter method)": [[279, "datumaro.plugins.data_formats.cvat.exporter.XmlAnnotationWriter.open_box"]], "open_image() (datumaro.plugins.data_formats.cvat.exporter.xmlannotationwriter method)": [[279, "datumaro.plugins.data_formats.cvat.exporter.XmlAnnotationWriter.open_image"]], "open_mask() (datumaro.plugins.data_formats.cvat.exporter.xmlannotationwriter method)": [[279, "datumaro.plugins.data_formats.cvat.exporter.XmlAnnotationWriter.open_mask"]], "open_points() (datumaro.plugins.data_formats.cvat.exporter.xmlannotationwriter method)": [[279, "datumaro.plugins.data_formats.cvat.exporter.XmlAnnotationWriter.open_points"]], "open_polygon() (datumaro.plugins.data_formats.cvat.exporter.xmlannotationwriter method)": [[279, "datumaro.plugins.data_formats.cvat.exporter.XmlAnnotationWriter.open_polygon"]], "open_polyline() (datumaro.plugins.data_formats.cvat.exporter.xmlannotationwriter method)": [[279, "datumaro.plugins.data_formats.cvat.exporter.XmlAnnotationWriter.open_polyline"]], "open_root() (datumaro.plugins.data_formats.cvat.exporter.xmlannotationwriter method)": [[279, "datumaro.plugins.data_formats.cvat.exporter.XmlAnnotationWriter.open_root"]], "open_tag() (datumaro.plugins.data_formats.cvat.exporter.xmlannotationwriter method)": [[279, "datumaro.plugins.data_formats.cvat.exporter.XmlAnnotationWriter.open_tag"]], "open_track() (datumaro.plugins.data_formats.cvat.exporter.xmlannotationwriter method)": [[279, "datumaro.plugins.data_formats.cvat.exporter.XmlAnnotationWriter.open_track"]], "patch() (datumaro.plugins.data_formats.cvat.exporter.cvatexporter class method)": [[279, "datumaro.plugins.data_formats.cvat.exporter.CvatExporter.patch"]], "write_meta() (datumaro.plugins.data_formats.cvat.exporter.xmlannotationwriter method)": [[279, "datumaro.plugins.data_formats.cvat.exporter.XmlAnnotationWriter.write_meta"]], "builtin_attrs (datumaro.plugins.data_formats.cvat.format.cvatpath attribute)": [[280, "datumaro.plugins.data_formats.cvat.format.CvatPath.BUILTIN_ATTRS"]], "cvatpath (class in datumaro.plugins.data_formats.cvat.format)": [[280, "datumaro.plugins.data_formats.cvat.format.CvatPath"]], "images_dir (datumaro.plugins.data_formats.cvat.format.cvatpath attribute)": [[280, "datumaro.plugins.data_formats.cvat.format.CvatPath.IMAGES_DIR"]], "image_ext (datumaro.plugins.data_formats.cvat.format.cvatpath attribute)": [[280, "datumaro.plugins.data_formats.cvat.format.CvatPath.IMAGE_EXT"]], "supported_export_shapes (datumaro.plugins.data_formats.cvat.format.cvatpath attribute)": [[280, "datumaro.plugins.data_formats.cvat.format.CvatPath.SUPPORTED_EXPORT_SHAPES"]], "supported_import_shapes (datumaro.plugins.data_formats.cvat.format.cvatpath attribute)": [[280, "datumaro.plugins.data_formats.cvat.format.CvatPath.SUPPORTED_IMPORT_SHAPES"]], "datumaro.plugins.data_formats.cvat.format": [[280, "module-datumaro.plugins.data_formats.cvat.format"]], "datumaro.plugins.data_formats.datumaro": [[281, "module-datumaro.plugins.data_formats.datumaro"]], "allowed_versions (datumaro.plugins.data_formats.datumaro.base.datumarobase attribute)": [[282, "datumaro.plugins.data_formats.datumaro.base.DatumaroBase.ALLOWED_VERSIONS"]], "annotations_dir (datumaro.plugins.data_formats.datumaro.base.datumaropath attribute)": [[282, "datumaro.plugins.data_formats.datumaro.base.DatumaroPath.ANNOTATIONS_DIR"]], "annotation_ext (datumaro.plugins.data_formats.datumaro.base.datumaropath attribute)": [[282, "datumaro.plugins.data_formats.datumaro.base.DatumaroPath.ANNOTATION_EXT"]], "annotationtype (class in datumaro.plugins.data_formats.datumaro.base)": [[282, "datumaro.plugins.data_formats.datumaro.base.AnnotationType"]], "byte_image (datumaro.plugins.data_formats.datumaro.base.mediatype attribute)": [[282, "datumaro.plugins.data_formats.datumaro.base.MediaType.BYTE_IMAGE"]], "bbox (class in datumaro.plugins.data_formats.datumaro.base)": [[282, "datumaro.plugins.data_formats.datumaro.base.Bbox"]], "current_datumaro_format_version (datumaro.plugins.data_formats.datumaro.base.datumarobase attribute)": [[282, "datumaro.plugins.data_formats.datumaro.base.DatumaroBase.CURRENT_DATUMARO_FORMAT_VERSION"]], "caption (class in datumaro.plugins.data_formats.datumaro.base)": [[282, "datumaro.plugins.data_formats.datumaro.base.Caption"]], "cuboid3d (class in datumaro.plugins.data_formats.datumaro.base)": [[282, "datumaro.plugins.data_formats.datumaro.base.Cuboid3d"]], "datasetitem (class in datumaro.plugins.data_formats.datumaro.base)": [[282, "datumaro.plugins.data_formats.datumaro.base.DatasetItem"]], "datumpagemapper (class in datumaro.plugins.data_formats.datumaro.base)": [[282, "datumaro.plugins.data_formats.datumaro.base.DatumPageMapper"]], "datumarobase (class in datumaro.plugins.data_formats.datumaro.base)": [[282, "datumaro.plugins.data_formats.datumaro.base.DatumaroBase"]], "datumaropath (class in datumaro.plugins.data_formats.datumaro.base)": [[282, "datumaro.plugins.data_formats.datumaro.base.DatumaroPath"]], "exclusive (datumaro.plugins.data_formats.datumaro.base.grouptype attribute)": [[282, "datumaro.plugins.data_formats.datumaro.base.GroupType.EXCLUSIVE"]], "ellipse (class in datumaro.plugins.data_formats.datumaro.base)": [[282, "datumaro.plugins.data_formats.datumaro.base.Ellipse"]], "grouptype (class in datumaro.plugins.data_formats.datumaro.base)": [[282, "datumaro.plugins.data_formats.datumaro.base.GroupType"]], "image (datumaro.plugins.data_formats.datumaro.base.mediatype attribute)": [[282, "datumaro.plugins.data_formats.datumaro.base.MediaType.IMAGE"]], "images_dir (datumaro.plugins.data_formats.datumaro.base.datumaropath attribute)": [[282, "datumaro.plugins.data_formats.datumaro.base.DatumaroPath.IMAGES_DIR"]], "image_ext (datumaro.plugins.data_formats.datumaro.base.datumaropath attribute)": [[282, "datumaro.plugins.data_formats.datumaro.base.DatumaroPath.IMAGE_EXT"]], "inclusive (datumaro.plugins.data_formats.datumaro.base.grouptype attribute)": [[282, "datumaro.plugins.data_formats.datumaro.base.GroupType.INCLUSIVE"]], "image (class in datumaro.plugins.data_formats.datumaro.base)": [[282, "datumaro.plugins.data_formats.datumaro.base.Image"]], "importcontext (class in datumaro.plugins.data_formats.datumaro.base)": [[282, "datumaro.plugins.data_formats.datumaro.base.ImportContext"]], "jsonreader (class in datumaro.plugins.data_formats.datumaro.base)": [[282, "datumaro.plugins.data_formats.datumaro.base.JsonReader"]], "legacy_version (datumaro.plugins.data_formats.datumaro.base.datumarobase attribute)": [[282, "datumaro.plugins.data_formats.datumaro.base.DatumaroBase.LEGACY_VERSION"]], "label (class in datumaro.plugins.data_formats.datumaro.base)": [[282, "datumaro.plugins.data_formats.datumaro.base.Label"]], "labelcategories (class in datumaro.plugins.data_formats.datumaro.base)": [[282, "datumaro.plugins.data_formats.datumaro.base.LabelCategories"]], "labelcategories.category (class in datumaro.plugins.data_formats.datumaro.base)": [[282, "datumaro.plugins.data_formats.datumaro.base.LabelCategories.Category"]], "labelcategories.labelgroup (class in datumaro.plugins.data_formats.datumaro.base)": [[282, "datumaro.plugins.data_formats.datumaro.base.LabelCategories.LabelGroup"]], "masks_dir (datumaro.plugins.data_formats.datumaro.base.datumaropath attribute)": [[282, "datumaro.plugins.data_formats.datumaro.base.DatumaroPath.MASKS_DIR"]], "mask_ext (datumaro.plugins.data_formats.datumaro.base.datumaropath attribute)": [[282, "datumaro.plugins.data_formats.datumaro.base.DatumaroPath.MASK_EXT"]], "media_element (datumaro.plugins.data_formats.datumaro.base.mediatype attribute)": [[282, "datumaro.plugins.data_formats.datumaro.base.MediaType.MEDIA_ELEMENT"]], "mosaic_image (datumaro.plugins.data_formats.datumaro.base.mediatype attribute)": [[282, "datumaro.plugins.data_formats.datumaro.base.MediaType.MOSAIC_IMAGE"]], "multiframe_image (datumaro.plugins.data_formats.datumaro.base.mediatype attribute)": [[282, "datumaro.plugins.data_formats.datumaro.base.MediaType.MULTIFRAME_IMAGE"]], "maskcategories (class in datumaro.plugins.data_formats.datumaro.base)": [[282, "datumaro.plugins.data_formats.datumaro.base.MaskCategories"]], "mediaelement (class in datumaro.plugins.data_formats.datumaro.base)": [[282, "datumaro.plugins.data_formats.datumaro.base.MediaElement"]], "mediatype (class in datumaro.plugins.data_formats.datumaro.base)": [[282, "datumaro.plugins.data_formats.datumaro.base.MediaType"]], "none (datumaro.plugins.data_formats.datumaro.base.mediatype attribute)": [[282, "datumaro.plugins.data_formats.datumaro.base.MediaType.NONE"]], "pcd_dir (datumaro.plugins.data_formats.datumaro.base.datumaropath attribute)": [[282, "datumaro.plugins.data_formats.datumaro.base.DatumaroPath.PCD_DIR"]], "point_cloud (datumaro.plugins.data_formats.datumaro.base.mediatype attribute)": [[282, "datumaro.plugins.data_formats.datumaro.base.MediaType.POINT_CLOUD"]], "pointcloud (class in datumaro.plugins.data_formats.datumaro.base)": [[282, "datumaro.plugins.data_formats.datumaro.base.PointCloud"]], "points (class in datumaro.plugins.data_formats.datumaro.base)": [[282, "datumaro.plugins.data_formats.datumaro.base.Points"]], "points.visibility (class in datumaro.plugins.data_formats.datumaro.base)": [[282, "datumaro.plugins.data_formats.datumaro.base.Points.Visibility"]], "pointscategories (class in datumaro.plugins.data_formats.datumaro.base)": [[282, "datumaro.plugins.data_formats.datumaro.base.PointsCategories"]], "pointscategories.category (class in datumaro.plugins.data_formats.datumaro.base)": [[282, "datumaro.plugins.data_formats.datumaro.base.PointsCategories.Category"]], "polyline (class in datumaro.plugins.data_formats.datumaro.base)": [[282, "datumaro.plugins.data_formats.datumaro.base.PolyLine"]], "polygon (class in datumaro.plugins.data_formats.datumaro.base)": [[282, "datumaro.plugins.data_formats.datumaro.base.Polygon"]], "restricted (datumaro.plugins.data_formats.datumaro.base.grouptype attribute)": [[282, "datumaro.plugins.data_formats.datumaro.base.GroupType.RESTRICTED"]], "roi_image (datumaro.plugins.data_formats.datumaro.base.mediatype attribute)": [[282, "datumaro.plugins.data_formats.datumaro.base.MediaType.ROI_IMAGE"]], "rlemask (class in datumaro.plugins.data_formats.datumaro.base)": [[282, "datumaro.plugins.data_formats.datumaro.base.RleMask"]], "streamjsonreader (class in datumaro.plugins.data_formats.datumaro.base)": [[282, "datumaro.plugins.data_formats.datumaro.base.StreamJsonReader"]], "subsetbase (class in datumaro.plugins.data_formats.datumaro.base)": [[282, "datumaro.plugins.data_formats.datumaro.base.SubsetBase"]], "table_row (datumaro.plugins.data_formats.datumaro.base.mediatype attribute)": [[282, "datumaro.plugins.data_formats.datumaro.base.MediaType.TABLE_ROW"]], "video (datumaro.plugins.data_formats.datumaro.base.mediatype attribute)": [[282, "datumaro.plugins.data_formats.datumaro.base.MediaType.VIDEO"]], "video_dir (datumaro.plugins.data_formats.datumaro.base.datumaropath attribute)": [[282, "datumaro.plugins.data_formats.datumaro.base.DatumaroPath.VIDEO_DIR"]], "video_frame (datumaro.plugins.data_formats.datumaro.base.mediatype attribute)": [[282, "datumaro.plugins.data_formats.datumaro.base.MediaType.VIDEO_FRAME"]], "video (class in datumaro.plugins.data_formats.datumaro.base)": [[282, "datumaro.plugins.data_formats.datumaro.base.Video"]], "videoframe (class in datumaro.plugins.data_formats.datumaro.base)": [[282, "datumaro.plugins.data_formats.datumaro.base.VideoFrame"]], "__attrs_post_init__() (datumaro.plugins.data_formats.datumaro.base.points method)": [[282, "datumaro.plugins.data_formats.datumaro.base.Points.__attrs_post_init__"]], "__attrs_post_init__() (datumaro.plugins.data_formats.datumaro.base.polygon method)": [[282, "datumaro.plugins.data_formats.datumaro.base.Polygon.__attrs_post_init__"]], "__eq__() (datumaro.plugins.data_formats.datumaro.base.polygon method)": [[282, "datumaro.plugins.data_formats.datumaro.base.Polygon.__eq__"]], "__init__() (datumaro.plugins.data_formats.datumaro.base.bbox method)": [[282, "datumaro.plugins.data_formats.datumaro.base.Bbox.__init__"]], "__init__() (datumaro.plugins.data_formats.datumaro.base.cuboid3d method)": [[282, "datumaro.plugins.data_formats.datumaro.base.Cuboid3d.__init__"]], "_get_shoelace_area() (datumaro.plugins.data_formats.datumaro.base.polygon method)": [[282, "datumaro.plugins.data_formats.datumaro.base.Polygon._get_shoelace_area"]], "_points (datumaro.plugins.data_formats.datumaro.base.cuboid3d attribute)": [[282, "datumaro.plugins.data_formats.datumaro.base.Cuboid3d._points"]], "_type (datumaro.plugins.data_formats.datumaro.base.bbox attribute)": [[282, "datumaro.plugins.data_formats.datumaro.base.Bbox._type"]], "_type (datumaro.plugins.data_formats.datumaro.base.cuboid3d attribute)": [[282, "datumaro.plugins.data_formats.datumaro.base.Cuboid3d._type"]], "_type (datumaro.plugins.data_formats.datumaro.base.points attribute)": [[282, "datumaro.plugins.data_formats.datumaro.base.Points._type"]], "_type (datumaro.plugins.data_formats.datumaro.base.polyline attribute)": [[282, "datumaro.plugins.data_formats.datumaro.base.PolyLine._type"]], "_type (datumaro.plugins.data_formats.datumaro.base.polygon attribute)": [[282, "datumaro.plugins.data_formats.datumaro.base.Polygon._type"]], "absent (datumaro.plugins.data_formats.datumaro.base.points.visibility attribute)": [[282, "datumaro.plugins.data_formats.datumaro.base.Points.Visibility.absent"], [282, "id13"]], "add() (datumaro.plugins.data_formats.datumaro.base.labelcategories method)": [[282, "datumaro.plugins.data_formats.datumaro.base.LabelCategories.add"]], "add() (datumaro.plugins.data_formats.datumaro.base.pointscategories method)": [[282, "datumaro.plugins.data_formats.datumaro.base.PointsCategories.add"]], "add_label_group() (datumaro.plugins.data_formats.datumaro.base.labelcategories method)": [[282, "datumaro.plugins.data_formats.datumaro.base.LabelCategories.add_label_group"]], "ann_types (datumaro.plugins.data_formats.datumaro.base.datumpagemapper property)": [[282, "datumaro.plugins.data_formats.datumaro.base.DatumPageMapper.ann_types"]], "ann_types() (datumaro.plugins.data_formats.datumaro.base.datumarobase method)": [[282, "datumaro.plugins.data_formats.datumaro.base.DatumaroBase.ann_types"]], "annotations (datumaro.plugins.data_formats.datumaro.base.datasetitem attribute)": [[282, "datumaro.plugins.data_formats.datumaro.base.DatasetItem.annotations"]], "as_dict() (datumaro.plugins.data_formats.datumaro.base.mediaelement method)": [[282, "datumaro.plugins.data_formats.datumaro.base.MediaElement.as_dict"]], "as_dict() (datumaro.plugins.data_formats.datumaro.base.videoframe method)": [[282, "datumaro.plugins.data_formats.datumaro.base.VideoFrame.as_dict"]], "as_polygon() (datumaro.plugins.data_formats.datumaro.base.bbox method)": [[282, "datumaro.plugins.data_formats.datumaro.base.Bbox.as_polygon"], [282, "id6"]], "as_polygon() (datumaro.plugins.data_formats.datumaro.base.ellipse method)": [[282, "datumaro.plugins.data_formats.datumaro.base.Ellipse.as_polygon"]], "as_polygon() (datumaro.plugins.data_formats.datumaro.base.polyline method)": [[282, "datumaro.plugins.data_formats.datumaro.base.PolyLine.as_polygon"], [282, "id19"]], "as_polygon() (datumaro.plugins.data_formats.datumaro.base.polygon method)": [[282, "datumaro.plugins.data_formats.datumaro.base.Polygon.as_polygon"], [282, "id22"]], "attributes (datumaro.plugins.data_formats.datumaro.base.datasetitem attribute)": [[282, "datumaro.plugins.data_formats.datumaro.base.DatasetItem.attributes"]], "attributes (datumaro.plugins.data_formats.datumaro.base.labelcategories.category attribute)": [[282, "datumaro.plugins.data_formats.datumaro.base.LabelCategories.Category.attributes"]], "bbox (datumaro.plugins.data_formats.datumaro.base.annotationtype attribute)": [[282, "datumaro.plugins.data_formats.datumaro.base.AnnotationType.bbox"]], "bytes (datumaro.plugins.data_formats.datumaro.base.mediaelement property)": [[282, "datumaro.plugins.data_formats.datumaro.base.MediaElement.bytes"]], "c_x (datumaro.plugins.data_formats.datumaro.base.ellipse property)": [[282, "datumaro.plugins.data_formats.datumaro.base.Ellipse.c_x"]], "c_y (datumaro.plugins.data_formats.datumaro.base.ellipse property)": [[282, "datumaro.plugins.data_formats.datumaro.base.Ellipse.c_y"]], "caption (datumaro.plugins.data_formats.datumaro.base.annotationtype attribute)": [[282, "datumaro.plugins.data_formats.datumaro.base.AnnotationType.caption"]], "caption (datumaro.plugins.data_formats.datumaro.base.caption attribute)": [[282, "datumaro.plugins.data_formats.datumaro.base.Caption.caption"]], "categories (datumaro.plugins.data_formats.datumaro.base.datumpagemapper property)": [[282, "datumaro.plugins.data_formats.datumaro.base.DatumPageMapper.categories"]], "categories() (datumaro.plugins.data_formats.datumaro.base.datumarobase method)": [[282, "datumaro.plugins.data_formats.datumaro.base.DatumaroBase.categories"]], "categories() (datumaro.plugins.data_formats.datumaro.base.subsetbase method)": [[282, "datumaro.plugins.data_formats.datumaro.base.SubsetBase.categories"]], "close() (datumaro.plugins.data_formats.datumaro.base.video method)": [[282, "datumaro.plugins.data_formats.datumaro.base.Video.close"]], "colormap (datumaro.plugins.data_formats.datumaro.base.maskcategories attribute)": [[282, "datumaro.plugins.data_formats.datumaro.base.MaskCategories.colormap"]], "cuboid_3d (datumaro.plugins.data_formats.datumaro.base.annotationtype attribute)": [[282, "datumaro.plugins.data_formats.datumaro.base.AnnotationType.cuboid_3d"]], "data (datumaro.plugins.data_formats.datumaro.base.mediaelement property)": [[282, "datumaro.plugins.data_formats.datumaro.base.MediaElement.data"]], "datumaro.plugins.data_formats.datumaro.base": [[282, "module-datumaro.plugins.data_formats.datumaro.base"]], "depth_annotation (datumaro.plugins.data_formats.datumaro.base.annotationtype attribute)": [[282, "datumaro.plugins.data_formats.datumaro.base.AnnotationType.depth_annotation"]], "dm_format_version (datumaro.plugins.data_formats.datumaro.base.datumpagemapper property)": [[282, "datumaro.plugins.data_formats.datumaro.base.DatumPageMapper.dm_format_version"]], "ellipse (datumaro.plugins.data_formats.datumaro.base.annotationtype attribute)": [[282, "datumaro.plugins.data_formats.datumaro.base.AnnotationType.ellipse"]], "error_policy (datumaro.plugins.data_formats.datumaro.base.importcontext attribute)": [[282, "datumaro.plugins.data_formats.datumaro.base.ImportContext.error_policy"]], "ext (datumaro.plugins.data_formats.datumaro.base.image property)": [[282, "datumaro.plugins.data_formats.datumaro.base.Image.ext"]], "ext (datumaro.plugins.data_formats.datumaro.base.video property)": [[282, "datumaro.plugins.data_formats.datumaro.base.Video.ext"]], "extra_images (datumaro.plugins.data_formats.datumaro.base.pointcloud property)": [[282, "datumaro.plugins.data_formats.datumaro.base.PointCloud.extra_images"]], "feature_vector (datumaro.plugins.data_formats.datumaro.base.annotationtype attribute)": [[282, "datumaro.plugins.data_formats.datumaro.base.AnnotationType.feature_vector"]], "find() (datumaro.plugins.data_formats.datumaro.base.labelcategories method)": [[282, "datumaro.plugins.data_formats.datumaro.base.LabelCategories.find"]], "frame_size (datumaro.plugins.data_formats.datumaro.base.video property)": [[282, "datumaro.plugins.data_formats.datumaro.base.Video.frame_size"]], "from_bytes() (datumaro.plugins.data_formats.datumaro.base.image class method)": [[282, "datumaro.plugins.data_formats.datumaro.base.Image.from_bytes"]], "from_bytes() (datumaro.plugins.data_formats.datumaro.base.pointcloud class method)": [[282, "datumaro.plugins.data_formats.datumaro.base.PointCloud.from_bytes"]], "from_file() (datumaro.plugins.data_formats.datumaro.base.image class method)": [[282, "datumaro.plugins.data_formats.datumaro.base.Image.from_file"]], "from_file() (datumaro.plugins.data_formats.datumaro.base.pointcloud class method)": [[282, "datumaro.plugins.data_formats.datumaro.base.PointCloud.from_file"]], "from_iterable() (datumaro.plugins.data_formats.datumaro.base.labelcategories class method)": [[282, "datumaro.plugins.data_formats.datumaro.base.LabelCategories.from_iterable"]], "from_iterable() (datumaro.plugins.data_formats.datumaro.base.pointscategories class method)": [[282, "datumaro.plugins.data_formats.datumaro.base.PointsCategories.from_iterable"]], "from_numpy() (datumaro.plugins.data_formats.datumaro.base.image class method)": [[282, "datumaro.plugins.data_formats.datumaro.base.Image.from_numpy"]], "from_self() (datumaro.plugins.data_formats.datumaro.base.mediaelement method)": [[282, "datumaro.plugins.data_formats.datumaro.base.MediaElement.from_self"]], "from_self() (datumaro.plugins.data_formats.datumaro.base.videoframe method)": [[282, "datumaro.plugins.data_formats.datumaro.base.VideoFrame.from_self"]], "from_str() (datumaro.plugins.data_formats.datumaro.base.grouptype class method)": [[282, "datumaro.plugins.data_formats.datumaro.base.GroupType.from_str"]], "generate() (datumaro.plugins.data_formats.datumaro.base.maskcategories class method)": [[282, "datumaro.plugins.data_formats.datumaro.base.MaskCategories.generate"]], "get() (datumaro.plugins.data_formats.datumaro.base.subsetbase method)": [[282, "datumaro.plugins.data_formats.datumaro.base.SubsetBase.get"]], "get_area() (datumaro.plugins.data_formats.datumaro.base.bbox method)": [[282, "datumaro.plugins.data_formats.datumaro.base.Bbox.get_area"], [282, "id4"]], "get_area() (datumaro.plugins.data_formats.datumaro.base.ellipse method)": [[282, "datumaro.plugins.data_formats.datumaro.base.Ellipse.get_area"]], "get_area() (datumaro.plugins.data_formats.datumaro.base.points method)": [[282, "datumaro.plugins.data_formats.datumaro.base.Points.get_area"], [282, "id17"]], "get_area() (datumaro.plugins.data_formats.datumaro.base.polyline method)": [[282, "datumaro.plugins.data_formats.datumaro.base.PolyLine.get_area"], [282, "id20"]], "get_area() (datumaro.plugins.data_formats.datumaro.base.polygon method)": [[282, "datumaro.plugins.data_formats.datumaro.base.Polygon.get_area"], [282, "id21"]], "get_area() (datumaro.plugins.data_formats.datumaro.base.rlemask method)": [[282, "datumaro.plugins.data_formats.datumaro.base.RleMask.get_area"]], "get_bbox() (datumaro.plugins.data_formats.datumaro.base.bbox method)": [[282, "datumaro.plugins.data_formats.datumaro.base.Bbox.get_bbox"], [282, "id5"]], "get_bbox() (datumaro.plugins.data_formats.datumaro.base.ellipse method)": [[282, "datumaro.plugins.data_formats.datumaro.base.Ellipse.get_bbox"]], "get_bbox() (datumaro.plugins.data_formats.datumaro.base.points method)": [[282, "datumaro.plugins.data_formats.datumaro.base.Points.get_bbox"], [282, "id18"]], "get_bbox() (datumaro.plugins.data_formats.datumaro.base.rlemask method)": [[282, "datumaro.plugins.data_formats.datumaro.base.RleMask.get_bbox"]], "get_frame_data() (datumaro.plugins.data_formats.datumaro.base.video method)": [[282, "datumaro.plugins.data_formats.datumaro.base.Video.get_frame_data"]], "get_item_dict() (datumaro.plugins.data_formats.datumaro.base.datumpagemapper method)": [[282, "datumaro.plugins.data_formats.datumaro.base.DatumPageMapper.get_item_dict"]], "get_points() (datumaro.plugins.data_formats.datumaro.base.ellipse method)": [[282, "datumaro.plugins.data_formats.datumaro.base.Ellipse.get_points"]], "group_type (datumaro.plugins.data_formats.datumaro.base.labelcategories.labelgroup attribute)": [[282, "datumaro.plugins.data_formats.datumaro.base.LabelCategories.LabelGroup.group_type"]], "h (datumaro.plugins.data_formats.datumaro.base.bbox property)": [[282, "id3"]], "h (datumaro.plugins.data_formats.datumaro.base.ellipse property)": [[282, "datumaro.plugins.data_formats.datumaro.base.Ellipse.h"]], "h() (datumaro.plugins.data_formats.datumaro.base.bbox method)": [[282, "datumaro.plugins.data_formats.datumaro.base.Bbox.h"]], "has_data (datumaro.plugins.data_formats.datumaro.base.mediaelement property)": [[282, "datumaro.plugins.data_formats.datumaro.base.MediaElement.has_data"]], "has_size (datumaro.plugins.data_formats.datumaro.base.image property)": [[282, "datumaro.plugins.data_formats.datumaro.base.Image.has_size"]], "hash_key (datumaro.plugins.data_formats.datumaro.base.annotationtype attribute)": [[282, "datumaro.plugins.data_formats.datumaro.base.AnnotationType.hash_key"]], "hidden (datumaro.plugins.data_formats.datumaro.base.points.visibility attribute)": [[282, "datumaro.plugins.data_formats.datumaro.base.Points.Visibility.hidden"], [282, "id14"]], "id (datumaro.plugins.data_formats.datumaro.base.datasetitem attribute)": [[282, "datumaro.plugins.data_formats.datumaro.base.DatasetItem.id"]], "image (datumaro.plugins.data_formats.datumaro.base.rlemask property)": [[282, "datumaro.plugins.data_formats.datumaro.base.RleMask.image"]], "index (datumaro.plugins.data_formats.datumaro.base.videoframe property)": [[282, "datumaro.plugins.data_formats.datumaro.base.VideoFrame.index"]], "infos (datumaro.plugins.data_formats.datumaro.base.datumpagemapper property)": [[282, "datumaro.plugins.data_formats.datumaro.base.DatumPageMapper.infos"]], "infos() (datumaro.plugins.data_formats.datumaro.base.datumarobase method)": [[282, "datumaro.plugins.data_formats.datumaro.base.DatumaroBase.infos"]], "infos() (datumaro.plugins.data_formats.datumaro.base.subsetbase method)": [[282, "datumaro.plugins.data_formats.datumaro.base.SubsetBase.infos"]], "inverse_colormap (datumaro.plugins.data_formats.datumaro.base.maskcategories property)": [[282, "datumaro.plugins.data_formats.datumaro.base.MaskCategories.inverse_colormap"]], "iou() (datumaro.plugins.data_formats.datumaro.base.bbox method)": [[282, "datumaro.plugins.data_formats.datumaro.base.Bbox.iou"], [282, "id7"]], "iou() (datumaro.plugins.data_formats.datumaro.base.ellipse method)": [[282, "datumaro.plugins.data_formats.datumaro.base.Ellipse.iou"]], "is_encrypted (datumaro.plugins.data_formats.datumaro.base.mediaelement property)": [[282, "datumaro.plugins.data_formats.datumaro.base.MediaElement.is_encrypted"]], "is_stream (datumaro.plugins.data_formats.datumaro.base.datumarobase property)": [[282, "datumaro.plugins.data_formats.datumaro.base.DatumaroBase.is_stream"]], "items (datumaro.plugins.data_formats.datumaro.base.labelcategories attribute)": [[282, "datumaro.plugins.data_formats.datumaro.base.LabelCategories.items"]], "items (datumaro.plugins.data_formats.datumaro.base.pointscategories attribute)": [[282, "datumaro.plugins.data_formats.datumaro.base.PointsCategories.items"]], "iter_item_ids() (datumaro.plugins.data_formats.datumaro.base.datumpagemapper method)": [[282, "datumaro.plugins.data_formats.datumaro.base.DatumPageMapper.iter_item_ids"]], "joints (datumaro.plugins.data_formats.datumaro.base.pointscategories.category attribute)": [[282, "datumaro.plugins.data_formats.datumaro.base.PointsCategories.Category.joints"]], "label (datumaro.plugins.data_formats.datumaro.base.annotationtype attribute)": [[282, "datumaro.plugins.data_formats.datumaro.base.AnnotationType.label"]], "label (datumaro.plugins.data_formats.datumaro.base.cuboid3d attribute)": [[282, "datumaro.plugins.data_formats.datumaro.base.Cuboid3d.label"], [282, "id9"]], "label (datumaro.plugins.data_formats.datumaro.base.label attribute)": [[282, "datumaro.plugins.data_formats.datumaro.base.Label.label"]], "label_groups (datumaro.plugins.data_formats.datumaro.base.labelcategories attribute)": [[282, "datumaro.plugins.data_formats.datumaro.base.LabelCategories.label_groups"]], "labels (datumaro.plugins.data_formats.datumaro.base.labelcategories.labelgroup attribute)": [[282, "datumaro.plugins.data_formats.datumaro.base.LabelCategories.LabelGroup.labels"]], "labels (datumaro.plugins.data_formats.datumaro.base.pointscategories.category attribute)": [[282, "datumaro.plugins.data_formats.datumaro.base.PointsCategories.Category.labels"]], "length (datumaro.plugins.data_formats.datumaro.base.video property)": [[282, "datumaro.plugins.data_formats.datumaro.base.Video.length"]], "mask (datumaro.plugins.data_formats.datumaro.base.annotationtype attribute)": [[282, "datumaro.plugins.data_formats.datumaro.base.AnnotationType.mask"]], "media (datumaro.plugins.data_formats.datumaro.base.datasetitem attribute)": [[282, "datumaro.plugins.data_formats.datumaro.base.DatasetItem.media"]], "media (datumaro.plugins.data_formats.datumaro.base.mediatype property)": [[282, "datumaro.plugins.data_formats.datumaro.base.MediaType.media"]], "media_as() (datumaro.plugins.data_formats.datumaro.base.datasetitem method)": [[282, "datumaro.plugins.data_formats.datumaro.base.DatasetItem.media_as"]], "media_type (datumaro.plugins.data_formats.datumaro.base.datumpagemapper property)": [[282, "datumaro.plugins.data_formats.datumaro.base.DatumPageMapper.media_type"]], "media_type() (datumaro.plugins.data_formats.datumaro.base.datumarobase method)": [[282, "datumaro.plugins.data_formats.datumaro.base.DatumaroBase.media_type"]], "name (datumaro.plugins.data_formats.datumaro.base.labelcategories.category attribute)": [[282, "datumaro.plugins.data_formats.datumaro.base.LabelCategories.Category.name"]], "name (datumaro.plugins.data_formats.datumaro.base.labelcategories.labelgroup attribute)": [[282, "datumaro.plugins.data_formats.datumaro.base.LabelCategories.LabelGroup.name"]], "parent (datumaro.plugins.data_formats.datumaro.base.labelcategories.category attribute)": [[282, "datumaro.plugins.data_formats.datumaro.base.LabelCategories.Category.parent"]], "parse_json_file() (in module datumaro.plugins.data_formats.datumaro.base)": [[282, "datumaro.plugins.data_formats.datumaro.base.parse_json_file"]], "path (datumaro.plugins.data_formats.datumaro.base.video property)": [[282, "datumaro.plugins.data_formats.datumaro.base.Video.path"]], "path (datumaro.plugins.data_formats.datumaro.base.videoframe property)": [[282, "datumaro.plugins.data_formats.datumaro.base.VideoFrame.path"]], "points (datumaro.plugins.data_formats.datumaro.base.annotationtype attribute)": [[282, "datumaro.plugins.data_formats.datumaro.base.AnnotationType.points"]], "polygon (datumaro.plugins.data_formats.datumaro.base.annotationtype attribute)": [[282, "datumaro.plugins.data_formats.datumaro.base.AnnotationType.polygon"]], "polyline (datumaro.plugins.data_formats.datumaro.base.annotationtype attribute)": [[282, "datumaro.plugins.data_formats.datumaro.base.AnnotationType.polyline"]], "position (datumaro.plugins.data_formats.datumaro.base.cuboid3d property)": [[282, "id10"]], "position() (datumaro.plugins.data_formats.datumaro.base.cuboid3d method)": [[282, "datumaro.plugins.data_formats.datumaro.base.Cuboid3d.position"]], "progress_reporter (datumaro.plugins.data_formats.datumaro.base.importcontext attribute)": [[282, "datumaro.plugins.data_formats.datumaro.base.ImportContext.progress_reporter"]], "rle (datumaro.plugins.data_formats.datumaro.base.rlemask property)": [[282, "datumaro.plugins.data_formats.datumaro.base.RleMask.rle"]], "rotated_bbox (datumaro.plugins.data_formats.datumaro.base.annotationtype attribute)": [[282, "datumaro.plugins.data_formats.datumaro.base.AnnotationType.rotated_bbox"]], "rotation (datumaro.plugins.data_formats.datumaro.base.cuboid3d property)": [[282, "id11"]], "rotation() (datumaro.plugins.data_formats.datumaro.base.cuboid3d method)": [[282, "datumaro.plugins.data_formats.datumaro.base.Cuboid3d.rotation"]], "save() (datumaro.plugins.data_formats.datumaro.base.mediaelement method)": [[282, "datumaro.plugins.data_formats.datumaro.base.MediaElement.save"]], "save() (datumaro.plugins.data_formats.datumaro.base.video method)": [[282, "datumaro.plugins.data_formats.datumaro.base.Video.save"]], "scale (datumaro.plugins.data_formats.datumaro.base.cuboid3d property)": [[282, "id12"]], "scale() (datumaro.plugins.data_formats.datumaro.base.cuboid3d method)": [[282, "datumaro.plugins.data_formats.datumaro.base.Cuboid3d.scale"]], "set_crypter() (datumaro.plugins.data_formats.datumaro.base.image method)": [[282, "datumaro.plugins.data_formats.datumaro.base.Image.set_crypter"]], "set_crypter() (datumaro.plugins.data_formats.datumaro.base.mediaelement method)": [[282, "datumaro.plugins.data_formats.datumaro.base.MediaElement.set_crypter"]], "size (datumaro.plugins.data_formats.datumaro.base.image property)": [[282, "datumaro.plugins.data_formats.datumaro.base.Image.size"]], "size (datumaro.plugins.data_formats.datumaro.base.videoframe property)": [[282, "datumaro.plugins.data_formats.datumaro.base.VideoFrame.size"]], "subset (datumaro.plugins.data_formats.datumaro.base.datasetitem attribute)": [[282, "datumaro.plugins.data_formats.datumaro.base.DatasetItem.subset"]], "subset (datumaro.plugins.data_formats.datumaro.base.subsetbase property)": [[282, "datumaro.plugins.data_formats.datumaro.base.SubsetBase.subset"]], "super_resolution_annotation (datumaro.plugins.data_formats.datumaro.base.annotationtype attribute)": [[282, "datumaro.plugins.data_formats.datumaro.base.AnnotationType.super_resolution_annotation"]], "tabular (datumaro.plugins.data_formats.datumaro.base.annotationtype attribute)": [[282, "datumaro.plugins.data_formats.datumaro.base.AnnotationType.tabular"]], "to_str() (datumaro.plugins.data_formats.datumaro.base.grouptype method)": [[282, "datumaro.plugins.data_formats.datumaro.base.GroupType.to_str"]], "type (datumaro.plugins.data_formats.datumaro.base.mediaelement property)": [[282, "datumaro.plugins.data_formats.datumaro.base.MediaElement.type"]], "unknown (datumaro.plugins.data_formats.datumaro.base.annotationtype attribute)": [[282, "datumaro.plugins.data_formats.datumaro.base.AnnotationType.unknown"]], "video (datumaro.plugins.data_formats.datumaro.base.videoframe property)": [[282, "datumaro.plugins.data_formats.datumaro.base.VideoFrame.video"]], "visibility (datumaro.plugins.data_formats.datumaro.base.points attribute)": [[282, "datumaro.plugins.data_formats.datumaro.base.Points.visibility"], [282, "id16"]], "visible (datumaro.plugins.data_formats.datumaro.base.points.visibility attribute)": [[282, "datumaro.plugins.data_formats.datumaro.base.Points.Visibility.visible"], [282, "id15"]], "w (datumaro.plugins.data_formats.datumaro.base.bbox property)": [[282, "id2"]], "w (datumaro.plugins.data_formats.datumaro.base.ellipse property)": [[282, "datumaro.plugins.data_formats.datumaro.base.Ellipse.w"]], "w() (datumaro.plugins.data_formats.datumaro.base.bbox method)": [[282, "datumaro.plugins.data_formats.datumaro.base.Bbox.w"]], "wrap() (datumaro.plugins.data_formats.datumaro.base.bbox method)": [[282, "datumaro.plugins.data_formats.datumaro.base.Bbox.wrap"], [282, "id8"]], "wrap() (datumaro.plugins.data_formats.datumaro.base.datasetitem method)": [[282, "datumaro.plugins.data_formats.datumaro.base.DatasetItem.wrap"]], "wrap() (datumaro.plugins.data_formats.datumaro.base.ellipse method)": [[282, "datumaro.plugins.data_formats.datumaro.base.Ellipse.wrap"]], "x (datumaro.plugins.data_formats.datumaro.base.bbox property)": [[282, "id0"]], "x() (datumaro.plugins.data_formats.datumaro.base.bbox method)": [[282, "datumaro.plugins.data_formats.datumaro.base.Bbox.x"]], "x1 (datumaro.plugins.data_formats.datumaro.base.ellipse property)": [[282, "datumaro.plugins.data_formats.datumaro.base.Ellipse.x1"]], "x2 (datumaro.plugins.data_formats.datumaro.base.ellipse property)": [[282, "datumaro.plugins.data_formats.datumaro.base.Ellipse.x2"]], "y (datumaro.plugins.data_formats.datumaro.base.bbox property)": [[282, "id1"]], "y() (datumaro.plugins.data_formats.datumaro.base.bbox method)": [[282, "datumaro.plugins.data_formats.datumaro.base.Bbox.y"]], "y1 (datumaro.plugins.data_formats.datumaro.base.ellipse property)": [[282, "datumaro.plugins.data_formats.datumaro.base.Ellipse.y1"]], "y2 (datumaro.plugins.data_formats.datumaro.base.ellipse property)": [[282, "datumaro.plugins.data_formats.datumaro.base.Ellipse.y2"]], "default_image_ext (datumaro.plugins.data_formats.datumaro.exporter.datumaroexporter attribute)": [[283, "datumaro.plugins.data_formats.datumaro.exporter.DatumaroExporter.DEFAULT_IMAGE_EXT"]], "datumaroexporter (class in datumaro.plugins.data_formats.datumaro.exporter)": [[283, "datumaro.plugins.data_formats.datumaro.exporter.DatumaroExporter"]], "jsonwriter (class in datumaro.plugins.data_formats.datumaro.exporter)": [[283, "datumaro.plugins.data_formats.datumaro.exporter.JsonWriter"]], "path_cls (datumaro.plugins.data_formats.datumaro.exporter.datumaroexporter attribute)": [[283, "datumaro.plugins.data_formats.datumaro.exporter.DatumaroExporter.PATH_CLS"]], "can_stream (datumaro.plugins.data_formats.datumaro.exporter.datumaroexporter property)": [[283, "datumaro.plugins.data_formats.datumaro.exporter.DatumaroExporter.can_stream"]], "create_writer() (datumaro.plugins.data_formats.datumaro.exporter.datumaroexporter method)": [[283, "datumaro.plugins.data_formats.datumaro.exporter.DatumaroExporter.create_writer"]], "datumaro.plugins.data_formats.datumaro.exporter": [[283, "module-datumaro.plugins.data_formats.datumaro.exporter"]], "patch() (datumaro.plugins.data_formats.datumaro.exporter.datumaroexporter class method)": [[283, "datumaro.plugins.data_formats.datumaro.exporter.DatumaroExporter.patch"]], "write_categories() (datumaro.plugins.data_formats.datumaro.exporter.jsonwriter class method)": [[283, "datumaro.plugins.data_formats.datumaro.exporter.JsonWriter.write_categories"]], "annotations_dir (datumaro.plugins.data_formats.datumaro.format.datumaropath attribute)": [[284, "datumaro.plugins.data_formats.datumaro.format.DatumaroPath.ANNOTATIONS_DIR"]], "annotation_ext (datumaro.plugins.data_formats.datumaro.format.datumaropath attribute)": [[284, "datumaro.plugins.data_formats.datumaro.format.DatumaroPath.ANNOTATION_EXT"]], "datumaropath (class in datumaro.plugins.data_formats.datumaro.format)": [[284, "datumaro.plugins.data_formats.datumaro.format.DatumaroPath"]], "images_dir (datumaro.plugins.data_formats.datumaro.format.datumaropath attribute)": [[284, "datumaro.plugins.data_formats.datumaro.format.DatumaroPath.IMAGES_DIR"]], "image_ext (datumaro.plugins.data_formats.datumaro.format.datumaropath attribute)": [[284, "datumaro.plugins.data_formats.datumaro.format.DatumaroPath.IMAGE_EXT"]], "masks_dir (datumaro.plugins.data_formats.datumaro.format.datumaropath attribute)": [[284, "datumaro.plugins.data_formats.datumaro.format.DatumaroPath.MASKS_DIR"]], "mask_ext (datumaro.plugins.data_formats.datumaro.format.datumaropath attribute)": [[284, "datumaro.plugins.data_formats.datumaro.format.DatumaroPath.MASK_EXT"]], "pcd_dir (datumaro.plugins.data_formats.datumaro.format.datumaropath attribute)": [[284, "datumaro.plugins.data_formats.datumaro.format.DatumaroPath.PCD_DIR"]], "video_dir (datumaro.plugins.data_formats.datumaro.format.datumaropath attribute)": [[284, "datumaro.plugins.data_formats.datumaro.format.DatumaroPath.VIDEO_DIR"]], "datumaro.plugins.data_formats.datumaro.format": [[284, "module-datumaro.plugins.data_formats.datumaro.format"]], "datumaroimporter (class in datumaro.plugins.data_formats.datumaro.importer)": [[285, "datumaro.plugins.data_formats.datumaro.importer.DatumaroImporter"]], "path_cls (datumaro.plugins.data_formats.datumaro.importer.datumaroimporter attribute)": [[285, "datumaro.plugins.data_formats.datumaro.importer.DatumaroImporter.PATH_CLS"]], "can_stream (datumaro.plugins.data_formats.datumaro.importer.datumaroimporter property)": [[285, "datumaro.plugins.data_formats.datumaro.importer.DatumaroImporter.can_stream"]], "datumaro.plugins.data_formats.datumaro.importer": [[285, "module-datumaro.plugins.data_formats.datumaro.importer"]], "detect() (datumaro.plugins.data_formats.datumaro.importer.datumaroimporter class method)": [[285, "datumaro.plugins.data_formats.datumaro.importer.DatumaroImporter.detect"]], "find_sources() (datumaro.plugins.data_formats.datumaro.importer.datumaroimporter class method)": [[285, "datumaro.plugins.data_formats.datumaro.importer.DatumaroImporter.find_sources"]], "get_extractor_merger() (datumaro.plugins.data_formats.datumaro.importer.datumaroimporter method)": [[285, "datumaro.plugins.data_formats.datumaro.importer.DatumaroImporter.get_extractor_merger"]], "get_file_extensions() (datumaro.plugins.data_formats.datumaro.importer.datumaroimporter class method)": [[285, "datumaro.plugins.data_formats.datumaro.importer.DatumaroImporter.get_file_extensions"]], "annotationtype (class in datumaro.plugins.data_formats.datumaro.page_mapper)": [[286, "datumaro.plugins.data_formats.datumaro.page_mapper.AnnotationType"]], "byte_image (datumaro.plugins.data_formats.datumaro.page_mapper.mediatype attribute)": [[286, "datumaro.plugins.data_formats.datumaro.page_mapper.MediaType.BYTE_IMAGE"]], "datumpagemapper (class in datumaro.plugins.data_formats.datumaro.page_mapper)": [[286, "datumaro.plugins.data_formats.datumaro.page_mapper.DatumPageMapper"]], "datumpagemapperimpl (in module datumaro.plugins.data_formats.datumaro.page_mapper)": [[286, "datumaro.plugins.data_formats.datumaro.page_mapper.DatumPageMapperImpl"]], "image (datumaro.plugins.data_formats.datumaro.page_mapper.mediatype attribute)": [[286, "datumaro.plugins.data_formats.datumaro.page_mapper.MediaType.IMAGE"]], "media_element (datumaro.plugins.data_formats.datumaro.page_mapper.mediatype attribute)": [[286, "datumaro.plugins.data_formats.datumaro.page_mapper.MediaType.MEDIA_ELEMENT"]], "mosaic_image (datumaro.plugins.data_formats.datumaro.page_mapper.mediatype attribute)": [[286, "datumaro.plugins.data_formats.datumaro.page_mapper.MediaType.MOSAIC_IMAGE"]], "multiframe_image (datumaro.plugins.data_formats.datumaro.page_mapper.mediatype attribute)": [[286, "datumaro.plugins.data_formats.datumaro.page_mapper.MediaType.MULTIFRAME_IMAGE"]], "mediatype (class in datumaro.plugins.data_formats.datumaro.page_mapper)": [[286, "datumaro.plugins.data_formats.datumaro.page_mapper.MediaType"]], "none (datumaro.plugins.data_formats.datumaro.page_mapper.mediatype attribute)": [[286, "datumaro.plugins.data_formats.datumaro.page_mapper.MediaType.NONE"]], "point_cloud (datumaro.plugins.data_formats.datumaro.page_mapper.mediatype attribute)": [[286, "datumaro.plugins.data_formats.datumaro.page_mapper.MediaType.POINT_CLOUD"]], "roi_image (datumaro.plugins.data_formats.datumaro.page_mapper.mediatype attribute)": [[286, "datumaro.plugins.data_formats.datumaro.page_mapper.MediaType.ROI_IMAGE"]], "table_row (datumaro.plugins.data_formats.datumaro.page_mapper.mediatype attribute)": [[286, "datumaro.plugins.data_formats.datumaro.page_mapper.MediaType.TABLE_ROW"]], "video (datumaro.plugins.data_formats.datumaro.page_mapper.mediatype attribute)": [[286, "datumaro.plugins.data_formats.datumaro.page_mapper.MediaType.VIDEO"]], "video_frame (datumaro.plugins.data_formats.datumaro.page_mapper.mediatype attribute)": [[286, "datumaro.plugins.data_formats.datumaro.page_mapper.MediaType.VIDEO_FRAME"]], "ann_types (datumaro.plugins.data_formats.datumaro.page_mapper.datumpagemapper property)": [[286, "datumaro.plugins.data_formats.datumaro.page_mapper.DatumPageMapper.ann_types"]], "bbox (datumaro.plugins.data_formats.datumaro.page_mapper.annotationtype attribute)": [[286, "datumaro.plugins.data_formats.datumaro.page_mapper.AnnotationType.bbox"]], "caption (datumaro.plugins.data_formats.datumaro.page_mapper.annotationtype attribute)": [[286, "datumaro.plugins.data_formats.datumaro.page_mapper.AnnotationType.caption"]], "categories (datumaro.plugins.data_formats.datumaro.page_mapper.datumpagemapper property)": [[286, "datumaro.plugins.data_formats.datumaro.page_mapper.DatumPageMapper.categories"]], "cuboid_3d (datumaro.plugins.data_formats.datumaro.page_mapper.annotationtype attribute)": [[286, "datumaro.plugins.data_formats.datumaro.page_mapper.AnnotationType.cuboid_3d"]], "datumaro.plugins.data_formats.datumaro.page_mapper": [[286, "module-datumaro.plugins.data_formats.datumaro.page_mapper"]], "depth_annotation (datumaro.plugins.data_formats.datumaro.page_mapper.annotationtype attribute)": [[286, "datumaro.plugins.data_formats.datumaro.page_mapper.AnnotationType.depth_annotation"]], "dm_format_version (datumaro.plugins.data_formats.datumaro.page_mapper.datumpagemapper property)": [[286, "datumaro.plugins.data_formats.datumaro.page_mapper.DatumPageMapper.dm_format_version"]], "ellipse (datumaro.plugins.data_formats.datumaro.page_mapper.annotationtype attribute)": [[286, "datumaro.plugins.data_formats.datumaro.page_mapper.AnnotationType.ellipse"]], "feature_vector (datumaro.plugins.data_formats.datumaro.page_mapper.annotationtype attribute)": [[286, "datumaro.plugins.data_formats.datumaro.page_mapper.AnnotationType.feature_vector"]], "get_item_dict() (datumaro.plugins.data_formats.datumaro.page_mapper.datumpagemapper method)": [[286, "datumaro.plugins.data_formats.datumaro.page_mapper.DatumPageMapper.get_item_dict"]], "hash_key (datumaro.plugins.data_formats.datumaro.page_mapper.annotationtype attribute)": [[286, "datumaro.plugins.data_formats.datumaro.page_mapper.AnnotationType.hash_key"]], "infos (datumaro.plugins.data_formats.datumaro.page_mapper.datumpagemapper property)": [[286, "datumaro.plugins.data_formats.datumaro.page_mapper.DatumPageMapper.infos"]], "iter_item_ids() (datumaro.plugins.data_formats.datumaro.page_mapper.datumpagemapper method)": [[286, "datumaro.plugins.data_formats.datumaro.page_mapper.DatumPageMapper.iter_item_ids"]], "label (datumaro.plugins.data_formats.datumaro.page_mapper.annotationtype attribute)": [[286, "datumaro.plugins.data_formats.datumaro.page_mapper.AnnotationType.label"]], "mask (datumaro.plugins.data_formats.datumaro.page_mapper.annotationtype attribute)": [[286, "datumaro.plugins.data_formats.datumaro.page_mapper.AnnotationType.mask"]], "media (datumaro.plugins.data_formats.datumaro.page_mapper.mediatype property)": [[286, "datumaro.plugins.data_formats.datumaro.page_mapper.MediaType.media"]], "media_type (datumaro.plugins.data_formats.datumaro.page_mapper.datumpagemapper property)": [[286, "datumaro.plugins.data_formats.datumaro.page_mapper.DatumPageMapper.media_type"]], "points (datumaro.plugins.data_formats.datumaro.page_mapper.annotationtype attribute)": [[286, "datumaro.plugins.data_formats.datumaro.page_mapper.AnnotationType.points"]], "polygon (datumaro.plugins.data_formats.datumaro.page_mapper.annotationtype attribute)": [[286, "datumaro.plugins.data_formats.datumaro.page_mapper.AnnotationType.polygon"]], "polyline (datumaro.plugins.data_formats.datumaro.page_mapper.annotationtype attribute)": [[286, "datumaro.plugins.data_formats.datumaro.page_mapper.AnnotationType.polyline"]], "rotated_bbox (datumaro.plugins.data_formats.datumaro.page_mapper.annotationtype attribute)": [[286, "datumaro.plugins.data_formats.datumaro.page_mapper.AnnotationType.rotated_bbox"]], "super_resolution_annotation (datumaro.plugins.data_formats.datumaro.page_mapper.annotationtype attribute)": [[286, "datumaro.plugins.data_formats.datumaro.page_mapper.AnnotationType.super_resolution_annotation"]], "tabular (datumaro.plugins.data_formats.datumaro.page_mapper.annotationtype attribute)": [[286, "datumaro.plugins.data_formats.datumaro.page_mapper.AnnotationType.tabular"]], "unknown (datumaro.plugins.data_formats.datumaro.page_mapper.annotationtype attribute)": [[286, "datumaro.plugins.data_formats.datumaro.page_mapper.AnnotationType.unknown"]], "default_image_ext (datumaro.plugins.data_formats.datumaro_binary.datumarobinaryexporter attribute)": [[287, "datumaro.plugins.data_formats.datumaro_binary.DatumaroBinaryExporter.DEFAULT_IMAGE_EXT"]], "datumarobinarybase (class in datumaro.plugins.data_formats.datumaro_binary)": [[287, "datumaro.plugins.data_formats.datumaro_binary.DatumaroBinaryBase"]], "datumarobinaryexporter (class in datumaro.plugins.data_formats.datumaro_binary)": [[287, "datumaro.plugins.data_formats.datumaro_binary.DatumaroBinaryExporter"]], "datumarobinaryimporter (class in datumaro.plugins.data_formats.datumaro_binary)": [[287, "datumaro.plugins.data_formats.datumaro_binary.DatumaroBinaryImporter"]], "path_cls (datumaro.plugins.data_formats.datumaro_binary.datumarobinaryexporter attribute)": [[287, "datumaro.plugins.data_formats.datumaro_binary.DatumaroBinaryExporter.PATH_CLS"]], "path_cls (datumaro.plugins.data_formats.datumaro_binary.datumarobinaryimporter attribute)": [[287, "datumaro.plugins.data_formats.datumaro_binary.DatumaroBinaryImporter.PATH_CLS"]], "ann_types() (datumaro.plugins.data_formats.datumaro_binary.datumarobinarybase method)": [[287, "datumaro.plugins.data_formats.datumaro_binary.DatumaroBinaryBase.ann_types"]], "build_cmdline_parser() (datumaro.plugins.data_formats.datumaro_binary.datumarobinaryexporter class method)": [[287, "datumaro.plugins.data_formats.datumaro_binary.DatumaroBinaryExporter.build_cmdline_parser"]], "build_cmdline_parser() (datumaro.plugins.data_formats.datumaro_binary.datumarobinaryimporter class method)": [[287, "datumaro.plugins.data_formats.datumaro_binary.DatumaroBinaryImporter.build_cmdline_parser"]], "categories() (datumaro.plugins.data_formats.datumaro_binary.datumarobinarybase method)": [[287, "datumaro.plugins.data_formats.datumaro_binary.DatumaroBinaryBase.categories"]], "create_writer() (datumaro.plugins.data_formats.datumaro_binary.datumarobinaryexporter method)": [[287, "datumaro.plugins.data_formats.datumaro_binary.DatumaroBinaryExporter.create_writer"]], "datumaro.plugins.data_formats.datumaro_binary": [[287, "module-datumaro.plugins.data_formats.datumaro_binary"]], "detect() (datumaro.plugins.data_formats.datumaro_binary.datumarobinaryimporter class method)": [[287, "datumaro.plugins.data_formats.datumaro_binary.DatumaroBinaryImporter.detect"]], "infos() (datumaro.plugins.data_formats.datumaro_binary.datumarobinarybase method)": [[287, "datumaro.plugins.data_formats.datumaro_binary.DatumaroBinaryBase.infos"]], "is_stream (datumaro.plugins.data_formats.datumaro_binary.datumarobinarybase property)": [[287, "datumaro.plugins.data_formats.datumaro_binary.DatumaroBinaryBase.is_stream"]], "media_type() (datumaro.plugins.data_formats.datumaro_binary.datumarobinarybase method)": [[287, "datumaro.plugins.data_formats.datumaro_binary.DatumaroBinaryBase.media_type"]], "datumarobinarybase (class in datumaro.plugins.data_formats.datumaro_binary.base)": [[288, "datumaro.plugins.data_formats.datumaro_binary.base.DatumaroBinaryBase"]], "ann_types() (datumaro.plugins.data_formats.datumaro_binary.base.datumarobinarybase method)": [[288, "datumaro.plugins.data_formats.datumaro_binary.base.DatumaroBinaryBase.ann_types"]], "categories() (datumaro.plugins.data_formats.datumaro_binary.base.datumarobinarybase method)": [[288, "datumaro.plugins.data_formats.datumaro_binary.base.DatumaroBinaryBase.categories"]], "datumaro.plugins.data_formats.datumaro_binary.base": [[288, "module-datumaro.plugins.data_formats.datumaro_binary.base"]], "infos() (datumaro.plugins.data_formats.datumaro_binary.base.datumarobinarybase method)": [[288, "datumaro.plugins.data_formats.datumaro_binary.base.DatumaroBinaryBase.infos"]], "is_stream (datumaro.plugins.data_formats.datumaro_binary.base.datumarobinarybase property)": [[288, "datumaro.plugins.data_formats.datumaro_binary.base.DatumaroBinaryBase.is_stream"]], "media_type() (datumaro.plugins.data_formats.datumaro_binary.base.datumarobinarybase method)": [[288, "datumaro.plugins.data_formats.datumaro_binary.base.DatumaroBinaryBase.media_type"]], "default_image_ext (datumaro.plugins.data_formats.datumaro_binary.exporter.datumarobinaryexporter attribute)": [[289, "datumaro.plugins.data_formats.datumaro_binary.exporter.DatumaroBinaryExporter.DEFAULT_IMAGE_EXT"]], "datumarobinaryexporter (class in datumaro.plugins.data_formats.datumaro_binary.exporter)": [[289, "datumaro.plugins.data_formats.datumaro_binary.exporter.DatumaroBinaryExporter"]], "encryptionaction (class in datumaro.plugins.data_formats.datumaro_binary.exporter)": [[289, "datumaro.plugins.data_formats.datumaro_binary.exporter.EncryptionAction"]], "path_cls (datumaro.plugins.data_formats.datumaro_binary.exporter.datumarobinaryexporter attribute)": [[289, "datumaro.plugins.data_formats.datumaro_binary.exporter.DatumaroBinaryExporter.PATH_CLS"]], "build_cmdline_parser() (datumaro.plugins.data_formats.datumaro_binary.exporter.datumarobinaryexporter class method)": [[289, "datumaro.plugins.data_formats.datumaro_binary.exporter.DatumaroBinaryExporter.build_cmdline_parser"]], "create_writer() (datumaro.plugins.data_formats.datumaro_binary.exporter.datumarobinaryexporter method)": [[289, "datumaro.plugins.data_formats.datumaro_binary.exporter.DatumaroBinaryExporter.create_writer"]], "datumaro.plugins.data_formats.datumaro_binary.exporter": [[289, "module-datumaro.plugins.data_formats.datumaro_binary.exporter"]], "annotations_dir (datumaro.plugins.data_formats.datumaro_binary.format.datumarobinarypath attribute)": [[290, "datumaro.plugins.data_formats.datumaro_binary.format.DatumaroBinaryPath.ANNOTATIONS_DIR"]], "annotation_ext (datumaro.plugins.data_formats.datumaro_binary.format.datumarobinarypath attribute)": [[290, "datumaro.plugins.data_formats.datumaro_binary.format.DatumaroBinaryPath.ANNOTATION_EXT"]], "datumarobinarypath (class in datumaro.plugins.data_formats.datumaro_binary.format)": [[290, "datumaro.plugins.data_formats.datumaro_binary.format.DatumaroBinaryPath"]], "images_dir (datumaro.plugins.data_formats.datumaro_binary.format.datumarobinarypath attribute)": [[290, "datumaro.plugins.data_formats.datumaro_binary.format.DatumaroBinaryPath.IMAGES_DIR"]], "image_ext (datumaro.plugins.data_formats.datumaro_binary.format.datumarobinarypath attribute)": [[290, "datumaro.plugins.data_formats.datumaro_binary.format.DatumaroBinaryPath.IMAGE_EXT"]], "masks_dir (datumaro.plugins.data_formats.datumaro_binary.format.datumarobinarypath attribute)": [[290, "datumaro.plugins.data_formats.datumaro_binary.format.DatumaroBinaryPath.MASKS_DIR"]], "mask_ext (datumaro.plugins.data_formats.datumaro_binary.format.datumarobinarypath attribute)": [[290, "datumaro.plugins.data_formats.datumaro_binary.format.DatumaroBinaryPath.MASK_EXT"]], "max_blob_size (datumaro.plugins.data_formats.datumaro_binary.format.datumarobinarypath attribute)": [[290, "datumaro.plugins.data_formats.datumaro_binary.format.DatumaroBinaryPath.MAX_BLOB_SIZE"]], "mp_timeout (datumaro.plugins.data_formats.datumaro_binary.format.datumarobinarypath attribute)": [[290, "datumaro.plugins.data_formats.datumaro_binary.format.DatumaroBinaryPath.MP_TIMEOUT"]], "pcd_dir (datumaro.plugins.data_formats.datumaro_binary.format.datumarobinarypath attribute)": [[290, "datumaro.plugins.data_formats.datumaro_binary.format.DatumaroBinaryPath.PCD_DIR"]], "secret_key_file (datumaro.plugins.data_formats.datumaro_binary.format.datumarobinarypath attribute)": [[290, "datumaro.plugins.data_formats.datumaro_binary.format.DatumaroBinaryPath.SECRET_KEY_FILE"]], "signature (datumaro.plugins.data_formats.datumaro_binary.format.datumarobinarypath attribute)": [[290, "datumaro.plugins.data_formats.datumaro_binary.format.DatumaroBinaryPath.SIGNATURE"]], "signature_len (datumaro.plugins.data_formats.datumaro_binary.format.datumarobinarypath attribute)": [[290, "datumaro.plugins.data_formats.datumaro_binary.format.DatumaroBinaryPath.SIGNATURE_LEN"]], "video_dir (datumaro.plugins.data_formats.datumaro_binary.format.datumarobinarypath attribute)": [[290, "datumaro.plugins.data_formats.datumaro_binary.format.DatumaroBinaryPath.VIDEO_DIR"]], "check_signature() (datumaro.plugins.data_formats.datumaro_binary.format.datumarobinarypath class method)": [[290, "datumaro.plugins.data_formats.datumaro_binary.format.DatumaroBinaryPath.check_signature"]], "datumaro.plugins.data_formats.datumaro_binary.format": [[290, "module-datumaro.plugins.data_formats.datumaro_binary.format"]], "datumarobinaryimporter (class in datumaro.plugins.data_formats.datumaro_binary.importer)": [[291, "datumaro.plugins.data_formats.datumaro_binary.importer.DatumaroBinaryImporter"]], "path_cls (datumaro.plugins.data_formats.datumaro_binary.importer.datumarobinaryimporter attribute)": [[291, "datumaro.plugins.data_formats.datumaro_binary.importer.DatumaroBinaryImporter.PATH_CLS"]], "build_cmdline_parser() (datumaro.plugins.data_formats.datumaro_binary.importer.datumarobinaryimporter class method)": [[291, "datumaro.plugins.data_formats.datumaro_binary.importer.DatumaroBinaryImporter.build_cmdline_parser"]], "datumaro.plugins.data_formats.datumaro_binary.importer": [[291, "module-datumaro.plugins.data_formats.datumaro_binary.importer"]], "detect() (datumaro.plugins.data_formats.datumaro_binary.importer.datumarobinaryimporter class method)": [[291, "datumaro.plugins.data_formats.datumaro_binary.importer.DatumaroBinaryImporter.detect"]], "annotation (class in datumaro.plugins.data_formats.datumaro_binary.mapper)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Annotation"]], "annotationlistmapper (class in datumaro.plugins.data_formats.datumaro_binary.mapper)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.AnnotationListMapper"]], "annotationmapper (class in datumaro.plugins.data_formats.datumaro_binary.mapper)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.AnnotationMapper"]], "annotationtype (class in datumaro.plugins.data_formats.datumaro_binary.mapper)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.AnnotationType"]], "byte_image (datumaro.plugins.data_formats.datumaro_binary.mapper.mediatype attribute)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.MediaType.BYTE_IMAGE"]], "bbox (class in datumaro.plugins.data_formats.datumaro_binary.mapper)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Bbox"]], "bboxmapper (class in datumaro.plugins.data_formats.datumaro_binary.mapper)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.BboxMapper"]], "caption (class in datumaro.plugins.data_formats.datumaro_binary.mapper)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Caption"]], "captionmapper (class in datumaro.plugins.data_formats.datumaro_binary.mapper)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.CaptionMapper"]], "cuboid3d (class in datumaro.plugins.data_formats.datumaro_binary.mapper)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Cuboid3d"]], "cuboid3dmapper (class in datumaro.plugins.data_formats.datumaro_binary.mapper)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Cuboid3dMapper"]], "datasetitem (class in datumaro.plugins.data_formats.datumaro_binary.mapper)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.DatasetItem"]], "datasetitemmapper (class in datumaro.plugins.data_formats.datumaro_binary.mapper)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.DatasetItemMapper"]], "dictmapper (class in datumaro.plugins.data_formats.datumaro_binary.mapper)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.DictMapper"]], "ellipse (class in datumaro.plugins.data_formats.datumaro_binary.mapper)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Ellipse"]], "ellipsemapper (class in datumaro.plugins.data_formats.datumaro_binary.mapper)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.EllipseMapper"]], "floatlistmapper (class in datumaro.plugins.data_formats.datumaro_binary.mapper)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.FloatListMapper"]], "image (datumaro.plugins.data_formats.datumaro_binary.mapper.mediatype attribute)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.MediaType.IMAGE"]], "image (class in datumaro.plugins.data_formats.datumaro_binary.mapper)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Image"]], "imagemapper (class in datumaro.plugins.data_formats.datumaro_binary.mapper)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.ImageMapper"]], "intlistmapper (class in datumaro.plugins.data_formats.datumaro_binary.mapper)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.IntListMapper"]], "label (class in datumaro.plugins.data_formats.datumaro_binary.mapper)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Label"]], "labelmapper (class in datumaro.plugins.data_formats.datumaro_binary.mapper)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.LabelMapper"]], "magic_end_frame_for_none (datumaro.plugins.data_formats.datumaro_binary.mapper.videomapper attribute)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.VideoMapper.MAGIC_END_FRAME_FOR_NONE"]], "magic_path (datumaro.plugins.data_formats.datumaro_binary.mapper.mediaelementmapper attribute)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.MediaElementMapper.MAGIC_PATH"]], "magic_size_for_none (datumaro.plugins.data_formats.datumaro_binary.mapper.imagemapper attribute)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.ImageMapper.MAGIC_SIZE_FOR_NONE"]], "media_element (datumaro.plugins.data_formats.datumaro_binary.mapper.mediatype attribute)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.MediaType.MEDIA_ELEMENT"]], "media_type (datumaro.plugins.data_formats.datumaro_binary.mapper.imagemapper attribute)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.ImageMapper.MEDIA_TYPE"]], "media_type (datumaro.plugins.data_formats.datumaro_binary.mapper.mediaelementmapper attribute)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.MediaElementMapper.MEDIA_TYPE"]], "media_type (datumaro.plugins.data_formats.datumaro_binary.mapper.pointcloudmapper attribute)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.PointCloudMapper.MEDIA_TYPE"]], "media_type (datumaro.plugins.data_formats.datumaro_binary.mapper.videoframemapper attribute)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.VideoFrameMapper.MEDIA_TYPE"]], "media_type (datumaro.plugins.data_formats.datumaro_binary.mapper.videomapper attribute)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.VideoMapper.MEDIA_TYPE"]], "mosaic_image (datumaro.plugins.data_formats.datumaro_binary.mapper.mediatype attribute)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.MediaType.MOSAIC_IMAGE"]], "multiframe_image (datumaro.plugins.data_formats.datumaro_binary.mapper.mediatype attribute)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.MediaType.MULTIFRAME_IMAGE"]], "mapper (class in datumaro.plugins.data_formats.datumaro_binary.mapper)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Mapper"]], "mask (class in datumaro.plugins.data_formats.datumaro_binary.mapper)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Mask"]], "maskmapper (class in datumaro.plugins.data_formats.datumaro_binary.mapper)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.MaskMapper"]], "mediaelement (class in datumaro.plugins.data_formats.datumaro_binary.mapper)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.MediaElement"]], "mediaelementmapper (class in datumaro.plugins.data_formats.datumaro_binary.mapper)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.MediaElementMapper"]], "mediamapper (class in datumaro.plugins.data_formats.datumaro_binary.mapper)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.MediaMapper"]], "mediatype (class in datumaro.plugins.data_formats.datumaro_binary.mapper)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.MediaType"]], "none (datumaro.plugins.data_formats.datumaro_binary.mapper.mediatype attribute)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.MediaType.NONE"]], "point_cloud (datumaro.plugins.data_formats.datumaro_binary.mapper.mediatype attribute)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.MediaType.POINT_CLOUD"]], "pointcloud (class in datumaro.plugins.data_formats.datumaro_binary.mapper)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.PointCloud"]], "pointcloudmapper (class in datumaro.plugins.data_formats.datumaro_binary.mapper)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.PointCloudMapper"]], "points (class in datumaro.plugins.data_formats.datumaro_binary.mapper)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Points"]], "points.visibility (class in datumaro.plugins.data_formats.datumaro_binary.mapper)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Points.Visibility"]], "pointsmapper (class in datumaro.plugins.data_formats.datumaro_binary.mapper)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.PointsMapper"]], "polyline (class in datumaro.plugins.data_formats.datumaro_binary.mapper)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.PolyLine"]], "polylinemapper (class in datumaro.plugins.data_formats.datumaro_binary.mapper)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.PolyLineMapper"]], "polygon (class in datumaro.plugins.data_formats.datumaro_binary.mapper)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Polygon"]], "polygonmapper (class in datumaro.plugins.data_formats.datumaro_binary.mapper)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.PolygonMapper"]], "roi_image (datumaro.plugins.data_formats.datumaro_binary.mapper.mediatype attribute)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.MediaType.ROI_IMAGE"]], "rlemask (class in datumaro.plugins.data_formats.datumaro_binary.mapper)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.RleMask"]], "rlemaskmapper (class in datumaro.plugins.data_formats.datumaro_binary.mapper)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.RleMaskMapper"]], "shape (class in datumaro.plugins.data_formats.datumaro_binary.mapper)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Shape"]], "stringmapper (class in datumaro.plugins.data_formats.datumaro_binary.mapper)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.StringMapper"]], "table_row (datumaro.plugins.data_formats.datumaro_binary.mapper.mediatype attribute)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.MediaType.TABLE_ROW"]], "video (datumaro.plugins.data_formats.datumaro_binary.mapper.mediatype attribute)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.MediaType.VIDEO"]], "video_frame (datumaro.plugins.data_formats.datumaro_binary.mapper.mediatype attribute)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.MediaType.VIDEO_FRAME"]], "video (class in datumaro.plugins.data_formats.datumaro_binary.mapper)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Video"]], "videoframe (class in datumaro.plugins.data_formats.datumaro_binary.mapper)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.VideoFrame"]], "videoframemapper (class in datumaro.plugins.data_formats.datumaro_binary.mapper)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.VideoFrameMapper"]], "videomapper (class in datumaro.plugins.data_formats.datumaro_binary.mapper)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.VideoMapper"]], "__attrs_post_init__() (datumaro.plugins.data_formats.datumaro_binary.mapper.points method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Points.__attrs_post_init__"]], "__attrs_post_init__() (datumaro.plugins.data_formats.datumaro_binary.mapper.polygon method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Polygon.__attrs_post_init__"]], "__eq__() (datumaro.plugins.data_formats.datumaro_binary.mapper.polygon method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Polygon.__eq__"]], "__init__() (datumaro.plugins.data_formats.datumaro_binary.mapper.bbox method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Bbox.__init__"]], "__init__() (datumaro.plugins.data_formats.datumaro_binary.mapper.cuboid3d method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Cuboid3d.__init__"]], "_get_shoelace_area() (datumaro.plugins.data_formats.datumaro_binary.mapper.polygon method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Polygon._get_shoelace_area"]], "_points (datumaro.plugins.data_formats.datumaro_binary.mapper.cuboid3d attribute)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Cuboid3d._points"]], "_type (datumaro.plugins.data_formats.datumaro_binary.mapper.bbox attribute)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Bbox._type"]], "_type (datumaro.plugins.data_formats.datumaro_binary.mapper.cuboid3d attribute)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Cuboid3d._type"]], "_type (datumaro.plugins.data_formats.datumaro_binary.mapper.points attribute)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Points._type"]], "_type (datumaro.plugins.data_formats.datumaro_binary.mapper.polyline attribute)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.PolyLine._type"]], "_type (datumaro.plugins.data_formats.datumaro_binary.mapper.polygon attribute)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Polygon._type"]], "absent (datumaro.plugins.data_formats.datumaro_binary.mapper.points.visibility attribute)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Points.Visibility.absent"], [292, "id13"]], "ann_type (datumaro.plugins.data_formats.datumaro_binary.mapper.annotationmapper attribute)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.AnnotationMapper.ann_type"]], "ann_type (datumaro.plugins.data_formats.datumaro_binary.mapper.bboxmapper attribute)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.BboxMapper.ann_type"]], "ann_type (datumaro.plugins.data_formats.datumaro_binary.mapper.captionmapper attribute)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.CaptionMapper.ann_type"]], "ann_type (datumaro.plugins.data_formats.datumaro_binary.mapper.cuboid3dmapper attribute)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Cuboid3dMapper.ann_type"]], "ann_type (datumaro.plugins.data_formats.datumaro_binary.mapper.ellipsemapper attribute)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.EllipseMapper.ann_type"]], "ann_type (datumaro.plugins.data_formats.datumaro_binary.mapper.labelmapper attribute)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.LabelMapper.ann_type"]], "ann_type (datumaro.plugins.data_formats.datumaro_binary.mapper.maskmapper attribute)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.MaskMapper.ann_type"]], "ann_type (datumaro.plugins.data_formats.datumaro_binary.mapper.pointsmapper attribute)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.PointsMapper.ann_type"]], "ann_type (datumaro.plugins.data_formats.datumaro_binary.mapper.polylinemapper attribute)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.PolyLineMapper.ann_type"]], "ann_type (datumaro.plugins.data_formats.datumaro_binary.mapper.polygonmapper attribute)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.PolygonMapper.ann_type"]], "annotations (datumaro.plugins.data_formats.datumaro_binary.mapper.datasetitem attribute)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.DatasetItem.annotations"]], "as_class_mask() (datumaro.plugins.data_formats.datumaro_binary.mapper.mask method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Mask.as_class_mask"]], "as_dict() (datumaro.plugins.data_formats.datumaro_binary.mapper.annotation method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Annotation.as_dict"]], "as_dict() (datumaro.plugins.data_formats.datumaro_binary.mapper.mediaelement method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.MediaElement.as_dict"]], "as_dict() (datumaro.plugins.data_formats.datumaro_binary.mapper.videoframe method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.VideoFrame.as_dict"]], "as_instance_mask() (datumaro.plugins.data_formats.datumaro_binary.mapper.mask method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Mask.as_instance_mask"]], "as_polygon() (datumaro.plugins.data_formats.datumaro_binary.mapper.bbox method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Bbox.as_polygon"], [292, "id6"]], "as_polygon() (datumaro.plugins.data_formats.datumaro_binary.mapper.ellipse method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Ellipse.as_polygon"]], "as_polygon() (datumaro.plugins.data_formats.datumaro_binary.mapper.polyline method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.PolyLine.as_polygon"], [292, "id19"]], "as_polygon() (datumaro.plugins.data_formats.datumaro_binary.mapper.polygon method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Polygon.as_polygon"], [292, "id22"]], "as_polygon() (datumaro.plugins.data_formats.datumaro_binary.mapper.shape method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Shape.as_polygon"], [292, "id27"]], "attributes (datumaro.plugins.data_formats.datumaro_binary.mapper.annotation attribute)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Annotation.attributes"]], "attributes (datumaro.plugins.data_formats.datumaro_binary.mapper.datasetitem attribute)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.DatasetItem.attributes"]], "backward() (datumaro.plugins.data_formats.datumaro_binary.mapper.annotationlistmapper class method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.AnnotationListMapper.backward"]], "backward() (datumaro.plugins.data_formats.datumaro_binary.mapper.annotationmapper class method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.AnnotationMapper.backward"]], "backward() (datumaro.plugins.data_formats.datumaro_binary.mapper.bboxmapper class method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.BboxMapper.backward"]], "backward() (datumaro.plugins.data_formats.datumaro_binary.mapper.captionmapper class method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.CaptionMapper.backward"]], "backward() (datumaro.plugins.data_formats.datumaro_binary.mapper.cuboid3dmapper class method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Cuboid3dMapper.backward"]], "backward() (datumaro.plugins.data_formats.datumaro_binary.mapper.datasetitemmapper static method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.DatasetItemMapper.backward"]], "backward() (datumaro.plugins.data_formats.datumaro_binary.mapper.dictmapper static method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.DictMapper.backward"]], "backward() (datumaro.plugins.data_formats.datumaro_binary.mapper.ellipsemapper class method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.EllipseMapper.backward"]], "backward() (datumaro.plugins.data_formats.datumaro_binary.mapper.imagemapper class method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.ImageMapper.backward"]], "backward() (datumaro.plugins.data_formats.datumaro_binary.mapper.labelmapper class method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.LabelMapper.backward"]], "backward() (datumaro.plugins.data_formats.datumaro_binary.mapper.mapper static method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Mapper.backward"]], "backward() (datumaro.plugins.data_formats.datumaro_binary.mapper.maskmapper class method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.MaskMapper.backward"]], "backward() (datumaro.plugins.data_formats.datumaro_binary.mapper.mediaelementmapper class method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.MediaElementMapper.backward"]], "backward() (datumaro.plugins.data_formats.datumaro_binary.mapper.mediamapper class method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.MediaMapper.backward"]], "backward() (datumaro.plugins.data_formats.datumaro_binary.mapper.pointcloudmapper class method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.PointCloudMapper.backward"]], "backward() (datumaro.plugins.data_formats.datumaro_binary.mapper.pointsmapper class method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.PointsMapper.backward"]], "backward() (datumaro.plugins.data_formats.datumaro_binary.mapper.polylinemapper class method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.PolyLineMapper.backward"]], "backward() (datumaro.plugins.data_formats.datumaro_binary.mapper.polygonmapper class method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.PolygonMapper.backward"]], "backward() (datumaro.plugins.data_formats.datumaro_binary.mapper.stringmapper static method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.StringMapper.backward"]], "backward() (datumaro.plugins.data_formats.datumaro_binary.mapper.videoframemapper class method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.VideoFrameMapper.backward"]], "backward() (datumaro.plugins.data_formats.datumaro_binary.mapper.videomapper class method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.VideoMapper.backward"]], "backward_dict() (datumaro.plugins.data_formats.datumaro_binary.mapper.annotationmapper class method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.AnnotationMapper.backward_dict"]], "backward_dict() (datumaro.plugins.data_formats.datumaro_binary.mapper.mediaelementmapper class method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.MediaElementMapper.backward_dict"]], "backward_map (datumaro.plugins.data_formats.datumaro_binary.mapper.annotationlistmapper attribute)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.AnnotationListMapper.backward_map"]], "backward_optional_label() (datumaro.plugins.data_formats.datumaro_binary.mapper.annotationmapper static method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.AnnotationMapper.backward_optional_label"]], "bbox (datumaro.plugins.data_formats.datumaro_binary.mapper.annotationtype attribute)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.AnnotationType.bbox"]], "bytes (datumaro.plugins.data_formats.datumaro_binary.mapper.mediaelement property)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.MediaElement.bytes"]], "c_x (datumaro.plugins.data_formats.datumaro_binary.mapper.ellipse property)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Ellipse.c_x"]], "c_y (datumaro.plugins.data_formats.datumaro_binary.mapper.ellipse property)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Ellipse.c_y"]], "caption (datumaro.plugins.data_formats.datumaro_binary.mapper.annotationtype attribute)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.AnnotationType.caption"]], "caption (datumaro.plugins.data_formats.datumaro_binary.mapper.caption attribute)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Caption.caption"]], "close() (datumaro.plugins.data_formats.datumaro_binary.mapper.video method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Video.close"]], "cuboid_3d (datumaro.plugins.data_formats.datumaro_binary.mapper.annotationtype attribute)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.AnnotationType.cuboid_3d"]], "data (datumaro.plugins.data_formats.datumaro_binary.mapper.mediaelement property)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.MediaElement.data"]], "datumaro.plugins.data_formats.datumaro_binary.mapper": [[292, "module-datumaro.plugins.data_formats.datumaro_binary.mapper"]], "depth_annotation (datumaro.plugins.data_formats.datumaro_binary.mapper.annotationtype attribute)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.AnnotationType.depth_annotation"]], "ellipse (datumaro.plugins.data_formats.datumaro_binary.mapper.annotationtype attribute)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.AnnotationType.ellipse"]], "ext (datumaro.plugins.data_formats.datumaro_binary.mapper.image property)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Image.ext"]], "ext (datumaro.plugins.data_formats.datumaro_binary.mapper.video property)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Video.ext"]], "extra_images (datumaro.plugins.data_formats.datumaro_binary.mapper.pointcloud property)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.PointCloud.extra_images"]], "feature_vector (datumaro.plugins.data_formats.datumaro_binary.mapper.annotationtype attribute)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.AnnotationType.feature_vector"]], "forward() (datumaro.plugins.data_formats.datumaro_binary.mapper.annotationlistmapper class method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.AnnotationListMapper.forward"]], "forward() (datumaro.plugins.data_formats.datumaro_binary.mapper.annotationmapper class method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.AnnotationMapper.forward"]], "forward() (datumaro.plugins.data_formats.datumaro_binary.mapper.bboxmapper class method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.BboxMapper.forward"]], "forward() (datumaro.plugins.data_formats.datumaro_binary.mapper.captionmapper class method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.CaptionMapper.forward"]], "forward() (datumaro.plugins.data_formats.datumaro_binary.mapper.cuboid3dmapper class method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Cuboid3dMapper.forward"]], "forward() (datumaro.plugins.data_formats.datumaro_binary.mapper.datasetitemmapper static method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.DatasetItemMapper.forward"]], "forward() (datumaro.plugins.data_formats.datumaro_binary.mapper.dictmapper static method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.DictMapper.forward"]], "forward() (datumaro.plugins.data_formats.datumaro_binary.mapper.ellipsemapper class method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.EllipseMapper.forward"]], "forward() (datumaro.plugins.data_formats.datumaro_binary.mapper.imagemapper class method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.ImageMapper.forward"]], "forward() (datumaro.plugins.data_formats.datumaro_binary.mapper.labelmapper class method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.LabelMapper.forward"]], "forward() (datumaro.plugins.data_formats.datumaro_binary.mapper.mapper static method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Mapper.forward"]], "forward() (datumaro.plugins.data_formats.datumaro_binary.mapper.maskmapper class method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.MaskMapper.forward"]], "forward() (datumaro.plugins.data_formats.datumaro_binary.mapper.mediaelementmapper class method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.MediaElementMapper.forward"]], "forward() (datumaro.plugins.data_formats.datumaro_binary.mapper.mediamapper class method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.MediaMapper.forward"]], "forward() (datumaro.plugins.data_formats.datumaro_binary.mapper.pointcloudmapper class method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.PointCloudMapper.forward"]], "forward() (datumaro.plugins.data_formats.datumaro_binary.mapper.pointsmapper class method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.PointsMapper.forward"]], "forward() (datumaro.plugins.data_formats.datumaro_binary.mapper.polylinemapper class method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.PolyLineMapper.forward"]], "forward() (datumaro.plugins.data_formats.datumaro_binary.mapper.polygonmapper class method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.PolygonMapper.forward"]], "forward() (datumaro.plugins.data_formats.datumaro_binary.mapper.stringmapper static method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.StringMapper.forward"]], "forward() (datumaro.plugins.data_formats.datumaro_binary.mapper.videoframemapper class method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.VideoFrameMapper.forward"]], "forward() (datumaro.plugins.data_formats.datumaro_binary.mapper.videomapper class method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.VideoMapper.forward"]], "forward_optional_label() (datumaro.plugins.data_formats.datumaro_binary.mapper.annotationmapper static method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.AnnotationMapper.forward_optional_label"]], "frame_size (datumaro.plugins.data_formats.datumaro_binary.mapper.video property)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Video.frame_size"]], "from_bytes() (datumaro.plugins.data_formats.datumaro_binary.mapper.image class method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Image.from_bytes"]], "from_bytes() (datumaro.plugins.data_formats.datumaro_binary.mapper.pointcloud class method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.PointCloud.from_bytes"]], "from_file() (datumaro.plugins.data_formats.datumaro_binary.mapper.image class method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Image.from_file"]], "from_file() (datumaro.plugins.data_formats.datumaro_binary.mapper.pointcloud class method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.PointCloud.from_file"]], "from_numpy() (datumaro.plugins.data_formats.datumaro_binary.mapper.image class method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Image.from_numpy"]], "from_self() (datumaro.plugins.data_formats.datumaro_binary.mapper.mediaelement method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.MediaElement.from_self"]], "from_self() (datumaro.plugins.data_formats.datumaro_binary.mapper.videoframe method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.VideoFrame.from_self"]], "get_area() (datumaro.plugins.data_formats.datumaro_binary.mapper.bbox method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Bbox.get_area"], [292, "id4"]], "get_area() (datumaro.plugins.data_formats.datumaro_binary.mapper.ellipse method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Ellipse.get_area"]], "get_area() (datumaro.plugins.data_formats.datumaro_binary.mapper.mask method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Mask.get_area"]], "get_area() (datumaro.plugins.data_formats.datumaro_binary.mapper.points method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Points.get_area"], [292, "id17"]], "get_area() (datumaro.plugins.data_formats.datumaro_binary.mapper.polyline method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.PolyLine.get_area"], [292, "id20"]], "get_area() (datumaro.plugins.data_formats.datumaro_binary.mapper.polygon method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Polygon.get_area"], [292, "id21"]], "get_area() (datumaro.plugins.data_formats.datumaro_binary.mapper.rlemask method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.RleMask.get_area"]], "get_area() (datumaro.plugins.data_formats.datumaro_binary.mapper.shape method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Shape.get_area"], [292, "id26"]], "get_bbox() (datumaro.plugins.data_formats.datumaro_binary.mapper.bbox method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Bbox.get_bbox"], [292, "id5"]], "get_bbox() (datumaro.plugins.data_formats.datumaro_binary.mapper.ellipse method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Ellipse.get_bbox"]], "get_bbox() (datumaro.plugins.data_formats.datumaro_binary.mapper.mask method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Mask.get_bbox"]], "get_bbox() (datumaro.plugins.data_formats.datumaro_binary.mapper.points method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Points.get_bbox"], [292, "id18"]], "get_bbox() (datumaro.plugins.data_formats.datumaro_binary.mapper.rlemask method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.RleMask.get_bbox"]], "get_bbox() (datumaro.plugins.data_formats.datumaro_binary.mapper.shape method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Shape.get_bbox"], [292, "id28"]], "get_frame_data() (datumaro.plugins.data_formats.datumaro_binary.mapper.video method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Video.get_frame_data"]], "get_points() (datumaro.plugins.data_formats.datumaro_binary.mapper.ellipse method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Ellipse.get_points"]], "get_points() (datumaro.plugins.data_formats.datumaro_binary.mapper.shape method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Shape.get_points"], [292, "id29"]], "group (datumaro.plugins.data_formats.datumaro_binary.mapper.annotation attribute)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Annotation.group"]], "h (datumaro.plugins.data_formats.datumaro_binary.mapper.bbox property)": [[292, "id3"]], "h (datumaro.plugins.data_formats.datumaro_binary.mapper.ellipse property)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Ellipse.h"]], "h() (datumaro.plugins.data_formats.datumaro_binary.mapper.bbox method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Bbox.h"]], "has_data (datumaro.plugins.data_formats.datumaro_binary.mapper.mediaelement property)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.MediaElement.has_data"]], "has_size (datumaro.plugins.data_formats.datumaro_binary.mapper.image property)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Image.has_size"]], "hash_key (datumaro.plugins.data_formats.datumaro_binary.mapper.annotationtype attribute)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.AnnotationType.hash_key"]], "hidden (datumaro.plugins.data_formats.datumaro_binary.mapper.points.visibility attribute)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Points.Visibility.hidden"], [292, "id14"]], "id (datumaro.plugins.data_formats.datumaro_binary.mapper.annotation attribute)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Annotation.id"]], "id (datumaro.plugins.data_formats.datumaro_binary.mapper.datasetitem attribute)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.DatasetItem.id"]], "image (datumaro.plugins.data_formats.datumaro_binary.mapper.mask property)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Mask.image"]], "image (datumaro.plugins.data_formats.datumaro_binary.mapper.rlemask property)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.RleMask.image"]], "index (datumaro.plugins.data_formats.datumaro_binary.mapper.videoframe property)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.VideoFrame.index"]], "iou() (datumaro.plugins.data_formats.datumaro_binary.mapper.bbox method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Bbox.iou"], [292, "id7"]], "iou() (datumaro.plugins.data_formats.datumaro_binary.mapper.ellipse method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Ellipse.iou"]], "is_encrypted (datumaro.plugins.data_formats.datumaro_binary.mapper.mediaelement property)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.MediaElement.is_encrypted"]], "label (datumaro.plugins.data_formats.datumaro_binary.mapper.annotationtype attribute)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.AnnotationType.label"]], "label (datumaro.plugins.data_formats.datumaro_binary.mapper.cuboid3d attribute)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Cuboid3d.label"], [292, "id9"]], "label (datumaro.plugins.data_formats.datumaro_binary.mapper.label attribute)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Label.label"]], "label (datumaro.plugins.data_formats.datumaro_binary.mapper.mask attribute)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Mask.label"]], "label (datumaro.plugins.data_formats.datumaro_binary.mapper.shape attribute)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Shape.label"], [292, "id24"]], "length (datumaro.plugins.data_formats.datumaro_binary.mapper.video property)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Video.length"]], "mask (datumaro.plugins.data_formats.datumaro_binary.mapper.annotationtype attribute)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.AnnotationType.mask"]], "media (datumaro.plugins.data_formats.datumaro_binary.mapper.datasetitem attribute)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.DatasetItem.media"]], "media (datumaro.plugins.data_formats.datumaro_binary.mapper.mediatype property)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.MediaType.media"]], "media_as() (datumaro.plugins.data_formats.datumaro_binary.mapper.datasetitem method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.DatasetItem.media_as"]], "object_id (datumaro.plugins.data_formats.datumaro_binary.mapper.annotation attribute)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Annotation.object_id"]], "paint() (datumaro.plugins.data_formats.datumaro_binary.mapper.mask method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Mask.paint"]], "parse_ann_type() (datumaro.plugins.data_formats.datumaro_binary.mapper.annotationmapper static method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.AnnotationMapper.parse_ann_type"]], "path (datumaro.plugins.data_formats.datumaro_binary.mapper.video property)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Video.path"]], "path (datumaro.plugins.data_formats.datumaro_binary.mapper.videoframe property)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.VideoFrame.path"]], "points (datumaro.plugins.data_formats.datumaro_binary.mapper.annotationtype attribute)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.AnnotationType.points"]], "points (datumaro.plugins.data_formats.datumaro_binary.mapper.shape attribute)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Shape.points"], [292, "id23"]], "polygon (datumaro.plugins.data_formats.datumaro_binary.mapper.annotationtype attribute)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.AnnotationType.polygon"]], "polyline (datumaro.plugins.data_formats.datumaro_binary.mapper.annotationtype attribute)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.AnnotationType.polyline"]], "position (datumaro.plugins.data_formats.datumaro_binary.mapper.cuboid3d property)": [[292, "id10"]], "position() (datumaro.plugins.data_formats.datumaro_binary.mapper.cuboid3d method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Cuboid3d.position"]], "rle (datumaro.plugins.data_formats.datumaro_binary.mapper.rlemask property)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.RleMask.rle"]], "rotated_bbox (datumaro.plugins.data_formats.datumaro_binary.mapper.annotationtype attribute)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.AnnotationType.rotated_bbox"]], "rotation (datumaro.plugins.data_formats.datumaro_binary.mapper.cuboid3d property)": [[292, "id11"]], "rotation() (datumaro.plugins.data_formats.datumaro_binary.mapper.cuboid3d method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Cuboid3d.rotation"]], "save() (datumaro.plugins.data_formats.datumaro_binary.mapper.mediaelement method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.MediaElement.save"]], "save() (datumaro.plugins.data_formats.datumaro_binary.mapper.video method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Video.save"]], "scale (datumaro.plugins.data_formats.datumaro_binary.mapper.cuboid3d property)": [[292, "id12"]], "scale() (datumaro.plugins.data_formats.datumaro_binary.mapper.cuboid3d method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Cuboid3d.scale"]], "set_crypter() (datumaro.plugins.data_formats.datumaro_binary.mapper.image method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Image.set_crypter"]], "set_crypter() (datumaro.plugins.data_formats.datumaro_binary.mapper.mediaelement method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.MediaElement.set_crypter"]], "size (datumaro.plugins.data_formats.datumaro_binary.mapper.image property)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Image.size"]], "size (datumaro.plugins.data_formats.datumaro_binary.mapper.videoframe property)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.VideoFrame.size"]], "subset (datumaro.plugins.data_formats.datumaro_binary.mapper.datasetitem attribute)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.DatasetItem.subset"]], "super_resolution_annotation (datumaro.plugins.data_formats.datumaro_binary.mapper.annotationtype attribute)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.AnnotationType.super_resolution_annotation"]], "tabular (datumaro.plugins.data_formats.datumaro_binary.mapper.annotationtype attribute)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.AnnotationType.tabular"]], "type (datumaro.plugins.data_formats.datumaro_binary.mapper.annotation property)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Annotation.type"]], "type (datumaro.plugins.data_formats.datumaro_binary.mapper.mediaelement property)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.MediaElement.type"]], "unknown (datumaro.plugins.data_formats.datumaro_binary.mapper.annotationtype attribute)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.AnnotationType.unknown"]], "video (datumaro.plugins.data_formats.datumaro_binary.mapper.videoframe property)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.VideoFrame.video"]], "visibility (datumaro.plugins.data_formats.datumaro_binary.mapper.points attribute)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Points.visibility"], [292, "id16"]], "visible (datumaro.plugins.data_formats.datumaro_binary.mapper.points.visibility attribute)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Points.Visibility.visible"], [292, "id15"]], "w (datumaro.plugins.data_formats.datumaro_binary.mapper.bbox property)": [[292, "id2"]], "w (datumaro.plugins.data_formats.datumaro_binary.mapper.ellipse property)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Ellipse.w"]], "w() (datumaro.plugins.data_formats.datumaro_binary.mapper.bbox method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Bbox.w"]], "wrap() (datumaro.plugins.data_formats.datumaro_binary.mapper.annotation method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Annotation.wrap"]], "wrap() (datumaro.plugins.data_formats.datumaro_binary.mapper.bbox method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Bbox.wrap"], [292, "id8"]], "wrap() (datumaro.plugins.data_formats.datumaro_binary.mapper.datasetitem method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.DatasetItem.wrap"]], "wrap() (datumaro.plugins.data_formats.datumaro_binary.mapper.ellipse method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Ellipse.wrap"]], "x (datumaro.plugins.data_formats.datumaro_binary.mapper.bbox property)": [[292, "id0"]], "x() (datumaro.plugins.data_formats.datumaro_binary.mapper.bbox method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Bbox.x"]], "x1 (datumaro.plugins.data_formats.datumaro_binary.mapper.ellipse property)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Ellipse.x1"]], "x2 (datumaro.plugins.data_formats.datumaro_binary.mapper.ellipse property)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Ellipse.x2"]], "y (datumaro.plugins.data_formats.datumaro_binary.mapper.bbox property)": [[292, "id1"]], "y() (datumaro.plugins.data_formats.datumaro_binary.mapper.bbox method)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Bbox.y"]], "y1 (datumaro.plugins.data_formats.datumaro_binary.mapper.ellipse property)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Ellipse.y1"]], "y2 (datumaro.plugins.data_formats.datumaro_binary.mapper.ellipse property)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Ellipse.y2"]], "z_order (datumaro.plugins.data_formats.datumaro_binary.mapper.mask attribute)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Mask.z_order"]], "z_order (datumaro.plugins.data_formats.datumaro_binary.mapper.shape attribute)": [[292, "datumaro.plugins.data_formats.datumaro_binary.mapper.Shape.z_order"], [292, "id25"]], "annotationlistmapper (class in datumaro.plugins.data_formats.datumaro_binary.mapper.annotation)": [[293, "datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.AnnotationListMapper"]], "annotationmapper (class in datumaro.plugins.data_formats.datumaro_binary.mapper.annotation)": [[293, "datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.AnnotationMapper"]], "bboxmapper (class in datumaro.plugins.data_formats.datumaro_binary.mapper.annotation)": [[293, "datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.BboxMapper"]], "captionmapper (class in datumaro.plugins.data_formats.datumaro_binary.mapper.annotation)": [[293, "datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.CaptionMapper"]], "cuboid3dmapper (class in datumaro.plugins.data_formats.datumaro_binary.mapper.annotation)": [[293, "datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.Cuboid3dMapper"]], "ellipsemapper (class in datumaro.plugins.data_formats.datumaro_binary.mapper.annotation)": [[293, "datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.EllipseMapper"]], "labelmapper (class in datumaro.plugins.data_formats.datumaro_binary.mapper.annotation)": [[293, "datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.LabelMapper"]], "maskmapper (class in datumaro.plugins.data_formats.datumaro_binary.mapper.annotation)": [[293, "datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.MaskMapper"]], "pointsmapper (class in datumaro.plugins.data_formats.datumaro_binary.mapper.annotation)": [[293, "datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.PointsMapper"]], "polylinemapper (class in datumaro.plugins.data_formats.datumaro_binary.mapper.annotation)": [[293, "datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.PolyLineMapper"]], "polygonmapper (class in datumaro.plugins.data_formats.datumaro_binary.mapper.annotation)": [[293, "datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.PolygonMapper"]], "rlemaskmapper (class in datumaro.plugins.data_formats.datumaro_binary.mapper.annotation)": [[293, "datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.RleMaskMapper"]], "ann_type (datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.annotationmapper attribute)": [[293, "datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.AnnotationMapper.ann_type"]], "ann_type (datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.bboxmapper attribute)": [[293, "datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.BboxMapper.ann_type"]], "ann_type (datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.captionmapper attribute)": [[293, "datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.CaptionMapper.ann_type"]], "ann_type (datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.cuboid3dmapper attribute)": [[293, "datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.Cuboid3dMapper.ann_type"]], "ann_type (datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.ellipsemapper attribute)": [[293, "datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.EllipseMapper.ann_type"]], "ann_type (datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.labelmapper attribute)": [[293, "datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.LabelMapper.ann_type"]], "ann_type (datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.maskmapper attribute)": [[293, "datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.MaskMapper.ann_type"]], "ann_type (datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.pointsmapper attribute)": [[293, "datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.PointsMapper.ann_type"]], "ann_type (datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.polylinemapper attribute)": [[293, "datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.PolyLineMapper.ann_type"]], "ann_type (datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.polygonmapper attribute)": [[293, "datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.PolygonMapper.ann_type"]], "backward() (datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.annotationlistmapper class method)": [[293, "datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.AnnotationListMapper.backward"]], "backward() (datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.annotationmapper class method)": [[293, "datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.AnnotationMapper.backward"]], "backward() (datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.bboxmapper class method)": [[293, "datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.BboxMapper.backward"]], "backward() (datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.captionmapper class method)": [[293, "datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.CaptionMapper.backward"]], "backward() (datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.cuboid3dmapper class method)": [[293, "datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.Cuboid3dMapper.backward"]], "backward() (datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.ellipsemapper class method)": [[293, "datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.EllipseMapper.backward"]], "backward() (datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.labelmapper class method)": [[293, "datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.LabelMapper.backward"]], "backward() (datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.maskmapper class method)": [[293, "datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.MaskMapper.backward"]], "backward() (datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.pointsmapper class method)": [[293, "datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.PointsMapper.backward"]], "backward() (datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.polylinemapper class method)": [[293, "datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.PolyLineMapper.backward"]], "backward() (datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.polygonmapper class method)": [[293, "datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.PolygonMapper.backward"]], "backward_dict() (datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.annotationmapper class method)": [[293, "datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.AnnotationMapper.backward_dict"]], "backward_map (datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.annotationlistmapper attribute)": [[293, "datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.AnnotationListMapper.backward_map"]], "backward_optional_label() (datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.annotationmapper static method)": [[293, "datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.AnnotationMapper.backward_optional_label"]], "datumaro.plugins.data_formats.datumaro_binary.mapper.annotation": [[293, "module-datumaro.plugins.data_formats.datumaro_binary.mapper.annotation"]], "forward() (datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.annotationlistmapper class method)": [[293, "datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.AnnotationListMapper.forward"]], "forward() (datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.annotationmapper class method)": [[293, "datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.AnnotationMapper.forward"]], "forward() (datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.bboxmapper class method)": [[293, "datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.BboxMapper.forward"]], "forward() (datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.captionmapper class method)": [[293, "datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.CaptionMapper.forward"]], "forward() (datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.cuboid3dmapper class method)": [[293, "datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.Cuboid3dMapper.forward"]], "forward() (datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.ellipsemapper class method)": [[293, "datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.EllipseMapper.forward"]], "forward() (datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.labelmapper class method)": [[293, "datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.LabelMapper.forward"]], "forward() (datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.maskmapper class method)": [[293, "datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.MaskMapper.forward"]], "forward() (datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.pointsmapper class method)": [[293, "datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.PointsMapper.forward"]], "forward() (datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.polylinemapper class method)": [[293, "datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.PolyLineMapper.forward"]], "forward() (datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.polygonmapper class method)": [[293, "datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.PolygonMapper.forward"]], "forward_optional_label() (datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.annotationmapper static method)": [[293, "datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.AnnotationMapper.forward_optional_label"]], "parse_ann_type() (datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.annotationmapper static method)": [[293, "datumaro.plugins.data_formats.datumaro_binary.mapper.annotation.AnnotationMapper.parse_ann_type"]], "dictmapper (class in datumaro.plugins.data_formats.datumaro_binary.mapper.common)": [[294, "datumaro.plugins.data_formats.datumaro_binary.mapper.common.DictMapper"]], "floatlistmapper (class in datumaro.plugins.data_formats.datumaro_binary.mapper.common)": [[294, "datumaro.plugins.data_formats.datumaro_binary.mapper.common.FloatListMapper"]], "intlistmapper (class in datumaro.plugins.data_formats.datumaro_binary.mapper.common)": [[294, "datumaro.plugins.data_formats.datumaro_binary.mapper.common.IntListMapper"]], "listmapper (class in datumaro.plugins.data_formats.datumaro_binary.mapper.common)": [[294, "datumaro.plugins.data_formats.datumaro_binary.mapper.common.ListMapper"]], "mapper (class in datumaro.plugins.data_formats.datumaro_binary.mapper.common)": [[294, "datumaro.plugins.data_formats.datumaro_binary.mapper.common.Mapper"]], "stringmapper (class in datumaro.plugins.data_formats.datumaro_binary.mapper.common)": [[294, "datumaro.plugins.data_formats.datumaro_binary.mapper.common.StringMapper"]], "backward() (datumaro.plugins.data_formats.datumaro_binary.mapper.common.dictmapper static method)": [[294, "datumaro.plugins.data_formats.datumaro_binary.mapper.common.DictMapper.backward"]], "backward() (datumaro.plugins.data_formats.datumaro_binary.mapper.common.listmapper class method)": [[294, "datumaro.plugins.data_formats.datumaro_binary.mapper.common.ListMapper.backward"]], "backward() (datumaro.plugins.data_formats.datumaro_binary.mapper.common.mapper static method)": [[294, "datumaro.plugins.data_formats.datumaro_binary.mapper.common.Mapper.backward"]], "backward() (datumaro.plugins.data_formats.datumaro_binary.mapper.common.stringmapper static method)": [[294, "datumaro.plugins.data_formats.datumaro_binary.mapper.common.StringMapper.backward"]], "datumaro.plugins.data_formats.datumaro_binary.mapper.common": [[294, "module-datumaro.plugins.data_formats.datumaro_binary.mapper.common"]], "forward() (datumaro.plugins.data_formats.datumaro_binary.mapper.common.dictmapper static method)": [[294, "datumaro.plugins.data_formats.datumaro_binary.mapper.common.DictMapper.forward"]], "forward() (datumaro.plugins.data_formats.datumaro_binary.mapper.common.listmapper class method)": [[294, "datumaro.plugins.data_formats.datumaro_binary.mapper.common.ListMapper.forward"]], "forward() (datumaro.plugins.data_formats.datumaro_binary.mapper.common.mapper static method)": [[294, "datumaro.plugins.data_formats.datumaro_binary.mapper.common.Mapper.forward"]], "forward() (datumaro.plugins.data_formats.datumaro_binary.mapper.common.stringmapper static method)": [[294, "datumaro.plugins.data_formats.datumaro_binary.mapper.common.StringMapper.forward"]], "datasetitemmapper (class in datumaro.plugins.data_formats.datumaro_binary.mapper.dataset_item)": [[295, "datumaro.plugins.data_formats.datumaro_binary.mapper.dataset_item.DatasetItemMapper"]], "backward() (datumaro.plugins.data_formats.datumaro_binary.mapper.dataset_item.datasetitemmapper static method)": [[295, "datumaro.plugins.data_formats.datumaro_binary.mapper.dataset_item.DatasetItemMapper.backward"]], "datumaro.plugins.data_formats.datumaro_binary.mapper.dataset_item": [[295, "module-datumaro.plugins.data_formats.datumaro_binary.mapper.dataset_item"]], "forward() (datumaro.plugins.data_formats.datumaro_binary.mapper.dataset_item.datasetitemmapper static method)": [[295, "datumaro.plugins.data_formats.datumaro_binary.mapper.dataset_item.DatasetItemMapper.forward"]], "imagemapper (class in datumaro.plugins.data_formats.datumaro_binary.mapper.media)": [[296, "datumaro.plugins.data_formats.datumaro_binary.mapper.media.ImageMapper"]], "magic_end_frame_for_none (datumaro.plugins.data_formats.datumaro_binary.mapper.media.videomapper attribute)": [[296, "datumaro.plugins.data_formats.datumaro_binary.mapper.media.VideoMapper.MAGIC_END_FRAME_FOR_NONE"]], "magic_path (datumaro.plugins.data_formats.datumaro_binary.mapper.media.mediaelementmapper attribute)": [[296, "datumaro.plugins.data_formats.datumaro_binary.mapper.media.MediaElementMapper.MAGIC_PATH"]], "magic_size_for_none (datumaro.plugins.data_formats.datumaro_binary.mapper.media.imagemapper attribute)": [[296, "datumaro.plugins.data_formats.datumaro_binary.mapper.media.ImageMapper.MAGIC_SIZE_FOR_NONE"]], "media_type (datumaro.plugins.data_formats.datumaro_binary.mapper.media.imagemapper attribute)": [[296, "datumaro.plugins.data_formats.datumaro_binary.mapper.media.ImageMapper.MEDIA_TYPE"]], "media_type (datumaro.plugins.data_formats.datumaro_binary.mapper.media.mediaelementmapper attribute)": [[296, "datumaro.plugins.data_formats.datumaro_binary.mapper.media.MediaElementMapper.MEDIA_TYPE"]], "media_type (datumaro.plugins.data_formats.datumaro_binary.mapper.media.pointcloudmapper attribute)": [[296, "datumaro.plugins.data_formats.datumaro_binary.mapper.media.PointCloudMapper.MEDIA_TYPE"]], "media_type (datumaro.plugins.data_formats.datumaro_binary.mapper.media.videoframemapper attribute)": [[296, "datumaro.plugins.data_formats.datumaro_binary.mapper.media.VideoFrameMapper.MEDIA_TYPE"]], "media_type (datumaro.plugins.data_formats.datumaro_binary.mapper.media.videomapper attribute)": [[296, "datumaro.plugins.data_formats.datumaro_binary.mapper.media.VideoMapper.MEDIA_TYPE"]], "mediaelementmapper (class in datumaro.plugins.data_formats.datumaro_binary.mapper.media)": [[296, "datumaro.plugins.data_formats.datumaro_binary.mapper.media.MediaElementMapper"]], "mediamapper (class in datumaro.plugins.data_formats.datumaro_binary.mapper.media)": [[296, "datumaro.plugins.data_formats.datumaro_binary.mapper.media.MediaMapper"]], "pointcloudmapper (class in datumaro.plugins.data_formats.datumaro_binary.mapper.media)": [[296, "datumaro.plugins.data_formats.datumaro_binary.mapper.media.PointCloudMapper"]], "videoframemapper (class in datumaro.plugins.data_formats.datumaro_binary.mapper.media)": [[296, "datumaro.plugins.data_formats.datumaro_binary.mapper.media.VideoFrameMapper"]], "videomapper (class in datumaro.plugins.data_formats.datumaro_binary.mapper.media)": [[296, "datumaro.plugins.data_formats.datumaro_binary.mapper.media.VideoMapper"]], "backward() (datumaro.plugins.data_formats.datumaro_binary.mapper.media.imagemapper class method)": [[296, "datumaro.plugins.data_formats.datumaro_binary.mapper.media.ImageMapper.backward"]], "backward() (datumaro.plugins.data_formats.datumaro_binary.mapper.media.mediaelementmapper class method)": [[296, "datumaro.plugins.data_formats.datumaro_binary.mapper.media.MediaElementMapper.backward"]], "backward() (datumaro.plugins.data_formats.datumaro_binary.mapper.media.mediamapper class method)": [[296, "datumaro.plugins.data_formats.datumaro_binary.mapper.media.MediaMapper.backward"]], "backward() (datumaro.plugins.data_formats.datumaro_binary.mapper.media.pointcloudmapper class method)": [[296, "datumaro.plugins.data_formats.datumaro_binary.mapper.media.PointCloudMapper.backward"]], "backward() (datumaro.plugins.data_formats.datumaro_binary.mapper.media.videoframemapper class method)": [[296, "datumaro.plugins.data_formats.datumaro_binary.mapper.media.VideoFrameMapper.backward"]], "backward() (datumaro.plugins.data_formats.datumaro_binary.mapper.media.videomapper class method)": [[296, "datumaro.plugins.data_formats.datumaro_binary.mapper.media.VideoMapper.backward"]], "backward_dict() (datumaro.plugins.data_formats.datumaro_binary.mapper.media.mediaelementmapper class method)": [[296, "datumaro.plugins.data_formats.datumaro_binary.mapper.media.MediaElementMapper.backward_dict"]], "datumaro.plugins.data_formats.datumaro_binary.mapper.media": [[296, "module-datumaro.plugins.data_formats.datumaro_binary.mapper.media"]], "forward() (datumaro.plugins.data_formats.datumaro_binary.mapper.media.imagemapper class method)": [[296, "datumaro.plugins.data_formats.datumaro_binary.mapper.media.ImageMapper.forward"]], "forward() (datumaro.plugins.data_formats.datumaro_binary.mapper.media.mediaelementmapper class method)": [[296, "datumaro.plugins.data_formats.datumaro_binary.mapper.media.MediaElementMapper.forward"]], "forward() (datumaro.plugins.data_formats.datumaro_binary.mapper.media.mediamapper class method)": [[296, "datumaro.plugins.data_formats.datumaro_binary.mapper.media.MediaMapper.forward"]], "forward() (datumaro.plugins.data_formats.datumaro_binary.mapper.media.pointcloudmapper class method)": [[296, "datumaro.plugins.data_formats.datumaro_binary.mapper.media.PointCloudMapper.forward"]], "forward() (datumaro.plugins.data_formats.datumaro_binary.mapper.media.videoframemapper class method)": [[296, "datumaro.plugins.data_formats.datumaro_binary.mapper.media.VideoFrameMapper.forward"]], "forward() (datumaro.plugins.data_formats.datumaro_binary.mapper.media.videomapper class method)": [[296, "datumaro.plugins.data_formats.datumaro_binary.mapper.media.VideoMapper.forward"]], "annotation_dir (datumaro.plugins.data_formats.dota.dotaformat attribute)": [[297, "datumaro.plugins.data_formats.dota.DotaFormat.ANNOTATION_DIR"]], "default_image_ext (datumaro.plugins.data_formats.dota.dotaexporter attribute)": [[297, "datumaro.plugins.data_formats.dota.DotaExporter.DEFAULT_IMAGE_EXT"]], "dotabase (class in datumaro.plugins.data_formats.dota)": [[297, "datumaro.plugins.data_formats.dota.DotaBase"]], "dotaexporter (class in datumaro.plugins.data_formats.dota)": [[297, "datumaro.plugins.data_formats.dota.DotaExporter"]], "dotaformat (class in datumaro.plugins.data_formats.dota)": [[297, "datumaro.plugins.data_formats.dota.DotaFormat"]], "dotaimporter (class in datumaro.plugins.data_formats.dota)": [[297, "datumaro.plugins.data_formats.dota.DotaImporter"]], "image_dir (datumaro.plugins.data_formats.dota.dotaformat attribute)": [[297, "datumaro.plugins.data_formats.dota.DotaFormat.IMAGE_DIR"]], "datumaro.plugins.data_formats.dota": [[297, "module-datumaro.plugins.data_formats.dota"]], "detect() (datumaro.plugins.data_formats.dota.dotaimporter class method)": [[297, "datumaro.plugins.data_formats.dota.DotaImporter.detect"]], "find_sources() (datumaro.plugins.data_formats.dota.dotaimporter class method)": [[297, "datumaro.plugins.data_formats.dota.DotaImporter.find_sources"]], "get_file_extensions() (datumaro.plugins.data_formats.dota.dotaimporter class method)": [[297, "datumaro.plugins.data_formats.dota.DotaImporter.get_file_extensions"]], "datumaro.plugins.data_formats.icdar": [[298, "module-datumaro.plugins.data_formats.icdar"]], "icdartextlocalizationbase (class in datumaro.plugins.data_formats.icdar.base)": [[299, "datumaro.plugins.data_formats.icdar.base.IcdarTextLocalizationBase"]], "icdartextlocalizationimporter (class in datumaro.plugins.data_formats.icdar.base)": [[299, "datumaro.plugins.data_formats.icdar.base.IcdarTextLocalizationImporter"]], "icdartextsegmentationbase (class in datumaro.plugins.data_formats.icdar.base)": [[299, "datumaro.plugins.data_formats.icdar.base.IcdarTextSegmentationBase"]], "icdartextsegmentationimporter (class in datumaro.plugins.data_formats.icdar.base)": [[299, "datumaro.plugins.data_formats.icdar.base.IcdarTextSegmentationImporter"]], "icdarwordrecognitionbase (class in datumaro.plugins.data_formats.icdar.base)": [[299, "datumaro.plugins.data_formats.icdar.base.IcdarWordRecognitionBase"]], "icdarwordrecognitionimporter (class in datumaro.plugins.data_formats.icdar.base)": [[299, "datumaro.plugins.data_formats.icdar.base.IcdarWordRecognitionImporter"]], "datumaro.plugins.data_formats.icdar.base": [[299, "module-datumaro.plugins.data_formats.icdar.base"]], "detect() (datumaro.plugins.data_formats.icdar.base.icdartextlocalizationimporter class method)": [[299, "datumaro.plugins.data_formats.icdar.base.IcdarTextLocalizationImporter.detect"]], "detect() (datumaro.plugins.data_formats.icdar.base.icdartextsegmentationimporter class method)": [[299, "datumaro.plugins.data_formats.icdar.base.IcdarTextSegmentationImporter.detect"]], "detect() (datumaro.plugins.data_formats.icdar.base.icdarwordrecognitionimporter class method)": [[299, "datumaro.plugins.data_formats.icdar.base.IcdarWordRecognitionImporter.detect"]], "find_sources() (datumaro.plugins.data_formats.icdar.base.icdartextlocalizationimporter class method)": [[299, "datumaro.plugins.data_formats.icdar.base.IcdarTextLocalizationImporter.find_sources"]], "find_sources() (datumaro.plugins.data_formats.icdar.base.icdartextsegmentationimporter class method)": [[299, "datumaro.plugins.data_formats.icdar.base.IcdarTextSegmentationImporter.find_sources"]], "find_sources() (datumaro.plugins.data_formats.icdar.base.icdarwordrecognitionimporter class method)": [[299, "datumaro.plugins.data_formats.icdar.base.IcdarWordRecognitionImporter.find_sources"]], "get_file_extensions() (datumaro.plugins.data_formats.icdar.base.icdartextlocalizationimporter class method)": [[299, "datumaro.plugins.data_formats.icdar.base.IcdarTextLocalizationImporter.get_file_extensions"]], "get_file_extensions() (datumaro.plugins.data_formats.icdar.base.icdartextsegmentationimporter class method)": [[299, "datumaro.plugins.data_formats.icdar.base.IcdarTextSegmentationImporter.get_file_extensions"]], "get_file_extensions() (datumaro.plugins.data_formats.icdar.base.icdarwordrecognitionimporter class method)": [[299, "datumaro.plugins.data_formats.icdar.base.IcdarWordRecognitionImporter.get_file_extensions"]], "default_image_ext (datumaro.plugins.data_formats.icdar.exporter.icdartextlocalizationexporter attribute)": [[300, "datumaro.plugins.data_formats.icdar.exporter.IcdarTextLocalizationExporter.DEFAULT_IMAGE_EXT"]], "default_image_ext (datumaro.plugins.data_formats.icdar.exporter.icdartextsegmentationexporter attribute)": [[300, "datumaro.plugins.data_formats.icdar.exporter.IcdarTextSegmentationExporter.DEFAULT_IMAGE_EXT"]], "default_image_ext (datumaro.plugins.data_formats.icdar.exporter.icdarwordrecognitionexporter attribute)": [[300, "datumaro.plugins.data_formats.icdar.exporter.IcdarWordRecognitionExporter.DEFAULT_IMAGE_EXT"]], "icdartextlocalizationexporter (class in datumaro.plugins.data_formats.icdar.exporter)": [[300, "datumaro.plugins.data_formats.icdar.exporter.IcdarTextLocalizationExporter"]], "icdartextsegmentationexporter (class in datumaro.plugins.data_formats.icdar.exporter)": [[300, "datumaro.plugins.data_formats.icdar.exporter.IcdarTextSegmentationExporter"]], "icdarwordrecognitionexporter (class in datumaro.plugins.data_formats.icdar.exporter)": [[300, "datumaro.plugins.data_formats.icdar.exporter.IcdarWordRecognitionExporter"]], "datumaro.plugins.data_formats.icdar.exporter": [[300, "module-datumaro.plugins.data_formats.icdar.exporter"]], "gt_ext (datumaro.plugins.data_formats.icdar.format.icdarpath attribute)": [[301, "datumaro.plugins.data_formats.icdar.format.IcdarPath.GT_EXT"]], "images_dir (datumaro.plugins.data_formats.icdar.format.icdarpath attribute)": [[301, "datumaro.plugins.data_formats.icdar.format.IcdarPath.IMAGES_DIR"]], "image_ext (datumaro.plugins.data_formats.icdar.format.icdarpath attribute)": [[301, "datumaro.plugins.data_formats.icdar.format.IcdarPath.IMAGE_EXT"]], "icdarpath (class in datumaro.plugins.data_formats.icdar.format)": [[301, "datumaro.plugins.data_formats.icdar.format.IcdarPath"]], "icdartask (class in datumaro.plugins.data_formats.icdar.format)": [[301, "datumaro.plugins.data_formats.icdar.format.IcdarTask"]], "datumaro.plugins.data_formats.icdar.format": [[301, "module-datumaro.plugins.data_formats.icdar.format"]], "text_localization (datumaro.plugins.data_formats.icdar.format.icdartask attribute)": [[301, "datumaro.plugins.data_formats.icdar.format.IcdarTask.text_localization"]], "text_segmentation (datumaro.plugins.data_formats.icdar.format.icdartask attribute)": [[301, "datumaro.plugins.data_formats.icdar.format.IcdarTask.text_segmentation"]], "word_recognition (datumaro.plugins.data_formats.icdar.format.icdartask attribute)": [[301, "datumaro.plugins.data_formats.icdar.format.IcdarTask.word_recognition"]], "default_image_ext (datumaro.plugins.data_formats.image_dir.imagedirexporter attribute)": [[302, "datumaro.plugins.data_formats.image_dir.ImageDirExporter.DEFAULT_IMAGE_EXT"]], "detect_confidence (datumaro.plugins.data_formats.image_dir.imagedirimporter attribute)": [[302, "datumaro.plugins.data_formats.image_dir.ImageDirImporter.DETECT_CONFIDENCE"]], "imagedirbase (class in datumaro.plugins.data_formats.image_dir)": [[302, "datumaro.plugins.data_formats.image_dir.ImageDirBase"]], "imagedirexporter (class in datumaro.plugins.data_formats.image_dir)": [[302, "datumaro.plugins.data_formats.image_dir.ImageDirExporter"]], "imagedirimporter (class in datumaro.plugins.data_formats.image_dir)": [[302, "datumaro.plugins.data_formats.image_dir.ImageDirImporter"]], "build_cmdline_parser() (datumaro.plugins.data_formats.image_dir.imagedirimporter class method)": [[302, "datumaro.plugins.data_formats.image_dir.ImageDirImporter.build_cmdline_parser"]], "datumaro.plugins.data_formats.image_dir": [[302, "module-datumaro.plugins.data_formats.image_dir"]], "detect() (datumaro.plugins.data_formats.image_dir.imagedirimporter class method)": [[302, "datumaro.plugins.data_formats.image_dir.ImageDirImporter.detect"]], "find_sources() (datumaro.plugins.data_formats.image_dir.imagedirimporter class method)": [[302, "datumaro.plugins.data_formats.image_dir.ImageDirImporter.find_sources"]], "get_file_extensions() (datumaro.plugins.data_formats.image_dir.imagedirimporter class method)": [[302, "datumaro.plugins.data_formats.image_dir.ImageDirImporter.get_file_extensions"]], "is_stream (datumaro.plugins.data_formats.image_dir.imagedirbase property)": [[302, "datumaro.plugins.data_formats.image_dir.ImageDirBase.is_stream"]], "compression (class in datumaro.plugins.data_formats.image_zip)": [[303, "datumaro.plugins.data_formats.image_zip.Compression"]], "default_archive_name (datumaro.plugins.data_formats.image_zip.imagezippath attribute)": [[303, "datumaro.plugins.data_formats.image_zip.ImageZipPath.DEFAULT_ARCHIVE_NAME"]], "default_compression (datumaro.plugins.data_formats.image_zip.imagezippath attribute)": [[303, "datumaro.plugins.data_formats.image_zip.ImageZipPath.DEFAULT_COMPRESSION"]], "default_image_ext (datumaro.plugins.data_formats.image_zip.imagezipexporter attribute)": [[303, "datumaro.plugins.data_formats.image_zip.ImageZipExporter.DEFAULT_IMAGE_EXT"]], "imagezipbase (class in datumaro.plugins.data_formats.image_zip)": [[303, "datumaro.plugins.data_formats.image_zip.ImageZipBase"]], "imagezipexporter (class in datumaro.plugins.data_formats.image_zip)": [[303, "datumaro.plugins.data_formats.image_zip.ImageZipExporter"]], "imagezipimporter (class in datumaro.plugins.data_formats.image_zip)": [[303, "datumaro.plugins.data_formats.image_zip.ImageZipImporter"]], "imagezippath (class in datumaro.plugins.data_formats.image_zip)": [[303, "datumaro.plugins.data_formats.image_zip.ImageZipPath"]], "zip_bzip2 (datumaro.plugins.data_formats.image_zip.compression attribute)": [[303, "datumaro.plugins.data_formats.image_zip.Compression.ZIP_BZIP2"]], "zip_deflated (datumaro.plugins.data_formats.image_zip.compression attribute)": [[303, "datumaro.plugins.data_formats.image_zip.Compression.ZIP_DEFLATED"]], "zip_lzma (datumaro.plugins.data_formats.image_zip.compression attribute)": [[303, "datumaro.plugins.data_formats.image_zip.Compression.ZIP_LZMA"]], "zip_stored (datumaro.plugins.data_formats.image_zip.compression attribute)": [[303, "datumaro.plugins.data_formats.image_zip.Compression.ZIP_STORED"]], "build_cmdline_parser() (datumaro.plugins.data_formats.image_zip.imagezipexporter class method)": [[303, "datumaro.plugins.data_formats.image_zip.ImageZipExporter.build_cmdline_parser"]], "datumaro.plugins.data_formats.image_zip": [[303, "module-datumaro.plugins.data_formats.image_zip"]], "find_sources() (datumaro.plugins.data_formats.image_zip.imagezipimporter class method)": [[303, "datumaro.plugins.data_formats.image_zip.ImageZipImporter.find_sources"]], "get_file_extensions() (datumaro.plugins.data_formats.image_zip.imagezipimporter class method)": [[303, "datumaro.plugins.data_formats.image_zip.ImageZipImporter.get_file_extensions"]], "default_image_ext (datumaro.plugins.data_formats.imagenet.imagenetexporter attribute)": [[304, "datumaro.plugins.data_formats.imagenet.ImagenetExporter.DEFAULT_IMAGE_EXT"]], "detect_confidence (datumaro.plugins.data_formats.imagenet.imagenetimporter attribute)": [[304, "datumaro.plugins.data_formats.imagenet.ImagenetImporter.DETECT_CONFIDENCE"]], "image_dir_no_label (datumaro.plugins.data_formats.imagenet.imagenetpath attribute)": [[304, "datumaro.plugins.data_formats.imagenet.ImagenetPath.IMAGE_DIR_NO_LABEL"]], "imagenetbase (class in datumaro.plugins.data_formats.imagenet)": [[304, "datumaro.plugins.data_formats.imagenet.ImagenetBase"]], "imagenetexporter (class in datumaro.plugins.data_formats.imagenet)": [[304, "datumaro.plugins.data_formats.imagenet.ImagenetExporter"]], "imagenetimporter (class in datumaro.plugins.data_formats.imagenet)": [[304, "datumaro.plugins.data_formats.imagenet.ImagenetImporter"]], "imagenetpath (class in datumaro.plugins.data_formats.imagenet)": [[304, "datumaro.plugins.data_formats.imagenet.ImagenetPath"]], "imagenetwithsubsetdirsexporter (class in datumaro.plugins.data_formats.imagenet)": [[304, "datumaro.plugins.data_formats.imagenet.ImagenetWithSubsetDirsExporter"]], "imagenetwithsubsetdirsimporter (class in datumaro.plugins.data_formats.imagenet)": [[304, "datumaro.plugins.data_formats.imagenet.ImagenetWithSubsetDirsImporter"]], "name (datumaro.plugins.data_formats.imagenet.imagenetwithsubsetdirsimporter attribute)": [[304, "datumaro.plugins.data_formats.imagenet.ImagenetWithSubsetDirsImporter.NAME"]], "sep_token (datumaro.plugins.data_formats.imagenet.imagenetpath attribute)": [[304, "datumaro.plugins.data_formats.imagenet.ImagenetPath.SEP_TOKEN"]], "use_subset_dirs (datumaro.plugins.data_formats.imagenet.imagenetexporter attribute)": [[304, "datumaro.plugins.data_formats.imagenet.ImagenetExporter.USE_SUBSET_DIRS"]], "use_subset_dirs (datumaro.plugins.data_formats.imagenet.imagenetwithsubsetdirsexporter attribute)": [[304, "datumaro.plugins.data_formats.imagenet.ImagenetWithSubsetDirsExporter.USE_SUBSET_DIRS"]], "build_cmdline_parser() (datumaro.plugins.data_formats.imagenet.imagenetimporter class method)": [[304, "datumaro.plugins.data_formats.imagenet.ImagenetImporter.build_cmdline_parser"]], "contains_only_images() (datumaro.plugins.data_formats.imagenet.imagenetimporter class method)": [[304, "datumaro.plugins.data_formats.imagenet.ImagenetImporter.contains_only_images"]], "datumaro.plugins.data_formats.imagenet": [[304, "module-datumaro.plugins.data_formats.imagenet"]], "detect() (datumaro.plugins.data_formats.imagenet.imagenetimporter class method)": [[304, "datumaro.plugins.data_formats.imagenet.ImagenetImporter.detect"]], "detect() (datumaro.plugins.data_formats.imagenet.imagenetwithsubsetdirsimporter class method)": [[304, "datumaro.plugins.data_formats.imagenet.ImagenetWithSubsetDirsImporter.detect"]], "find_sources() (datumaro.plugins.data_formats.imagenet.imagenetimporter class method)": [[304, "datumaro.plugins.data_formats.imagenet.ImagenetImporter.find_sources"]], "get_file_extensions() (datumaro.plugins.data_formats.imagenet.imagenetimporter class method)": [[304, "datumaro.plugins.data_formats.imagenet.ImagenetImporter.get_file_extensions"]], "is_stream (datumaro.plugins.data_formats.imagenet.imagenetbase property)": [[304, "datumaro.plugins.data_formats.imagenet.ImagenetBase.is_stream"]], "default_image_ext (datumaro.plugins.data_formats.imagenet_txt.imagenettxtexporter attribute)": [[305, "datumaro.plugins.data_formats.imagenet_txt.ImagenetTxtExporter.DEFAULT_IMAGE_EXT"]], "image_dir (datumaro.plugins.data_formats.imagenet_txt.imagenettxtpath attribute)": [[305, "datumaro.plugins.data_formats.imagenet_txt.ImagenetTxtPath.IMAGE_DIR"]], "imagenettxtbase (class in datumaro.plugins.data_formats.imagenet_txt)": [[305, "datumaro.plugins.data_formats.imagenet_txt.ImagenetTxtBase"]], "imagenettxtexporter (class in datumaro.plugins.data_formats.imagenet_txt)": [[305, "datumaro.plugins.data_formats.imagenet_txt.ImagenetTxtExporter"]], "imagenettxtimporter (class in datumaro.plugins.data_formats.imagenet_txt)": [[305, "datumaro.plugins.data_formats.imagenet_txt.ImagenetTxtImporter"]], "imagenettxtpath (class in datumaro.plugins.data_formats.imagenet_txt)": [[305, "datumaro.plugins.data_formats.imagenet_txt.ImagenetTxtPath"]], "labels_file (datumaro.plugins.data_formats.imagenet_txt.imagenettxtpath attribute)": [[305, "datumaro.plugins.data_formats.imagenet_txt.ImagenetTxtPath.LABELS_FILE"]], "build_cmdline_parser() (datumaro.plugins.data_formats.imagenet_txt.imagenettxtimporter class method)": [[305, "datumaro.plugins.data_formats.imagenet_txt.ImagenetTxtImporter.build_cmdline_parser"]], "datumaro.plugins.data_formats.imagenet_txt": [[305, "module-datumaro.plugins.data_formats.imagenet_txt"]], "detect() (datumaro.plugins.data_formats.imagenet_txt.imagenettxtimporter class method)": [[305, "datumaro.plugins.data_formats.imagenet_txt.ImagenetTxtImporter.detect"]], "find_sources_with_params() (datumaro.plugins.data_formats.imagenet_txt.imagenettxtimporter class method)": [[305, "datumaro.plugins.data_formats.imagenet_txt.ImagenetTxtImporter.find_sources_with_params"]], "get_file_extensions() (datumaro.plugins.data_formats.imagenet_txt.imagenettxtimporter class method)": [[305, "datumaro.plugins.data_formats.imagenet_txt.ImagenetTxtImporter.get_file_extensions"]], "datumaro.plugins.data_formats.kaggle": [[306, "module-datumaro.plugins.data_formats.kaggle"]], "kagglecocobase (class in datumaro.plugins.data_formats.kaggle.base)": [[307, "datumaro.plugins.data_formats.kaggle.base.KaggleCocoBase"]], "kaggleimagecsvbase (class in datumaro.plugins.data_formats.kaggle.base)": [[307, "datumaro.plugins.data_formats.kaggle.base.KaggleImageCsvBase"]], "kaggleimagemaskbase (class in datumaro.plugins.data_formats.kaggle.base)": [[307, "datumaro.plugins.data_formats.kaggle.base.KaggleImageMaskBase"]], "kaggleimagetxtbase (class in datumaro.plugins.data_formats.kaggle.base)": [[307, "datumaro.plugins.data_formats.kaggle.base.KaggleImageTxtBase"]], "kagglevocbase (class in datumaro.plugins.data_formats.kaggle.base)": [[307, "datumaro.plugins.data_formats.kaggle.base.KaggleVocBase"]], "kaggleyolobase (class in datumaro.plugins.data_formats.kaggle.base)": [[307, "datumaro.plugins.data_formats.kaggle.base.KaggleYoloBase"]], "ann_extensions (datumaro.plugins.data_formats.kaggle.base.kagglevocbase attribute)": [[307, "datumaro.plugins.data_formats.kaggle.base.KaggleVocBase.ann_extensions"]], "ann_extensions (datumaro.plugins.data_formats.kaggle.base.kaggleyolobase attribute)": [[307, "datumaro.plugins.data_formats.kaggle.base.KaggleYoloBase.ann_extensions"]], "build_cmdline_parser() (datumaro.plugins.data_formats.kaggle.base.kagglecocobase class method)": [[307, "datumaro.plugins.data_formats.kaggle.base.KaggleCocoBase.build_cmdline_parser"]], "build_cmdline_parser() (datumaro.plugins.data_formats.kaggle.base.kaggleimagecsvbase class method)": [[307, "datumaro.plugins.data_formats.kaggle.base.KaggleImageCsvBase.build_cmdline_parser"]], "build_cmdline_parser() (datumaro.plugins.data_formats.kaggle.base.kaggleimagemaskbase class method)": [[307, "datumaro.plugins.data_formats.kaggle.base.KaggleImageMaskBase.build_cmdline_parser"]], "build_cmdline_parser() (datumaro.plugins.data_formats.kaggle.base.kagglevocbase class method)": [[307, "datumaro.plugins.data_formats.kaggle.base.KaggleVocBase.build_cmdline_parser"]], "categories() (datumaro.plugins.data_formats.kaggle.base.kaggleimagecsvbase method)": [[307, "datumaro.plugins.data_formats.kaggle.base.KaggleImageCsvBase.categories"]], "categories() (datumaro.plugins.data_formats.kaggle.base.kaggleimagemaskbase method)": [[307, "datumaro.plugins.data_formats.kaggle.base.KaggleImageMaskBase.categories"]], "datumaro.plugins.data_formats.kaggle.base": [[307, "module-datumaro.plugins.data_formats.kaggle.base"]], "kineticsbase (class in datumaro.plugins.data_formats.kinetics)": [[308, "datumaro.plugins.data_formats.kinetics.KineticsBase"]], "kineticsimporter (class in datumaro.plugins.data_formats.kinetics)": [[308, "datumaro.plugins.data_formats.kinetics.KineticsImporter"]], "categories() (datumaro.plugins.data_formats.kinetics.kineticsbase method)": [[308, "datumaro.plugins.data_formats.kinetics.KineticsBase.categories"]], "datumaro.plugins.data_formats.kinetics": [[308, "module-datumaro.plugins.data_formats.kinetics"]], "detect() (datumaro.plugins.data_formats.kinetics.kineticsimporter class method)": [[308, "datumaro.plugins.data_formats.kinetics.KineticsImporter.detect"]], "find_sources() (datumaro.plugins.data_formats.kinetics.kineticsimporter class method)": [[308, "datumaro.plugins.data_formats.kinetics.KineticsImporter.find_sources"]], "get_file_extensions() (datumaro.plugins.data_formats.kinetics.kineticsimporter class method)": [[308, "datumaro.plugins.data_formats.kinetics.KineticsImporter.get_file_extensions"]], "datumaro.plugins.data_formats.kitti": [[309, "module-datumaro.plugins.data_formats.kitti"]], "kittidetectionbase (class in datumaro.plugins.data_formats.kitti.base)": [[310, "datumaro.plugins.data_formats.kitti.base.KittiDetectionBase"]], "kittisegmentationbase (class in datumaro.plugins.data_formats.kitti.base)": [[310, "datumaro.plugins.data_formats.kitti.base.KittiSegmentationBase"]], "datumaro.plugins.data_formats.kitti.base": [[310, "module-datumaro.plugins.data_formats.kitti.base"]], "default_image_ext (datumaro.plugins.data_formats.kitti.exporter.kittiexporter attribute)": [[311, "datumaro.plugins.data_formats.kitti.exporter.KittiExporter.DEFAULT_IMAGE_EXT"]], "kittidetectionexporter (class in datumaro.plugins.data_formats.kitti.exporter)": [[311, "datumaro.plugins.data_formats.kitti.exporter.KittiDetectionExporter"]], "kittiexporter (class in datumaro.plugins.data_formats.kitti.exporter)": [[311, "datumaro.plugins.data_formats.kitti.exporter.KittiExporter"]], "kittisegmentationexporter (class in datumaro.plugins.data_formats.kitti.exporter)": [[311, "datumaro.plugins.data_formats.kitti.exporter.KittiSegmentationExporter"]], "labelmaptype (class in datumaro.plugins.data_formats.kitti.exporter)": [[311, "datumaro.plugins.data_formats.kitti.exporter.LabelmapType"]], "build_cmdline_parser() (datumaro.plugins.data_formats.kitti.exporter.kittiexporter class method)": [[311, "datumaro.plugins.data_formats.kitti.exporter.KittiExporter.build_cmdline_parser"]], "datumaro.plugins.data_formats.kitti.exporter": [[311, "module-datumaro.plugins.data_formats.kitti.exporter"]], "get_label() (datumaro.plugins.data_formats.kitti.exporter.kittiexporter method)": [[311, "datumaro.plugins.data_formats.kitti.exporter.KittiExporter.get_label"]], "kitti (datumaro.plugins.data_formats.kitti.exporter.labelmaptype attribute)": [[311, "datumaro.plugins.data_formats.kitti.exporter.LabelmapType.kitti"]], "save_label_map() (datumaro.plugins.data_formats.kitti.exporter.kittiexporter method)": [[311, "datumaro.plugins.data_formats.kitti.exporter.KittiExporter.save_label_map"]], "save_mask() (datumaro.plugins.data_formats.kitti.exporter.kittiexporter method)": [[311, "datumaro.plugins.data_formats.kitti.exporter.KittiExporter.save_mask"]], "source (datumaro.plugins.data_formats.kitti.exporter.labelmaptype attribute)": [[311, "datumaro.plugins.data_formats.kitti.exporter.LabelmapType.source"]], "default_occluded (datumaro.plugins.data_formats.kitti.format.kittipath attribute)": [[312, "datumaro.plugins.data_formats.kitti.format.KittiPath.DEFAULT_OCCLUDED"]], "default_score (datumaro.plugins.data_formats.kitti.format.kittipath attribute)": [[312, "datumaro.plugins.data_formats.kitti.format.KittiPath.DEFAULT_SCORE"]], "default_truncated (datumaro.plugins.data_formats.kitti.format.kittipath attribute)": [[312, "datumaro.plugins.data_formats.kitti.format.KittiPath.DEFAULT_TRUNCATED"]], "images_dir (datumaro.plugins.data_formats.kitti.format.kittipath attribute)": [[312, "datumaro.plugins.data_formats.kitti.format.KittiPath.IMAGES_DIR"]], "image_ext (datumaro.plugins.data_formats.kitti.format.kittipath attribute)": [[312, "datumaro.plugins.data_formats.kitti.format.KittiPath.IMAGE_EXT"]], "instances_dir (datumaro.plugins.data_formats.kitti.format.kittipath attribute)": [[312, "datumaro.plugins.data_formats.kitti.format.KittiPath.INSTANCES_DIR"]], "kittipath (class in datumaro.plugins.data_formats.kitti.format)": [[312, "datumaro.plugins.data_formats.kitti.format.KittiPath"]], "kittitask (class in datumaro.plugins.data_formats.kitti.format)": [[312, "datumaro.plugins.data_formats.kitti.format.KittiTask"]], "labelmap_file (datumaro.plugins.data_formats.kitti.format.kittipath attribute)": [[312, "datumaro.plugins.data_formats.kitti.format.KittiPath.LABELMAP_FILE"]], "labels_dir (datumaro.plugins.data_formats.kitti.format.kittipath attribute)": [[312, "datumaro.plugins.data_formats.kitti.format.KittiPath.LABELS_DIR"]], "mask_ext (datumaro.plugins.data_formats.kitti.format.kittipath attribute)": [[312, "datumaro.plugins.data_formats.kitti.format.KittiPath.MASK_EXT"]], "semantic_dir (datumaro.plugins.data_formats.kitti.format.kittipath attribute)": [[312, "datumaro.plugins.data_formats.kitti.format.KittiPath.SEMANTIC_DIR"]], "semantic_rgb_dir (datumaro.plugins.data_formats.kitti.format.kittipath attribute)": [[312, "datumaro.plugins.data_formats.kitti.format.KittiPath.SEMANTIC_RGB_DIR"]], "datumaro.plugins.data_formats.kitti.format": [[312, "module-datumaro.plugins.data_formats.kitti.format"]], "detection (datumaro.plugins.data_formats.kitti.format.kittitask attribute)": [[312, "datumaro.plugins.data_formats.kitti.format.KittiTask.detection"]], "make_kitti_categories() (in module datumaro.plugins.data_formats.kitti.format)": [[312, "datumaro.plugins.data_formats.kitti.format.make_kitti_categories"]], "parse_label_map() (in module datumaro.plugins.data_formats.kitti.format)": [[312, "datumaro.plugins.data_formats.kitti.format.parse_label_map"]], "segmentation (datumaro.plugins.data_formats.kitti.format.kittitask attribute)": [[312, "datumaro.plugins.data_formats.kitti.format.KittiTask.segmentation"]], "write_label_map() (in module datumaro.plugins.data_formats.kitti.format)": [[312, "datumaro.plugins.data_formats.kitti.format.write_label_map"]], "detect_confidence (datumaro.plugins.data_formats.kitti.importer.kittiimporter attribute)": [[313, "datumaro.plugins.data_formats.kitti.importer.KittiImporter.DETECT_CONFIDENCE"]], "kittidetectionimporter (class in datumaro.plugins.data_formats.kitti.importer)": [[313, "datumaro.plugins.data_formats.kitti.importer.KittiDetectionImporter"]], "kittiimporter (class in datumaro.plugins.data_formats.kitti.importer)": [[313, "datumaro.plugins.data_formats.kitti.importer.KittiImporter"]], "kittisegmentationimporter (class in datumaro.plugins.data_formats.kitti.importer)": [[313, "datumaro.plugins.data_formats.kitti.importer.KittiSegmentationImporter"]], "datumaro.plugins.data_formats.kitti.importer": [[313, "module-datumaro.plugins.data_formats.kitti.importer"]], "detect() (datumaro.plugins.data_formats.kitti.importer.kittidetectionimporter class method)": [[313, "datumaro.plugins.data_formats.kitti.importer.KittiDetectionImporter.detect"]], "detect() (datumaro.plugins.data_formats.kitti.importer.kittiimporter class method)": [[313, "datumaro.plugins.data_formats.kitti.importer.KittiImporter.detect"]], "detect() (datumaro.plugins.data_formats.kitti.importer.kittisegmentationimporter class method)": [[313, "datumaro.plugins.data_formats.kitti.importer.KittiSegmentationImporter.detect"]], "find_sources() (datumaro.plugins.data_formats.kitti.importer.kittiimporter class method)": [[313, "datumaro.plugins.data_formats.kitti.importer.KittiImporter.find_sources"]], "get_file_extensions() (datumaro.plugins.data_formats.kitti.importer.kittidetectionimporter class method)": [[313, "datumaro.plugins.data_formats.kitti.importer.KittiDetectionImporter.get_file_extensions"]], "get_file_extensions() (datumaro.plugins.data_formats.kitti.importer.kittiimporter class method)": [[313, "datumaro.plugins.data_formats.kitti.importer.KittiImporter.get_file_extensions"]], "get_file_extensions() (datumaro.plugins.data_formats.kitti.importer.kittisegmentationimporter class method)": [[313, "datumaro.plugins.data_formats.kitti.importer.KittiSegmentationImporter.get_file_extensions"]], "datumaro.plugins.data_formats.kitti_raw": [[314, "module-datumaro.plugins.data_formats.kitti_raw"]], "kittirawbase (class in datumaro.plugins.data_formats.kitti_raw.base)": [[315, "datumaro.plugins.data_formats.kitti_raw.base.KittiRawBase"]], "kittirawimporter (class in datumaro.plugins.data_formats.kitti_raw.base)": [[315, "datumaro.plugins.data_formats.kitti_raw.base.KittiRawImporter"]], "datumaro.plugins.data_formats.kitti_raw.base": [[315, "module-datumaro.plugins.data_formats.kitti_raw.base"]], "detect() (datumaro.plugins.data_formats.kitti_raw.base.kittirawimporter class method)": [[315, "datumaro.plugins.data_formats.kitti_raw.base.KittiRawImporter.detect"]], "find_sources() (datumaro.plugins.data_formats.kitti_raw.base.kittirawimporter class method)": [[315, "datumaro.plugins.data_formats.kitti_raw.base.KittiRawImporter.find_sources"]], "get_file_extensions() (datumaro.plugins.data_formats.kitti_raw.base.kittirawimporter class method)": [[315, "datumaro.plugins.data_formats.kitti_raw.base.KittiRawImporter.get_file_extensions"]], "default_image_ext (datumaro.plugins.data_formats.kitti_raw.exporter.kittirawexporter attribute)": [[316, "datumaro.plugins.data_formats.kitti_raw.exporter.KittiRawExporter.DEFAULT_IMAGE_EXT"]], "kittirawexporter (class in datumaro.plugins.data_formats.kitti_raw.exporter)": [[316, "datumaro.plugins.data_formats.kitti_raw.exporter.KittiRawExporter"]], "build_cmdline_parser() (datumaro.plugins.data_formats.kitti_raw.exporter.kittirawexporter class method)": [[316, "datumaro.plugins.data_formats.kitti_raw.exporter.KittiRawExporter.build_cmdline_parser"]], "datumaro.plugins.data_formats.kitti_raw.exporter": [[316, "module-datumaro.plugins.data_formats.kitti_raw.exporter"]], "patch() (datumaro.plugins.data_formats.kitti_raw.exporter.kittirawexporter class method)": [[316, "datumaro.plugins.data_formats.kitti_raw.exporter.KittiRawExporter.patch"]], "anno_file (datumaro.plugins.data_formats.kitti_raw.format.kittirawpath attribute)": [[317, "datumaro.plugins.data_formats.kitti_raw.format.KittiRawPath.ANNO_FILE"]], "behind_image (datumaro.plugins.data_formats.kitti_raw.format.truncationstates attribute)": [[317, "datumaro.plugins.data_formats.kitti_raw.format.TruncationStates.BEHIND_IMAGE"]], "builtin_attrs (datumaro.plugins.data_formats.kitti_raw.format.kittirawpath attribute)": [[317, "datumaro.plugins.data_formats.kitti_raw.format.KittiRawPath.BUILTIN_ATTRS"]], "fully (datumaro.plugins.data_formats.kitti_raw.format.occlusionstates attribute)": [[317, "datumaro.plugins.data_formats.kitti_raw.format.OcclusionStates.FULLY"]], "img_dir_prefix (datumaro.plugins.data_formats.kitti_raw.format.kittirawpath attribute)": [[317, "datumaro.plugins.data_formats.kitti_raw.format.KittiRawPath.IMG_DIR_PREFIX"]], "interp (datumaro.plugins.data_formats.kitti_raw.format.posestates attribute)": [[317, "datumaro.plugins.data_formats.kitti_raw.format.PoseStates.INTERP"]], "in_image (datumaro.plugins.data_formats.kitti_raw.format.truncationstates attribute)": [[317, "datumaro.plugins.data_formats.kitti_raw.format.TruncationStates.IN_IMAGE"]], "kittirawpath (class in datumaro.plugins.data_formats.kitti_raw.format)": [[317, "datumaro.plugins.data_formats.kitti_raw.format.KittiRawPath"]], "labeled (datumaro.plugins.data_formats.kitti_raw.format.posestates attribute)": [[317, "datumaro.plugins.data_formats.kitti_raw.format.PoseStates.LABELED"]], "name_mapping_file (datumaro.plugins.data_formats.kitti_raw.format.kittirawpath attribute)": [[317, "datumaro.plugins.data_formats.kitti_raw.format.KittiRawPath.NAME_MAPPING_FILE"]], "occlusion_unset (datumaro.plugins.data_formats.kitti_raw.format.occlusionstates attribute)": [[317, "datumaro.plugins.data_formats.kitti_raw.format.OcclusionStates.OCCLUSION_UNSET"]], "out_image (datumaro.plugins.data_formats.kitti_raw.format.truncationstates attribute)": [[317, "datumaro.plugins.data_formats.kitti_raw.format.TruncationStates.OUT_IMAGE"]], "occlusionstates (class in datumaro.plugins.data_formats.kitti_raw.format)": [[317, "datumaro.plugins.data_formats.kitti_raw.format.OcclusionStates"]], "partly (datumaro.plugins.data_formats.kitti_raw.format.occlusionstates attribute)": [[317, "datumaro.plugins.data_formats.kitti_raw.format.OcclusionStates.PARTLY"]], "pcd_dir (datumaro.plugins.data_formats.kitti_raw.format.kittirawpath attribute)": [[317, "datumaro.plugins.data_formats.kitti_raw.format.KittiRawPath.PCD_DIR"]], "posestates (class in datumaro.plugins.data_formats.kitti_raw.format)": [[317, "datumaro.plugins.data_formats.kitti_raw.format.PoseStates"]], "special_attrs (datumaro.plugins.data_formats.kitti_raw.format.kittirawpath attribute)": [[317, "datumaro.plugins.data_formats.kitti_raw.format.KittiRawPath.SPECIAL_ATTRS"]], "truncated (datumaro.plugins.data_formats.kitti_raw.format.truncationstates attribute)": [[317, "datumaro.plugins.data_formats.kitti_raw.format.TruncationStates.TRUNCATED"]], "truncation_unset (datumaro.plugins.data_formats.kitti_raw.format.truncationstates attribute)": [[317, "datumaro.plugins.data_formats.kitti_raw.format.TruncationStates.TRUNCATION_UNSET"]], "truncationstates (class in datumaro.plugins.data_formats.kitti_raw.format)": [[317, "datumaro.plugins.data_formats.kitti_raw.format.TruncationStates"]], "unset (datumaro.plugins.data_formats.kitti_raw.format.posestates attribute)": [[317, "datumaro.plugins.data_formats.kitti_raw.format.PoseStates.UNSET"]], "visible (datumaro.plugins.data_formats.kitti_raw.format.occlusionstates attribute)": [[317, "datumaro.plugins.data_formats.kitti_raw.format.OcclusionStates.VISIBLE"]], "datumaro.plugins.data_formats.kitti_raw.format": [[317, "module-datumaro.plugins.data_formats.kitti_raw.format"]], "annotations_dir (datumaro.plugins.data_formats.labelme.labelmepath attribute)": [[318, "datumaro.plugins.data_formats.labelme.LabelMePath.ANNOTATIONS_DIR"]], "attr_export_escapes (datumaro.plugins.data_formats.labelme.labelmepath attribute)": [[318, "datumaro.plugins.data_formats.labelme.LabelMePath.ATTR_EXPORT_ESCAPES"]], "attr_import_escapes (datumaro.plugins.data_formats.labelme.labelmepath attribute)": [[318, "datumaro.plugins.data_formats.labelme.LabelMePath.ATTR_IMPORT_ESCAPES"]], "default_image_ext (datumaro.plugins.data_formats.labelme.labelmeexporter attribute)": [[318, "datumaro.plugins.data_formats.labelme.LabelMeExporter.DEFAULT_IMAGE_EXT"]], "images_dir (datumaro.plugins.data_formats.labelme.labelmepath attribute)": [[318, "datumaro.plugins.data_formats.labelme.LabelMePath.IMAGES_DIR"]], "image_ext (datumaro.plugins.data_formats.labelme.labelmepath attribute)": [[318, "datumaro.plugins.data_formats.labelme.LabelMePath.IMAGE_EXT"]], "labelmebase (class in datumaro.plugins.data_formats.labelme)": [[318, "datumaro.plugins.data_formats.labelme.LabelMeBase"]], "labelmeexporter (class in datumaro.plugins.data_formats.labelme)": [[318, "datumaro.plugins.data_formats.labelme.LabelMeExporter"]], "labelmeimporter (class in datumaro.plugins.data_formats.labelme)": [[318, "datumaro.plugins.data_formats.labelme.LabelMeImporter"]], "labelmepath (class in datumaro.plugins.data_formats.labelme)": [[318, "datumaro.plugins.data_formats.labelme.LabelMePath"]], "masks_dir (datumaro.plugins.data_formats.labelme.labelmepath attribute)": [[318, "datumaro.plugins.data_formats.labelme.LabelMePath.MASKS_DIR"]], "categories() (datumaro.plugins.data_formats.labelme.labelmebase method)": [[318, "datumaro.plugins.data_formats.labelme.LabelMeBase.categories"]], "datumaro.plugins.data_formats.labelme": [[318, "module-datumaro.plugins.data_formats.labelme"]], "detect() (datumaro.plugins.data_formats.labelme.labelmeimporter class method)": [[318, "datumaro.plugins.data_formats.labelme.LabelMeImporter.detect"]], "find_sources() (datumaro.plugins.data_formats.labelme.labelmeimporter class method)": [[318, "datumaro.plugins.data_formats.labelme.LabelMeImporter.find_sources"]], "get_file_extensions() (datumaro.plugins.data_formats.labelme.labelmeimporter class method)": [[318, "datumaro.plugins.data_formats.labelme.LabelMeImporter.get_file_extensions"]], "annotation_dir (datumaro.plugins.data_formats.lfw.lfwpath attribute)": [[319, "datumaro.plugins.data_formats.lfw.LfwPath.ANNOTATION_DIR"]], "default_image_ext (datumaro.plugins.data_formats.lfw.lfwexporter attribute)": [[319, "datumaro.plugins.data_formats.lfw.LfwExporter.DEFAULT_IMAGE_EXT"]], "images_dir (datumaro.plugins.data_formats.lfw.lfwpath attribute)": [[319, "datumaro.plugins.data_formats.lfw.LfwPath.IMAGES_DIR"]], "image_ext (datumaro.plugins.data_formats.lfw.lfwpath attribute)": [[319, "datumaro.plugins.data_formats.lfw.LfwPath.IMAGE_EXT"]], "landmarks_file (datumaro.plugins.data_formats.lfw.lfwpath attribute)": [[319, "datumaro.plugins.data_formats.lfw.LfwPath.LANDMARKS_FILE"]], "lfwbase (class in datumaro.plugins.data_formats.lfw)": [[319, "datumaro.plugins.data_formats.lfw.LfwBase"]], "lfwexporter (class in datumaro.plugins.data_formats.lfw)": [[319, "datumaro.plugins.data_formats.lfw.LfwExporter"]], "lfwimporter (class in datumaro.plugins.data_formats.lfw)": [[319, "datumaro.plugins.data_formats.lfw.LfwImporter"]], "lfwpath (class in datumaro.plugins.data_formats.lfw)": [[319, "datumaro.plugins.data_formats.lfw.LfwPath"]], "pairs_file (datumaro.plugins.data_formats.lfw.lfwpath attribute)": [[319, "datumaro.plugins.data_formats.lfw.LfwPath.PAIRS_FILE"]], "pattern (datumaro.plugins.data_formats.lfw.lfwpath attribute)": [[319, "datumaro.plugins.data_formats.lfw.LfwPath.PATTERN"]], "people_file (datumaro.plugins.data_formats.lfw.lfwpath attribute)": [[319, "datumaro.plugins.data_formats.lfw.LfwPath.PEOPLE_FILE"]], "datumaro.plugins.data_formats.lfw": [[319, "module-datumaro.plugins.data_formats.lfw"]], "detect() (datumaro.plugins.data_formats.lfw.lfwimporter class method)": [[319, "datumaro.plugins.data_formats.lfw.LfwImporter.detect"]], "find_sources() (datumaro.plugins.data_formats.lfw.lfwimporter class method)": [[319, "datumaro.plugins.data_formats.lfw.LfwImporter.find_sources"]], "get_file_extensions() (datumaro.plugins.data_formats.lfw.lfwimporter class method)": [[319, "datumaro.plugins.data_formats.lfw.LfwImporter.get_file_extensions"]], "get_image_name() (datumaro.plugins.data_formats.lfw.lfwbase static method)": [[319, "datumaro.plugins.data_formats.lfw.LfwBase.get_image_name"]], "datumaro.plugins.data_formats.mapillary_vistas": [[320, "module-datumaro.plugins.data_formats.mapillary_vistas"]], "mapillaryvistasinstancesbase (class in datumaro.plugins.data_formats.mapillary_vistas.base)": [[321, "datumaro.plugins.data_formats.mapillary_vistas.base.MapillaryVistasInstancesBase"]], "mapillaryvistaspanopticbase (class in datumaro.plugins.data_formats.mapillary_vistas.base)": [[321, "datumaro.plugins.data_formats.mapillary_vistas.base.MapillaryVistasPanopticBase"]], "datumaro.plugins.data_formats.mapillary_vistas.base": [[321, "module-datumaro.plugins.data_formats.mapillary_vistas.base"]], "annotation_dirs (datumaro.plugins.data_formats.mapillary_vistas.format.mapillaryvistaspath attribute)": [[322, "datumaro.plugins.data_formats.mapillary_vistas.format.MapillaryVistasPath.ANNOTATION_DIRS"]], "class_by_dir (datumaro.plugins.data_formats.mapillary_vistas.format.mapillaryvistaspath attribute)": [[322, "datumaro.plugins.data_formats.mapillary_vistas.format.MapillaryVistasPath.CLASS_BY_DIR"]], "class_dir (datumaro.plugins.data_formats.mapillary_vistas.format.mapillaryvistaspath attribute)": [[322, "datumaro.plugins.data_formats.mapillary_vistas.format.MapillaryVistasPath.CLASS_DIR"]], "config_files (datumaro.plugins.data_formats.mapillary_vistas.format.mapillaryvistaspath attribute)": [[322, "datumaro.plugins.data_formats.mapillary_vistas.format.MapillaryVistasPath.CONFIG_FILES"]], "images_dir (datumaro.plugins.data_formats.mapillary_vistas.format.mapillaryvistaspath attribute)": [[322, "datumaro.plugins.data_formats.mapillary_vistas.format.MapillaryVistasPath.IMAGES_DIR"]], "instances_dir (datumaro.plugins.data_formats.mapillary_vistas.format.mapillaryvistaspath attribute)": [[322, "datumaro.plugins.data_formats.mapillary_vistas.format.MapillaryVistasPath.INSTANCES_DIR"]], "mask_ext (datumaro.plugins.data_formats.mapillary_vistas.format.mapillaryvistaspath attribute)": [[322, "datumaro.plugins.data_formats.mapillary_vistas.format.MapillaryVistasPath.MASK_EXT"]], "mapillaryvistaspath (class in datumaro.plugins.data_formats.mapillary_vistas.format)": [[322, "datumaro.plugins.data_formats.mapillary_vistas.format.MapillaryVistasPath"]], "mapillaryvistastask (class in datumaro.plugins.data_formats.mapillary_vistas.format)": [[322, "datumaro.plugins.data_formats.mapillary_vistas.format.MapillaryVistasTask"]], "panoptic_config (datumaro.plugins.data_formats.mapillary_vistas.format.mapillaryvistaspath attribute)": [[322, "datumaro.plugins.data_formats.mapillary_vistas.format.MapillaryVistasPath.PANOPTIC_CONFIG"]], "panoptic_dir (datumaro.plugins.data_formats.mapillary_vistas.format.mapillaryvistaspath attribute)": [[322, "datumaro.plugins.data_formats.mapillary_vistas.format.MapillaryVistasPath.PANOPTIC_DIR"]], "polygon_dir (datumaro.plugins.data_formats.mapillary_vistas.format.mapillaryvistaspath attribute)": [[322, "datumaro.plugins.data_formats.mapillary_vistas.format.MapillaryVistasPath.POLYGON_DIR"]], "datumaro.plugins.data_formats.mapillary_vistas.format": [[322, "module-datumaro.plugins.data_formats.mapillary_vistas.format"]], "instances (datumaro.plugins.data_formats.mapillary_vistas.format.mapillaryvistastask attribute)": [[322, "datumaro.plugins.data_formats.mapillary_vistas.format.MapillaryVistasTask.instances"]], "make_mapillary_instance_categories() (in module datumaro.plugins.data_formats.mapillary_vistas.format)": [[322, "datumaro.plugins.data_formats.mapillary_vistas.format.make_mapillary_instance_categories"]], "panoptic (datumaro.plugins.data_formats.mapillary_vistas.format.mapillaryvistastask attribute)": [[322, "datumaro.plugins.data_formats.mapillary_vistas.format.MapillaryVistasTask.panoptic"]], "parse_config_file() (in module datumaro.plugins.data_formats.mapillary_vistas.format)": [[322, "datumaro.plugins.data_formats.mapillary_vistas.format.parse_config_file"]], "mapillaryvistasimporter (class in datumaro.plugins.data_formats.mapillary_vistas.importer)": [[323, "datumaro.plugins.data_formats.mapillary_vistas.importer.MapillaryVistasImporter"]], "mapillaryvistasinstancesimporter (class in datumaro.plugins.data_formats.mapillary_vistas.importer)": [[323, "datumaro.plugins.data_formats.mapillary_vistas.importer.MapillaryVistasInstancesImporter"]], "mapillaryvistaspanopticimporter (class in datumaro.plugins.data_formats.mapillary_vistas.importer)": [[323, "datumaro.plugins.data_formats.mapillary_vistas.importer.MapillaryVistasPanopticImporter"]], "build_cmdline_parser() (datumaro.plugins.data_formats.mapillary_vistas.importer.mapillaryvistasimporter class method)": [[323, "datumaro.plugins.data_formats.mapillary_vistas.importer.MapillaryVistasImporter.build_cmdline_parser"]], "datumaro.plugins.data_formats.mapillary_vistas.importer": [[323, "module-datumaro.plugins.data_formats.mapillary_vistas.importer"]], "find_sources() (datumaro.plugins.data_formats.mapillary_vistas.importer.mapillaryvistasimporter class method)": [[323, "datumaro.plugins.data_formats.mapillary_vistas.importer.MapillaryVistasImporter.find_sources"]], "get_file_extensions() (datumaro.plugins.data_formats.mapillary_vistas.importer.mapillaryvistasimporter class method)": [[323, "datumaro.plugins.data_formats.mapillary_vistas.importer.MapillaryVistasImporter.get_file_extensions"]], "attributes (datumaro.plugins.data_formats.market1501.market1501path attribute)": [[324, "datumaro.plugins.data_formats.market1501.Market1501Path.ATTRIBUTES"]], "bbox_dir (datumaro.plugins.data_formats.market1501.market1501path attribute)": [[324, "datumaro.plugins.data_formats.market1501.Market1501Path.BBOX_DIR"]], "default_image_ext (datumaro.plugins.data_formats.market1501.market1501exporter attribute)": [[324, "datumaro.plugins.data_formats.market1501.Market1501Exporter.DEFAULT_IMAGE_EXT"]], "detect_confidence (datumaro.plugins.data_formats.market1501.market1501importer attribute)": [[324, "datumaro.plugins.data_formats.market1501.Market1501Importer.DETECT_CONFIDENCE"]], "image_ext (datumaro.plugins.data_formats.market1501.market1501path attribute)": [[324, "datumaro.plugins.data_formats.market1501.Market1501Path.IMAGE_EXT"]], "list_prefix (datumaro.plugins.data_formats.market1501.market1501path attribute)": [[324, "datumaro.plugins.data_formats.market1501.Market1501Path.LIST_PREFIX"]], "market1501base (class in datumaro.plugins.data_formats.market1501)": [[324, "datumaro.plugins.data_formats.market1501.Market1501Base"]], "market1501exporter (class in datumaro.plugins.data_formats.market1501)": [[324, "datumaro.plugins.data_formats.market1501.Market1501Exporter"]], "market1501importer (class in datumaro.plugins.data_formats.market1501)": [[324, "datumaro.plugins.data_formats.market1501.Market1501Importer"]], "market1501path (class in datumaro.plugins.data_formats.market1501)": [[324, "datumaro.plugins.data_formats.market1501.Market1501Path"]], "pattern (datumaro.plugins.data_formats.market1501.market1501path attribute)": [[324, "datumaro.plugins.data_formats.market1501.Market1501Path.PATTERN"]], "query_dir (datumaro.plugins.data_formats.market1501.market1501path attribute)": [[324, "datumaro.plugins.data_formats.market1501.Market1501Path.QUERY_DIR"]], "unknown_id (datumaro.plugins.data_formats.market1501.market1501path attribute)": [[324, "datumaro.plugins.data_formats.market1501.Market1501Path.UNKNOWN_ID"]], "datumaro.plugins.data_formats.market1501": [[324, "module-datumaro.plugins.data_formats.market1501"]], "find_sources() (datumaro.plugins.data_formats.market1501.market1501importer class method)": [[324, "datumaro.plugins.data_formats.market1501.Market1501Importer.find_sources"]], "get_file_extensions() (datumaro.plugins.data_formats.market1501.market1501importer class method)": [[324, "datumaro.plugins.data_formats.market1501.Market1501Importer.get_file_extensions"]], "image_dir_patterns (datumaro.plugins.data_formats.mars.marspath attribute)": [[325, "datumaro.plugins.data_formats.mars.MarsPath.IMAGE_DIR_PATTERNS"]], "image_name_postfix (datumaro.plugins.data_formats.mars.marspath attribute)": [[325, "datumaro.plugins.data_formats.mars.MarsPath.IMAGE_NAME_POSTFIX"]], "marsbase (class in datumaro.plugins.data_formats.mars)": [[325, "datumaro.plugins.data_formats.mars.MarsBase"]], "marsimporter (class in datumaro.plugins.data_formats.mars)": [[325, "datumaro.plugins.data_formats.mars.MarsImporter"]], "marspath (class in datumaro.plugins.data_formats.mars)": [[325, "datumaro.plugins.data_formats.mars.MarsPath"]], "subset_dir_pattern (datumaro.plugins.data_formats.mars.marspath attribute)": [[325, "datumaro.plugins.data_formats.mars.MarsPath.SUBSET_DIR_PATTERN"]], "categories() (datumaro.plugins.data_formats.mars.marsbase method)": [[325, "datumaro.plugins.data_formats.mars.MarsBase.categories"]], "datumaro.plugins.data_formats.mars": [[325, "module-datumaro.plugins.data_formats.mars"]], "detect() (datumaro.plugins.data_formats.mars.marsimporter class method)": [[325, "datumaro.plugins.data_formats.mars.MarsImporter.detect"]], "find_sources() (datumaro.plugins.data_formats.mars.marsimporter class method)": [[325, "datumaro.plugins.data_formats.mars.MarsImporter.find_sources"]], "get_file_extensions() (datumaro.plugins.data_formats.mars.marsimporter class method)": [[325, "datumaro.plugins.data_formats.mars.MarsImporter.get_file_extensions"]], "mmdetcocobase (class in datumaro.plugins.data_formats.mmdet)": [[326, "datumaro.plugins.data_formats.mmdet.MmdetCocoBase"]], "mmdetcocoimporter (class in datumaro.plugins.data_formats.mmdet)": [[326, "datumaro.plugins.data_formats.mmdet.MmdetCocoImporter"]], "datumaro.plugins.data_formats.mmdet": [[326, "module-datumaro.plugins.data_formats.mmdet"]], "detect() (datumaro.plugins.data_formats.mmdet.mmdetcocoimporter class method)": [[326, "datumaro.plugins.data_formats.mmdet.MmdetCocoImporter.detect"]], "default_image_ext (datumaro.plugins.data_formats.mnist.mnistexporter attribute)": [[327, "datumaro.plugins.data_formats.mnist.MnistExporter.DEFAULT_IMAGE_EXT"]], "images_file (datumaro.plugins.data_formats.mnist.mnistpath attribute)": [[327, "datumaro.plugins.data_formats.mnist.MnistPath.IMAGES_FILE"]], "image_size (datumaro.plugins.data_formats.mnist.mnistpath attribute)": [[327, "datumaro.plugins.data_formats.mnist.MnistPath.IMAGE_SIZE"]], "labels_file (datumaro.plugins.data_formats.mnist.mnistpath attribute)": [[327, "datumaro.plugins.data_formats.mnist.MnistPath.LABELS_FILE"]], "mnistbase (class in datumaro.plugins.data_formats.mnist)": [[327, "datumaro.plugins.data_formats.mnist.MnistBase"]], "mnistexporter (class in datumaro.plugins.data_formats.mnist)": [[327, "datumaro.plugins.data_formats.mnist.MnistExporter"]], "mnistimporter (class in datumaro.plugins.data_formats.mnist)": [[327, "datumaro.plugins.data_formats.mnist.MnistImporter"]], "mnistpath (class in datumaro.plugins.data_formats.mnist)": [[327, "datumaro.plugins.data_formats.mnist.MnistPath"]], "none_label (datumaro.plugins.data_formats.mnist.mnistpath attribute)": [[327, "datumaro.plugins.data_formats.mnist.MnistPath.NONE_LABEL"]], "test_images_file (datumaro.plugins.data_formats.mnist.mnistpath attribute)": [[327, "datumaro.plugins.data_formats.mnist.MnistPath.TEST_IMAGES_FILE"]], "test_labels_file (datumaro.plugins.data_formats.mnist.mnistpath attribute)": [[327, "datumaro.plugins.data_formats.mnist.MnistPath.TEST_LABELS_FILE"]], "datumaro.plugins.data_formats.mnist": [[327, "module-datumaro.plugins.data_formats.mnist"]], "find_sources() (datumaro.plugins.data_formats.mnist.mnistimporter class method)": [[327, "datumaro.plugins.data_formats.mnist.MnistImporter.find_sources"]], "get_file_extensions() (datumaro.plugins.data_formats.mnist.mnistimporter class method)": [[327, "datumaro.plugins.data_formats.mnist.MnistImporter.get_file_extensions"]], "save_annotations() (datumaro.plugins.data_formats.mnist.mnistexporter method)": [[327, "datumaro.plugins.data_formats.mnist.MnistExporter.save_annotations"]], "save_images() (datumaro.plugins.data_formats.mnist.mnistexporter method)": [[327, "datumaro.plugins.data_formats.mnist.MnistExporter.save_images"]], "save_labels() (datumaro.plugins.data_formats.mnist.mnistexporter method)": [[327, "datumaro.plugins.data_formats.mnist.MnistExporter.save_labels"]], "default_image_ext (datumaro.plugins.data_formats.mnist_csv.mnistcsvexporter attribute)": [[328, "datumaro.plugins.data_formats.mnist_csv.MnistCsvExporter.DEFAULT_IMAGE_EXT"]], "detect_confidence (datumaro.plugins.data_formats.mnist_csv.mnistcsvimporter attribute)": [[328, "datumaro.plugins.data_formats.mnist_csv.MnistCsvImporter.DETECT_CONFIDENCE"]], "image_size (datumaro.plugins.data_formats.mnist_csv.mnistcsvpath attribute)": [[328, "datumaro.plugins.data_formats.mnist_csv.MnistCsvPath.IMAGE_SIZE"]], "mnistcsvbase (class in datumaro.plugins.data_formats.mnist_csv)": [[328, "datumaro.plugins.data_formats.mnist_csv.MnistCsvBase"]], "mnistcsvexporter (class in datumaro.plugins.data_formats.mnist_csv)": [[328, "datumaro.plugins.data_formats.mnist_csv.MnistCsvExporter"]], "mnistcsvimporter (class in datumaro.plugins.data_formats.mnist_csv)": [[328, "datumaro.plugins.data_formats.mnist_csv.MnistCsvImporter"]], "mnistcsvpath (class in datumaro.plugins.data_formats.mnist_csv)": [[328, "datumaro.plugins.data_formats.mnist_csv.MnistCsvPath"]], "none_label (datumaro.plugins.data_formats.mnist_csv.mnistcsvpath attribute)": [[328, "datumaro.plugins.data_formats.mnist_csv.MnistCsvPath.NONE_LABEL"]], "datumaro.plugins.data_formats.mnist_csv": [[328, "module-datumaro.plugins.data_formats.mnist_csv"]], "find_sources() (datumaro.plugins.data_formats.mnist_csv.mnistcsvimporter class method)": [[328, "datumaro.plugins.data_formats.mnist_csv.MnistCsvImporter.find_sources"]], "get_file_extensions() (datumaro.plugins.data_formats.mnist_csv.mnistcsvimporter class method)": [[328, "datumaro.plugins.data_formats.mnist_csv.MnistCsvImporter.get_file_extensions"]], "save_in_csv() (datumaro.plugins.data_formats.mnist_csv.mnistcsvexporter method)": [[328, "datumaro.plugins.data_formats.mnist_csv.MnistCsvExporter.save_in_csv"]], "save_labels() (datumaro.plugins.data_formats.mnist_csv.mnistcsvexporter method)": [[328, "datumaro.plugins.data_formats.mnist_csv.MnistCsvExporter.save_labels"]], "default_image_ext (datumaro.plugins.data_formats.mot.motseqgtexporter attribute)": [[329, "datumaro.plugins.data_formats.mot.MotSeqGtExporter.DEFAULT_IMAGE_EXT"]], "det_filename (datumaro.plugins.data_formats.mot.motpath attribute)": [[329, "datumaro.plugins.data_formats.mot.MotPath.DET_FILENAME"]], "fields (datumaro.plugins.data_formats.mot.motpath attribute)": [[329, "datumaro.plugins.data_formats.mot.MotPath.FIELDS"]], "gt_filename (datumaro.plugins.data_formats.mot.motpath attribute)": [[329, "datumaro.plugins.data_formats.mot.MotPath.GT_FILENAME"]], "image_dir (datumaro.plugins.data_formats.mot.motpath attribute)": [[329, "datumaro.plugins.data_formats.mot.MotPath.IMAGE_DIR"]], "image_ext (datumaro.plugins.data_formats.mot.motpath attribute)": [[329, "datumaro.plugins.data_formats.mot.MotPath.IMAGE_EXT"]], "labels_file (datumaro.plugins.data_formats.mot.motpath attribute)": [[329, "datumaro.plugins.data_formats.mot.MotPath.LABELS_FILE"]], "motlabel (class in datumaro.plugins.data_formats.mot)": [[329, "datumaro.plugins.data_formats.mot.MotLabel"]], "motpath (class in datumaro.plugins.data_formats.mot)": [[329, "datumaro.plugins.data_formats.mot.MotPath"]], "motseqbase (class in datumaro.plugins.data_formats.mot)": [[329, "datumaro.plugins.data_formats.mot.MotSeqBase"]], "motseqgtexporter (class in datumaro.plugins.data_formats.mot)": [[329, "datumaro.plugins.data_formats.mot.MotSeqGtExporter"]], "motseqimporter (class in datumaro.plugins.data_formats.mot)": [[329, "datumaro.plugins.data_formats.mot.MotSeqImporter"]], "seqinfo_file (datumaro.plugins.data_formats.mot.motpath attribute)": [[329, "datumaro.plugins.data_formats.mot.MotPath.SEQINFO_FILE"]], "bicycle (datumaro.plugins.data_formats.mot.motlabel attribute)": [[329, "datumaro.plugins.data_formats.mot.MotLabel.bicycle"]], "car (datumaro.plugins.data_formats.mot.motlabel attribute)": [[329, "datumaro.plugins.data_formats.mot.MotLabel.car"]], "datumaro.plugins.data_formats.mot": [[329, "module-datumaro.plugins.data_formats.mot"]], "detect() (datumaro.plugins.data_formats.mot.motseqimporter class method)": [[329, "datumaro.plugins.data_formats.mot.MotSeqImporter.detect"]], "distractor (datumaro.plugins.data_formats.mot.motlabel attribute)": [[329, "datumaro.plugins.data_formats.mot.MotLabel.distractor"]], "find_sources() (datumaro.plugins.data_formats.mot.motseqimporter class method)": [[329, "datumaro.plugins.data_formats.mot.MotSeqImporter.find_sources"]], "get_file_extensions() (datumaro.plugins.data_formats.mot.motseqimporter class method)": [[329, "datumaro.plugins.data_formats.mot.MotSeqImporter.get_file_extensions"]], "motorbike (datumaro.plugins.data_formats.mot.motlabel attribute)": [[329, "datumaro.plugins.data_formats.mot.MotLabel.motorbike"]], "occluder (datumaro.plugins.data_formats.mot.motlabel attribute)": [[329, "datumaro.plugins.data_formats.mot.MotLabel.occluder"]], "pedestrian (datumaro.plugins.data_formats.mot.motlabel attribute)": [[329, "datumaro.plugins.data_formats.mot.MotLabel.pedestrian"]], "reflection (datumaro.plugins.data_formats.mot.motlabel attribute)": [[329, "datumaro.plugins.data_formats.mot.MotLabel.reflection"]], "default_image_ext (datumaro.plugins.data_formats.mots.motspngexporter attribute)": [[330, "datumaro.plugins.data_formats.mots.MotsPngExporter.DEFAULT_IMAGE_EXT"]], "image_dir (datumaro.plugins.data_formats.mots.motspath attribute)": [[330, "datumaro.plugins.data_formats.mots.MotsPath.IMAGE_DIR"]], "image_ext (datumaro.plugins.data_formats.mots.motspath attribute)": [[330, "datumaro.plugins.data_formats.mots.MotsPath.IMAGE_EXT"]], "labels_file (datumaro.plugins.data_formats.mots.motspath attribute)": [[330, "datumaro.plugins.data_formats.mots.MotsPath.LABELS_FILE"]], "masks_dir (datumaro.plugins.data_formats.mots.motspath attribute)": [[330, "datumaro.plugins.data_formats.mots.MotsPath.MASKS_DIR"]], "max_instances (datumaro.plugins.data_formats.mots.motspath attribute)": [[330, "datumaro.plugins.data_formats.mots.MotsPath.MAX_INSTANCES"]], "motsimporter (class in datumaro.plugins.data_formats.mots)": [[330, "datumaro.plugins.data_formats.mots.MotsImporter"]], "motslabels (class in datumaro.plugins.data_formats.mots)": [[330, "datumaro.plugins.data_formats.mots.MotsLabels"]], "motspath (class in datumaro.plugins.data_formats.mots)": [[330, "datumaro.plugins.data_formats.mots.MotsPath"]], "motspngexporter (class in datumaro.plugins.data_formats.mots)": [[330, "datumaro.plugins.data_formats.mots.MotsPngExporter"]], "motspngextractor (class in datumaro.plugins.data_formats.mots)": [[330, "datumaro.plugins.data_formats.mots.MotsPngExtractor"]], "background (datumaro.plugins.data_formats.mots.motslabels attribute)": [[330, "datumaro.plugins.data_formats.mots.MotsLabels.background"]], "car (datumaro.plugins.data_formats.mots.motslabels attribute)": [[330, "datumaro.plugins.data_formats.mots.MotsLabels.car"]], "datumaro.plugins.data_formats.mots": [[330, "module-datumaro.plugins.data_formats.mots"]], "detect_dataset() (datumaro.plugins.data_formats.mots.motspngextractor static method)": [[330, "datumaro.plugins.data_formats.mots.MotsPngExtractor.detect_dataset"]], "find_sources() (datumaro.plugins.data_formats.mots.motsimporter class method)": [[330, "datumaro.plugins.data_formats.mots.MotsImporter.find_sources"]], "get_file_extensions() (datumaro.plugins.data_formats.mots.motsimporter class method)": [[330, "datumaro.plugins.data_formats.mots.MotsImporter.get_file_extensions"]], "ignored (datumaro.plugins.data_formats.mots.motslabels attribute)": [[330, "datumaro.plugins.data_formats.mots.MotsLabels.ignored"]], "pedestrian (datumaro.plugins.data_formats.mots.motslabels attribute)": [[330, "datumaro.plugins.data_formats.mots.MotsLabels.pedestrian"]], "datumaro.plugins.data_formats.mpii": [[331, "module-datumaro.plugins.data_formats.mpii"]], "datumaro.plugins.data_formats.mpii.format": [[332, "module-datumaro.plugins.data_formats.mpii.format"]], "annotation_file (datumaro.plugins.data_formats.mpii.mpii_json.mpiijsonpath attribute)": [[333, "datumaro.plugins.data_formats.mpii.mpii_json.MpiiJsonPath.ANNOTATION_FILE"]], "headboxes_file (datumaro.plugins.data_formats.mpii.mpii_json.mpiijsonpath attribute)": [[333, "datumaro.plugins.data_formats.mpii.mpii_json.MpiiJsonPath.HEADBOXES_FILE"]], "mpiijsonbase (class in datumaro.plugins.data_formats.mpii.mpii_json)": [[333, "datumaro.plugins.data_formats.mpii.mpii_json.MpiiJsonBase"]], "mpiijsonimporter (class in datumaro.plugins.data_formats.mpii.mpii_json)": [[333, "datumaro.plugins.data_formats.mpii.mpii_json.MpiiJsonImporter"]], "mpiijsonpath (class in datumaro.plugins.data_formats.mpii.mpii_json)": [[333, "datumaro.plugins.data_formats.mpii.mpii_json.MpiiJsonPath"]], "pos_gt_file (datumaro.plugins.data_formats.mpii.mpii_json.mpiijsonpath attribute)": [[333, "datumaro.plugins.data_formats.mpii.mpii_json.MpiiJsonPath.POS_GT_FILE"]], "visibility_file (datumaro.plugins.data_formats.mpii.mpii_json.mpiijsonpath attribute)": [[333, "datumaro.plugins.data_formats.mpii.mpii_json.MpiiJsonPath.VISIBILITY_FILE"]], "datumaro.plugins.data_formats.mpii.mpii_json": [[333, "module-datumaro.plugins.data_formats.mpii.mpii_json"]], "detect() (datumaro.plugins.data_formats.mpii.mpii_json.mpiijsonimporter class method)": [[333, "datumaro.plugins.data_formats.mpii.mpii_json.MpiiJsonImporter.detect"]], "find_sources() (datumaro.plugins.data_formats.mpii.mpii_json.mpiijsonimporter class method)": [[333, "datumaro.plugins.data_formats.mpii.mpii_json.MpiiJsonImporter.find_sources"]], "get_file_extensions() (datumaro.plugins.data_formats.mpii.mpii_json.mpiijsonimporter class method)": [[333, "datumaro.plugins.data_formats.mpii.mpii_json.MpiiJsonImporter.get_file_extensions"]], "mpiibase (class in datumaro.plugins.data_formats.mpii.mpii_mat)": [[334, "datumaro.plugins.data_formats.mpii.mpii_mat.MpiiBase"]], "mpiiimporter (class in datumaro.plugins.data_formats.mpii.mpii_mat)": [[334, "datumaro.plugins.data_formats.mpii.mpii_mat.MpiiImporter"]], "datumaro.plugins.data_formats.mpii.mpii_mat": [[334, "module-datumaro.plugins.data_formats.mpii.mpii_mat"]], "detect() (datumaro.plugins.data_formats.mpii.mpii_mat.mpiiimporter class method)": [[334, "datumaro.plugins.data_formats.mpii.mpii_mat.MpiiImporter.detect"]], "find_sources() (datumaro.plugins.data_formats.mpii.mpii_mat.mpiiimporter class method)": [[334, "datumaro.plugins.data_formats.mpii.mpii_mat.MpiiImporter.find_sources"]], "get_file_extensions() (datumaro.plugins.data_formats.mpii.mpii_mat.mpiiimporter class method)": [[334, "datumaro.plugins.data_formats.mpii.mpii_mat.MpiiImporter.get_file_extensions"]], "datumaro.plugins.data_formats.mvtec": [[335, "module-datumaro.plugins.data_formats.mvtec"]], "mvtecclassificationbase (class in datumaro.plugins.data_formats.mvtec.base)": [[336, "datumaro.plugins.data_formats.mvtec.base.MvtecClassificationBase"]], "mvtecdetectionbase (class in datumaro.plugins.data_formats.mvtec.base)": [[336, "datumaro.plugins.data_formats.mvtec.base.MvtecDetectionBase"]], "mvtecsegmentationbase (class in datumaro.plugins.data_formats.mvtec.base)": [[336, "datumaro.plugins.data_formats.mvtec.base.MvtecSegmentationBase"]], "datumaro.plugins.data_formats.mvtec.base": [[336, "module-datumaro.plugins.data_formats.mvtec.base"]], "default_image_ext (datumaro.plugins.data_formats.mvtec.exporter.mvtecexporter attribute)": [[337, "datumaro.plugins.data_formats.mvtec.exporter.MvtecExporter.DEFAULT_IMAGE_EXT"]], "labelmaptype (class in datumaro.plugins.data_formats.mvtec.exporter)": [[337, "datumaro.plugins.data_formats.mvtec.exporter.LabelmapType"]], "mvtecclassificationexporter (class in datumaro.plugins.data_formats.mvtec.exporter)": [[337, "datumaro.plugins.data_formats.mvtec.exporter.MvtecClassificationExporter"]], "mvtecdetectionexporter (class in datumaro.plugins.data_formats.mvtec.exporter)": [[337, "datumaro.plugins.data_formats.mvtec.exporter.MvtecDetectionExporter"]], "mvtecexporter (class in datumaro.plugins.data_formats.mvtec.exporter)": [[337, "datumaro.plugins.data_formats.mvtec.exporter.MvtecExporter"]], "mvtecsegmentationexporter (class in datumaro.plugins.data_formats.mvtec.exporter)": [[337, "datumaro.plugins.data_formats.mvtec.exporter.MvtecSegmentationExporter"]], "build_cmdline_parser() (datumaro.plugins.data_formats.mvtec.exporter.mvtecexporter class method)": [[337, "datumaro.plugins.data_formats.mvtec.exporter.MvtecExporter.build_cmdline_parser"]], "datumaro.plugins.data_formats.mvtec.exporter": [[337, "module-datumaro.plugins.data_formats.mvtec.exporter"]], "get_label() (datumaro.plugins.data_formats.mvtec.exporter.mvtecexporter method)": [[337, "datumaro.plugins.data_formats.mvtec.exporter.MvtecExporter.get_label"]], "kitti (datumaro.plugins.data_formats.mvtec.exporter.labelmaptype attribute)": [[337, "datumaro.plugins.data_formats.mvtec.exporter.LabelmapType.kitti"]], "source (datumaro.plugins.data_formats.mvtec.exporter.labelmaptype attribute)": [[337, "datumaro.plugins.data_formats.mvtec.exporter.LabelmapType.source"]], "image_ext (datumaro.plugins.data_formats.mvtec.format.mvtecpath attribute)": [[338, "datumaro.plugins.data_formats.mvtec.format.MvtecPath.IMAGE_EXT"]], "mask_dir (datumaro.plugins.data_formats.mvtec.format.mvtecpath attribute)": [[338, "datumaro.plugins.data_formats.mvtec.format.MvtecPath.MASK_DIR"]], "mask_ext (datumaro.plugins.data_formats.mvtec.format.mvtecpath attribute)": [[338, "datumaro.plugins.data_formats.mvtec.format.MvtecPath.MASK_EXT"]], "mask_postfix (datumaro.plugins.data_formats.mvtec.format.mvtecpath attribute)": [[338, "datumaro.plugins.data_formats.mvtec.format.MvtecPath.MASK_POSTFIX"]], "mvtecpath (class in datumaro.plugins.data_formats.mvtec.format)": [[338, "datumaro.plugins.data_formats.mvtec.format.MvtecPath"]], "mvtectask (class in datumaro.plugins.data_formats.mvtec.format)": [[338, "datumaro.plugins.data_formats.mvtec.format.MvtecTask"]], "classification (datumaro.plugins.data_formats.mvtec.format.mvtectask attribute)": [[338, "datumaro.plugins.data_formats.mvtec.format.MvtecTask.classification"]], "datumaro.plugins.data_formats.mvtec.format": [[338, "module-datumaro.plugins.data_formats.mvtec.format"]], "detection (datumaro.plugins.data_formats.mvtec.format.mvtectask attribute)": [[338, "datumaro.plugins.data_formats.mvtec.format.MvtecTask.detection"]], "segmentation (datumaro.plugins.data_formats.mvtec.format.mvtectask attribute)": [[338, "datumaro.plugins.data_formats.mvtec.format.MvtecTask.segmentation"]], "detect_confidence (datumaro.plugins.data_formats.mvtec.importer.mvtecclassificationimporter attribute)": [[339, "datumaro.plugins.data_formats.mvtec.importer.MvtecClassificationImporter.DETECT_CONFIDENCE"]], "detect_confidence (datumaro.plugins.data_formats.mvtec.importer.mvtecdetectionimporter attribute)": [[339, "datumaro.plugins.data_formats.mvtec.importer.MvtecDetectionImporter.DETECT_CONFIDENCE"]], "detect_confidence (datumaro.plugins.data_formats.mvtec.importer.mvtecsegmentationimporter attribute)": [[339, "datumaro.plugins.data_formats.mvtec.importer.MvtecSegmentationImporter.DETECT_CONFIDENCE"]], "mvtecclassificationimporter (class in datumaro.plugins.data_formats.mvtec.importer)": [[339, "datumaro.plugins.data_formats.mvtec.importer.MvtecClassificationImporter"]], "mvtecdetectionimporter (class in datumaro.plugins.data_formats.mvtec.importer)": [[339, "datumaro.plugins.data_formats.mvtec.importer.MvtecDetectionImporter"]], "mvtecimporter (class in datumaro.plugins.data_formats.mvtec.importer)": [[339, "datumaro.plugins.data_formats.mvtec.importer.MvtecImporter"]], "mvtecsegmentationimporter (class in datumaro.plugins.data_formats.mvtec.importer)": [[339, "datumaro.plugins.data_formats.mvtec.importer.MvtecSegmentationImporter"]], "datumaro.plugins.data_formats.mvtec.importer": [[339, "module-datumaro.plugins.data_formats.mvtec.importer"]], "find_sources() (datumaro.plugins.data_formats.mvtec.importer.mvtecimporter class method)": [[339, "datumaro.plugins.data_formats.mvtec.importer.MvtecImporter.find_sources"]], "get_file_extensions() (datumaro.plugins.data_formats.mvtec.importer.mvtecimporter class method)": [[339, "datumaro.plugins.data_formats.mvtec.importer.MvtecImporter.get_file_extensions"]], "nyudepthv2base (class in datumaro.plugins.data_formats.nyu_depth_v2)": [[340, "datumaro.plugins.data_formats.nyu_depth_v2.NyuDepthV2Base"]], "nyudepthv2importer (class in datumaro.plugins.data_formats.nyu_depth_v2)": [[340, "datumaro.plugins.data_formats.nyu_depth_v2.NyuDepthV2Importer"]], "datumaro.plugins.data_formats.nyu_depth_v2": [[340, "module-datumaro.plugins.data_formats.nyu_depth_v2"]], "detect() (datumaro.plugins.data_formats.nyu_depth_v2.nyudepthv2importer class method)": [[340, "datumaro.plugins.data_formats.nyu_depth_v2.NyuDepthV2Importer.detect"]], "find_sources() (datumaro.plugins.data_formats.nyu_depth_v2.nyudepthv2importer class method)": [[340, "datumaro.plugins.data_formats.nyu_depth_v2.NyuDepthV2Importer.find_sources"]], "get_file_extensions() (datumaro.plugins.data_formats.nyu_depth_v2.nyudepthv2importer class method)": [[340, "datumaro.plugins.data_formats.nyu_depth_v2.NyuDepthV2Importer.get_file_extensions"]], "annotations_dir (datumaro.plugins.data_formats.open_images.openimagespath attribute)": [[341, "datumaro.plugins.data_formats.open_images.OpenImagesPath.ANNOTATIONS_DIR"]], "bbox_boolean_attributes (datumaro.plugins.data_formats.open_images.openimagespath attribute)": [[341, "datumaro.plugins.data_formats.open_images.OpenImagesPath.BBOX_BOOLEAN_ATTRIBUTES"]], "bbox_description_fields (datumaro.plugins.data_formats.open_images.openimagespath attribute)": [[341, "datumaro.plugins.data_formats.open_images.OpenImagesPath.BBOX_DESCRIPTION_FIELDS"]], "bbox_description_file_suffix (datumaro.plugins.data_formats.open_images.openimagespath attribute)": [[341, "datumaro.plugins.data_formats.open_images.OpenImagesPath.BBOX_DESCRIPTION_FILE_SUFFIX"]], "default_image_ext (datumaro.plugins.data_formats.open_images.openimagesexporter attribute)": [[341, "datumaro.plugins.data_formats.open_images.OpenImagesExporter.DEFAULT_IMAGE_EXT"]], "full_image_description_file_name (datumaro.plugins.data_formats.open_images.openimagespath attribute)": [[341, "datumaro.plugins.data_formats.open_images.OpenImagesPath.FULL_IMAGE_DESCRIPTION_FILE_NAME"]], "hierarchy_file_name (datumaro.plugins.data_formats.open_images.openimagespath attribute)": [[341, "datumaro.plugins.data_formats.open_images.OpenImagesPath.HIERARCHY_FILE_NAME"]], "images_dir (datumaro.plugins.data_formats.open_images.openimagespath attribute)": [[341, "datumaro.plugins.data_formats.open_images.OpenImagesPath.IMAGES_DIR"]], "image_description_fields (datumaro.plugins.data_formats.open_images.openimagespath attribute)": [[341, "datumaro.plugins.data_formats.open_images.OpenImagesPath.IMAGE_DESCRIPTION_FIELDS"]], "label_description_fields (datumaro.plugins.data_formats.open_images.openimagespath attribute)": [[341, "datumaro.plugins.data_formats.open_images.OpenImagesPath.LABEL_DESCRIPTION_FIELDS"]], "label_description_file_suffix (datumaro.plugins.data_formats.open_images.openimagespath attribute)": [[341, "datumaro.plugins.data_formats.open_images.OpenImagesPath.LABEL_DESCRIPTION_FILE_SUFFIX"]], "masks_dir (datumaro.plugins.data_formats.open_images.openimagespath attribute)": [[341, "datumaro.plugins.data_formats.open_images.OpenImagesPath.MASKS_DIR"]], "mask_description_fields (datumaro.plugins.data_formats.open_images.openimagespath attribute)": [[341, "datumaro.plugins.data_formats.open_images.OpenImagesPath.MASK_DESCRIPTION_FIELDS"]], "mask_description_file_suffix (datumaro.plugins.data_formats.open_images.openimagespath attribute)": [[341, "datumaro.plugins.data_formats.open_images.OpenImagesPath.MASK_DESCRIPTION_FILE_SUFFIX"]], "openimagesbase (class in datumaro.plugins.data_formats.open_images)": [[341, "datumaro.plugins.data_formats.open_images.OpenImagesBase"]], "openimagesexporter (class in datumaro.plugins.data_formats.open_images)": [[341, "datumaro.plugins.data_formats.open_images.OpenImagesExporter"]], "openimagesimporter (class in datumaro.plugins.data_formats.open_images)": [[341, "datumaro.plugins.data_formats.open_images.OpenImagesImporter"]], "openimagespath (class in datumaro.plugins.data_formats.open_images)": [[341, "datumaro.plugins.data_formats.open_images.OpenImagesPath"]], "possible_annotation_patterns (datumaro.plugins.data_formats.open_images.openimagesimporter attribute)": [[341, "datumaro.plugins.data_formats.open_images.OpenImagesImporter.POSSIBLE_ANNOTATION_PATTERNS"]], "subset_image_description_file_patterns (datumaro.plugins.data_formats.open_images.openimagespath attribute)": [[341, "datumaro.plugins.data_formats.open_images.OpenImagesPath.SUBSET_IMAGE_DESCRIPTION_FILE_PATTERNS"]], "unsupportedboxiderror": [[341, "datumaro.plugins.data_formats.open_images.UnsupportedBoxIdError"]], "unsupportedmaskpatherror": [[341, "datumaro.plugins.data_formats.open_images.UnsupportedMaskPathError"]], "unsupportedsubsetnameerror": [[341, "datumaro.plugins.data_formats.open_images.UnsupportedSubsetNameError"]], "v5_class_description_bbox_file_name (datumaro.plugins.data_formats.open_images.openimagespath attribute)": [[341, "datumaro.plugins.data_formats.open_images.OpenImagesPath.V5_CLASS_DESCRIPTION_BBOX_FILE_NAME"]], "v5_class_description_file_name (datumaro.plugins.data_formats.open_images.openimagespath attribute)": [[341, "datumaro.plugins.data_formats.open_images.OpenImagesPath.V5_CLASS_DESCRIPTION_FILE_NAME"]], "box_id (datumaro.plugins.data_formats.open_images.unsupportedboxiderror attribute)": [[341, "datumaro.plugins.data_formats.open_images.UnsupportedBoxIdError.box_id"]], "categories() (datumaro.plugins.data_formats.open_images.openimagesbase method)": [[341, "datumaro.plugins.data_formats.open_images.OpenImagesBase.categories"]], "datumaro.plugins.data_formats.open_images": [[341, "module-datumaro.plugins.data_formats.open_images"]], "detect() (datumaro.plugins.data_formats.open_images.openimagesimporter class method)": [[341, "datumaro.plugins.data_formats.open_images.OpenImagesImporter.detect"]], "find_sources() (datumaro.plugins.data_formats.open_images.openimagesimporter class method)": [[341, "datumaro.plugins.data_formats.open_images.OpenImagesImporter.find_sources"]], "get_file_extensions() (datumaro.plugins.data_formats.open_images.openimagesimporter class method)": [[341, "datumaro.plugins.data_formats.open_images.OpenImagesImporter.get_file_extensions"]], "item_id (datumaro.plugins.data_formats.open_images.unsupportedboxiderror attribute)": [[341, "datumaro.plugins.data_formats.open_images.UnsupportedBoxIdError.item_id"]], "item_id (datumaro.plugins.data_formats.open_images.unsupportedmaskpatherror attribute)": [[341, "datumaro.plugins.data_formats.open_images.UnsupportedMaskPathError.item_id"]], "item_id (datumaro.plugins.data_formats.open_images.unsupportedsubsetnameerror attribute)": [[341, "datumaro.plugins.data_formats.open_images.UnsupportedSubsetNameError.item_id"]], "mask_path (datumaro.plugins.data_formats.open_images.unsupportedmaskpatherror attribute)": [[341, "datumaro.plugins.data_formats.open_images.UnsupportedMaskPathError.mask_path"]], "patch() (datumaro.plugins.data_formats.open_images.openimagesexporter class method)": [[341, "datumaro.plugins.data_formats.open_images.OpenImagesExporter.patch"]], "subset (datumaro.plugins.data_formats.open_images.unsupportedsubsetnameerror attribute)": [[341, "datumaro.plugins.data_formats.open_images.UnsupportedSubsetNameError.subset"]], "datumaro.plugins.data_formats.roboflow": [[342, "module-datumaro.plugins.data_formats.roboflow"]], "roboflowcocobase (class in datumaro.plugins.data_formats.roboflow.base)": [[343, "datumaro.plugins.data_formats.roboflow.base.RoboflowCocoBase"]], "roboflowcreatemlbase (class in datumaro.plugins.data_formats.roboflow.base)": [[343, "datumaro.plugins.data_formats.roboflow.base.RoboflowCreateMlBase"]], "roboflowmulticlassbase (class in datumaro.plugins.data_formats.roboflow.base)": [[343, "datumaro.plugins.data_formats.roboflow.base.RoboflowMulticlassBase"]], "roboflowvocbase (class in datumaro.plugins.data_formats.roboflow.base)": [[343, "datumaro.plugins.data_formats.roboflow.base.RoboflowVocBase"]], "roboflowyolobase (class in datumaro.plugins.data_formats.roboflow.base)": [[343, "datumaro.plugins.data_formats.roboflow.base.RoboflowYoloBase"]], "roboflowyoloobbbase (class in datumaro.plugins.data_formats.roboflow.base)": [[343, "datumaro.plugins.data_formats.roboflow.base.RoboflowYoloObbBase"]], "datumaro.plugins.data_formats.roboflow.base": [[343, "module-datumaro.plugins.data_formats.roboflow.base"]], "roboflowtfrecordbase (class in datumaro.plugins.data_formats.roboflow.base_tfrecord)": [[344, "datumaro.plugins.data_formats.roboflow.base_tfrecord.RoboflowTfrecordBase"]], "roboflowtfrecordimporter (class in datumaro.plugins.data_formats.roboflow.base_tfrecord)": [[344, "datumaro.plugins.data_formats.roboflow.base_tfrecord.RoboflowTfrecordImporter"]], "datumaro.plugins.data_formats.roboflow.base_tfrecord": [[344, "module-datumaro.plugins.data_formats.roboflow.base_tfrecord"]], "find_sources() (datumaro.plugins.data_formats.roboflow.base_tfrecord.roboflowtfrecordimporter class method)": [[344, "datumaro.plugins.data_formats.roboflow.base_tfrecord.RoboflowTfrecordImporter.find_sources"]], "get_file_extensions() (datumaro.plugins.data_formats.roboflow.base_tfrecord.roboflowtfrecordimporter class method)": [[344, "datumaro.plugins.data_formats.roboflow.base_tfrecord.RoboflowTfrecordImporter.get_file_extensions"]], "ann_dir_name (datumaro.plugins.data_formats.roboflow.importer.roboflowvocimporter attribute)": [[345, "datumaro.plugins.data_formats.roboflow.importer.RoboflowVocImporter.ANN_DIR_NAME"]], "ann_dir_name (datumaro.plugins.data_formats.roboflow.importer.roboflowyoloimporter attribute)": [[345, "datumaro.plugins.data_formats.roboflow.importer.RoboflowYoloImporter.ANN_DIR_NAME"]], "ann_dir_name (datumaro.plugins.data_formats.roboflow.importer.roboflowyoloobbimporter attribute)": [[345, "datumaro.plugins.data_formats.roboflow.importer.RoboflowYoloObbImporter.ANN_DIR_NAME"]], "ann_file_name (datumaro.plugins.data_formats.roboflow.importer.roboflowcocoimporter attribute)": [[345, "datumaro.plugins.data_formats.roboflow.importer.RoboflowCocoImporter.ANN_FILE_NAME"]], "ann_file_name (datumaro.plugins.data_formats.roboflow.importer.roboflowcreatemlimporter attribute)": [[345, "datumaro.plugins.data_formats.roboflow.importer.RoboflowCreateMlImporter.ANN_FILE_NAME"]], "ann_file_name (datumaro.plugins.data_formats.roboflow.importer.roboflowmulticlassimporter attribute)": [[345, "datumaro.plugins.data_formats.roboflow.importer.RoboflowMulticlassImporter.ANN_FILE_NAME"]], "format (datumaro.plugins.data_formats.roboflow.importer.roboflowcocoimporter attribute)": [[345, "datumaro.plugins.data_formats.roboflow.importer.RoboflowCocoImporter.FORMAT"]], "format (datumaro.plugins.data_formats.roboflow.importer.roboflowcreatemlimporter attribute)": [[345, "datumaro.plugins.data_formats.roboflow.importer.RoboflowCreateMlImporter.FORMAT"]], "format (datumaro.plugins.data_formats.roboflow.importer.roboflowmulticlassimporter attribute)": [[345, "datumaro.plugins.data_formats.roboflow.importer.RoboflowMulticlassImporter.FORMAT"]], "format (datumaro.plugins.data_formats.roboflow.importer.roboflowvocimporter attribute)": [[345, "datumaro.plugins.data_formats.roboflow.importer.RoboflowVocImporter.FORMAT"]], "format (datumaro.plugins.data_formats.roboflow.importer.roboflowyoloimporter attribute)": [[345, "datumaro.plugins.data_formats.roboflow.importer.RoboflowYoloImporter.FORMAT"]], "format (datumaro.plugins.data_formats.roboflow.importer.roboflowyoloobbimporter attribute)": [[345, "datumaro.plugins.data_formats.roboflow.importer.RoboflowYoloObbImporter.FORMAT"]], "format_ext (datumaro.plugins.data_formats.roboflow.importer.roboflowvocimporter attribute)": [[345, "datumaro.plugins.data_formats.roboflow.importer.RoboflowVocImporter.FORMAT_EXT"]], "format_ext (datumaro.plugins.data_formats.roboflow.importer.roboflowyoloimporter attribute)": [[345, "datumaro.plugins.data_formats.roboflow.importer.RoboflowYoloImporter.FORMAT_EXT"]], "format_ext (datumaro.plugins.data_formats.roboflow.importer.roboflowyoloobbimporter attribute)": [[345, "datumaro.plugins.data_formats.roboflow.importer.RoboflowYoloObbImporter.FORMAT_EXT"]], "roboflowcocoimporter (class in datumaro.plugins.data_formats.roboflow.importer)": [[345, "datumaro.plugins.data_formats.roboflow.importer.RoboflowCocoImporter"]], "roboflowcreatemlimporter (class in datumaro.plugins.data_formats.roboflow.importer)": [[345, "datumaro.plugins.data_formats.roboflow.importer.RoboflowCreateMlImporter"]], "roboflowmulticlassimporter (class in datumaro.plugins.data_formats.roboflow.importer)": [[345, "datumaro.plugins.data_formats.roboflow.importer.RoboflowMulticlassImporter"]], "roboflowvocimporter (class in datumaro.plugins.data_formats.roboflow.importer)": [[345, "datumaro.plugins.data_formats.roboflow.importer.RoboflowVocImporter"]], "roboflowyoloimporter (class in datumaro.plugins.data_formats.roboflow.importer)": [[345, "datumaro.plugins.data_formats.roboflow.importer.RoboflowYoloImporter"]], "roboflowyoloobbimporter (class in datumaro.plugins.data_formats.roboflow.importer)": [[345, "datumaro.plugins.data_formats.roboflow.importer.RoboflowYoloObbImporter"]], "can_stream (datumaro.plugins.data_formats.roboflow.importer.roboflowcocoimporter property)": [[345, "datumaro.plugins.data_formats.roboflow.importer.RoboflowCocoImporter.can_stream"]], "datumaro.plugins.data_formats.roboflow.importer": [[345, "module-datumaro.plugins.data_formats.roboflow.importer"]], "detect() (datumaro.plugins.data_formats.roboflow.importer.roboflowcocoimporter class method)": [[345, "datumaro.plugins.data_formats.roboflow.importer.RoboflowCocoImporter.detect"]], "detect() (datumaro.plugins.data_formats.roboflow.importer.roboflowvocimporter class method)": [[345, "datumaro.plugins.data_formats.roboflow.importer.RoboflowVocImporter.detect"]], "detect() (datumaro.plugins.data_formats.roboflow.importer.roboflowyoloobbimporter class method)": [[345, "datumaro.plugins.data_formats.roboflow.importer.RoboflowYoloObbImporter.detect"]], "find_sources() (datumaro.plugins.data_formats.roboflow.importer.roboflowcocoimporter class method)": [[345, "datumaro.plugins.data_formats.roboflow.importer.RoboflowCocoImporter.find_sources"]], "find_sources() (datumaro.plugins.data_formats.roboflow.importer.roboflowvocimporter class method)": [[345, "datumaro.plugins.data_formats.roboflow.importer.RoboflowVocImporter.find_sources"]], "find_sources() (datumaro.plugins.data_formats.roboflow.importer.roboflowyoloimporter class method)": [[345, "datumaro.plugins.data_formats.roboflow.importer.RoboflowYoloImporter.find_sources"]], "get_extractor_merger() (datumaro.plugins.data_formats.roboflow.importer.roboflowcocoimporter method)": [[345, "datumaro.plugins.data_formats.roboflow.importer.RoboflowCocoImporter.get_extractor_merger"]], "get_file_extensions() (datumaro.plugins.data_formats.roboflow.importer.roboflowcocoimporter class method)": [[345, "datumaro.plugins.data_formats.roboflow.importer.RoboflowCocoImporter.get_file_extensions"]], "get_file_extensions() (datumaro.plugins.data_formats.roboflow.importer.roboflowvocimporter class method)": [[345, "datumaro.plugins.data_formats.roboflow.importer.RoboflowVocImporter.get_file_extensions"]], "default_image_ext (datumaro.plugins.data_formats.segment_anything.segmentanythingexporter attribute)": [[346, "datumaro.plugins.data_formats.segment_anything.SegmentAnythingExporter.DEFAULT_IMAGE_EXT"]], "segmentanythingbase (class in datumaro.plugins.data_formats.segment_anything)": [[346, "datumaro.plugins.data_formats.segment_anything.SegmentAnythingBase"]], "segmentanythingexporter (class in datumaro.plugins.data_formats.segment_anything)": [[346, "datumaro.plugins.data_formats.segment_anything.SegmentAnythingExporter"]], "segmentanythingimporter (class in datumaro.plugins.data_formats.segment_anything)": [[346, "datumaro.plugins.data_formats.segment_anything.SegmentAnythingImporter"]], "datumaro.plugins.data_formats.segment_anything": [[346, "module-datumaro.plugins.data_formats.segment_anything"]], "detect() (datumaro.plugins.data_formats.segment_anything.segmentanythingimporter class method)": [[346, "datumaro.plugins.data_formats.segment_anything.SegmentAnythingImporter.detect"]], "find_instance_anns() (datumaro.plugins.data_formats.segment_anything.segmentanythingexporter static method)": [[346, "datumaro.plugins.data_formats.segment_anything.SegmentAnythingExporter.find_instance_anns"]], "find_instances() (datumaro.plugins.data_formats.segment_anything.segmentanythingexporter class method)": [[346, "datumaro.plugins.data_formats.segment_anything.SegmentAnythingExporter.find_instances"]], "find_sources() (datumaro.plugins.data_formats.segment_anything.segmentanythingimporter class method)": [[346, "datumaro.plugins.data_formats.segment_anything.SegmentAnythingImporter.find_sources"]], "get_annotation_info() (datumaro.plugins.data_formats.segment_anything.segmentanythingexporter method)": [[346, "datumaro.plugins.data_formats.segment_anything.SegmentAnythingExporter.get_annotation_info"]], "get_file_extensions() (datumaro.plugins.data_formats.segment_anything.segmentanythingimporter class method)": [[346, "datumaro.plugins.data_formats.segment_anything.SegmentAnythingImporter.get_file_extensions"]], "segmentanythingbase (class in datumaro.plugins.data_formats.segment_anything.base)": [[347, "datumaro.plugins.data_formats.segment_anything.base.SegmentAnythingBase"]], "datumaro.plugins.data_formats.segment_anything.base": [[347, "module-datumaro.plugins.data_formats.segment_anything.base"]], "parse_field() (in module datumaro.plugins.data_formats.segment_anything.base)": [[347, "datumaro.plugins.data_formats.segment_anything.base.parse_field"]], "default_image_ext (datumaro.plugins.data_formats.segment_anything.exporter.segmentanythingexporter attribute)": [[348, "datumaro.plugins.data_formats.segment_anything.exporter.SegmentAnythingExporter.DEFAULT_IMAGE_EXT"]], "segmentanythingexporter (class in datumaro.plugins.data_formats.segment_anything.exporter)": [[348, "datumaro.plugins.data_formats.segment_anything.exporter.SegmentAnythingExporter"]], "datumaro.plugins.data_formats.segment_anything.exporter": [[348, "module-datumaro.plugins.data_formats.segment_anything.exporter"]], "find_instance_anns() (datumaro.plugins.data_formats.segment_anything.exporter.segmentanythingexporter static method)": [[348, "datumaro.plugins.data_formats.segment_anything.exporter.SegmentAnythingExporter.find_instance_anns"]], "find_instances() (datumaro.plugins.data_formats.segment_anything.exporter.segmentanythingexporter class method)": [[348, "datumaro.plugins.data_formats.segment_anything.exporter.SegmentAnythingExporter.find_instances"]], "get_annotation_info() (datumaro.plugins.data_formats.segment_anything.exporter.segmentanythingexporter method)": [[348, "datumaro.plugins.data_formats.segment_anything.exporter.SegmentAnythingExporter.get_annotation_info"]], "segmentanythingimporter (class in datumaro.plugins.data_formats.segment_anything.importer)": [[349, "datumaro.plugins.data_formats.segment_anything.importer.SegmentAnythingImporter"]], "datumaro.plugins.data_formats.segment_anything.importer": [[349, "module-datumaro.plugins.data_formats.segment_anything.importer"]], "detect() (datumaro.plugins.data_formats.segment_anything.importer.segmentanythingimporter class method)": [[349, "datumaro.plugins.data_formats.segment_anything.importer.SegmentAnythingImporter.detect"]], "find_sources() (datumaro.plugins.data_formats.segment_anything.importer.segmentanythingimporter class method)": [[349, "datumaro.plugins.data_formats.segment_anything.importer.SegmentAnythingImporter.find_sources"]], "get_file_extensions() (datumaro.plugins.data_formats.segment_anything.importer.segmentanythingimporter class method)": [[349, "datumaro.plugins.data_formats.segment_anything.importer.SegmentAnythingImporter.get_file_extensions"]], "datumaro.plugins.data_formats.sly_pointcloud": [[350, "module-datumaro.plugins.data_formats.sly_pointcloud"]], "name (datumaro.plugins.data_formats.sly_pointcloud.base.superviselypointcloudbase attribute)": [[351, "datumaro.plugins.data_formats.sly_pointcloud.base.SuperviselyPointCloudBase.NAME"]], "name (datumaro.plugins.data_formats.sly_pointcloud.base.superviselypointcloudimporter attribute)": [[351, "datumaro.plugins.data_formats.sly_pointcloud.base.SuperviselyPointCloudImporter.NAME"]], "superviselypointcloudbase (class in datumaro.plugins.data_formats.sly_pointcloud.base)": [[351, "datumaro.plugins.data_formats.sly_pointcloud.base.SuperviselyPointCloudBase"]], "superviselypointcloudimporter (class in datumaro.plugins.data_formats.sly_pointcloud.base)": [[351, "datumaro.plugins.data_formats.sly_pointcloud.base.SuperviselyPointCloudImporter"]], "datumaro.plugins.data_formats.sly_pointcloud.base": [[351, "module-datumaro.plugins.data_formats.sly_pointcloud.base"]], "find_sources() (datumaro.plugins.data_formats.sly_pointcloud.base.superviselypointcloudimporter class method)": [[351, "datumaro.plugins.data_formats.sly_pointcloud.base.SuperviselyPointCloudImporter.find_sources"]], "get_file_extensions() (datumaro.plugins.data_formats.sly_pointcloud.base.superviselypointcloudimporter class method)": [[351, "datumaro.plugins.data_formats.sly_pointcloud.base.SuperviselyPointCloudImporter.get_file_extensions"]], "default_image_ext (datumaro.plugins.data_formats.sly_pointcloud.exporter.superviselypointcloudexporter attribute)": [[352, "datumaro.plugins.data_formats.sly_pointcloud.exporter.SuperviselyPointCloudExporter.DEFAULT_IMAGE_EXT"]], "name (datumaro.plugins.data_formats.sly_pointcloud.exporter.superviselypointcloudexporter attribute)": [[352, "datumaro.plugins.data_formats.sly_pointcloud.exporter.SuperviselyPointCloudExporter.NAME"]], "superviselypointcloudexporter (class in datumaro.plugins.data_formats.sly_pointcloud.exporter)": [[352, "datumaro.plugins.data_formats.sly_pointcloud.exporter.SuperviselyPointCloudExporter"]], "build_cmdline_parser() (datumaro.plugins.data_formats.sly_pointcloud.exporter.superviselypointcloudexporter class method)": [[352, "datumaro.plugins.data_formats.sly_pointcloud.exporter.SuperviselyPointCloudExporter.build_cmdline_parser"]], "datumaro.plugins.data_formats.sly_pointcloud.exporter": [[352, "module-datumaro.plugins.data_formats.sly_pointcloud.exporter"]], "patch() (datumaro.plugins.data_formats.sly_pointcloud.exporter.superviselypointcloudexporter class method)": [[352, "datumaro.plugins.data_formats.sly_pointcloud.exporter.SuperviselyPointCloudExporter.patch"]], "annnotation_dir (datumaro.plugins.data_formats.sly_pointcloud.format.pointcloudpath attribute)": [[353, "datumaro.plugins.data_formats.sly_pointcloud.format.PointCloudPath.ANNNOTATION_DIR"]], "base_dir (datumaro.plugins.data_formats.sly_pointcloud.format.pointcloudpath attribute)": [[353, "datumaro.plugins.data_formats.sly_pointcloud.format.PointCloudPath.BASE_DIR"]], "default_image_ext (datumaro.plugins.data_formats.sly_pointcloud.format.pointcloudpath attribute)": [[353, "datumaro.plugins.data_formats.sly_pointcloud.format.PointCloudPath.DEFAULT_IMAGE_EXT"]], "key_id_file (datumaro.plugins.data_formats.sly_pointcloud.format.pointcloudpath attribute)": [[353, "datumaro.plugins.data_formats.sly_pointcloud.format.PointCloudPath.KEY_ID_FILE"]], "meta_file (datumaro.plugins.data_formats.sly_pointcloud.format.pointcloudpath attribute)": [[353, "datumaro.plugins.data_formats.sly_pointcloud.format.PointCloudPath.META_FILE"]], "point_cloud_dir (datumaro.plugins.data_formats.sly_pointcloud.format.pointcloudpath attribute)": [[353, "datumaro.plugins.data_formats.sly_pointcloud.format.PointCloudPath.POINT_CLOUD_DIR"]], "pointcloudpath (class in datumaro.plugins.data_formats.sly_pointcloud.format)": [[353, "datumaro.plugins.data_formats.sly_pointcloud.format.PointCloudPath"]], "related_images_dir (datumaro.plugins.data_formats.sly_pointcloud.format.pointcloudpath attribute)": [[353, "datumaro.plugins.data_formats.sly_pointcloud.format.PointCloudPath.RELATED_IMAGES_DIR"]], "special_attrs (datumaro.plugins.data_formats.sly_pointcloud.format.pointcloudpath attribute)": [[353, "datumaro.plugins.data_formats.sly_pointcloud.format.PointCloudPath.SPECIAL_ATTRS"]], "datumaro.plugins.data_formats.sly_pointcloud.format": [[353, "module-datumaro.plugins.data_formats.sly_pointcloud.format"]], "datumaro.plugins.data_formats.synthia": [[354, "module-datumaro.plugins.data_formats.synthia"]], "synthiaalbase (class in datumaro.plugins.data_formats.synthia.base)": [[355, "datumaro.plugins.data_formats.synthia.base.SynthiaAlBase"]], "synthiarandbase (class in datumaro.plugins.data_formats.synthia.base)": [[355, "datumaro.plugins.data_formats.synthia.base.SynthiaRandBase"]], "synthiasfbase (class in datumaro.plugins.data_formats.synthia.base)": [[355, "datumaro.plugins.data_formats.synthia.base.SynthiaSfBase"]], "datumaro.plugins.data_formats.synthia.base": [[355, "module-datumaro.plugins.data_formats.synthia.base"]], "make_categories() (in module datumaro.plugins.data_formats.synthia.base)": [[355, "datumaro.plugins.data_formats.synthia.base.make_categories"]], "parse_label_map() (in module datumaro.plugins.data_formats.synthia.base)": [[355, "datumaro.plugins.data_formats.synthia.base.parse_label_map"]], "depth_dir (datumaro.plugins.data_formats.synthia.format.synthiaalpath attribute)": [[356, "datumaro.plugins.data_formats.synthia.format.SynthiaAlPath.DEPTH_DIR"]], "depth_dir (datumaro.plugins.data_formats.synthia.format.synthiasfpath attribute)": [[356, "datumaro.plugins.data_formats.synthia.format.SynthiaSfPath.DEPTH_DIR"]], "images_dir (datumaro.plugins.data_formats.synthia.format.synthiaalpath attribute)": [[356, "datumaro.plugins.data_formats.synthia.format.SynthiaAlPath.IMAGES_DIR"]], "images_dir (datumaro.plugins.data_formats.synthia.format.synthiarandpath attribute)": [[356, "datumaro.plugins.data_formats.synthia.format.SynthiaRandPath.IMAGES_DIR"]], "images_dir (datumaro.plugins.data_formats.synthia.format.synthiasfpath attribute)": [[356, "datumaro.plugins.data_formats.synthia.format.SynthiaSfPath.IMAGES_DIR"]], "labels_segm_dir (datumaro.plugins.data_formats.synthia.format.synthiarandpath attribute)": [[356, "datumaro.plugins.data_formats.synthia.format.SynthiaRandPath.LABELS_SEGM_DIR"]], "semantic_segm_dir (datumaro.plugins.data_formats.synthia.format.synthiaalpath attribute)": [[356, "datumaro.plugins.data_formats.synthia.format.SynthiaAlPath.SEMANTIC_SEGM_DIR"]], "semantic_segm_dir (datumaro.plugins.data_formats.synthia.format.synthiarandpath attribute)": [[356, "datumaro.plugins.data_formats.synthia.format.SynthiaRandPath.SEMANTIC_SEGM_DIR"]], "semantic_segm_dir (datumaro.plugins.data_formats.synthia.format.synthiasfpath attribute)": [[356, "datumaro.plugins.data_formats.synthia.format.SynthiaSfPath.SEMANTIC_SEGM_DIR"]], "synthiaalpath (class in datumaro.plugins.data_formats.synthia.format)": [[356, "datumaro.plugins.data_formats.synthia.format.SynthiaAlPath"]], "synthiaformattype (class in datumaro.plugins.data_formats.synthia.format)": [[356, "datumaro.plugins.data_formats.synthia.format.SynthiaFormatType"]], "synthiarandpath (class in datumaro.plugins.data_formats.synthia.format)": [[356, "datumaro.plugins.data_formats.synthia.format.SynthiaRandPath"]], "synthiasfpath (class in datumaro.plugins.data_formats.synthia.format)": [[356, "datumaro.plugins.data_formats.synthia.format.SynthiaSfPath"]], "datumaro.plugins.data_formats.synthia.format": [[356, "module-datumaro.plugins.data_formats.synthia.format"]], "meta_folders() (datumaro.plugins.data_formats.synthia.format.synthiaalpath class method)": [[356, "datumaro.plugins.data_formats.synthia.format.SynthiaAlPath.meta_folders"]], "meta_folders() (datumaro.plugins.data_formats.synthia.format.synthiarandpath class method)": [[356, "datumaro.plugins.data_formats.synthia.format.SynthiaRandPath.meta_folders"]], "meta_folders() (datumaro.plugins.data_formats.synthia.format.synthiasfpath class method)": [[356, "datumaro.plugins.data_formats.synthia.format.SynthiaSfPath.meta_folders"]], "synthia_al (datumaro.plugins.data_formats.synthia.format.synthiaformattype attribute)": [[356, "datumaro.plugins.data_formats.synthia.format.SynthiaFormatType.synthia_al"]], "synthia_rand (datumaro.plugins.data_formats.synthia.format.synthiaformattype attribute)": [[356, "datumaro.plugins.data_formats.synthia.format.SynthiaFormatType.synthia_rand"]], "synthia_sf (datumaro.plugins.data_formats.synthia.format.synthiaformattype attribute)": [[356, "datumaro.plugins.data_formats.synthia.format.SynthiaFormatType.synthia_sf"]], "format (datumaro.plugins.data_formats.synthia.importer.synthiaalimporter attribute)": [[357, "datumaro.plugins.data_formats.synthia.importer.SynthiaAlImporter.FORMAT"]], "format (datumaro.plugins.data_formats.synthia.importer.synthiarandimporter attribute)": [[357, "datumaro.plugins.data_formats.synthia.importer.SynthiaRandImporter.FORMAT"]], "format (datumaro.plugins.data_formats.synthia.importer.synthiasfimporter attribute)": [[357, "datumaro.plugins.data_formats.synthia.importer.SynthiaSfImporter.FORMAT"]], "meta_folders (datumaro.plugins.data_formats.synthia.importer.synthiaalimporter attribute)": [[357, "datumaro.plugins.data_formats.synthia.importer.SynthiaAlImporter.META_FOLDERS"]], "meta_folders (datumaro.plugins.data_formats.synthia.importer.synthiarandimporter attribute)": [[357, "datumaro.plugins.data_formats.synthia.importer.SynthiaRandImporter.META_FOLDERS"]], "meta_folders (datumaro.plugins.data_formats.synthia.importer.synthiasfimporter attribute)": [[357, "datumaro.plugins.data_formats.synthia.importer.SynthiaSfImporter.META_FOLDERS"]], "synthiaalimporter (class in datumaro.plugins.data_formats.synthia.importer)": [[357, "datumaro.plugins.data_formats.synthia.importer.SynthiaAlImporter"]], "synthiarandimporter (class in datumaro.plugins.data_formats.synthia.importer)": [[357, "datumaro.plugins.data_formats.synthia.importer.SynthiaRandImporter"]], "synthiasfimporter (class in datumaro.plugins.data_formats.synthia.importer)": [[357, "datumaro.plugins.data_formats.synthia.importer.SynthiaSfImporter"]], "datumaro.plugins.data_formats.synthia.importer": [[357, "module-datumaro.plugins.data_formats.synthia.importer"]], "default_image_ext (datumaro.plugins.data_formats.tabular.tabulardataexporter attribute)": [[358, "datumaro.plugins.data_formats.tabular.TabularDataExporter.DEFAULT_IMAGE_EXT"]], "export_ext (datumaro.plugins.data_formats.tabular.tabulardataexporter attribute)": [[358, "datumaro.plugins.data_formats.tabular.TabularDataExporter.EXPORT_EXT"]], "name (datumaro.plugins.data_formats.tabular.tabulardatabase attribute)": [[358, "datumaro.plugins.data_formats.tabular.TabularDataBase.NAME"]], "name (datumaro.plugins.data_formats.tabular.tabulardataexporter attribute)": [[358, "datumaro.plugins.data_formats.tabular.TabularDataExporter.NAME"]], "name (datumaro.plugins.data_formats.tabular.tabulardataimporter attribute)": [[358, "datumaro.plugins.data_formats.tabular.TabularDataImporter.NAME"]], "tabulardatabase (class in datumaro.plugins.data_formats.tabular)": [[358, "datumaro.plugins.data_formats.tabular.TabularDataBase"]], "tabulardataexporter (class in datumaro.plugins.data_formats.tabular)": [[358, "datumaro.plugins.data_formats.tabular.TabularDataExporter"]], "tabulardataimporter (class in datumaro.plugins.data_formats.tabular)": [[358, "datumaro.plugins.data_formats.tabular.TabularDataImporter"]], "build_cmdline_parser() (datumaro.plugins.data_formats.tabular.tabulardataimporter class method)": [[358, "datumaro.plugins.data_formats.tabular.TabularDataImporter.build_cmdline_parser"]], "categories() (datumaro.plugins.data_formats.tabular.tabulardatabase method)": [[358, "datumaro.plugins.data_formats.tabular.TabularDataBase.categories"]], "datumaro.plugins.data_formats.tabular": [[358, "module-datumaro.plugins.data_formats.tabular"]], "find_sources() (datumaro.plugins.data_formats.tabular.tabulardataimporter class method)": [[358, "datumaro.plugins.data_formats.tabular.TabularDataImporter.find_sources"]], "get_file_extensions() (datumaro.plugins.data_formats.tabular.tabulardataimporter class method)": [[358, "datumaro.plugins.data_formats.tabular.TabularDataImporter.get_file_extensions"]], "string_to_dict() (in module datumaro.plugins.data_formats.tabular)": [[358, "datumaro.plugins.data_formats.tabular.string_to_dict"]], "datumaro.plugins.data_formats.tf_detection_api": [[359, "module-datumaro.plugins.data_formats.tf_detection_api"]], "tfdetectionapibase (class in datumaro.plugins.data_formats.tf_detection_api.base)": [[360, "datumaro.plugins.data_formats.tf_detection_api.base.TfDetectionApiBase"]], "tfdetectionapiimporter (class in datumaro.plugins.data_formats.tf_detection_api.base)": [[360, "datumaro.plugins.data_formats.tf_detection_api.base.TfDetectionApiImporter"]], "clamp() (in module datumaro.plugins.data_formats.tf_detection_api.base)": [[360, "datumaro.plugins.data_formats.tf_detection_api.base.clamp"]], "datumaro.plugins.data_formats.tf_detection_api.base": [[360, "module-datumaro.plugins.data_formats.tf_detection_api.base"]], "find_sources() (datumaro.plugins.data_formats.tf_detection_api.base.tfdetectionapiimporter class method)": [[360, "datumaro.plugins.data_formats.tf_detection_api.base.TfDetectionApiImporter.find_sources"]], "get_file_extensions() (datumaro.plugins.data_formats.tf_detection_api.base.tfdetectionapiimporter class method)": [[360, "datumaro.plugins.data_formats.tf_detection_api.base.TfDetectionApiImporter.get_file_extensions"]], "default_image_ext (datumaro.plugins.data_formats.tf_detection_api.exporter.tfdetectionapiexporter attribute)": [[361, "datumaro.plugins.data_formats.tf_detection_api.exporter.TfDetectionApiExporter.DEFAULT_IMAGE_EXT"]], "tfdetectionapiexporter (class in datumaro.plugins.data_formats.tf_detection_api.exporter)": [[361, "datumaro.plugins.data_formats.tf_detection_api.exporter.TfDetectionApiExporter"]], "build_cmdline_parser() (datumaro.plugins.data_formats.tf_detection_api.exporter.tfdetectionapiexporter class method)": [[361, "datumaro.plugins.data_formats.tf_detection_api.exporter.TfDetectionApiExporter.build_cmdline_parser"]], "bytes_feature() (in module datumaro.plugins.data_formats.tf_detection_api.exporter)": [[361, "datumaro.plugins.data_formats.tf_detection_api.exporter.bytes_feature"]], "bytes_list_feature() (in module datumaro.plugins.data_formats.tf_detection_api.exporter)": [[361, "datumaro.plugins.data_formats.tf_detection_api.exporter.bytes_list_feature"]], "datumaro.plugins.data_formats.tf_detection_api.exporter": [[361, "module-datumaro.plugins.data_formats.tf_detection_api.exporter"]], "float_list_feature() (in module datumaro.plugins.data_formats.tf_detection_api.exporter)": [[361, "datumaro.plugins.data_formats.tf_detection_api.exporter.float_list_feature"]], "int64_feature() (in module datumaro.plugins.data_formats.tf_detection_api.exporter)": [[361, "datumaro.plugins.data_formats.tf_detection_api.exporter.int64_feature"]], "int64_list_feature() (in module datumaro.plugins.data_formats.tf_detection_api.exporter)": [[361, "datumaro.plugins.data_formats.tf_detection_api.exporter.int64_list_feature"]], "patch() (datumaro.plugins.data_formats.tf_detection_api.exporter.tfdetectionapiexporter class method)": [[361, "datumaro.plugins.data_formats.tf_detection_api.exporter.TfDetectionApiExporter.patch"]], "annotations_dir (datumaro.plugins.data_formats.tf_detection_api.format.detectionapipath attribute)": [[362, "datumaro.plugins.data_formats.tf_detection_api.format.DetectionApiPath.ANNOTATIONS_DIR"]], "default_image_ext (datumaro.plugins.data_formats.tf_detection_api.format.detectionapipath attribute)": [[362, "datumaro.plugins.data_formats.tf_detection_api.format.DetectionApiPath.DEFAULT_IMAGE_EXT"]], "detectionapipath (class in datumaro.plugins.data_formats.tf_detection_api.format)": [[362, "datumaro.plugins.data_formats.tf_detection_api.format.DetectionApiPath"]], "images_dir (datumaro.plugins.data_formats.tf_detection_api.format.detectionapipath attribute)": [[362, "datumaro.plugins.data_formats.tf_detection_api.format.DetectionApiPath.IMAGES_DIR"]], "image_ext_format (datumaro.plugins.data_formats.tf_detection_api.format.detectionapipath attribute)": [[362, "datumaro.plugins.data_formats.tf_detection_api.format.DetectionApiPath.IMAGE_EXT_FORMAT"]], "labelmap_file (datumaro.plugins.data_formats.tf_detection_api.format.detectionapipath attribute)": [[362, "datumaro.plugins.data_formats.tf_detection_api.format.DetectionApiPath.LABELMAP_FILE"]], "tfrecordimportertype (class in datumaro.plugins.data_formats.tf_detection_api.format)": [[362, "datumaro.plugins.data_formats.tf_detection_api.format.TfrecordImporterType"]], "datumaro.plugins.data_formats.tf_detection_api.format": [[362, "module-datumaro.plugins.data_formats.tf_detection_api.format"]], "default (datumaro.plugins.data_formats.tf_detection_api.format.tfrecordimportertype attribute)": [[362, "datumaro.plugins.data_formats.tf_detection_api.format.TfrecordImporterType.default"]], "roboflow (datumaro.plugins.data_formats.tf_detection_api.format.tfrecordimportertype attribute)": [[362, "datumaro.plugins.data_formats.tf_detection_api.format.TfrecordImporterType.roboflow"]], "annotation_dir (datumaro.plugins.data_formats.vgg_face2.vggface2path attribute)": [[363, "datumaro.plugins.data_formats.vgg_face2.VggFace2Path.ANNOTATION_DIR"]], "bboxes_file (datumaro.plugins.data_formats.vgg_face2.vggface2path attribute)": [[363, "datumaro.plugins.data_formats.vgg_face2.VggFace2Path.BBOXES_FILE"]], "default_image_ext (datumaro.plugins.data_formats.vgg_face2.vggface2exporter attribute)": [[363, "datumaro.plugins.data_formats.vgg_face2.VggFace2Exporter.DEFAULT_IMAGE_EXT"]], "images_dir_no_label (datumaro.plugins.data_formats.vgg_face2.vggface2path attribute)": [[363, "datumaro.plugins.data_formats.vgg_face2.VggFace2Path.IMAGES_DIR_NO_LABEL"]], "image_ext (datumaro.plugins.data_formats.vgg_face2.vggface2path attribute)": [[363, "datumaro.plugins.data_formats.vgg_face2.VggFace2Path.IMAGE_EXT"]], "labels_file (datumaro.plugins.data_formats.vgg_face2.vggface2path attribute)": [[363, "datumaro.plugins.data_formats.vgg_face2.VggFace2Path.LABELS_FILE"]], "landmarks_file (datumaro.plugins.data_formats.vgg_face2.vggface2path attribute)": [[363, "datumaro.plugins.data_formats.vgg_face2.VggFace2Path.LANDMARKS_FILE"]], "vggface2base (class in datumaro.plugins.data_formats.vgg_face2)": [[363, "datumaro.plugins.data_formats.vgg_face2.VggFace2Base"]], "vggface2exporter (class in datumaro.plugins.data_formats.vgg_face2)": [[363, "datumaro.plugins.data_formats.vgg_face2.VggFace2Exporter"]], "vggface2importer (class in datumaro.plugins.data_formats.vgg_face2)": [[363, "datumaro.plugins.data_formats.vgg_face2.VggFace2Importer"]], "vggface2path (class in datumaro.plugins.data_formats.vgg_face2)": [[363, "datumaro.plugins.data_formats.vgg_face2.VggFace2Path"]], "categories() (datumaro.plugins.data_formats.vgg_face2.vggface2base method)": [[363, "datumaro.plugins.data_formats.vgg_face2.VggFace2Base.categories"]], "datumaro.plugins.data_formats.vgg_face2": [[363, "module-datumaro.plugins.data_formats.vgg_face2"]], "detect() (datumaro.plugins.data_formats.vgg_face2.vggface2importer class method)": [[363, "datumaro.plugins.data_formats.vgg_face2.VggFace2Importer.detect"]], "find_sources() (datumaro.plugins.data_formats.vgg_face2.vggface2importer class method)": [[363, "datumaro.plugins.data_formats.vgg_face2.VggFace2Importer.find_sources"]], "get_file_extensions() (datumaro.plugins.data_formats.vgg_face2.vggface2importer class method)": [[363, "datumaro.plugins.data_formats.vgg_face2.VggFace2Importer.get_file_extensions"]], "videoframesbase (class in datumaro.plugins.data_formats.video)": [[364, "datumaro.plugins.data_formats.video.VideoFramesBase"]], "videoframesimporter (class in datumaro.plugins.data_formats.video)": [[364, "datumaro.plugins.data_formats.video.VideoFramesImporter"]], "videokeyframesbase (class in datumaro.plugins.data_formats.video)": [[364, "datumaro.plugins.data_formats.video.VideoKeyframesBase"]], "videokeyframesimporter (class in datumaro.plugins.data_formats.video)": [[364, "datumaro.plugins.data_formats.video.VideoKeyframesImporter"]], "build_cmdline_parser() (datumaro.plugins.data_formats.video.videoframesimporter class method)": [[364, "datumaro.plugins.data_formats.video.VideoFramesImporter.build_cmdline_parser"]], "build_cmdline_parser() (datumaro.plugins.data_formats.video.videokeyframesimporter class method)": [[364, "datumaro.plugins.data_formats.video.VideoKeyframesImporter.build_cmdline_parser"]], "datumaro.plugins.data_formats.video": [[364, "module-datumaro.plugins.data_formats.video"]], "detect() (datumaro.plugins.data_formats.video.videoframesimporter class method)": [[364, "datumaro.plugins.data_formats.video.VideoFramesImporter.detect"]], "find_sources() (datumaro.plugins.data_formats.video.videoframesimporter class method)": [[364, "datumaro.plugins.data_formats.video.VideoFramesImporter.find_sources"]], "find_sources() (datumaro.plugins.data_formats.video.videokeyframesimporter class method)": [[364, "datumaro.plugins.data_formats.video.VideoKeyframesImporter.find_sources"]], "get() (datumaro.plugins.data_formats.video.videoframesbase method)": [[364, "datumaro.plugins.data_formats.video.VideoFramesBase.get"]], "get_file_extensions() (datumaro.plugins.data_formats.video.videoframesimporter class method)": [[364, "datumaro.plugins.data_formats.video.VideoFramesImporter.get_file_extensions"]], "datumaro.plugins.data_formats.voc": [[365, "module-datumaro.plugins.data_formats.voc"]], "vocactionbase (class in datumaro.plugins.data_formats.voc.base)": [[366, "datumaro.plugins.data_formats.voc.base.VocActionBase"]], "vocbase (class in datumaro.plugins.data_formats.voc.base)": [[366, "datumaro.plugins.data_formats.voc.base.VocBase"]], "vocclassificationbase (class in datumaro.plugins.data_formats.voc.base)": [[366, "datumaro.plugins.data_formats.voc.base.VocClassificationBase"]], "vocdetectionbase (class in datumaro.plugins.data_formats.voc.base)": [[366, "datumaro.plugins.data_formats.voc.base.VocDetectionBase"]], "vocinstancesegmentationbase (class in datumaro.plugins.data_formats.voc.base)": [[366, "datumaro.plugins.data_formats.voc.base.VocInstanceSegmentationBase"]], "voclayoutbase (class in datumaro.plugins.data_formats.voc.base)": [[366, "datumaro.plugins.data_formats.voc.base.VocLayoutBase"]], "vocsegmentationbase (class in datumaro.plugins.data_formats.voc.base)": [[366, "datumaro.plugins.data_formats.voc.base.VocSegmentationBase"]], "datumaro.plugins.data_formats.voc.base": [[366, "module-datumaro.plugins.data_formats.voc.base"]], "is_stream (datumaro.plugins.data_formats.voc.base.vocbase property)": [[366, "datumaro.plugins.data_formats.voc.base.VocBase.is_stream"]], "builtin_attrs (datumaro.plugins.data_formats.voc.exporter.vocexporter attribute)": [[367, "datumaro.plugins.data_formats.voc.exporter.VocExporter.BUILTIN_ATTRS"]], "default_image_ext (datumaro.plugins.data_formats.voc.exporter.vocexporter attribute)": [[367, "datumaro.plugins.data_formats.voc.exporter.VocExporter.DEFAULT_IMAGE_EXT"]], "labelmaptype (class in datumaro.plugins.data_formats.voc.exporter)": [[367, "datumaro.plugins.data_formats.voc.exporter.LabelmapType"]], "vocactionexporter (class in datumaro.plugins.data_formats.voc.exporter)": [[367, "datumaro.plugins.data_formats.voc.exporter.VocActionExporter"]], "vocclassificationexporter (class in datumaro.plugins.data_formats.voc.exporter)": [[367, "datumaro.plugins.data_formats.voc.exporter.VocClassificationExporter"]], "vocdetectionexporter (class in datumaro.plugins.data_formats.voc.exporter)": [[367, "datumaro.plugins.data_formats.voc.exporter.VocDetectionExporter"]], "vocexporter (class in datumaro.plugins.data_formats.voc.exporter)": [[367, "datumaro.plugins.data_formats.voc.exporter.VocExporter"]], "vocinstancesegmentationexporter (class in datumaro.plugins.data_formats.voc.exporter)": [[367, "datumaro.plugins.data_formats.voc.exporter.VocInstanceSegmentationExporter"]], "voclayoutexporter (class in datumaro.plugins.data_formats.voc.exporter)": [[367, "datumaro.plugins.data_formats.voc.exporter.VocLayoutExporter"]], "vocsegmentationexporter (class in datumaro.plugins.data_formats.voc.exporter)": [[367, "datumaro.plugins.data_formats.voc.exporter.VocSegmentationExporter"]], "build_cmdline_parser() (datumaro.plugins.data_formats.voc.exporter.vocexporter class method)": [[367, "datumaro.plugins.data_formats.voc.exporter.VocExporter.build_cmdline_parser"]], "can_stream (datumaro.plugins.data_formats.voc.exporter.vocexporter property)": [[367, "datumaro.plugins.data_formats.voc.exporter.VocExporter.can_stream"]], "datumaro.plugins.data_formats.voc.exporter": [[367, "module-datumaro.plugins.data_formats.voc.exporter"]], "get_label() (datumaro.plugins.data_formats.voc.exporter.vocexporter method)": [[367, "datumaro.plugins.data_formats.voc.exporter.VocExporter.get_label"]], "make_dirs() (datumaro.plugins.data_formats.voc.exporter.vocexporter method)": [[367, "datumaro.plugins.data_formats.voc.exporter.VocExporter.make_dirs"]], "patch() (datumaro.plugins.data_formats.voc.exporter.vocexporter class method)": [[367, "datumaro.plugins.data_formats.voc.exporter.VocExporter.patch"]], "save_action_lists() (datumaro.plugins.data_formats.voc.exporter.vocexporter method)": [[367, "datumaro.plugins.data_formats.voc.exporter.VocExporter.save_action_lists"]], "save_class_lists() (datumaro.plugins.data_formats.voc.exporter.vocexporter method)": [[367, "datumaro.plugins.data_formats.voc.exporter.VocExporter.save_class_lists"]], "save_clsdet_lists() (datumaro.plugins.data_formats.voc.exporter.vocexporter method)": [[367, "datumaro.plugins.data_formats.voc.exporter.VocExporter.save_clsdet_lists"]], "save_label_map() (datumaro.plugins.data_formats.voc.exporter.vocexporter method)": [[367, "datumaro.plugins.data_formats.voc.exporter.VocExporter.save_label_map"]], "save_layout_lists() (datumaro.plugins.data_formats.voc.exporter.vocexporter method)": [[367, "datumaro.plugins.data_formats.voc.exporter.VocExporter.save_layout_lists"]], "save_segm() (datumaro.plugins.data_formats.voc.exporter.vocexporter method)": [[367, "datumaro.plugins.data_formats.voc.exporter.VocExporter.save_segm"]], "save_segm_lists() (datumaro.plugins.data_formats.voc.exporter.vocexporter method)": [[367, "datumaro.plugins.data_formats.voc.exporter.VocExporter.save_segm_lists"]], "save_subsets() (datumaro.plugins.data_formats.voc.exporter.vocexporter method)": [[367, "datumaro.plugins.data_formats.voc.exporter.VocExporter.save_subsets"]], "source (datumaro.plugins.data_formats.voc.exporter.labelmaptype attribute)": [[367, "datumaro.plugins.data_formats.voc.exporter.LabelmapType.source"]], "voc (datumaro.plugins.data_formats.voc.exporter.labelmaptype attribute)": [[367, "datumaro.plugins.data_formats.voc.exporter.LabelmapType.voc"]], "voc_action (datumaro.plugins.data_formats.voc.exporter.labelmaptype attribute)": [[367, "datumaro.plugins.data_formats.voc.exporter.LabelmapType.voc_action"]], "voc_classification (datumaro.plugins.data_formats.voc.exporter.labelmaptype attribute)": [[367, "datumaro.plugins.data_formats.voc.exporter.LabelmapType.voc_classification"]], "voc_detection (datumaro.plugins.data_formats.voc.exporter.labelmaptype attribute)": [[367, "datumaro.plugins.data_formats.voc.exporter.LabelmapType.voc_detection"]], "voc_instance_segmentation (datumaro.plugins.data_formats.voc.exporter.labelmaptype attribute)": [[367, "datumaro.plugins.data_formats.voc.exporter.LabelmapType.voc_instance_segmentation"]], "voc_layout (datumaro.plugins.data_formats.voc.exporter.labelmaptype attribute)": [[367, "datumaro.plugins.data_formats.voc.exporter.LabelmapType.voc_layout"]], "voc_segmentation (datumaro.plugins.data_formats.voc.exporter.labelmaptype attribute)": [[367, "datumaro.plugins.data_formats.voc.exporter.LabelmapType.voc_segmentation"]], "annotations_dir (datumaro.plugins.data_formats.voc.format.vocpath attribute)": [[368, "datumaro.plugins.data_formats.voc.format.VocPath.ANNOTATIONS_DIR"]], "frontal (datumaro.plugins.data_formats.voc.format.vocpose attribute)": [[368, "datumaro.plugins.data_formats.voc.format.VocPose.Frontal"]], "images_dir (datumaro.plugins.data_formats.voc.format.vocpath attribute)": [[368, "datumaro.plugins.data_formats.voc.format.VocPath.IMAGES_DIR"]], "image_ext (datumaro.plugins.data_formats.voc.format.vocpath attribute)": [[368, "datumaro.plugins.data_formats.voc.format.VocPath.IMAGE_EXT"]], "instances_dir (datumaro.plugins.data_formats.voc.format.vocpath attribute)": [[368, "datumaro.plugins.data_formats.voc.format.VocPath.INSTANCES_DIR"]], "labelmap_file (datumaro.plugins.data_formats.voc.format.vocpath attribute)": [[368, "datumaro.plugins.data_formats.voc.format.VocPath.LABELMAP_FILE"]], "labelmapconfig (in module datumaro.plugins.data_formats.voc.format)": [[368, "datumaro.plugins.data_formats.voc.format.LabelMapConfig"]], "left (datumaro.plugins.data_formats.voc.format.vocpose attribute)": [[368, "datumaro.plugins.data_formats.voc.format.VocPose.Left"]], "rear (datumaro.plugins.data_formats.voc.format.vocpose attribute)": [[368, "datumaro.plugins.data_formats.voc.format.VocPose.Rear"]], "right (datumaro.plugins.data_formats.voc.format.vocpose attribute)": [[368, "datumaro.plugins.data_formats.voc.format.VocPose.Right"]], "segmentation_dir (datumaro.plugins.data_formats.voc.format.vocpath attribute)": [[368, "datumaro.plugins.data_formats.voc.format.VocPath.SEGMENTATION_DIR"]], "segm_ext (datumaro.plugins.data_formats.voc.format.vocpath attribute)": [[368, "datumaro.plugins.data_formats.voc.format.VocPath.SEGM_EXT"]], "subsets_dir (datumaro.plugins.data_formats.voc.format.vocpath attribute)": [[368, "datumaro.plugins.data_formats.voc.format.VocPath.SUBSETS_DIR"]], "task_dir (datumaro.plugins.data_formats.voc.format.vocpath attribute)": [[368, "datumaro.plugins.data_formats.voc.format.VocPath.TASK_DIR"]], "unspecified (datumaro.plugins.data_formats.voc.format.vocpose attribute)": [[368, "datumaro.plugins.data_formats.voc.format.VocPose.Unspecified"]], "vocaction (class in datumaro.plugins.data_formats.voc.format)": [[368, "datumaro.plugins.data_formats.voc.format.VocAction"]], "vocbodypart (class in datumaro.plugins.data_formats.voc.format)": [[368, "datumaro.plugins.data_formats.voc.format.VocBodyPart"]], "vocimportertype (class in datumaro.plugins.data_formats.voc.format)": [[368, "datumaro.plugins.data_formats.voc.format.VocImporterType"]], "voclabel (class in datumaro.plugins.data_formats.voc.format)": [[368, "datumaro.plugins.data_formats.voc.format.VocLabel"]], "vocpath (class in datumaro.plugins.data_formats.voc.format)": [[368, "datumaro.plugins.data_formats.voc.format.VocPath"]], "vocpose (class in datumaro.plugins.data_formats.voc.format)": [[368, "datumaro.plugins.data_formats.voc.format.VocPose"]], "voctask (class in datumaro.plugins.data_formats.voc.format)": [[368, "datumaro.plugins.data_formats.voc.format.VocTask"]], "aeroplane (datumaro.plugins.data_formats.voc.format.voclabel attribute)": [[368, "datumaro.plugins.data_formats.voc.format.VocLabel.aeroplane"]], "background (datumaro.plugins.data_formats.voc.format.voclabel attribute)": [[368, "datumaro.plugins.data_formats.voc.format.VocLabel.background"]], "bicycle (datumaro.plugins.data_formats.voc.format.voclabel attribute)": [[368, "datumaro.plugins.data_formats.voc.format.VocLabel.bicycle"]], "bird (datumaro.plugins.data_formats.voc.format.voclabel attribute)": [[368, "datumaro.plugins.data_formats.voc.format.VocLabel.bird"]], "boat (datumaro.plugins.data_formats.voc.format.voclabel attribute)": [[368, "datumaro.plugins.data_formats.voc.format.VocLabel.boat"]], "bottle (datumaro.plugins.data_formats.voc.format.voclabel attribute)": [[368, "datumaro.plugins.data_formats.voc.format.VocLabel.bottle"]], "bus (datumaro.plugins.data_formats.voc.format.voclabel attribute)": [[368, "datumaro.plugins.data_formats.voc.format.VocLabel.bus"]], "car (datumaro.plugins.data_formats.voc.format.voclabel attribute)": [[368, "datumaro.plugins.data_formats.voc.format.VocLabel.car"]], "cat (datumaro.plugins.data_formats.voc.format.voclabel attribute)": [[368, "datumaro.plugins.data_formats.voc.format.VocLabel.cat"]], "chair (datumaro.plugins.data_formats.voc.format.voclabel attribute)": [[368, "datumaro.plugins.data_formats.voc.format.VocLabel.chair"]], "cow (datumaro.plugins.data_formats.voc.format.voclabel attribute)": [[368, "datumaro.plugins.data_formats.voc.format.VocLabel.cow"]], "datumaro.plugins.data_formats.voc.format": [[368, "module-datumaro.plugins.data_formats.voc.format"]], "default (datumaro.plugins.data_formats.voc.format.vocimportertype attribute)": [[368, "datumaro.plugins.data_formats.voc.format.VocImporterType.default"]], "diningtable (datumaro.plugins.data_formats.voc.format.voclabel attribute)": [[368, "datumaro.plugins.data_formats.voc.format.VocLabel.diningtable"]], "dog (datumaro.plugins.data_formats.voc.format.voclabel attribute)": [[368, "datumaro.plugins.data_formats.voc.format.VocLabel.dog"]], "foot (datumaro.plugins.data_formats.voc.format.vocbodypart attribute)": [[368, "datumaro.plugins.data_formats.voc.format.VocBodyPart.foot"]], "generate_colormap() (in module datumaro.plugins.data_formats.voc.format)": [[368, "datumaro.plugins.data_formats.voc.format.generate_colormap"]], "hand (datumaro.plugins.data_formats.voc.format.vocbodypart attribute)": [[368, "datumaro.plugins.data_formats.voc.format.VocBodyPart.hand"]], "head (datumaro.plugins.data_formats.voc.format.vocbodypart attribute)": [[368, "datumaro.plugins.data_formats.voc.format.VocBodyPart.head"]], "horse (datumaro.plugins.data_formats.voc.format.voclabel attribute)": [[368, "datumaro.plugins.data_formats.voc.format.VocLabel.horse"]], "ignored (datumaro.plugins.data_formats.voc.format.voclabel attribute)": [[368, "datumaro.plugins.data_formats.voc.format.VocLabel.ignored"]], "jumping (datumaro.plugins.data_formats.voc.format.vocaction attribute)": [[368, "datumaro.plugins.data_formats.voc.format.VocAction.jumping"]], "make_voc_categories() (in module datumaro.plugins.data_formats.voc.format)": [[368, "datumaro.plugins.data_formats.voc.format.make_voc_categories"]], "make_voc_label_map() (in module datumaro.plugins.data_formats.voc.format)": [[368, "datumaro.plugins.data_formats.voc.format.make_voc_label_map"]], "motorbike (datumaro.plugins.data_formats.voc.format.voclabel attribute)": [[368, "datumaro.plugins.data_formats.voc.format.VocLabel.motorbike"]], "other (datumaro.plugins.data_formats.voc.format.vocaction attribute)": [[368, "datumaro.plugins.data_formats.voc.format.VocAction.other"]], "parse_label_map() (in module datumaro.plugins.data_formats.voc.format)": [[368, "datumaro.plugins.data_formats.voc.format.parse_label_map"]], "parse_meta_file() (in module datumaro.plugins.data_formats.voc.format)": [[368, "datumaro.plugins.data_formats.voc.format.parse_meta_file"]], "person (datumaro.plugins.data_formats.voc.format.voclabel attribute)": [[368, "datumaro.plugins.data_formats.voc.format.VocLabel.person"]], "phoning (datumaro.plugins.data_formats.voc.format.vocaction attribute)": [[368, "datumaro.plugins.data_formats.voc.format.VocAction.phoning"]], "playinginstrument (datumaro.plugins.data_formats.voc.format.vocaction attribute)": [[368, "datumaro.plugins.data_formats.voc.format.VocAction.playinginstrument"]], "pottedplant (datumaro.plugins.data_formats.voc.format.voclabel attribute)": [[368, "datumaro.plugins.data_formats.voc.format.VocLabel.pottedplant"]], "reading (datumaro.plugins.data_formats.voc.format.vocaction attribute)": [[368, "datumaro.plugins.data_formats.voc.format.VocAction.reading"]], "ridingbike (datumaro.plugins.data_formats.voc.format.vocaction attribute)": [[368, "datumaro.plugins.data_formats.voc.format.VocAction.ridingbike"]], "ridinghorse (datumaro.plugins.data_formats.voc.format.vocaction attribute)": [[368, "datumaro.plugins.data_formats.voc.format.VocAction.ridinghorse"]], "roboflow (datumaro.plugins.data_formats.voc.format.vocimportertype attribute)": [[368, "datumaro.plugins.data_formats.voc.format.VocImporterType.roboflow"]], "running (datumaro.plugins.data_formats.voc.format.vocaction attribute)": [[368, "datumaro.plugins.data_formats.voc.format.VocAction.running"]], "sheep (datumaro.plugins.data_formats.voc.format.voclabel attribute)": [[368, "datumaro.plugins.data_formats.voc.format.VocLabel.sheep"]], "sofa (datumaro.plugins.data_formats.voc.format.voclabel attribute)": [[368, "datumaro.plugins.data_formats.voc.format.VocLabel.sofa"]], "takingphoto (datumaro.plugins.data_formats.voc.format.vocaction attribute)": [[368, "datumaro.plugins.data_formats.voc.format.VocAction.takingphoto"]], "train (datumaro.plugins.data_formats.voc.format.voclabel attribute)": [[368, "datumaro.plugins.data_formats.voc.format.VocLabel.train"]], "tvmonitor (datumaro.plugins.data_formats.voc.format.voclabel attribute)": [[368, "datumaro.plugins.data_formats.voc.format.VocLabel.tvmonitor"]], "usingcomputer (datumaro.plugins.data_formats.voc.format.vocaction attribute)": [[368, "datumaro.plugins.data_formats.voc.format.VocAction.usingcomputer"]], "voc (datumaro.plugins.data_formats.voc.format.voctask attribute)": [[368, "datumaro.plugins.data_formats.voc.format.VocTask.voc"]], "voc_action (datumaro.plugins.data_formats.voc.format.voctask attribute)": [[368, "datumaro.plugins.data_formats.voc.format.VocTask.voc_action"]], "voc_classification (datumaro.plugins.data_formats.voc.format.voctask attribute)": [[368, "datumaro.plugins.data_formats.voc.format.VocTask.voc_classification"]], "voc_detection (datumaro.plugins.data_formats.voc.format.voctask attribute)": [[368, "datumaro.plugins.data_formats.voc.format.VocTask.voc_detection"]], "voc_instance_segmentation (datumaro.plugins.data_formats.voc.format.voctask attribute)": [[368, "datumaro.plugins.data_formats.voc.format.VocTask.voc_instance_segmentation"]], "voc_layout (datumaro.plugins.data_formats.voc.format.voctask attribute)": [[368, "datumaro.plugins.data_formats.voc.format.VocTask.voc_layout"]], "voc_segmentation (datumaro.plugins.data_formats.voc.format.voctask attribute)": [[368, "datumaro.plugins.data_formats.voc.format.VocTask.voc_segmentation"]], "walking (datumaro.plugins.data_formats.voc.format.vocaction attribute)": [[368, "datumaro.plugins.data_formats.voc.format.VocAction.walking"]], "write_label_map() (in module datumaro.plugins.data_formats.voc.format)": [[368, "datumaro.plugins.data_formats.voc.format.write_label_map"]], "write_meta_file() (in module datumaro.plugins.data_formats.voc.format)": [[368, "datumaro.plugins.data_formats.voc.format.write_meta_file"]], "vocactionimporter (class in datumaro.plugins.data_formats.voc.importer)": [[369, "datumaro.plugins.data_formats.voc.importer.VocActionImporter"]], "vocclassificationimporter (class in datumaro.plugins.data_formats.voc.importer)": [[369, "datumaro.plugins.data_formats.voc.importer.VocClassificationImporter"]], "vocdetectionimporter (class in datumaro.plugins.data_formats.voc.importer)": [[369, "datumaro.plugins.data_formats.voc.importer.VocDetectionImporter"]], "vocimporter (class in datumaro.plugins.data_formats.voc.importer)": [[369, "datumaro.plugins.data_formats.voc.importer.VocImporter"]], "vocinstancesegmentationimporter (class in datumaro.plugins.data_formats.voc.importer)": [[369, "datumaro.plugins.data_formats.voc.importer.VocInstanceSegmentationImporter"]], "voclayoutimporter (class in datumaro.plugins.data_formats.voc.importer)": [[369, "datumaro.plugins.data_formats.voc.importer.VocLayoutImporter"]], "vocsegmentationimporter (class in datumaro.plugins.data_formats.voc.importer)": [[369, "datumaro.plugins.data_formats.voc.importer.VocSegmentationImporter"]], "datumaro.plugins.data_formats.voc.importer": [[369, "module-datumaro.plugins.data_formats.voc.importer"]], "anno_file_suffix (datumaro.plugins.data_formats.vott_csv.vottcsvpath attribute)": [[370, "datumaro.plugins.data_formats.vott_csv.VottCsvPath.ANNO_FILE_SUFFIX"]], "vottcsvbase (class in datumaro.plugins.data_formats.vott_csv)": [[370, "datumaro.plugins.data_formats.vott_csv.VottCsvBase"]], "vottcsvimporter (class in datumaro.plugins.data_formats.vott_csv)": [[370, "datumaro.plugins.data_formats.vott_csv.VottCsvImporter"]], "vottcsvpath (class in datumaro.plugins.data_formats.vott_csv)": [[370, "datumaro.plugins.data_formats.vott_csv.VottCsvPath"]], "datumaro.plugins.data_formats.vott_csv": [[370, "module-datumaro.plugins.data_formats.vott_csv"]], "detect() (datumaro.plugins.data_formats.vott_csv.vottcsvimporter class method)": [[370, "datumaro.plugins.data_formats.vott_csv.VottCsvImporter.detect"]], "find_sources() (datumaro.plugins.data_formats.vott_csv.vottcsvimporter class method)": [[370, "datumaro.plugins.data_formats.vott_csv.VottCsvImporter.find_sources"]], "get_file_extensions() (datumaro.plugins.data_formats.vott_csv.vottcsvimporter class method)": [[370, "datumaro.plugins.data_formats.vott_csv.VottCsvImporter.get_file_extensions"]], "anno_file_suffix (datumaro.plugins.data_formats.vott_json.vottjsonpath attribute)": [[371, "datumaro.plugins.data_formats.vott_json.VottJsonPath.ANNO_FILE_SUFFIX"]], "vottjsonbase (class in datumaro.plugins.data_formats.vott_json)": [[371, "datumaro.plugins.data_formats.vott_json.VottJsonBase"]], "vottjsonimporter (class in datumaro.plugins.data_formats.vott_json)": [[371, "datumaro.plugins.data_formats.vott_json.VottJsonImporter"]], "vottjsonpath (class in datumaro.plugins.data_formats.vott_json)": [[371, "datumaro.plugins.data_formats.vott_json.VottJsonPath"]], "datumaro.plugins.data_formats.vott_json": [[371, "module-datumaro.plugins.data_formats.vott_json"]], "detect() (datumaro.plugins.data_formats.vott_json.vottjsonimporter class method)": [[371, "datumaro.plugins.data_formats.vott_json.VottJsonImporter.detect"]], "find_sources() (datumaro.plugins.data_formats.vott_json.vottjsonimporter class method)": [[371, "datumaro.plugins.data_formats.vott_json.VottJsonImporter.find_sources"]], "get_file_extensions() (datumaro.plugins.data_formats.vott_json.vottjsonimporter class method)": [[371, "datumaro.plugins.data_formats.vott_json.VottJsonImporter.get_file_extensions"]], "annotations_dir (datumaro.plugins.data_formats.widerface.widerfacepath attribute)": [[372, "datumaro.plugins.data_formats.widerface.WiderFacePath.ANNOTATIONS_DIR"]], "bbox_attributes (datumaro.plugins.data_formats.widerface.widerfacepath attribute)": [[372, "datumaro.plugins.data_formats.widerface.WiderFacePath.BBOX_ATTRIBUTES"]], "default_image_ext (datumaro.plugins.data_formats.widerface.widerfaceexporter attribute)": [[372, "datumaro.plugins.data_formats.widerface.WiderFaceExporter.DEFAULT_IMAGE_EXT"]], "default_label (datumaro.plugins.data_formats.widerface.widerfacepath attribute)": [[372, "datumaro.plugins.data_formats.widerface.WiderFacePath.DEFAULT_LABEL"]], "images_dir (datumaro.plugins.data_formats.widerface.widerfacepath attribute)": [[372, "datumaro.plugins.data_formats.widerface.WiderFacePath.IMAGES_DIR"]], "images_dir_no_label (datumaro.plugins.data_formats.widerface.widerfacepath attribute)": [[372, "datumaro.plugins.data_formats.widerface.WiderFacePath.IMAGES_DIR_NO_LABEL"]], "image_ext (datumaro.plugins.data_formats.widerface.widerfacepath attribute)": [[372, "datumaro.plugins.data_formats.widerface.WiderFacePath.IMAGE_EXT"]], "labels_file (datumaro.plugins.data_formats.widerface.widerfacepath attribute)": [[372, "datumaro.plugins.data_formats.widerface.WiderFacePath.LABELS_FILE"]], "subset_dir (datumaro.plugins.data_formats.widerface.widerfacepath attribute)": [[372, "datumaro.plugins.data_formats.widerface.WiderFacePath.SUBSET_DIR"]], "widerfacebase (class in datumaro.plugins.data_formats.widerface)": [[372, "datumaro.plugins.data_formats.widerface.WiderFaceBase"]], "widerfaceexporter (class in datumaro.plugins.data_formats.widerface)": [[372, "datumaro.plugins.data_formats.widerface.WiderFaceExporter"]], "widerfaceimporter (class in datumaro.plugins.data_formats.widerface)": [[372, "datumaro.plugins.data_formats.widerface.WiderFaceImporter"]], "widerfacepath (class in datumaro.plugins.data_formats.widerface)": [[372, "datumaro.plugins.data_formats.widerface.WiderFacePath"]], "datumaro.plugins.data_formats.widerface": [[372, "module-datumaro.plugins.data_formats.widerface"]], "detect() (datumaro.plugins.data_formats.widerface.widerfaceimporter class method)": [[372, "datumaro.plugins.data_formats.widerface.WiderFaceImporter.detect"]], "find_sources() (datumaro.plugins.data_formats.widerface.widerfaceimporter class method)": [[372, "datumaro.plugins.data_formats.widerface.WiderFaceImporter.find_sources"]], "get_file_extensions() (datumaro.plugins.data_formats.widerface.widerfaceimporter class method)": [[372, "datumaro.plugins.data_formats.widerface.WiderFaceImporter.get_file_extensions"]], "datumaro.plugins.data_formats.yolo": [[373, "module-datumaro.plugins.data_formats.yolo"]], "annotation (class in datumaro.plugins.data_formats.yolo.base)": [[374, "datumaro.plugins.data_formats.yolo.base.Annotation"]], "annotationtype (class in datumaro.plugins.data_formats.yolo.base)": [[374, "datumaro.plugins.data_formats.yolo.base.AnnotationType"]], "bbox (class in datumaro.plugins.data_formats.yolo.base)": [[374, "datumaro.plugins.data_formats.yolo.base.Bbox"]], "default_subset_name (datumaro.plugins.data_formats.yolo.base.yolopath attribute)": [[374, "datumaro.plugins.data_formats.yolo.base.YoloPath.DEFAULT_SUBSET_NAME"]], "datasetbase (class in datumaro.plugins.data_formats.yolo.base)": [[374, "datumaro.plugins.data_formats.yolo.base.DatasetBase"]], "datasetitem (class in datumaro.plugins.data_formats.yolo.base)": [[374, "datumaro.plugins.data_formats.yolo.base.DatasetItem"]], "image (class in datumaro.plugins.data_formats.yolo.base)": [[374, "datumaro.plugins.data_formats.yolo.base.Image"]], "imagefromfile (class in datumaro.plugins.data_formats.yolo.base)": [[374, "datumaro.plugins.data_formats.yolo.base.ImageFromFile"]], "importcontext (class in datumaro.plugins.data_formats.yolo.base)": [[374, "datumaro.plugins.data_formats.yolo.base.ImportContext"]], "labelcategories (class in datumaro.plugins.data_formats.yolo.base)": [[374, "datumaro.plugins.data_formats.yolo.base.LabelCategories"]], "labelcategories.category (class in datumaro.plugins.data_formats.yolo.base)": [[374, "datumaro.plugins.data_formats.yolo.base.LabelCategories.Category"]], "labelcategories.labelgroup (class in datumaro.plugins.data_formats.yolo.base)": [[374, "datumaro.plugins.data_formats.yolo.base.LabelCategories.LabelGroup"]], "meta_file (datumaro.plugins.data_formats.yolo.base.yololoosebase attribute)": [[374, "datumaro.plugins.data_formats.yolo.base.YoloLooseBase.META_FILE"]], "meta_file (datumaro.plugins.data_formats.yolo.base.yoloultralyticsbase attribute)": [[374, "datumaro.plugins.data_formats.yolo.base.YoloUltralyticsBase.META_FILE"]], "meta_file (datumaro.plugins.data_formats.yolo.base.yoloultralyticspath attribute)": [[374, "datumaro.plugins.data_formats.yolo.base.YoloUltralyticsPath.META_FILE"]], "names_file (datumaro.plugins.data_formats.yolo.base.yololoosepath attribute)": [[374, "datumaro.plugins.data_formats.yolo.base.YoloLoosePath.NAMES_FILE"]], "ordereddict (class in datumaro.plugins.data_formats.yolo.base)": [[374, "datumaro.plugins.data_formats.yolo.base.OrderedDict"]], "reserved_config_keys (datumaro.plugins.data_formats.yolo.base.yolopath attribute)": [[374, "datumaro.plugins.data_formats.yolo.base.YoloPath.RESERVED_CONFIG_KEYS"]], "subset_names (datumaro.plugins.data_formats.yolo.base.yolopath attribute)": [[374, "datumaro.plugins.data_formats.yolo.base.YoloPath.SUBSET_NAMES"]], "subsetbase (class in datumaro.plugins.data_formats.yolo.base)": [[374, "datumaro.plugins.data_formats.yolo.base.SubsetBase"]], "typevar (class in datumaro.plugins.data_formats.yolo.base)": [[374, "datumaro.plugins.data_formats.yolo.base.TypeVar"]], "yololoosebase (class in datumaro.plugins.data_formats.yolo.base)": [[374, "datumaro.plugins.data_formats.yolo.base.YoloLooseBase"]], "yololoosepath (class in datumaro.plugins.data_formats.yolo.base)": [[374, "datumaro.plugins.data_formats.yolo.base.YoloLoosePath"]], "yolopath (class in datumaro.plugins.data_formats.yolo.base)": [[374, "datumaro.plugins.data_formats.yolo.base.YoloPath"]], "yolostrictbase (class in datumaro.plugins.data_formats.yolo.base)": [[374, "datumaro.plugins.data_formats.yolo.base.YoloStrictBase"]], "yoloultralyticsbase (class in datumaro.plugins.data_formats.yolo.base)": [[374, "datumaro.plugins.data_formats.yolo.base.YoloUltralyticsBase"]], "yoloultralyticspath (class in datumaro.plugins.data_formats.yolo.base)": [[374, "datumaro.plugins.data_formats.yolo.base.YoloUltralyticsPath"]], "__init__() (datumaro.plugins.data_formats.yolo.base.bbox method)": [[374, "datumaro.plugins.data_formats.yolo.base.Bbox.__init__"]], "_type (datumaro.plugins.data_formats.yolo.base.bbox attribute)": [[374, "datumaro.plugins.data_formats.yolo.base.Bbox._type"]], "add() (datumaro.plugins.data_formats.yolo.base.labelcategories method)": [[374, "datumaro.plugins.data_formats.yolo.base.LabelCategories.add"]], "add_label_group() (datumaro.plugins.data_formats.yolo.base.labelcategories method)": [[374, "datumaro.plugins.data_formats.yolo.base.LabelCategories.add_label_group"]], "ann_types() (datumaro.plugins.data_formats.yolo.base.datasetbase method)": [[374, "datumaro.plugins.data_formats.yolo.base.DatasetBase.ann_types"]], "annotations (datumaro.plugins.data_formats.yolo.base.datasetitem attribute)": [[374, "datumaro.plugins.data_formats.yolo.base.DatasetItem.annotations"]], "as_dict() (datumaro.plugins.data_formats.yolo.base.annotation method)": [[374, "datumaro.plugins.data_formats.yolo.base.Annotation.as_dict"]], "as_polygon() (datumaro.plugins.data_formats.yolo.base.bbox method)": [[374, "datumaro.plugins.data_formats.yolo.base.Bbox.as_polygon"], [374, "id6"]], "attributes (datumaro.plugins.data_formats.yolo.base.annotation attribute)": [[374, "datumaro.plugins.data_formats.yolo.base.Annotation.attributes"]], "attributes (datumaro.plugins.data_formats.yolo.base.datasetitem attribute)": [[374, "datumaro.plugins.data_formats.yolo.base.DatasetItem.attributes"]], "attributes (datumaro.plugins.data_formats.yolo.base.labelcategories.category attribute)": [[374, "datumaro.plugins.data_formats.yolo.base.LabelCategories.Category.attributes"]], "bbox (datumaro.plugins.data_formats.yolo.base.annotationtype attribute)": [[374, "datumaro.plugins.data_formats.yolo.base.AnnotationType.bbox"]], "caption (datumaro.plugins.data_formats.yolo.base.annotationtype attribute)": [[374, "datumaro.plugins.data_formats.yolo.base.AnnotationType.caption"]], "categories() (datumaro.plugins.data_formats.yolo.base.subsetbase method)": [[374, "datumaro.plugins.data_formats.yolo.base.SubsetBase.categories"]], "clear() (datumaro.plugins.data_formats.yolo.base.ordereddict method)": [[374, "datumaro.plugins.data_formats.yolo.base.OrderedDict.clear"]], "copy() (datumaro.plugins.data_formats.yolo.base.ordereddict method)": [[374, "datumaro.plugins.data_formats.yolo.base.OrderedDict.copy"]], "cuboid_3d (datumaro.plugins.data_formats.yolo.base.annotationtype attribute)": [[374, "datumaro.plugins.data_formats.yolo.base.AnnotationType.cuboid_3d"]], "data (datumaro.plugins.data_formats.yolo.base.imagefromfile property)": [[374, "datumaro.plugins.data_formats.yolo.base.ImageFromFile.data"]], "datumaro.plugins.data_formats.yolo.base": [[374, "module-datumaro.plugins.data_formats.yolo.base"]], "depth_annotation (datumaro.plugins.data_formats.yolo.base.annotationtype attribute)": [[374, "datumaro.plugins.data_formats.yolo.base.AnnotationType.depth_annotation"]], "ellipse (datumaro.plugins.data_formats.yolo.base.annotationtype attribute)": [[374, "datumaro.plugins.data_formats.yolo.base.AnnotationType.ellipse"]], "error_policy (datumaro.plugins.data_formats.yolo.base.importcontext attribute)": [[374, "datumaro.plugins.data_formats.yolo.base.ImportContext.error_policy"]], "ext (datumaro.plugins.data_formats.yolo.base.image property)": [[374, "datumaro.plugins.data_formats.yolo.base.Image.ext"]], "extract_subset_name_from_parent() (in module datumaro.plugins.data_formats.yolo.base)": [[374, "datumaro.plugins.data_formats.yolo.base.extract_subset_name_from_parent"]], "feature_vector (datumaro.plugins.data_formats.yolo.base.annotationtype attribute)": [[374, "datumaro.plugins.data_formats.yolo.base.AnnotationType.feature_vector"]], "find() (datumaro.plugins.data_formats.yolo.base.labelcategories method)": [[374, "datumaro.plugins.data_formats.yolo.base.LabelCategories.find"]], "find_files() (in module datumaro.plugins.data_formats.yolo.base)": [[374, "datumaro.plugins.data_formats.yolo.base.find_files"]], "from_bytes() (datumaro.plugins.data_formats.yolo.base.image class method)": [[374, "datumaro.plugins.data_formats.yolo.base.Image.from_bytes"]], "from_file() (datumaro.plugins.data_formats.yolo.base.image class method)": [[374, "datumaro.plugins.data_formats.yolo.base.Image.from_file"]], "from_iterable() (datumaro.plugins.data_formats.yolo.base.labelcategories class method)": [[374, "datumaro.plugins.data_formats.yolo.base.LabelCategories.from_iterable"]], "from_numpy() (datumaro.plugins.data_formats.yolo.base.image class method)": [[374, "datumaro.plugins.data_formats.yolo.base.Image.from_numpy"]], "fromkeys() (datumaro.plugins.data_formats.yolo.base.ordereddict method)": [[374, "datumaro.plugins.data_formats.yolo.base.OrderedDict.fromkeys"]], "get() (datumaro.plugins.data_formats.yolo.base.subsetbase method)": [[374, "datumaro.plugins.data_formats.yolo.base.SubsetBase.get"]], "get_area() (datumaro.plugins.data_formats.yolo.base.bbox method)": [[374, "datumaro.plugins.data_formats.yolo.base.Bbox.get_area"], [374, "id4"]], "get_bbox() (datumaro.plugins.data_formats.yolo.base.bbox method)": [[374, "datumaro.plugins.data_formats.yolo.base.Bbox.get_bbox"], [374, "id5"]], "get_data_as_dtype() (datumaro.plugins.data_formats.yolo.base.imagefromfile method)": [[374, "datumaro.plugins.data_formats.yolo.base.ImageFromFile.get_data_as_dtype"]], "get_subset() (datumaro.plugins.data_formats.yolo.base.yolostrictbase method)": [[374, "datumaro.plugins.data_formats.yolo.base.YoloStrictBase.get_subset"]], "group (datumaro.plugins.data_formats.yolo.base.annotation attribute)": [[374, "datumaro.plugins.data_formats.yolo.base.Annotation.group"]], "group_type (datumaro.plugins.data_formats.yolo.base.labelcategories.labelgroup attribute)": [[374, "datumaro.plugins.data_formats.yolo.base.LabelCategories.LabelGroup.group_type"]], "h (datumaro.plugins.data_formats.yolo.base.bbox property)": [[374, "id3"]], "h() (datumaro.plugins.data_formats.yolo.base.bbox method)": [[374, "datumaro.plugins.data_formats.yolo.base.Bbox.h"]], "has_meta_file() (in module datumaro.plugins.data_formats.yolo.base)": [[374, "datumaro.plugins.data_formats.yolo.base.has_meta_file"]], "has_size (datumaro.plugins.data_formats.yolo.base.image property)": [[374, "datumaro.plugins.data_formats.yolo.base.Image.has_size"]], "hash_key (datumaro.plugins.data_formats.yolo.base.annotationtype attribute)": [[374, "datumaro.plugins.data_formats.yolo.base.AnnotationType.hash_key"]], "id (datumaro.plugins.data_formats.yolo.base.annotation attribute)": [[374, "datumaro.plugins.data_formats.yolo.base.Annotation.id"]], "id (datumaro.plugins.data_formats.yolo.base.datasetitem attribute)": [[374, "datumaro.plugins.data_formats.yolo.base.DatasetItem.id"]], "id (datumaro.plugins.data_formats.yolo.base.undeclaredlabelerror attribute)": [[374, "datumaro.plugins.data_formats.yolo.base.UndeclaredLabelError.id"]], "infos() (datumaro.plugins.data_formats.yolo.base.subsetbase method)": [[374, "datumaro.plugins.data_formats.yolo.base.SubsetBase.infos"]], "iou() (datumaro.plugins.data_formats.yolo.base.bbox method)": [[374, "datumaro.plugins.data_formats.yolo.base.Bbox.iou"], [374, "id7"]], "is_stream (datumaro.plugins.data_formats.yolo.base.yololoosebase property)": [[374, "datumaro.plugins.data_formats.yolo.base.YoloLooseBase.is_stream"]], "is_stream (datumaro.plugins.data_formats.yolo.base.yolostrictbase property)": [[374, "datumaro.plugins.data_formats.yolo.base.YoloStrictBase.is_stream"]], "items (datumaro.plugins.data_formats.yolo.base.labelcategories attribute)": [[374, "datumaro.plugins.data_formats.yolo.base.LabelCategories.items"]], "items() (datumaro.plugins.data_formats.yolo.base.ordereddict method)": [[374, "datumaro.plugins.data_formats.yolo.base.OrderedDict.items"]], "keys() (datumaro.plugins.data_formats.yolo.base.ordereddict method)": [[374, "datumaro.plugins.data_formats.yolo.base.OrderedDict.keys"]], "label (datumaro.plugins.data_formats.yolo.base.annotationtype attribute)": [[374, "datumaro.plugins.data_formats.yolo.base.AnnotationType.label"]], "label_groups (datumaro.plugins.data_formats.yolo.base.labelcategories attribute)": [[374, "datumaro.plugins.data_formats.yolo.base.LabelCategories.label_groups"]], "labels (datumaro.plugins.data_formats.yolo.base.labelcategories.labelgroup attribute)": [[374, "datumaro.plugins.data_formats.yolo.base.LabelCategories.LabelGroup.labels"]], "load_image_meta_file() (in module datumaro.plugins.data_formats.yolo.base)": [[374, "datumaro.plugins.data_formats.yolo.base.load_image_meta_file"]], "localize_path() (in module datumaro.plugins.data_formats.yolo.base)": [[374, "datumaro.plugins.data_formats.yolo.base.localize_path"]], "mask (datumaro.plugins.data_formats.yolo.base.annotationtype attribute)": [[374, "datumaro.plugins.data_formats.yolo.base.AnnotationType.mask"]], "media (datumaro.plugins.data_formats.yolo.base.datasetitem attribute)": [[374, "datumaro.plugins.data_formats.yolo.base.DatasetItem.media"]], "media_as() (datumaro.plugins.data_formats.yolo.base.datasetitem method)": [[374, "datumaro.plugins.data_formats.yolo.base.DatasetItem.media_as"]], "media_type() (datumaro.plugins.data_formats.yolo.base.datasetbase method)": [[374, "datumaro.plugins.data_formats.yolo.base.DatasetBase.media_type"]], "move_to_end() (datumaro.plugins.data_formats.yolo.base.ordereddict method)": [[374, "datumaro.plugins.data_formats.yolo.base.OrderedDict.move_to_end"]], "name (datumaro.plugins.data_formats.yolo.base.labelcategories.category attribute)": [[374, "datumaro.plugins.data_formats.yolo.base.LabelCategories.Category.name"]], "name (datumaro.plugins.data_formats.yolo.base.labelcategories.labelgroup attribute)": [[374, "datumaro.plugins.data_formats.yolo.base.LabelCategories.LabelGroup.name"]], "name_from_path() (datumaro.plugins.data_formats.yolo.base.yolostrictbase class method)": [[374, "datumaro.plugins.data_formats.yolo.base.YoloStrictBase.name_from_path"]], "object_id (datumaro.plugins.data_formats.yolo.base.annotation attribute)": [[374, "datumaro.plugins.data_formats.yolo.base.Annotation.object_id"]], "parent (datumaro.plugins.data_formats.yolo.base.labelcategories.category attribute)": [[374, "datumaro.plugins.data_formats.yolo.base.LabelCategories.Category.parent"]], "parse_image_info() (datumaro.plugins.data_formats.yolo.base.yolostrictbase static method)": [[374, "datumaro.plugins.data_formats.yolo.base.YoloStrictBase.parse_image_info"]], "parse_meta_file() (in module datumaro.plugins.data_formats.yolo.base)": [[374, "datumaro.plugins.data_formats.yolo.base.parse_meta_file"]], "points (datumaro.plugins.data_formats.yolo.base.annotationtype attribute)": [[374, "datumaro.plugins.data_formats.yolo.base.AnnotationType.points"]], "polygon (datumaro.plugins.data_formats.yolo.base.annotationtype attribute)": [[374, "datumaro.plugins.data_formats.yolo.base.AnnotationType.polygon"]], "polyline (datumaro.plugins.data_formats.yolo.base.annotationtype attribute)": [[374, "datumaro.plugins.data_formats.yolo.base.AnnotationType.polyline"]], "pop() (datumaro.plugins.data_formats.yolo.base.ordereddict method)": [[374, "datumaro.plugins.data_formats.yolo.base.OrderedDict.pop"]], "popitem() (datumaro.plugins.data_formats.yolo.base.ordereddict method)": [[374, "datumaro.plugins.data_formats.yolo.base.OrderedDict.popitem"]], "progress_reporter (datumaro.plugins.data_formats.yolo.base.importcontext attribute)": [[374, "datumaro.plugins.data_formats.yolo.base.ImportContext.progress_reporter"]], "rotated_bbox (datumaro.plugins.data_formats.yolo.base.annotationtype attribute)": [[374, "datumaro.plugins.data_formats.yolo.base.AnnotationType.rotated_bbox"]], "save() (datumaro.plugins.data_formats.yolo.base.imagefromfile method)": [[374, "datumaro.plugins.data_formats.yolo.base.ImageFromFile.save"]], "set_crypter() (datumaro.plugins.data_formats.yolo.base.image method)": [[374, "datumaro.plugins.data_formats.yolo.base.Image.set_crypter"]], "set_crypter() (datumaro.plugins.data_formats.yolo.base.imagefromfile method)": [[374, "datumaro.plugins.data_formats.yolo.base.ImageFromFile.set_crypter"]], "setdefault() (datumaro.plugins.data_formats.yolo.base.ordereddict method)": [[374, "datumaro.plugins.data_formats.yolo.base.OrderedDict.setdefault"]], "size (datumaro.plugins.data_formats.yolo.base.image property)": [[374, "datumaro.plugins.data_formats.yolo.base.Image.size"]], "size (datumaro.plugins.data_formats.yolo.base.imagefromfile property)": [[374, "datumaro.plugins.data_formats.yolo.base.ImageFromFile.size"]], "split_path() (in module datumaro.plugins.data_formats.yolo.base)": [[374, "datumaro.plugins.data_formats.yolo.base.split_path"]], "subset (datumaro.plugins.data_formats.yolo.base.datasetitem attribute)": [[374, "datumaro.plugins.data_formats.yolo.base.DatasetItem.subset"]], "subset (datumaro.plugins.data_formats.yolo.base.subsetbase property)": [[374, "datumaro.plugins.data_formats.yolo.base.SubsetBase.subset"]], "super_resolution_annotation (datumaro.plugins.data_formats.yolo.base.annotationtype attribute)": [[374, "datumaro.plugins.data_formats.yolo.base.AnnotationType.super_resolution_annotation"]], "tabular (datumaro.plugins.data_formats.yolo.base.annotationtype attribute)": [[374, "datumaro.plugins.data_formats.yolo.base.AnnotationType.tabular"]], "type (datumaro.plugins.data_formats.yolo.base.annotation property)": [[374, "datumaro.plugins.data_formats.yolo.base.Annotation.type"]], "unknown (datumaro.plugins.data_formats.yolo.base.annotationtype attribute)": [[374, "datumaro.plugins.data_formats.yolo.base.AnnotationType.unknown"]], "update() (datumaro.plugins.data_formats.yolo.base.ordereddict method)": [[374, "datumaro.plugins.data_formats.yolo.base.OrderedDict.update"]], "values() (datumaro.plugins.data_formats.yolo.base.ordereddict method)": [[374, "datumaro.plugins.data_formats.yolo.base.OrderedDict.values"]], "w (datumaro.plugins.data_formats.yolo.base.bbox property)": [[374, "id2"]], "w() (datumaro.plugins.data_formats.yolo.base.bbox method)": [[374, "datumaro.plugins.data_formats.yolo.base.Bbox.w"]], "wrap() (datumaro.plugins.data_formats.yolo.base.annotation method)": [[374, "datumaro.plugins.data_formats.yolo.base.Annotation.wrap"]], "wrap() (datumaro.plugins.data_formats.yolo.base.bbox method)": [[374, "datumaro.plugins.data_formats.yolo.base.Bbox.wrap"], [374, "id8"]], "wrap() (datumaro.plugins.data_formats.yolo.base.datasetitem method)": [[374, "datumaro.plugins.data_formats.yolo.base.DatasetItem.wrap"]], "x (datumaro.plugins.data_formats.yolo.base.bbox property)": [[374, "id0"]], "x() (datumaro.plugins.data_formats.yolo.base.bbox method)": [[374, "datumaro.plugins.data_formats.yolo.base.Bbox.x"]], "y (datumaro.plugins.data_formats.yolo.base.bbox property)": [[374, "id1"]], "y() (datumaro.plugins.data_formats.yolo.base.bbox method)": [[374, "datumaro.plugins.data_formats.yolo.base.Bbox.y"]], "default_image_ext (datumaro.plugins.data_formats.yolo.exporter.yoloexporter attribute)": [[375, "datumaro.plugins.data_formats.yolo.exporter.YoloExporter.DEFAULT_IMAGE_EXT"]], "yoloexporter (class in datumaro.plugins.data_formats.yolo.exporter)": [[375, "datumaro.plugins.data_formats.yolo.exporter.YoloExporter"]], "yoloultralyticsexporter (class in datumaro.plugins.data_formats.yolo.exporter)": [[375, "datumaro.plugins.data_formats.yolo.exporter.YoloUltralyticsExporter"]], "build_cmdline_parser() (datumaro.plugins.data_formats.yolo.exporter.yoloexporter class method)": [[375, "datumaro.plugins.data_formats.yolo.exporter.YoloExporter.build_cmdline_parser"]], "can_stream (datumaro.plugins.data_formats.yolo.exporter.yoloexporter property)": [[375, "datumaro.plugins.data_formats.yolo.exporter.YoloExporter.can_stream"]], "datumaro.plugins.data_formats.yolo.exporter": [[375, "module-datumaro.plugins.data_formats.yolo.exporter"]], "must_subset_names (datumaro.plugins.data_formats.yolo.exporter.yoloultralyticsexporter attribute)": [[375, "datumaro.plugins.data_formats.yolo.exporter.YoloUltralyticsExporter.must_subset_names"]], "patch() (datumaro.plugins.data_formats.yolo.exporter.yoloexporter class method)": [[375, "datumaro.plugins.data_formats.yolo.exporter.YoloExporter.patch"]], "patch() (datumaro.plugins.data_formats.yolo.exporter.yoloultralyticsexporter class method)": [[375, "datumaro.plugins.data_formats.yolo.exporter.YoloUltralyticsExporter.patch"]], "default_subset_name (datumaro.plugins.data_formats.yolo.format.yolopath attribute)": [[376, "datumaro.plugins.data_formats.yolo.format.YoloPath.DEFAULT_SUBSET_NAME"]], "meta_file (datumaro.plugins.data_formats.yolo.format.yoloultralyticspath attribute)": [[376, "datumaro.plugins.data_formats.yolo.format.YoloUltralyticsPath.META_FILE"]], "names_file (datumaro.plugins.data_formats.yolo.format.yololoosepath attribute)": [[376, "datumaro.plugins.data_formats.yolo.format.YoloLoosePath.NAMES_FILE"]], "reserved_config_keys (datumaro.plugins.data_formats.yolo.format.yolopath attribute)": [[376, "datumaro.plugins.data_formats.yolo.format.YoloPath.RESERVED_CONFIG_KEYS"]], "subset_names (datumaro.plugins.data_formats.yolo.format.yolopath attribute)": [[376, "datumaro.plugins.data_formats.yolo.format.YoloPath.SUBSET_NAMES"]], "yoloformattype (class in datumaro.plugins.data_formats.yolo.format)": [[376, "datumaro.plugins.data_formats.yolo.format.YoloFormatType"]], "yololoosepath (class in datumaro.plugins.data_formats.yolo.format)": [[376, "datumaro.plugins.data_formats.yolo.format.YoloLoosePath"]], "yolopath (class in datumaro.plugins.data_formats.yolo.format)": [[376, "datumaro.plugins.data_formats.yolo.format.YoloPath"]], "yoloultralyticspath (class in datumaro.plugins.data_formats.yolo.format)": [[376, "datumaro.plugins.data_formats.yolo.format.YoloUltralyticsPath"]], "datumaro.plugins.data_formats.yolo.format": [[376, "module-datumaro.plugins.data_formats.yolo.format"]], "yolo_loose (datumaro.plugins.data_formats.yolo.format.yoloformattype attribute)": [[376, "datumaro.plugins.data_formats.yolo.format.YoloFormatType.yolo_loose"]], "yolo_strict (datumaro.plugins.data_formats.yolo.format.yoloformattype attribute)": [[376, "datumaro.plugins.data_formats.yolo.format.YoloFormatType.yolo_strict"]], "yolo_ultralytics (datumaro.plugins.data_formats.yolo.format.yoloformattype attribute)": [[376, "datumaro.plugins.data_formats.yolo.format.YoloFormatType.yolo_ultralytics"]], "sub_importers (datumaro.plugins.data_formats.yolo.importer.yoloimporter attribute)": [[377, "datumaro.plugins.data_formats.yolo.importer.YoloImporter.SUB_IMPORTERS"]], "yoloimporter (class in datumaro.plugins.data_formats.yolo.importer)": [[377, "datumaro.plugins.data_formats.yolo.importer.YoloImporter"]], "datumaro.plugins.data_formats.yolo.importer": [[377, "module-datumaro.plugins.data_formats.yolo.importer"]], "detect() (datumaro.plugins.data_formats.yolo.importer.yoloimporter class method)": [[377, "datumaro.plugins.data_formats.yolo.importer.YoloImporter.detect"]], "find_sources() (datumaro.plugins.data_formats.yolo.importer.yoloimporter class method)": [[377, "datumaro.plugins.data_formats.yolo.importer.YoloImporter.find_sources"]], "get_extractor_merger() (datumaro.plugins.data_formats.yolo.importer.yoloimporter method)": [[377, "datumaro.plugins.data_formats.yolo.importer.YoloImporter.get_extractor_merger"]], "get_file_extensions() (datumaro.plugins.data_formats.yolo.importer.yoloimporter class method)": [[377, "datumaro.plugins.data_formats.yolo.importer.YoloImporter.get_file_extensions"]], "explorerlauncher (class in datumaro.plugins.explorer)": [[378, "datumaro.plugins.explorer.ExplorerLauncher"]], "datumaro.plugins.explorer": [[378, "module-datumaro.plugins.explorer"]], "infer_item() (datumaro.plugins.explorer.explorerlauncher method)": [[378, "datumaro.plugins.explorer.ExplorerLauncher.infer_item"]], "infer_text() (datumaro.plugins.explorer.explorerlauncher method)": [[378, "datumaro.plugins.explorer.ExplorerLauncher.infer_text"]], "launch() (datumaro.plugins.explorer.explorerlauncher method)": [[378, "datumaro.plugins.explorer.ExplorerLauncher.launch"]], "type_check() (datumaro.plugins.explorer.explorerlauncher method)": [[378, "datumaro.plugins.explorer.ExplorerLauncher.type_check"]], "dmtfdataset (class in datumaro.plugins.framework_converter)": [[379, "datumaro.plugins.framework_converter.DmTfDataset"]], "dmtorchdataset (class in datumaro.plugins.framework_converter)": [[379, "datumaro.plugins.framework_converter.DmTorchDataset"]], "frameworkconverter (class in datumaro.plugins.framework_converter)": [[379, "datumaro.plugins.framework_converter.FrameworkConverter"]], "frameworkconverterfactory (class in datumaro.plugins.framework_converter)": [[379, "datumaro.plugins.framework_converter.FrameworkConverterFactory"]], "batch() (datumaro.plugins.framework_converter.dmtfdataset method)": [[379, "datumaro.plugins.framework_converter.DmTfDataset.batch"]], "create() (datumaro.plugins.framework_converter.dmtfdataset method)": [[379, "datumaro.plugins.framework_converter.DmTfDataset.create"]], "create_converter() (datumaro.plugins.framework_converter.frameworkconverterfactory static method)": [[379, "datumaro.plugins.framework_converter.FrameworkConverterFactory.create_converter"]], "datumaro.plugins.framework_converter": [[379, "module-datumaro.plugins.framework_converter"]], "repeat() (datumaro.plugins.framework_converter.dmtfdataset method)": [[379, "datumaro.plugins.framework_converter.DmTfDataset.repeat"]], "to_framework() (datumaro.plugins.framework_converter.frameworkconverter method)": [[379, "datumaro.plugins.framework_converter.FrameworkConverter.to_framework"]], "inferenceservertype (class in datumaro.plugins.inference_server_plugin)": [[380, "datumaro.plugins.inference_server_plugin.InferenceServerType"]], "ovmslauncher (class in datumaro.plugins.inference_server_plugin)": [[380, "datumaro.plugins.inference_server_plugin.OVMSLauncher"]], "protocoltype (class in datumaro.plugins.inference_server_plugin)": [[380, "datumaro.plugins.inference_server_plugin.ProtocolType"]], "tritonlauncher (class in datumaro.plugins.inference_server_plugin)": [[380, "datumaro.plugins.inference_server_plugin.TritonLauncher"]], "datumaro.plugins.inference_server_plugin": [[380, "module-datumaro.plugins.inference_server_plugin"]], "grpc (datumaro.plugins.inference_server_plugin.protocoltype attribute)": [[380, "datumaro.plugins.inference_server_plugin.ProtocolType.grpc"]], "http (datumaro.plugins.inference_server_plugin.protocoltype attribute)": [[380, "datumaro.plugins.inference_server_plugin.ProtocolType.http"]], "infer() (datumaro.plugins.inference_server_plugin.ovmslauncher method)": [[380, "datumaro.plugins.inference_server_plugin.OVMSLauncher.infer"]], "infer() (datumaro.plugins.inference_server_plugin.tritonlauncher method)": [[380, "datumaro.plugins.inference_server_plugin.TritonLauncher.infer"]], "ovms (datumaro.plugins.inference_server_plugin.inferenceservertype attribute)": [[380, "datumaro.plugins.inference_server_plugin.InferenceServerType.ovms"]], "triton (datumaro.plugins.inference_server_plugin.inferenceservertype attribute)": [[380, "datumaro.plugins.inference_server_plugin.InferenceServerType.triton"]], "inferenceservertype (class in datumaro.plugins.inference_server_plugin.base)": [[381, "datumaro.plugins.inference_server_plugin.base.InferenceServerType"]], "launcherfordedicatedinferenceserver (class in datumaro.plugins.inference_server_plugin.base)": [[381, "datumaro.plugins.inference_server_plugin.base.LauncherForDedicatedInferenceServer"]], "protocoltype (class in datumaro.plugins.inference_server_plugin.base)": [[381, "datumaro.plugins.inference_server_plugin.base.ProtocolType"]], "tlsconfig (class in datumaro.plugins.inference_server_plugin.base)": [[381, "datumaro.plugins.inference_server_plugin.base.TLSConfig"]], "as_dict() (datumaro.plugins.inference_server_plugin.base.tlsconfig method)": [[381, "datumaro.plugins.inference_server_plugin.base.TLSConfig.as_dict"]], "as_grpc_creds() (datumaro.plugins.inference_server_plugin.base.tlsconfig method)": [[381, "datumaro.plugins.inference_server_plugin.base.TLSConfig.as_grpc_creds"]], "client_cert_path (datumaro.plugins.inference_server_plugin.base.tlsconfig attribute)": [[381, "datumaro.plugins.inference_server_plugin.base.TLSConfig.client_cert_path"]], "client_key_path (datumaro.plugins.inference_server_plugin.base.tlsconfig attribute)": [[381, "datumaro.plugins.inference_server_plugin.base.TLSConfig.client_key_path"]], "datumaro.plugins.inference_server_plugin.base": [[381, "module-datumaro.plugins.inference_server_plugin.base"]], "grpc (datumaro.plugins.inference_server_plugin.base.protocoltype attribute)": [[381, "datumaro.plugins.inference_server_plugin.base.ProtocolType.grpc"]], "http (datumaro.plugins.inference_server_plugin.base.protocoltype attribute)": [[381, "datumaro.plugins.inference_server_plugin.base.ProtocolType.http"]], "ovms (datumaro.plugins.inference_server_plugin.base.inferenceservertype attribute)": [[381, "datumaro.plugins.inference_server_plugin.base.InferenceServerType.ovms"]], "server_cert_path (datumaro.plugins.inference_server_plugin.base.tlsconfig attribute)": [[381, "datumaro.plugins.inference_server_plugin.base.TLSConfig.server_cert_path"]], "triton (datumaro.plugins.inference_server_plugin.base.inferenceservertype attribute)": [[381, "datumaro.plugins.inference_server_plugin.base.InferenceServerType.triton"]], "type_check() (datumaro.plugins.inference_server_plugin.base.launcherfordedicatedinferenceserver method)": [[381, "datumaro.plugins.inference_server_plugin.base.LauncherForDedicatedInferenceServer.type_check"]], "grpcclient (class in datumaro.plugins.inference_server_plugin.ovms)": [[382, "datumaro.plugins.inference_server_plugin.ovms.GrpcClient"]], "httpclient (class in datumaro.plugins.inference_server_plugin.ovms)": [[382, "datumaro.plugins.inference_server_plugin.ovms.HttpClient"]], "launcherfordedicatedinferenceserver (class in datumaro.plugins.inference_server_plugin.ovms)": [[382, "datumaro.plugins.inference_server_plugin.ovms.LauncherForDedicatedInferenceServer"]], "ovmslauncher (class in datumaro.plugins.inference_server_plugin.ovms)": [[382, "datumaro.plugins.inference_server_plugin.ovms.OVMSLauncher"]], "protocoltype (class in datumaro.plugins.inference_server_plugin.ovms)": [[382, "datumaro.plugins.inference_server_plugin.ovms.ProtocolType"]], "datumaro.plugins.inference_server_plugin.ovms": [[382, "module-datumaro.plugins.inference_server_plugin.ovms"]], "get_model_metadata() (datumaro.plugins.inference_server_plugin.ovms.grpcclient method)": [[382, "datumaro.plugins.inference_server_plugin.ovms.GrpcClient.get_model_metadata"]], "get_model_metadata() (datumaro.plugins.inference_server_plugin.ovms.httpclient method)": [[382, "datumaro.plugins.inference_server_plugin.ovms.HttpClient.get_model_metadata"]], "get_model_status() (datumaro.plugins.inference_server_plugin.ovms.grpcclient method)": [[382, "datumaro.plugins.inference_server_plugin.ovms.GrpcClient.get_model_status"]], "get_model_status() (datumaro.plugins.inference_server_plugin.ovms.httpclient method)": [[382, "datumaro.plugins.inference_server_plugin.ovms.HttpClient.get_model_status"]], "grpc (datumaro.plugins.inference_server_plugin.ovms.protocoltype attribute)": [[382, "datumaro.plugins.inference_server_plugin.ovms.ProtocolType.grpc"]], "http (datumaro.plugins.inference_server_plugin.ovms.protocoltype attribute)": [[382, "datumaro.plugins.inference_server_plugin.ovms.ProtocolType.http"]], "infer() (datumaro.plugins.inference_server_plugin.ovms.ovmslauncher method)": [[382, "datumaro.plugins.inference_server_plugin.ovms.OVMSLauncher.infer"]], "make_grpc_client() (in module datumaro.plugins.inference_server_plugin.ovms)": [[382, "datumaro.plugins.inference_server_plugin.ovms.make_grpc_client"]], "make_http_client() (in module datumaro.plugins.inference_server_plugin.ovms)": [[382, "datumaro.plugins.inference_server_plugin.ovms.make_http_client"]], "predict() (datumaro.plugins.inference_server_plugin.ovms.grpcclient method)": [[382, "datumaro.plugins.inference_server_plugin.ovms.GrpcClient.predict"]], "predict() (datumaro.plugins.inference_server_plugin.ovms.httpclient method)": [[382, "datumaro.plugins.inference_server_plugin.ovms.HttpClient.predict"]], "type_check() (datumaro.plugins.inference_server_plugin.ovms.launcherfordedicatedinferenceserver method)": [[382, "datumaro.plugins.inference_server_plugin.ovms.LauncherForDedicatedInferenceServer.type_check"]], "datumaro.plugins.inference_server_plugin.samples": [[383, "module-datumaro.plugins.inference_server_plugin.samples"]], "facedetectionmodelinterpreter (class in datumaro.plugins.inference_server_plugin.samples.face_detection)": [[384, "datumaro.plugins.inference_server_plugin.samples.face_detection.FaceDetectionModelInterpreter"]], "conf_threshold (datumaro.plugins.inference_server_plugin.samples.face_detection.facedetectionmodelinterpreter attribute)": [[384, "datumaro.plugins.inference_server_plugin.samples.face_detection.FaceDetectionModelInterpreter.conf_threshold"]], "datumaro.plugins.inference_server_plugin.samples.face_detection": [[384, "module-datumaro.plugins.inference_server_plugin.samples.face_detection"]], "get_categories() (datumaro.plugins.inference_server_plugin.samples.face_detection.facedetectionmodelinterpreter method)": [[384, "datumaro.plugins.inference_server_plugin.samples.face_detection.FaceDetectionModelInterpreter.get_categories"]], "height (datumaro.plugins.inference_server_plugin.samples.face_detection.facedetectionmodelinterpreter attribute)": [[384, "datumaro.plugins.inference_server_plugin.samples.face_detection.FaceDetectionModelInterpreter.height"]], "postprocess() (datumaro.plugins.inference_server_plugin.samples.face_detection.facedetectionmodelinterpreter method)": [[384, "datumaro.plugins.inference_server_plugin.samples.face_detection.FaceDetectionModelInterpreter.postprocess"]], "preprocess() (datumaro.plugins.inference_server_plugin.samples.face_detection.facedetectionmodelinterpreter method)": [[384, "datumaro.plugins.inference_server_plugin.samples.face_detection.FaceDetectionModelInterpreter.preprocess"]], "width (datumaro.plugins.inference_server_plugin.samples.face_detection.facedetectionmodelinterpreter attribute)": [[384, "datumaro.plugins.inference_server_plugin.samples.face_detection.FaceDetectionModelInterpreter.width"]], "launcherfordedicatedinferenceserver (class in datumaro.plugins.inference_server_plugin.triton)": [[385, "datumaro.plugins.inference_server_plugin.triton.LauncherForDedicatedInferenceServer"]], "protocoltype (class in datumaro.plugins.inference_server_plugin.triton)": [[385, "datumaro.plugins.inference_server_plugin.triton.ProtocolType"]], "tritonlauncher (class in datumaro.plugins.inference_server_plugin.triton)": [[385, "datumaro.plugins.inference_server_plugin.triton.TritonLauncher"]], "datumaro.plugins.inference_server_plugin.triton": [[385, "module-datumaro.plugins.inference_server_plugin.triton"]], "grpc (datumaro.plugins.inference_server_plugin.triton.protocoltype attribute)": [[385, "datumaro.plugins.inference_server_plugin.triton.ProtocolType.grpc"]], "http (datumaro.plugins.inference_server_plugin.triton.protocoltype attribute)": [[385, "datumaro.plugins.inference_server_plugin.triton.ProtocolType.http"]], "infer() (datumaro.plugins.inference_server_plugin.triton.tritonlauncher method)": [[385, "datumaro.plugins.inference_server_plugin.triton.TritonLauncher.infer"]], "type_check() (datumaro.plugins.inference_server_plugin.triton.launcherfordedicatedinferenceserver method)": [[385, "datumaro.plugins.inference_server_plugin.triton.LauncherForDedicatedInferenceServer.type_check"]], "missingannotationdetection (class in datumaro.plugins.missing_annotation_detection)": [[386, "datumaro.plugins.missing_annotation_detection.MissingAnnotationDetection"]], "datumaro.plugins.missing_annotation_detection": [[386, "module-datumaro.plugins.missing_annotation_detection"]], "algorithm (class in datumaro.plugins.ndr)": [[387, "datumaro.plugins.ndr.Algorithm"]], "ndr (class in datumaro.plugins.ndr)": [[387, "datumaro.plugins.ndr.NDR"]], "oversamplingmethod (class in datumaro.plugins.ndr)": [[387, "datumaro.plugins.ndr.OverSamplingMethod"]], "undersamplingmethod (class in datumaro.plugins.ndr)": [[387, "datumaro.plugins.ndr.UnderSamplingMethod"]], "build_cmdline_parser() (datumaro.plugins.ndr.ndr class method)": [[387, "datumaro.plugins.ndr.NDR.build_cmdline_parser"]], "datumaro.plugins.ndr": [[387, "module-datumaro.plugins.ndr"]], "gradient (datumaro.plugins.ndr.algorithm attribute)": [[387, "datumaro.plugins.ndr.Algorithm.gradient"]], "inverse (datumaro.plugins.ndr.undersamplingmethod attribute)": [[387, "datumaro.plugins.ndr.UnderSamplingMethod.inverse"]], "random (datumaro.plugins.ndr.oversamplingmethod attribute)": [[387, "datumaro.plugins.ndr.OverSamplingMethod.random"]], "similarity (datumaro.plugins.ndr.oversamplingmethod attribute)": [[387, "datumaro.plugins.ndr.OverSamplingMethod.similarity"]], "uniform (datumaro.plugins.ndr.undersamplingmethod attribute)": [[387, "datumaro.plugins.ndr.UnderSamplingMethod.uniform"]], "datumaro.plugins.openvino_plugin": [[388, "module-datumaro.plugins.openvino_plugin"]], "builtinopenvinomodelinfo (class in datumaro.plugins.openvino_plugin.launcher)": [[389, "datumaro.plugins.openvino_plugin.launcher.BuiltinOpenvinoModelInfo"]], "openvinolauncher (class in datumaro.plugins.openvino_plugin.launcher)": [[389, "datumaro.plugins.openvino_plugin.launcher.OpenvinoLauncher"]], "openvinomodelinfo (class in datumaro.plugins.openvino_plugin.launcher)": [[389, "datumaro.plugins.openvino_plugin.launcher.OpenvinoModelInfo"]], "cli_plugin (datumaro.plugins.openvino_plugin.launcher.openvinolauncher attribute)": [[389, "datumaro.plugins.openvino_plugin.launcher.OpenvinoLauncher.cli_plugin"]], "create_from_model_name() (datumaro.plugins.openvino_plugin.launcher.builtinopenvinomodelinfo class method)": [[389, "datumaro.plugins.openvino_plugin.launcher.BuiltinOpenvinoModelInfo.create_from_model_name"]], "datumaro.plugins.openvino_plugin.launcher": [[389, "module-datumaro.plugins.openvino_plugin.launcher"]], "description (datumaro.plugins.openvino_plugin.launcher.openvinomodelinfo attribute)": [[389, "datumaro.plugins.openvino_plugin.launcher.OpenvinoModelInfo.description"]], "downloadable_models (datumaro.plugins.openvino_plugin.launcher.builtinopenvinomodelinfo attribute)": [[389, "datumaro.plugins.openvino_plugin.launcher.BuiltinOpenvinoModelInfo.downloadable_models"]], "infer() (datumaro.plugins.openvino_plugin.launcher.openvinolauncher method)": [[389, "datumaro.plugins.openvino_plugin.launcher.OpenvinoLauncher.infer"]], "inputs (datumaro.plugins.openvino_plugin.launcher.openvinolauncher property)": [[389, "datumaro.plugins.openvino_plugin.launcher.OpenvinoLauncher.inputs"]], "interpreter (datumaro.plugins.openvino_plugin.launcher.openvinomodelinfo attribute)": [[389, "datumaro.plugins.openvino_plugin.launcher.OpenvinoModelInfo.interpreter"]], "model_dir (datumaro.plugins.openvino_plugin.launcher.openvinomodelinfo attribute)": [[389, "datumaro.plugins.openvino_plugin.launcher.OpenvinoModelInfo.model_dir"]], "outputs (datumaro.plugins.openvino_plugin.launcher.openvinolauncher property)": [[389, "datumaro.plugins.openvino_plugin.launcher.OpenvinoLauncher.outputs"]], "override() (datumaro.plugins.openvino_plugin.launcher.builtinopenvinomodelinfo method)": [[389, "datumaro.plugins.openvino_plugin.launcher.BuiltinOpenvinoModelInfo.override"]], "validate() (datumaro.plugins.openvino_plugin.launcher.openvinomodelinfo method)": [[389, "datumaro.plugins.openvino_plugin.launcher.OpenvinoModelInfo.validate"]], "weights (datumaro.plugins.openvino_plugin.launcher.openvinomodelinfo attribute)": [[389, "datumaro.plugins.openvino_plugin.launcher.OpenvinoModelInfo.weights"]], "datumaro.plugins.openvino_plugin.samples": [[390, "module-datumaro.plugins.openvino_plugin.samples"]], "annotation (class in datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_atss_interp)": [[391, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_atss_interp.Annotation"]], "datasetitem (class in datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_atss_interp)": [[391, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_atss_interp.DatasetItem"]], "imodelinterpreter (class in datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_atss_interp)": [[391, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_atss_interp.IModelInterpreter"]], "image (class in datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_atss_interp)": [[391, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_atss_interp.Image"]], "otxatssmodelinterpreter (class in datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_atss_interp)": [[391, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_atss_interp.OTXATSSModelInterpreter"]], "annotations (datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_atss_interp.datasetitem attribute)": [[391, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_atss_interp.DatasetItem.annotations"]], "as_dict() (datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_atss_interp.annotation method)": [[391, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_atss_interp.Annotation.as_dict"]], "attributes (datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_atss_interp.annotation attribute)": [[391, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_atss_interp.Annotation.attributes"]], "attributes (datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_atss_interp.datasetitem attribute)": [[391, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_atss_interp.DatasetItem.attributes"]], "create_bboxes_with_rescaling() (in module datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_atss_interp)": [[391, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_atss_interp.create_bboxes_with_rescaling"]], "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_atss_interp": [[391, "module-datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_atss_interp"]], "ext (datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_atss_interp.image property)": [[391, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_atss_interp.Image.ext"]], "from_bytes() (datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_atss_interp.image class method)": [[391, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_atss_interp.Image.from_bytes"]], "from_file() (datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_atss_interp.image class method)": [[391, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_atss_interp.Image.from_file"]], "from_numpy() (datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_atss_interp.image class method)": [[391, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_atss_interp.Image.from_numpy"]], "get_categories() (datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_atss_interp.imodelinterpreter method)": [[391, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_atss_interp.IModelInterpreter.get_categories"]], "get_categories() (datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_atss_interp.otxatssmodelinterpreter method)": [[391, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_atss_interp.OTXATSSModelInterpreter.get_categories"]], "group (datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_atss_interp.annotation attribute)": [[391, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_atss_interp.Annotation.group"]], "h_model (datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_atss_interp.otxatssmodelinterpreter attribute)": [[391, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_atss_interp.OTXATSSModelInterpreter.h_model"]], "has_size (datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_atss_interp.image property)": [[391, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_atss_interp.Image.has_size"]], "id (datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_atss_interp.annotation attribute)": [[391, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_atss_interp.Annotation.id"]], "id (datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_atss_interp.datasetitem attribute)": [[391, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_atss_interp.DatasetItem.id"]], "media (datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_atss_interp.datasetitem attribute)": [[391, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_atss_interp.DatasetItem.media"]], "media_as() (datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_atss_interp.datasetitem method)": [[391, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_atss_interp.DatasetItem.media_as"]], "object_id (datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_atss_interp.annotation attribute)": [[391, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_atss_interp.Annotation.object_id"]], "postprocess() (datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_atss_interp.imodelinterpreter method)": [[391, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_atss_interp.IModelInterpreter.postprocess"]], "postprocess() (datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_atss_interp.otxatssmodelinterpreter method)": [[391, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_atss_interp.OTXATSSModelInterpreter.postprocess"]], "preprocess() (datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_atss_interp.imodelinterpreter method)": [[391, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_atss_interp.IModelInterpreter.preprocess"]], "preprocess() (datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_atss_interp.otxatssmodelinterpreter method)": [[391, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_atss_interp.OTXATSSModelInterpreter.preprocess"]], "rescale_img_keeping_aspect_ratio() (in module datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_atss_interp)": [[391, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_atss_interp.rescale_img_keeping_aspect_ratio"]], "set_crypter() (datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_atss_interp.image method)": [[391, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_atss_interp.Image.set_crypter"]], "size (datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_atss_interp.image property)": [[391, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_atss_interp.Image.size"]], "subset (datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_atss_interp.datasetitem attribute)": [[391, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_atss_interp.DatasetItem.subset"]], "type (datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_atss_interp.annotation property)": [[391, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_atss_interp.Annotation.type"]], "w_model (datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_atss_interp.otxatssmodelinterpreter attribute)": [[391, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_atss_interp.OTXATSSModelInterpreter.w_model"]], "wrap() (datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_atss_interp.annotation method)": [[391, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_atss_interp.Annotation.wrap"]], "wrap() (datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_atss_interp.datasetitem method)": [[391, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_atss_interp.DatasetItem.wrap"]], "annotation (class in datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_ssd_interp)": [[392, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_ssd_interp.Annotation"]], "datasetitem (class in datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_ssd_interp)": [[392, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_ssd_interp.DatasetItem"]], "imodelinterpreter (class in datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_ssd_interp)": [[392, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_ssd_interp.IModelInterpreter"]], "image (class in datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_ssd_interp)": [[392, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_ssd_interp.Image"]], "otxssdmodelinterpreter (class in datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_ssd_interp)": [[392, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_ssd_interp.OTXSSDModelInterpreter"]], "annotations (datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_ssd_interp.datasetitem attribute)": [[392, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_ssd_interp.DatasetItem.annotations"]], "as_dict() (datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_ssd_interp.annotation method)": [[392, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_ssd_interp.Annotation.as_dict"]], "attributes (datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_ssd_interp.annotation attribute)": [[392, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_ssd_interp.Annotation.attributes"]], "attributes (datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_ssd_interp.datasetitem attribute)": [[392, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_ssd_interp.DatasetItem.attributes"]], "create_bboxes_with_rescaling() (in module datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_ssd_interp)": [[392, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_ssd_interp.create_bboxes_with_rescaling"]], "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_ssd_interp": [[392, "module-datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_ssd_interp"]], "ext (datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_ssd_interp.image property)": [[392, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_ssd_interp.Image.ext"]], "from_bytes() (datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_ssd_interp.image class method)": [[392, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_ssd_interp.Image.from_bytes"]], "from_file() (datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_ssd_interp.image class method)": [[392, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_ssd_interp.Image.from_file"]], "from_numpy() (datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_ssd_interp.image class method)": [[392, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_ssd_interp.Image.from_numpy"]], "get_categories() (datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_ssd_interp.imodelinterpreter method)": [[392, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_ssd_interp.IModelInterpreter.get_categories"]], "get_categories() (datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_ssd_interp.otxssdmodelinterpreter method)": [[392, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_ssd_interp.OTXSSDModelInterpreter.get_categories"]], "group (datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_ssd_interp.annotation attribute)": [[392, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_ssd_interp.Annotation.group"]], "h_model (datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_ssd_interp.otxssdmodelinterpreter attribute)": [[392, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_ssd_interp.OTXSSDModelInterpreter.h_model"]], "has_size (datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_ssd_interp.image property)": [[392, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_ssd_interp.Image.has_size"]], "id (datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_ssd_interp.annotation attribute)": [[392, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_ssd_interp.Annotation.id"]], "id (datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_ssd_interp.datasetitem attribute)": [[392, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_ssd_interp.DatasetItem.id"]], "media (datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_ssd_interp.datasetitem attribute)": [[392, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_ssd_interp.DatasetItem.media"]], "media_as() (datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_ssd_interp.datasetitem method)": [[392, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_ssd_interp.DatasetItem.media_as"]], "object_id (datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_ssd_interp.annotation attribute)": [[392, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_ssd_interp.Annotation.object_id"]], "postprocess() (datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_ssd_interp.imodelinterpreter method)": [[392, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_ssd_interp.IModelInterpreter.postprocess"]], "postprocess() (datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_ssd_interp.otxssdmodelinterpreter method)": [[392, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_ssd_interp.OTXSSDModelInterpreter.postprocess"]], "preprocess() (datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_ssd_interp.imodelinterpreter method)": [[392, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_ssd_interp.IModelInterpreter.preprocess"]], "preprocess() (datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_ssd_interp.otxssdmodelinterpreter method)": [[392, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_ssd_interp.OTXSSDModelInterpreter.preprocess"]], "rescale_img_keeping_aspect_ratio() (in module datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_ssd_interp)": [[392, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_ssd_interp.rescale_img_keeping_aspect_ratio"]], "set_crypter() (datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_ssd_interp.image method)": [[392, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_ssd_interp.Image.set_crypter"]], "size (datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_ssd_interp.image property)": [[392, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_ssd_interp.Image.size"]], "subset (datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_ssd_interp.datasetitem attribute)": [[392, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_ssd_interp.DatasetItem.subset"]], "type (datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_ssd_interp.annotation property)": [[392, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_ssd_interp.Annotation.type"]], "w_model (datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_ssd_interp.otxssdmodelinterpreter attribute)": [[392, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_ssd_interp.OTXSSDModelInterpreter.w_model"]], "wrap() (datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_ssd_interp.annotation method)": [[392, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_ssd_interp.Annotation.wrap"]], "wrap() (datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_ssd_interp.datasetitem method)": [[392, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_gen3_ssd_interp.DatasetItem.wrap"]], "annotation (class in datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_yolox_interp)": [[393, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_yolox_interp.Annotation"]], "datasetitem (class in datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_yolox_interp)": [[393, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_yolox_interp.DatasetItem"]], "imodelinterpreter (class in datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_yolox_interp)": [[393, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_yolox_interp.IModelInterpreter"]], "image (class in datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_yolox_interp)": [[393, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_yolox_interp.Image"]], "otxyoloxmodelinterpreter (class in datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_yolox_interp)": [[393, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_yolox_interp.OTXYoloXModelInterpreter"]], "annotations (datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_yolox_interp.datasetitem attribute)": [[393, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_yolox_interp.DatasetItem.annotations"]], "as_dict() (datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_yolox_interp.annotation method)": [[393, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_yolox_interp.Annotation.as_dict"]], "attributes (datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_yolox_interp.annotation attribute)": [[393, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_yolox_interp.Annotation.attributes"]], "attributes (datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_yolox_interp.datasetitem attribute)": [[393, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_yolox_interp.DatasetItem.attributes"]], "create_bboxes_with_rescaling() (in module datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_yolox_interp)": [[393, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_yolox_interp.create_bboxes_with_rescaling"]], "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_yolox_interp": [[393, "module-datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_yolox_interp"]], "ext (datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_yolox_interp.image property)": [[393, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_yolox_interp.Image.ext"]], "from_bytes() (datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_yolox_interp.image class method)": [[393, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_yolox_interp.Image.from_bytes"]], "from_file() (datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_yolox_interp.image class method)": [[393, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_yolox_interp.Image.from_file"]], "from_numpy() (datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_yolox_interp.image class method)": [[393, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_yolox_interp.Image.from_numpy"]], "get_categories() (datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_yolox_interp.imodelinterpreter method)": [[393, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_yolox_interp.IModelInterpreter.get_categories"]], "get_categories() (datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_yolox_interp.otxyoloxmodelinterpreter method)": [[393, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_yolox_interp.OTXYoloXModelInterpreter.get_categories"]], "group (datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_yolox_interp.annotation attribute)": [[393, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_yolox_interp.Annotation.group"]], "h_model (datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_yolox_interp.otxyoloxmodelinterpreter attribute)": [[393, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_yolox_interp.OTXYoloXModelInterpreter.h_model"]], "has_size (datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_yolox_interp.image property)": [[393, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_yolox_interp.Image.has_size"]], "id (datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_yolox_interp.annotation attribute)": [[393, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_yolox_interp.Annotation.id"]], "id (datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_yolox_interp.datasetitem attribute)": [[393, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_yolox_interp.DatasetItem.id"]], "media (datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_yolox_interp.datasetitem attribute)": [[393, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_yolox_interp.DatasetItem.media"]], "media_as() (datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_yolox_interp.datasetitem method)": [[393, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_yolox_interp.DatasetItem.media_as"]], "object_id (datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_yolox_interp.annotation attribute)": [[393, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_yolox_interp.Annotation.object_id"]], "postprocess() (datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_yolox_interp.imodelinterpreter method)": [[393, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_yolox_interp.IModelInterpreter.postprocess"]], "postprocess() (datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_yolox_interp.otxyoloxmodelinterpreter method)": [[393, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_yolox_interp.OTXYoloXModelInterpreter.postprocess"]], "preprocess() (datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_yolox_interp.imodelinterpreter method)": [[393, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_yolox_interp.IModelInterpreter.preprocess"]], "preprocess() (datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_yolox_interp.otxyoloxmodelinterpreter method)": [[393, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_yolox_interp.OTXYoloXModelInterpreter.preprocess"]], "rescale_img_keeping_aspect_ratio() (in module datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_yolox_interp)": [[393, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_yolox_interp.rescale_img_keeping_aspect_ratio"]], "set_crypter() (datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_yolox_interp.image method)": [[393, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_yolox_interp.Image.set_crypter"]], "size (datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_yolox_interp.image property)": [[393, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_yolox_interp.Image.size"]], "subset (datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_yolox_interp.datasetitem attribute)": [[393, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_yolox_interp.DatasetItem.subset"]], "type (datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_yolox_interp.annotation property)": [[393, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_yolox_interp.Annotation.type"]], "w_model (datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_yolox_interp.otxyoloxmodelinterpreter attribute)": [[393, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_yolox_interp.OTXYoloXModelInterpreter.w_model"]], "wrap() (datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_yolox_interp.annotation method)": [[393, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_yolox_interp.Annotation.wrap"]], "wrap() (datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_yolox_interp.datasetitem method)": [[393, "datumaro.plugins.openvino_plugin.samples.otx_custom_object_detection_yolox_interp.DatasetItem.wrap"]], "rescaledimage (class in datumaro.plugins.openvino_plugin.samples.utils)": [[394, "datumaro.plugins.openvino_plugin.samples.utils.RescaledImage"]], "create_bboxes_with_rescaling() (in module datumaro.plugins.openvino_plugin.samples.utils)": [[394, "datumaro.plugins.openvino_plugin.samples.utils.create_bboxes_with_rescaling"]], "datumaro.plugins.openvino_plugin.samples.utils": [[394, "module-datumaro.plugins.openvino_plugin.samples.utils"]], "gen_hash_key() (in module datumaro.plugins.openvino_plugin.samples.utils)": [[394, "datumaro.plugins.openvino_plugin.samples.utils.gen_hash_key"]], "image (datumaro.plugins.openvino_plugin.samples.utils.rescaledimage attribute)": [[394, "datumaro.plugins.openvino_plugin.samples.utils.RescaledImage.image"], [394, "id0"]], "rescale_img_keeping_aspect_ratio() (in module datumaro.plugins.openvino_plugin.samples.utils)": [[394, "datumaro.plugins.openvino_plugin.samples.utils.rescale_img_keeping_aspect_ratio"]], "scale (datumaro.plugins.openvino_plugin.samples.utils.rescaledimage attribute)": [[394, "datumaro.plugins.openvino_plugin.samples.utils.RescaledImage.scale"], [394, "id1"]], "shiftlauncher (class in datumaro.plugins.openvino_plugin.shift_launcher)": [[395, "datumaro.plugins.openvino_plugin.shift_launcher.ShiftLauncher"]], "datumaro.plugins.openvino_plugin.shift_launcher": [[395, "module-datumaro.plugins.openvino_plugin.shift_launcher"]], "type_check() (datumaro.plugins.openvino_plugin.shift_launcher.shiftlauncher method)": [[395, "datumaro.plugins.openvino_plugin.shift_launcher.ShiftLauncher.type_check"]], "samautomaticmaskgeneration (class in datumaro.plugins.sam_transforms)": [[396, "datumaro.plugins.sam_transforms.SAMAutomaticMaskGeneration"]], "sambboxtoinstancemask (class in datumaro.plugins.sam_transforms)": [[396, "datumaro.plugins.sam_transforms.SAMBboxToInstanceMask"]], "datumaro.plugins.sam_transforms": [[396, "module-datumaro.plugins.sam_transforms"]], "points_per_side (datumaro.plugins.sam_transforms.samautomaticmaskgeneration property)": [[396, "datumaro.plugins.sam_transforms.SAMAutomaticMaskGeneration.points_per_side"]], "amgmasks (class in datumaro.plugins.sam_transforms.automatic_mask_gen)": [[397, "datumaro.plugins.sam_transforms.automatic_mask_gen.AMGMasks"]], "amgpoints (class in datumaro.plugins.sam_transforms.automatic_mask_gen)": [[397, "datumaro.plugins.sam_transforms.automatic_mask_gen.AMGPoints"]], "cliplugin (class in datumaro.plugins.sam_transforms.automatic_mask_gen)": [[397, "datumaro.plugins.sam_transforms.automatic_mask_gen.CliPlugin"]], "datasetitem (class in datumaro.plugins.sam_transforms.automatic_mask_gen)": [[397, "datumaro.plugins.sam_transforms.automatic_mask_gen.DatasetItem"]], "idataset (class in datumaro.plugins.sam_transforms.automatic_mask_gen)": [[397, "datumaro.plugins.sam_transforms.automatic_mask_gen.IDataset"]], "inferenceservertype (class in datumaro.plugins.sam_transforms.automatic_mask_gen)": [[397, "datumaro.plugins.sam_transforms.automatic_mask_gen.InferenceServerType"]], "modeltransform (class in datumaro.plugins.sam_transforms.automatic_mask_gen)": [[397, "datumaro.plugins.sam_transforms.automatic_mask_gen.ModelTransform"]], "name (datumaro.plugins.sam_transforms.automatic_mask_gen.cliplugin attribute)": [[397, "datumaro.plugins.sam_transforms.automatic_mask_gen.CliPlugin.NAME"]], "ovmslauncher (class in datumaro.plugins.sam_transforms.automatic_mask_gen)": [[397, "datumaro.plugins.sam_transforms.automatic_mask_gen.OVMSLauncher"]], "protocoltype (class in datumaro.plugins.sam_transforms.automatic_mask_gen)": [[397, "datumaro.plugins.sam_transforms.automatic_mask_gen.ProtocolType"]], "samautomaticmaskgeneration (class in datumaro.plugins.sam_transforms.automatic_mask_gen)": [[397, "datumaro.plugins.sam_transforms.automatic_mask_gen.SAMAutomaticMaskGeneration"]], "tlsconfig (class in datumaro.plugins.sam_transforms.automatic_mask_gen)": [[397, "datumaro.plugins.sam_transforms.automatic_mask_gen.TLSConfig"]], "tritonlauncher (class in datumaro.plugins.sam_transforms.automatic_mask_gen)": [[397, "datumaro.plugins.sam_transforms.automatic_mask_gen.TritonLauncher"]], "ann_types() (datumaro.plugins.sam_transforms.automatic_mask_gen.idataset method)": [[397, "datumaro.plugins.sam_transforms.automatic_mask_gen.IDataset.ann_types"]], "annotations (datumaro.plugins.sam_transforms.automatic_mask_gen.datasetitem attribute)": [[397, "datumaro.plugins.sam_transforms.automatic_mask_gen.DatasetItem.annotations"]], "as_dict() (datumaro.plugins.sam_transforms.automatic_mask_gen.tlsconfig method)": [[397, "datumaro.plugins.sam_transforms.automatic_mask_gen.TLSConfig.as_dict"]], "as_grpc_creds() (datumaro.plugins.sam_transforms.automatic_mask_gen.tlsconfig method)": [[397, "datumaro.plugins.sam_transforms.automatic_mask_gen.TLSConfig.as_grpc_creds"]], "attributes (datumaro.plugins.sam_transforms.automatic_mask_gen.datasetitem attribute)": [[397, "datumaro.plugins.sam_transforms.automatic_mask_gen.DatasetItem.attributes"]], "build_cmdline_parser() (datumaro.plugins.sam_transforms.automatic_mask_gen.cliplugin class method)": [[397, "datumaro.plugins.sam_transforms.automatic_mask_gen.CliPlugin.build_cmdline_parser"]], "cat() (datumaro.plugins.sam_transforms.automatic_mask_gen.amgmasks class method)": [[397, "datumaro.plugins.sam_transforms.automatic_mask_gen.AMGMasks.cat"]], "categories() (datumaro.plugins.sam_transforms.automatic_mask_gen.idataset method)": [[397, "datumaro.plugins.sam_transforms.automatic_mask_gen.IDataset.categories"]], "categories() (datumaro.plugins.sam_transforms.automatic_mask_gen.modeltransform method)": [[397, "datumaro.plugins.sam_transforms.automatic_mask_gen.ModelTransform.categories"]], "client_cert_path (datumaro.plugins.sam_transforms.automatic_mask_gen.tlsconfig attribute)": [[397, "datumaro.plugins.sam_transforms.automatic_mask_gen.TLSConfig.client_cert_path"]], "client_key_path (datumaro.plugins.sam_transforms.automatic_mask_gen.tlsconfig attribute)": [[397, "datumaro.plugins.sam_transforms.automatic_mask_gen.TLSConfig.client_key_path"]], "datumaro.plugins.sam_transforms.automatic_mask_gen": [[397, "module-datumaro.plugins.sam_transforms.automatic_mask_gen"]], "get() (datumaro.plugins.sam_transforms.automatic_mask_gen.idataset method)": [[397, "datumaro.plugins.sam_transforms.automatic_mask_gen.IDataset.get"]], "get_subset() (datumaro.plugins.sam_transforms.automatic_mask_gen.idataset method)": [[397, "datumaro.plugins.sam_transforms.automatic_mask_gen.IDataset.get_subset"]], "get_subset() (datumaro.plugins.sam_transforms.automatic_mask_gen.modeltransform method)": [[397, "datumaro.plugins.sam_transforms.automatic_mask_gen.ModelTransform.get_subset"]], "grpc (datumaro.plugins.sam_transforms.automatic_mask_gen.protocoltype attribute)": [[397, "datumaro.plugins.sam_transforms.automatic_mask_gen.ProtocolType.grpc"]], "http (datumaro.plugins.sam_transforms.automatic_mask_gen.protocoltype attribute)": [[397, "datumaro.plugins.sam_transforms.automatic_mask_gen.ProtocolType.http"]], "id (datumaro.plugins.sam_transforms.automatic_mask_gen.datasetitem attribute)": [[397, "datumaro.plugins.sam_transforms.automatic_mask_gen.DatasetItem.id"]], "infer() (datumaro.plugins.sam_transforms.automatic_mask_gen.ovmslauncher method)": [[397, "datumaro.plugins.sam_transforms.automatic_mask_gen.OVMSLauncher.infer"]], "infer() (datumaro.plugins.sam_transforms.automatic_mask_gen.tritonlauncher method)": [[397, "datumaro.plugins.sam_transforms.automatic_mask_gen.TritonLauncher.infer"]], "infos() (datumaro.plugins.sam_transforms.automatic_mask_gen.idataset method)": [[397, "datumaro.plugins.sam_transforms.automatic_mask_gen.IDataset.infos"]], "infos() (datumaro.plugins.sam_transforms.automatic_mask_gen.modeltransform method)": [[397, "datumaro.plugins.sam_transforms.automatic_mask_gen.ModelTransform.infos"]], "iou_preds (datumaro.plugins.sam_transforms.automatic_mask_gen.amgmasks attribute)": [[397, "datumaro.plugins.sam_transforms.automatic_mask_gen.AMGMasks.iou_preds"], [397, "id1"]], "is_stream (datumaro.plugins.sam_transforms.automatic_mask_gen.idataset property)": [[397, "datumaro.plugins.sam_transforms.automatic_mask_gen.IDataset.is_stream"]], "masks (datumaro.plugins.sam_transforms.automatic_mask_gen.amgmasks attribute)": [[397, "datumaro.plugins.sam_transforms.automatic_mask_gen.AMGMasks.masks"], [397, "id0"]], "media (datumaro.plugins.sam_transforms.automatic_mask_gen.datasetitem attribute)": [[397, "datumaro.plugins.sam_transforms.automatic_mask_gen.DatasetItem.media"]], "media_as() (datumaro.plugins.sam_transforms.automatic_mask_gen.datasetitem method)": [[397, "datumaro.plugins.sam_transforms.automatic_mask_gen.DatasetItem.media_as"]], "media_type() (datumaro.plugins.sam_transforms.automatic_mask_gen.idataset method)": [[397, "datumaro.plugins.sam_transforms.automatic_mask_gen.IDataset.media_type"]], "ovms (datumaro.plugins.sam_transforms.automatic_mask_gen.inferenceservertype attribute)": [[397, "datumaro.plugins.sam_transforms.automatic_mask_gen.InferenceServerType.ovms"]], "parse_cmdline() (datumaro.plugins.sam_transforms.automatic_mask_gen.cliplugin class method)": [[397, "datumaro.plugins.sam_transforms.automatic_mask_gen.CliPlugin.parse_cmdline"]], "points (datumaro.plugins.sam_transforms.automatic_mask_gen.amgpoints attribute)": [[397, "datumaro.plugins.sam_transforms.automatic_mask_gen.AMGPoints.points"], [397, "id4"]], "points_per_side (datumaro.plugins.sam_transforms.automatic_mask_gen.samautomaticmaskgeneration property)": [[397, "datumaro.plugins.sam_transforms.automatic_mask_gen.SAMAutomaticMaskGeneration.points_per_side"]], "postprocess() (datumaro.plugins.sam_transforms.automatic_mask_gen.amgmasks method)": [[397, "datumaro.plugins.sam_transforms.automatic_mask_gen.AMGMasks.postprocess"]], "server_cert_path (datumaro.plugins.sam_transforms.automatic_mask_gen.tlsconfig attribute)": [[397, "datumaro.plugins.sam_transforms.automatic_mask_gen.TLSConfig.server_cert_path"]], "subset (datumaro.plugins.sam_transforms.automatic_mask_gen.datasetitem attribute)": [[397, "datumaro.plugins.sam_transforms.automatic_mask_gen.DatasetItem.subset"]], "subsets() (datumaro.plugins.sam_transforms.automatic_mask_gen.idataset method)": [[397, "datumaro.plugins.sam_transforms.automatic_mask_gen.IDataset.subsets"]], "transform_item() (datumaro.plugins.sam_transforms.automatic_mask_gen.modeltransform method)": [[397, "datumaro.plugins.sam_transforms.automatic_mask_gen.ModelTransform.transform_item"]], "triton (datumaro.plugins.sam_transforms.automatic_mask_gen.inferenceservertype attribute)": [[397, "datumaro.plugins.sam_transforms.automatic_mask_gen.InferenceServerType.triton"]], "wrap() (datumaro.plugins.sam_transforms.automatic_mask_gen.datasetitem method)": [[397, "datumaro.plugins.sam_transforms.automatic_mask_gen.DatasetItem.wrap"]], "bbox (class in datumaro.plugins.sam_transforms.bbox_to_inst_mask)": [[398, "datumaro.plugins.sam_transforms.bbox_to_inst_mask.Bbox"]], "cliplugin (class in datumaro.plugins.sam_transforms.bbox_to_inst_mask)": [[398, "datumaro.plugins.sam_transforms.bbox_to_inst_mask.CliPlugin"]], "datasetitem (class in datumaro.plugins.sam_transforms.bbox_to_inst_mask)": [[398, "datumaro.plugins.sam_transforms.bbox_to_inst_mask.DatasetItem"]], "idataset (class in datumaro.plugins.sam_transforms.bbox_to_inst_mask)": [[398, "datumaro.plugins.sam_transforms.bbox_to_inst_mask.IDataset"]], "inferenceservertype (class in datumaro.plugins.sam_transforms.bbox_to_inst_mask)": [[398, "datumaro.plugins.sam_transforms.bbox_to_inst_mask.InferenceServerType"]], "mask (class in datumaro.plugins.sam_transforms.bbox_to_inst_mask)": [[398, "datumaro.plugins.sam_transforms.bbox_to_inst_mask.Mask"]], "modeltransform (class in datumaro.plugins.sam_transforms.bbox_to_inst_mask)": [[398, "datumaro.plugins.sam_transforms.bbox_to_inst_mask.ModelTransform"]], "name (datumaro.plugins.sam_transforms.bbox_to_inst_mask.cliplugin attribute)": [[398, "datumaro.plugins.sam_transforms.bbox_to_inst_mask.CliPlugin.NAME"]], "ovmslauncher (class in datumaro.plugins.sam_transforms.bbox_to_inst_mask)": [[398, "datumaro.plugins.sam_transforms.bbox_to_inst_mask.OVMSLauncher"]], "polygon (class in datumaro.plugins.sam_transforms.bbox_to_inst_mask)": [[398, "datumaro.plugins.sam_transforms.bbox_to_inst_mask.Polygon"]], "protocoltype (class in datumaro.plugins.sam_transforms.bbox_to_inst_mask)": [[398, "datumaro.plugins.sam_transforms.bbox_to_inst_mask.ProtocolType"]], "sambboxtoinstancemask (class in datumaro.plugins.sam_transforms.bbox_to_inst_mask)": [[398, "datumaro.plugins.sam_transforms.bbox_to_inst_mask.SAMBboxToInstanceMask"]], "tlsconfig (class in datumaro.plugins.sam_transforms.bbox_to_inst_mask)": [[398, "datumaro.plugins.sam_transforms.bbox_to_inst_mask.TLSConfig"]], "tritonlauncher (class in datumaro.plugins.sam_transforms.bbox_to_inst_mask)": [[398, "datumaro.plugins.sam_transforms.bbox_to_inst_mask.TritonLauncher"]], "__attrs_post_init__() (datumaro.plugins.sam_transforms.bbox_to_inst_mask.polygon method)": [[398, "datumaro.plugins.sam_transforms.bbox_to_inst_mask.Polygon.__attrs_post_init__"]], "__eq__() (datumaro.plugins.sam_transforms.bbox_to_inst_mask.polygon method)": [[398, "datumaro.plugins.sam_transforms.bbox_to_inst_mask.Polygon.__eq__"]], "__init__() (datumaro.plugins.sam_transforms.bbox_to_inst_mask.bbox method)": [[398, "datumaro.plugins.sam_transforms.bbox_to_inst_mask.Bbox.__init__"]], "_get_shoelace_area() (datumaro.plugins.sam_transforms.bbox_to_inst_mask.polygon method)": [[398, "datumaro.plugins.sam_transforms.bbox_to_inst_mask.Polygon._get_shoelace_area"]], "_type (datumaro.plugins.sam_transforms.bbox_to_inst_mask.bbox attribute)": [[398, "datumaro.plugins.sam_transforms.bbox_to_inst_mask.Bbox._type"]], "_type (datumaro.plugins.sam_transforms.bbox_to_inst_mask.polygon attribute)": [[398, "datumaro.plugins.sam_transforms.bbox_to_inst_mask.Polygon._type"]], "ann_types() (datumaro.plugins.sam_transforms.bbox_to_inst_mask.idataset method)": [[398, "datumaro.plugins.sam_transforms.bbox_to_inst_mask.IDataset.ann_types"]], "annotations (datumaro.plugins.sam_transforms.bbox_to_inst_mask.datasetitem attribute)": [[398, "datumaro.plugins.sam_transforms.bbox_to_inst_mask.DatasetItem.annotations"]], "as_class_mask() (datumaro.plugins.sam_transforms.bbox_to_inst_mask.mask method)": [[398, "datumaro.plugins.sam_transforms.bbox_to_inst_mask.Mask.as_class_mask"]], "as_dict() (datumaro.plugins.sam_transforms.bbox_to_inst_mask.tlsconfig method)": [[398, "datumaro.plugins.sam_transforms.bbox_to_inst_mask.TLSConfig.as_dict"]], "as_grpc_creds() (datumaro.plugins.sam_transforms.bbox_to_inst_mask.tlsconfig method)": [[398, "datumaro.plugins.sam_transforms.bbox_to_inst_mask.TLSConfig.as_grpc_creds"]], "as_instance_mask() (datumaro.plugins.sam_transforms.bbox_to_inst_mask.mask method)": [[398, "datumaro.plugins.sam_transforms.bbox_to_inst_mask.Mask.as_instance_mask"]], "as_polygon() (datumaro.plugins.sam_transforms.bbox_to_inst_mask.bbox method)": [[398, "datumaro.plugins.sam_transforms.bbox_to_inst_mask.Bbox.as_polygon"], [398, "id6"]], "as_polygon() (datumaro.plugins.sam_transforms.bbox_to_inst_mask.polygon method)": [[398, "datumaro.plugins.sam_transforms.bbox_to_inst_mask.Polygon.as_polygon"], [398, "id10"]], "attributes (datumaro.plugins.sam_transforms.bbox_to_inst_mask.datasetitem attribute)": [[398, "datumaro.plugins.sam_transforms.bbox_to_inst_mask.DatasetItem.attributes"]], "build_cmdline_parser() (datumaro.plugins.sam_transforms.bbox_to_inst_mask.cliplugin class method)": [[398, "datumaro.plugins.sam_transforms.bbox_to_inst_mask.CliPlugin.build_cmdline_parser"]], "categories() (datumaro.plugins.sam_transforms.bbox_to_inst_mask.idataset method)": [[398, "datumaro.plugins.sam_transforms.bbox_to_inst_mask.IDataset.categories"]], "categories() (datumaro.plugins.sam_transforms.bbox_to_inst_mask.modeltransform method)": [[398, "datumaro.plugins.sam_transforms.bbox_to_inst_mask.ModelTransform.categories"]], "client_cert_path (datumaro.plugins.sam_transforms.bbox_to_inst_mask.tlsconfig attribute)": [[398, "datumaro.plugins.sam_transforms.bbox_to_inst_mask.TLSConfig.client_cert_path"]], "client_key_path (datumaro.plugins.sam_transforms.bbox_to_inst_mask.tlsconfig attribute)": [[398, "datumaro.plugins.sam_transforms.bbox_to_inst_mask.TLSConfig.client_key_path"]], "datumaro.plugins.sam_transforms.bbox_to_inst_mask": [[398, "module-datumaro.plugins.sam_transforms.bbox_to_inst_mask"]], "extract_contours() (in module datumaro.plugins.sam_transforms.bbox_to_inst_mask)": [[398, "datumaro.plugins.sam_transforms.bbox_to_inst_mask.extract_contours"]], "get() (datumaro.plugins.sam_transforms.bbox_to_inst_mask.idataset method)": [[398, "datumaro.plugins.sam_transforms.bbox_to_inst_mask.IDataset.get"]], "get_area() (datumaro.plugins.sam_transforms.bbox_to_inst_mask.bbox method)": [[398, "datumaro.plugins.sam_transforms.bbox_to_inst_mask.Bbox.get_area"], [398, "id4"]], "get_area() (datumaro.plugins.sam_transforms.bbox_to_inst_mask.mask method)": [[398, "datumaro.plugins.sam_transforms.bbox_to_inst_mask.Mask.get_area"]], "get_area() (datumaro.plugins.sam_transforms.bbox_to_inst_mask.polygon method)": [[398, "datumaro.plugins.sam_transforms.bbox_to_inst_mask.Polygon.get_area"], [398, "id9"]], "get_bbox() (datumaro.plugins.sam_transforms.bbox_to_inst_mask.bbox method)": [[398, "datumaro.plugins.sam_transforms.bbox_to_inst_mask.Bbox.get_bbox"], [398, "id5"]], "get_bbox() (datumaro.plugins.sam_transforms.bbox_to_inst_mask.mask method)": [[398, "datumaro.plugins.sam_transforms.bbox_to_inst_mask.Mask.get_bbox"]], "get_subset() (datumaro.plugins.sam_transforms.bbox_to_inst_mask.idataset method)": [[398, "datumaro.plugins.sam_transforms.bbox_to_inst_mask.IDataset.get_subset"]], "get_subset() (datumaro.plugins.sam_transforms.bbox_to_inst_mask.modeltransform method)": [[398, "datumaro.plugins.sam_transforms.bbox_to_inst_mask.ModelTransform.get_subset"]], "grpc (datumaro.plugins.sam_transforms.bbox_to_inst_mask.protocoltype attribute)": [[398, "datumaro.plugins.sam_transforms.bbox_to_inst_mask.ProtocolType.grpc"]], "h (datumaro.plugins.sam_transforms.bbox_to_inst_mask.bbox property)": [[398, "id3"]], "h() (datumaro.plugins.sam_transforms.bbox_to_inst_mask.bbox method)": [[398, "datumaro.plugins.sam_transforms.bbox_to_inst_mask.Bbox.h"]], "http (datumaro.plugins.sam_transforms.bbox_to_inst_mask.protocoltype attribute)": [[398, "datumaro.plugins.sam_transforms.bbox_to_inst_mask.ProtocolType.http"]], "id (datumaro.plugins.sam_transforms.bbox_to_inst_mask.datasetitem attribute)": [[398, "datumaro.plugins.sam_transforms.bbox_to_inst_mask.DatasetItem.id"]], "image (datumaro.plugins.sam_transforms.bbox_to_inst_mask.mask property)": [[398, "datumaro.plugins.sam_transforms.bbox_to_inst_mask.Mask.image"]], "infer() (datumaro.plugins.sam_transforms.bbox_to_inst_mask.ovmslauncher method)": [[398, "datumaro.plugins.sam_transforms.bbox_to_inst_mask.OVMSLauncher.infer"]], "infer() (datumaro.plugins.sam_transforms.bbox_to_inst_mask.tritonlauncher method)": [[398, "datumaro.plugins.sam_transforms.bbox_to_inst_mask.TritonLauncher.infer"]], "infos() (datumaro.plugins.sam_transforms.bbox_to_inst_mask.idataset method)": [[398, "datumaro.plugins.sam_transforms.bbox_to_inst_mask.IDataset.infos"]], "infos() (datumaro.plugins.sam_transforms.bbox_to_inst_mask.modeltransform method)": [[398, "datumaro.plugins.sam_transforms.bbox_to_inst_mask.ModelTransform.infos"]], "iou() (datumaro.plugins.sam_transforms.bbox_to_inst_mask.bbox method)": [[398, "datumaro.plugins.sam_transforms.bbox_to_inst_mask.Bbox.iou"], [398, "id7"]], "is_stream (datumaro.plugins.sam_transforms.bbox_to_inst_mask.idataset property)": [[398, "datumaro.plugins.sam_transforms.bbox_to_inst_mask.IDataset.is_stream"]], "label (datumaro.plugins.sam_transforms.bbox_to_inst_mask.mask attribute)": [[398, "datumaro.plugins.sam_transforms.bbox_to_inst_mask.Mask.label"]], "media (datumaro.plugins.sam_transforms.bbox_to_inst_mask.datasetitem attribute)": [[398, "datumaro.plugins.sam_transforms.bbox_to_inst_mask.DatasetItem.media"]], "media_as() (datumaro.plugins.sam_transforms.bbox_to_inst_mask.datasetitem method)": [[398, "datumaro.plugins.sam_transforms.bbox_to_inst_mask.DatasetItem.media_as"]], "media_type() (datumaro.plugins.sam_transforms.bbox_to_inst_mask.idataset method)": [[398, "datumaro.plugins.sam_transforms.bbox_to_inst_mask.IDataset.media_type"]], "ovms (datumaro.plugins.sam_transforms.bbox_to_inst_mask.inferenceservertype attribute)": [[398, "datumaro.plugins.sam_transforms.bbox_to_inst_mask.InferenceServerType.ovms"]], "paint() (datumaro.plugins.sam_transforms.bbox_to_inst_mask.mask method)": [[398, "datumaro.plugins.sam_transforms.bbox_to_inst_mask.Mask.paint"]], "parse_cmdline() (datumaro.plugins.sam_transforms.bbox_to_inst_mask.cliplugin class method)": [[398, "datumaro.plugins.sam_transforms.bbox_to_inst_mask.CliPlugin.parse_cmdline"]], "server_cert_path (datumaro.plugins.sam_transforms.bbox_to_inst_mask.tlsconfig attribute)": [[398, "datumaro.plugins.sam_transforms.bbox_to_inst_mask.TLSConfig.server_cert_path"]], "subset (datumaro.plugins.sam_transforms.bbox_to_inst_mask.datasetitem attribute)": [[398, "datumaro.plugins.sam_transforms.bbox_to_inst_mask.DatasetItem.subset"]], "subsets() (datumaro.plugins.sam_transforms.bbox_to_inst_mask.idataset method)": [[398, "datumaro.plugins.sam_transforms.bbox_to_inst_mask.IDataset.subsets"]], "transform_item() (datumaro.plugins.sam_transforms.bbox_to_inst_mask.modeltransform method)": [[398, "datumaro.plugins.sam_transforms.bbox_to_inst_mask.ModelTransform.transform_item"]], "triton (datumaro.plugins.sam_transforms.bbox_to_inst_mask.inferenceservertype attribute)": [[398, "datumaro.plugins.sam_transforms.bbox_to_inst_mask.InferenceServerType.triton"]], "w (datumaro.plugins.sam_transforms.bbox_to_inst_mask.bbox property)": [[398, "id2"]], "w() (datumaro.plugins.sam_transforms.bbox_to_inst_mask.bbox method)": [[398, "datumaro.plugins.sam_transforms.bbox_to_inst_mask.Bbox.w"]], "wrap() (datumaro.plugins.sam_transforms.bbox_to_inst_mask.bbox method)": [[398, "datumaro.plugins.sam_transforms.bbox_to_inst_mask.Bbox.wrap"], [398, "id8"]], "wrap() (datumaro.plugins.sam_transforms.bbox_to_inst_mask.datasetitem method)": [[398, "datumaro.plugins.sam_transforms.bbox_to_inst_mask.DatasetItem.wrap"]], "x (datumaro.plugins.sam_transforms.bbox_to_inst_mask.bbox property)": [[398, "id0"]], "x() (datumaro.plugins.sam_transforms.bbox_to_inst_mask.bbox method)": [[398, "datumaro.plugins.sam_transforms.bbox_to_inst_mask.Bbox.x"]], "y (datumaro.plugins.sam_transforms.bbox_to_inst_mask.bbox property)": [[398, "id1"]], "y() (datumaro.plugins.sam_transforms.bbox_to_inst_mask.bbox method)": [[398, "datumaro.plugins.sam_transforms.bbox_to_inst_mask.Bbox.y"]], "z_order (datumaro.plugins.sam_transforms.bbox_to_inst_mask.mask attribute)": [[398, "datumaro.plugins.sam_transforms.bbox_to_inst_mask.Mask.z_order"]], "datumaro.plugins.sam_transforms.interpreters": [[399, "module-datumaro.plugins.sam_transforms.interpreters"]], "amgmasks (class in datumaro.plugins.sam_transforms.interpreters.sam_decoder_for_amg)": [[400, "datumaro.plugins.sam_transforms.interpreters.sam_decoder_for_amg.AMGMasks"]], "amgpoints (class in datumaro.plugins.sam_transforms.interpreters.sam_decoder_for_amg)": [[400, "datumaro.plugins.sam_transforms.interpreters.sam_decoder_for_amg.AMGPoints"]], "samdecoderforamginterpreter (class in datumaro.plugins.sam_transforms.interpreters.sam_decoder_for_amg)": [[400, "datumaro.plugins.sam_transforms.interpreters.sam_decoder_for_amg.SAMDecoderForAMGInterpreter"]], "cat() (datumaro.plugins.sam_transforms.interpreters.sam_decoder_for_amg.amgmasks class method)": [[400, "datumaro.plugins.sam_transforms.interpreters.sam_decoder_for_amg.AMGMasks.cat"]], "datumaro.plugins.sam_transforms.interpreters.sam_decoder_for_amg": [[400, "module-datumaro.plugins.sam_transforms.interpreters.sam_decoder_for_amg"]], "get_categories() (datumaro.plugins.sam_transforms.interpreters.sam_decoder_for_amg.samdecoderforamginterpreter method)": [[400, "datumaro.plugins.sam_transforms.interpreters.sam_decoder_for_amg.SAMDecoderForAMGInterpreter.get_categories"]], "h_model (datumaro.plugins.sam_transforms.interpreters.sam_decoder_for_amg.samdecoderforamginterpreter attribute)": [[400, "datumaro.plugins.sam_transforms.interpreters.sam_decoder_for_amg.SAMDecoderForAMGInterpreter.h_model"]], "iou_preds (datumaro.plugins.sam_transforms.interpreters.sam_decoder_for_amg.amgmasks attribute)": [[400, "datumaro.plugins.sam_transforms.interpreters.sam_decoder_for_amg.AMGMasks.iou_preds"], [400, "id2"]], "masks (datumaro.plugins.sam_transforms.interpreters.sam_decoder_for_amg.amgmasks attribute)": [[400, "datumaro.plugins.sam_transforms.interpreters.sam_decoder_for_amg.AMGMasks.masks"], [400, "id1"]], "onnx_has_mask_input (datumaro.plugins.sam_transforms.interpreters.sam_decoder_for_amg.samdecoderforamginterpreter attribute)": [[400, "datumaro.plugins.sam_transforms.interpreters.sam_decoder_for_amg.SAMDecoderForAMGInterpreter.onnx_has_mask_input"]], "onnx_mask_input (datumaro.plugins.sam_transforms.interpreters.sam_decoder_for_amg.samdecoderforamginterpreter attribute)": [[400, "datumaro.plugins.sam_transforms.interpreters.sam_decoder_for_amg.SAMDecoderForAMGInterpreter.onnx_mask_input"]], "points (datumaro.plugins.sam_transforms.interpreters.sam_decoder_for_amg.amgpoints attribute)": [[400, "datumaro.plugins.sam_transforms.interpreters.sam_decoder_for_amg.AMGPoints.points"], [400, "id0"]], "postprocess() (datumaro.plugins.sam_transforms.interpreters.sam_decoder_for_amg.amgmasks method)": [[400, "datumaro.plugins.sam_transforms.interpreters.sam_decoder_for_amg.AMGMasks.postprocess"]], "postprocess() (datumaro.plugins.sam_transforms.interpreters.sam_decoder_for_amg.samdecoderforamginterpreter method)": [[400, "datumaro.plugins.sam_transforms.interpreters.sam_decoder_for_amg.SAMDecoderForAMGInterpreter.postprocess"]], "preprocess() (datumaro.plugins.sam_transforms.interpreters.sam_decoder_for_amg.samdecoderforamginterpreter method)": [[400, "datumaro.plugins.sam_transforms.interpreters.sam_decoder_for_amg.SAMDecoderForAMGInterpreter.preprocess"]], "w_model (datumaro.plugins.sam_transforms.interpreters.sam_decoder_for_amg.samdecoderforamginterpreter attribute)": [[400, "datumaro.plugins.sam_transforms.interpreters.sam_decoder_for_amg.SAMDecoderForAMGInterpreter.w_model"]], "samdecoderforbboxinterpreter (class in datumaro.plugins.sam_transforms.interpreters.sam_decoder_for_bbox)": [[401, "datumaro.plugins.sam_transforms.interpreters.sam_decoder_for_bbox.SAMDecoderForBboxInterpreter"]], "datumaro.plugins.sam_transforms.interpreters.sam_decoder_for_bbox": [[401, "module-datumaro.plugins.sam_transforms.interpreters.sam_decoder_for_bbox"]], "get_categories() (datumaro.plugins.sam_transforms.interpreters.sam_decoder_for_bbox.samdecoderforbboxinterpreter method)": [[401, "datumaro.plugins.sam_transforms.interpreters.sam_decoder_for_bbox.SAMDecoderForBboxInterpreter.get_categories"]], "h_model (datumaro.plugins.sam_transforms.interpreters.sam_decoder_for_bbox.samdecoderforbboxinterpreter attribute)": [[401, "datumaro.plugins.sam_transforms.interpreters.sam_decoder_for_bbox.SAMDecoderForBboxInterpreter.h_model"]], "mask_threshold (datumaro.plugins.sam_transforms.interpreters.sam_decoder_for_bbox.samdecoderforbboxinterpreter attribute)": [[401, "datumaro.plugins.sam_transforms.interpreters.sam_decoder_for_bbox.SAMDecoderForBboxInterpreter.mask_threshold"]], "onnx_has_mask_input (datumaro.plugins.sam_transforms.interpreters.sam_decoder_for_bbox.samdecoderforbboxinterpreter attribute)": [[401, "datumaro.plugins.sam_transforms.interpreters.sam_decoder_for_bbox.SAMDecoderForBboxInterpreter.onnx_has_mask_input"]], "onnx_mask_input (datumaro.plugins.sam_transforms.interpreters.sam_decoder_for_bbox.samdecoderforbboxinterpreter attribute)": [[401, "datumaro.plugins.sam_transforms.interpreters.sam_decoder_for_bbox.SAMDecoderForBboxInterpreter.onnx_mask_input"]], "postprocess() (datumaro.plugins.sam_transforms.interpreters.sam_decoder_for_bbox.samdecoderforbboxinterpreter method)": [[401, "datumaro.plugins.sam_transforms.interpreters.sam_decoder_for_bbox.SAMDecoderForBboxInterpreter.postprocess"]], "preprocess() (datumaro.plugins.sam_transforms.interpreters.sam_decoder_for_bbox.samdecoderforbboxinterpreter method)": [[401, "datumaro.plugins.sam_transforms.interpreters.sam_decoder_for_bbox.SAMDecoderForBboxInterpreter.preprocess"]], "w_model (datumaro.plugins.sam_transforms.interpreters.sam_decoder_for_bbox.samdecoderforbboxinterpreter attribute)": [[401, "datumaro.plugins.sam_transforms.interpreters.sam_decoder_for_bbox.SAMDecoderForBboxInterpreter.w_model"]], "samencoderinterpreter (class in datumaro.plugins.sam_transforms.interpreters.sam_encoder)": [[402, "datumaro.plugins.sam_transforms.interpreters.sam_encoder.SAMEncoderInterpreter"]], "datumaro.plugins.sam_transforms.interpreters.sam_encoder": [[402, "module-datumaro.plugins.sam_transforms.interpreters.sam_encoder"]], "get_categories() (datumaro.plugins.sam_transforms.interpreters.sam_encoder.samencoderinterpreter method)": [[402, "datumaro.plugins.sam_transforms.interpreters.sam_encoder.SAMEncoderInterpreter.get_categories"]], "h_model (datumaro.plugins.sam_transforms.interpreters.sam_encoder.samencoderinterpreter attribute)": [[402, "datumaro.plugins.sam_transforms.interpreters.sam_encoder.SAMEncoderInterpreter.h_model"]], "postprocess() (datumaro.plugins.sam_transforms.interpreters.sam_encoder.samencoderinterpreter method)": [[402, "datumaro.plugins.sam_transforms.interpreters.sam_encoder.SAMEncoderInterpreter.postprocess"]], "preprocess() (datumaro.plugins.sam_transforms.interpreters.sam_encoder.samencoderinterpreter method)": [[402, "datumaro.plugins.sam_transforms.interpreters.sam_encoder.SAMEncoderInterpreter.preprocess"]], "w_model (datumaro.plugins.sam_transforms.interpreters.sam_encoder.samencoderinterpreter attribute)": [[402, "datumaro.plugins.sam_transforms.interpreters.sam_encoder.SAMEncoderInterpreter.w_model"]], "datumaro.plugins.sampler": [[403, "module-datumaro.plugins.sampler"]], "datumaro.plugins.sampler.algorithm": [[404, "module-datumaro.plugins.sampler.algorithm"]], "algorithm (class in datumaro.plugins.sampler.algorithm.algorithm)": [[405, "datumaro.plugins.sampler.algorithm.algorithm.Algorithm"]], "inferenceresultanalyzer (class in datumaro.plugins.sampler.algorithm.algorithm)": [[405, "datumaro.plugins.sampler.algorithm.algorithm.InferenceResultAnalyzer"]], "samplingmethod (class in datumaro.plugins.sampler.algorithm.algorithm)": [[405, "datumaro.plugins.sampler.algorithm.algorithm.SamplingMethod"]], "datumaro.plugins.sampler.algorithm.algorithm": [[405, "module-datumaro.plugins.sampler.algorithm.algorithm"]], "entropy (datumaro.plugins.sampler.algorithm.algorithm.algorithm attribute)": [[405, "datumaro.plugins.sampler.algorithm.algorithm.Algorithm.entropy"]], "get_sample() (datumaro.plugins.sampler.algorithm.algorithm.inferenceresultanalyzer method)": [[405, "datumaro.plugins.sampler.algorithm.algorithm.InferenceResultAnalyzer.get_sample"]], "lowk (datumaro.plugins.sampler.algorithm.algorithm.samplingmethod attribute)": [[405, "datumaro.plugins.sampler.algorithm.algorithm.SamplingMethod.lowk"]], "mixk (datumaro.plugins.sampler.algorithm.algorithm.samplingmethod attribute)": [[405, "datumaro.plugins.sampler.algorithm.algorithm.SamplingMethod.mixk"]], "randk (datumaro.plugins.sampler.algorithm.algorithm.samplingmethod attribute)": [[405, "datumaro.plugins.sampler.algorithm.algorithm.SamplingMethod.randk"]], "randtopk (datumaro.plugins.sampler.algorithm.algorithm.samplingmethod attribute)": [[405, "datumaro.plugins.sampler.algorithm.algorithm.SamplingMethod.randtopk"]], "topk (datumaro.plugins.sampler.algorithm.algorithm.samplingmethod attribute)": [[405, "datumaro.plugins.sampler.algorithm.algorithm.SamplingMethod.topk"]], "sampleentropy (class in datumaro.plugins.sampler.algorithm.entropy)": [[406, "datumaro.plugins.sampler.algorithm.entropy.SampleEntropy"]], "datumaro.plugins.sampler.algorithm.entropy": [[406, "module-datumaro.plugins.sampler.algorithm.entropy"]], "get_sample() (datumaro.plugins.sampler.algorithm.entropy.sampleentropy method)": [[406, "datumaro.plugins.sampler.algorithm.entropy.SampleEntropy.get_sample"]], "labelrandomsampler (class in datumaro.plugins.sampler.random_sampler)": [[407, "datumaro.plugins.sampler.random_sampler.LabelRandomSampler"]], "randomsampler (class in datumaro.plugins.sampler.random_sampler)": [[407, "datumaro.plugins.sampler.random_sampler.RandomSampler"]], "build_cmdline_parser() (datumaro.plugins.sampler.random_sampler.labelrandomsampler class method)": [[407, "datumaro.plugins.sampler.random_sampler.LabelRandomSampler.build_cmdline_parser"]], "build_cmdline_parser() (datumaro.plugins.sampler.random_sampler.randomsampler class method)": [[407, "datumaro.plugins.sampler.random_sampler.RandomSampler.build_cmdline_parser"]], "datumaro.plugins.sampler.random_sampler": [[407, "module-datumaro.plugins.sampler.random_sampler"]], "relevancysampler (class in datumaro.plugins.sampler.relevancy_sampler)": [[408, "datumaro.plugins.sampler.relevancy_sampler.RelevancySampler"]], "build_cmdline_parser() (datumaro.plugins.sampler.relevancy_sampler.relevancysampler class method)": [[408, "datumaro.plugins.sampler.relevancy_sampler.RelevancySampler.build_cmdline_parser"]], "datumaro.plugins.sampler.relevancy_sampler": [[408, "module-datumaro.plugins.sampler.relevancy_sampler"]], "datumaro.plugins.specs": [[409, "module-datumaro.plugins.specs"]], "get_lazy_plugins() (in module datumaro.plugins.specs)": [[409, "datumaro.plugins.specs.get_lazy_plugins"]], "split (class in datumaro.plugins.splitter)": [[410, "datumaro.plugins.splitter.Split"]], "splittask (class in datumaro.plugins.splitter)": [[410, "datumaro.plugins.splitter.SplitTask"]], "build_cmdline_parser() (datumaro.plugins.splitter.split class method)": [[410, "datumaro.plugins.splitter.Split.build_cmdline_parser"]], "classification (datumaro.plugins.splitter.splittask attribute)": [[410, "datumaro.plugins.splitter.SplitTask.classification"]], "datumaro.plugins.splitter": [[410, "module-datumaro.plugins.splitter"]], "detection (datumaro.plugins.splitter.splittask attribute)": [[410, "datumaro.plugins.splitter.SplitTask.detection"]], "get_subset() (datumaro.plugins.splitter.split method)": [[410, "datumaro.plugins.splitter.Split.get_subset"]], "reid (datumaro.plugins.splitter.splittask attribute)": [[410, "datumaro.plugins.splitter.SplitTask.reid"]], "segmentation (datumaro.plugins.splitter.splittask attribute)": [[410, "datumaro.plugins.splitter.SplitTask.segmentation"]], "subsets() (datumaro.plugins.splitter.split method)": [[410, "datumaro.plugins.splitter.Split.subsets"]], "datumaro.plugins.synthetic_data": [[411, "module-datumaro.plugins.synthetic_data"]], "fractalimagegenerator (class in datumaro.plugins.synthetic_data.image_generator)": [[412, "datumaro.plugins.synthetic_data.image_generator.FractalImageGenerator"]], "datumaro.plugins.synthetic_data.image_generator": [[412, "module-datumaro.plugins.synthetic_data.image_generator"]], "generate_dataset() (datumaro.plugins.synthetic_data.image_generator.fractalimagegenerator method)": [[412, "datumaro.plugins.synthetic_data.image_generator.FractalImageGenerator.generate_dataset"]], "ifsfunction (class in datumaro.plugins.synthetic_data.utils)": [[413, "datumaro.plugins.synthetic_data.utils.IFSFunction"]], "num_params (datumaro.plugins.synthetic_data.utils.ifsfunction attribute)": [[413, "datumaro.plugins.synthetic_data.utils.IFSFunction.NUM_PARAMS"]], "add_param() (datumaro.plugins.synthetic_data.utils.ifsfunction method)": [[413, "datumaro.plugins.synthetic_data.utils.IFSFunction.add_param"]], "augment() (in module datumaro.plugins.synthetic_data.utils)": [[413, "datumaro.plugins.synthetic_data.utils.augment"]], "calculate() (datumaro.plugins.synthetic_data.utils.ifsfunction method)": [[413, "datumaro.plugins.synthetic_data.utils.IFSFunction.calculate"]], "colorize() (in module datumaro.plugins.synthetic_data.utils)": [[413, "datumaro.plugins.synthetic_data.utils.colorize"]], "datumaro.plugins.synthetic_data.utils": [[413, "module-datumaro.plugins.synthetic_data.utils"]], "draw() (datumaro.plugins.synthetic_data.utils.ifsfunction method)": [[413, "datumaro.plugins.synthetic_data.utils.IFSFunction.draw"]], "fill_background() (in module datumaro.plugins.synthetic_data.utils)": [[413, "datumaro.plugins.synthetic_data.utils.fill_background"]], "process_nans() (datumaro.plugins.synthetic_data.utils.ifsfunction static method)": [[413, "datumaro.plugins.synthetic_data.utils.IFSFunction.process_nans"]], "rescale() (datumaro.plugins.synthetic_data.utils.ifsfunction method)": [[413, "datumaro.plugins.synthetic_data.utils.IFSFunction.rescale"]], "rgb2lab() (in module datumaro.plugins.synthetic_data.utils)": [[413, "datumaro.plugins.synthetic_data.utils.rgb2lab"]], "suppress_computation_warnings() (in module datumaro.plugins.synthetic_data.utils)": [[413, "datumaro.plugins.synthetic_data.utils.suppress_computation_warnings"]], "tile (class in datumaro.plugins.tiling)": [[414, "datumaro.plugins.tiling.Tile"]], "build_cmdline_parser() (datumaro.plugins.tiling.tile class method)": [[414, "datumaro.plugins.tiling.Tile.build_cmdline_parser"]], "datumaro.plugins.tiling": [[414, "module-datumaro.plugins.tiling"]], "transform_item() (datumaro.plugins.tiling.tile method)": [[414, "datumaro.plugins.tiling.Tile.transform_item"]], "mergetile (class in datumaro.plugins.tiling.merge_tile)": [[415, "datumaro.plugins.tiling.merge_tile.MergeTile"]], "build_cmdline_parser() (datumaro.plugins.tiling.merge_tile.mergetile class method)": [[415, "datumaro.plugins.tiling.merge_tile.MergeTile.build_cmdline_parser"]], "datumaro.plugins.tiling.merge_tile": [[415, "module-datumaro.plugins.tiling.merge_tile"]], "tile (class in datumaro.plugins.tiling.tile)": [[416, "datumaro.plugins.tiling.tile.Tile"]], "build_cmdline_parser() (datumaro.plugins.tiling.tile.tile class method)": [[416, "datumaro.plugins.tiling.tile.Tile.build_cmdline_parser"]], "datumaro.plugins.tiling.tile": [[416, "module-datumaro.plugins.tiling.tile"]], "transform_item() (datumaro.plugins.tiling.tile.tile method)": [[416, "datumaro.plugins.tiling.tile.Tile.transform_item"]], "clip_x1y1x2y2() (in module datumaro.plugins.tiling.util)": [[417, "datumaro.plugins.tiling.util.clip_x1y1x2y2"]], "cxcywh_to_x1y1x2y2() (in module datumaro.plugins.tiling.util)": [[417, "datumaro.plugins.tiling.util.cxcywh_to_x1y1x2y2"]], "datumaro.plugins.tiling.util": [[417, "module-datumaro.plugins.tiling.util"]], "x1y1x2y2_to_cxcywh() (in module datumaro.plugins.tiling.util)": [[417, "datumaro.plugins.tiling.util.x1y1x2y2_to_cxcywh"]], "x1y1x2y2_to_xywh() (in module datumaro.plugins.tiling.util)": [[417, "datumaro.plugins.tiling.util.x1y1x2y2_to_xywh"]], "xywh_to_x1y1x2y2() (in module datumaro.plugins.tiling.util)": [[417, "datumaro.plugins.tiling.util.xywh_to_x1y1x2y2"]], "annstolabels (class in datumaro.plugins.transforms)": [[418, "datumaro.plugins.transforms.AnnsToLabels"]], "astypeannotations (class in datumaro.plugins.transforms)": [[418, "datumaro.plugins.transforms.AstypeAnnotations"]], "bboxvaluesdecrement (class in datumaro.plugins.transforms)": [[418, "datumaro.plugins.transforms.BboxValuesDecrement"]], "boxestomasks (class in datumaro.plugins.transforms)": [[418, "datumaro.plugins.transforms.BoxesToMasks"]], "boxestopolygons (class in datumaro.plugins.transforms)": [[418, "datumaro.plugins.transforms.BoxesToPolygons"]], "clean (class in datumaro.plugins.transforms)": [[418, "datumaro.plugins.transforms.Clean"]], "correct (class in datumaro.plugins.transforms)": [[418, "datumaro.plugins.transforms.Correct"]], "cropcoveredsegments (class in datumaro.plugins.transforms)": [[418, "datumaro.plugins.transforms.CropCoveredSegments"]], "idfromimagename (class in datumaro.plugins.transforms)": [[418, "datumaro.plugins.transforms.IdFromImageName"]], "mapsubsets (class in datumaro.plugins.transforms)": [[418, "datumaro.plugins.transforms.MapSubsets"]], "maskstopolygons (class in datumaro.plugins.transforms)": [[418, "datumaro.plugins.transforms.MasksToPolygons"]], "mergeinstancesegments (class in datumaro.plugins.transforms)": [[418, "datumaro.plugins.transforms.MergeInstanceSegments"]], "polygonstomasks (class in datumaro.plugins.transforms)": [[418, "datumaro.plugins.transforms.PolygonsToMasks"]], "projectinfos (class in datumaro.plugins.transforms)": [[418, "datumaro.plugins.transforms.ProjectInfos"]], "projectlabels (class in datumaro.plugins.transforms)": [[418, "datumaro.plugins.transforms.ProjectLabels"]], "randomsplit (class in datumaro.plugins.transforms)": [[418, "datumaro.plugins.transforms.RandomSplit"]], "reindex (class in datumaro.plugins.transforms)": [[418, "datumaro.plugins.transforms.Reindex"]], "reindexannotations (class in datumaro.plugins.transforms)": [[418, "datumaro.plugins.transforms.ReindexAnnotations"]], "remaplabels (class in datumaro.plugins.transforms)": [[418, "datumaro.plugins.transforms.RemapLabels"]], "remaplabels.defaultaction (class in datumaro.plugins.transforms)": [[418, "datumaro.plugins.transforms.RemapLabels.DefaultAction"]], "removeannotations (class in datumaro.plugins.transforms)": [[418, "datumaro.plugins.transforms.RemoveAnnotations"]], "removeattributes (class in datumaro.plugins.transforms)": [[418, "datumaro.plugins.transforms.RemoveAttributes"]], "removeitems (class in datumaro.plugins.transforms)": [[418, "datumaro.plugins.transforms.RemoveItems"]], "rename (class in datumaro.plugins.transforms)": [[418, "datumaro.plugins.transforms.Rename"]], "resizetransform (class in datumaro.plugins.transforms)": [[418, "datumaro.plugins.transforms.ResizeTransform"]], "shapestoboxes (class in datumaro.plugins.transforms)": [[418, "datumaro.plugins.transforms.ShapesToBoxes"]], "sort (class in datumaro.plugins.transforms)": [[418, "datumaro.plugins.transforms.Sort"]], "build_cmdline_parser() (datumaro.plugins.transforms.astypeannotations class method)": [[418, "datumaro.plugins.transforms.AstypeAnnotations.build_cmdline_parser"]], "build_cmdline_parser() (datumaro.plugins.transforms.correct class method)": [[418, "datumaro.plugins.transforms.Correct.build_cmdline_parser"]], "build_cmdline_parser() (datumaro.plugins.transforms.mapsubsets class method)": [[418, "datumaro.plugins.transforms.MapSubsets.build_cmdline_parser"]], "build_cmdline_parser() (datumaro.plugins.transforms.mergeinstancesegments class method)": [[418, "datumaro.plugins.transforms.MergeInstanceSegments.build_cmdline_parser"]], "build_cmdline_parser() (datumaro.plugins.transforms.projectinfos class method)": [[418, "datumaro.plugins.transforms.ProjectInfos.build_cmdline_parser"]], "build_cmdline_parser() (datumaro.plugins.transforms.projectlabels class method)": [[418, "datumaro.plugins.transforms.ProjectLabels.build_cmdline_parser"]], "build_cmdline_parser() (datumaro.plugins.transforms.randomsplit class method)": [[418, "datumaro.plugins.transforms.RandomSplit.build_cmdline_parser"]], "build_cmdline_parser() (datumaro.plugins.transforms.reindex class method)": [[418, "datumaro.plugins.transforms.Reindex.build_cmdline_parser"]], "build_cmdline_parser() (datumaro.plugins.transforms.reindexannotations class method)": [[418, "datumaro.plugins.transforms.ReindexAnnotations.build_cmdline_parser"]], "build_cmdline_parser() (datumaro.plugins.transforms.remaplabels class method)": [[418, "datumaro.plugins.transforms.RemapLabels.build_cmdline_parser"]], "build_cmdline_parser() (datumaro.plugins.transforms.removeannotations class method)": [[418, "datumaro.plugins.transforms.RemoveAnnotations.build_cmdline_parser"]], "build_cmdline_parser() (datumaro.plugins.transforms.removeattributes class method)": [[418, "datumaro.plugins.transforms.RemoveAttributes.build_cmdline_parser"]], "build_cmdline_parser() (datumaro.plugins.transforms.removeitems class method)": [[418, "datumaro.plugins.transforms.RemoveItems.build_cmdline_parser"]], "build_cmdline_parser() (datumaro.plugins.transforms.rename class method)": [[418, "datumaro.plugins.transforms.Rename.build_cmdline_parser"]], "build_cmdline_parser() (datumaro.plugins.transforms.resizetransform class method)": [[418, "datumaro.plugins.transforms.ResizeTransform.build_cmdline_parser"]], "build_cmdline_parser() (datumaro.plugins.transforms.sort class method)": [[418, "datumaro.plugins.transforms.Sort.build_cmdline_parser"]], "cap_far_from_mean() (datumaro.plugins.transforms.correct method)": [[418, "datumaro.plugins.transforms.Correct.cap_far_from_mean"]], "cap_outliers() (datumaro.plugins.transforms.clean method)": [[418, "datumaro.plugins.transforms.Clean.cap_outliers"]], "cap_outliers() (datumaro.plugins.transforms.correct method)": [[418, "datumaro.plugins.transforms.Correct.cap_outliers"]], "categories() (datumaro.plugins.transforms.astypeannotations method)": [[418, "datumaro.plugins.transforms.AstypeAnnotations.categories"]], "categories() (datumaro.plugins.transforms.correct method)": [[418, "datumaro.plugins.transforms.Correct.categories"]], "categories() (datumaro.plugins.transforms.projectlabels method)": [[418, "datumaro.plugins.transforms.ProjectLabels.categories"]], "categories() (datumaro.plugins.transforms.remaplabels method)": [[418, "datumaro.plugins.transforms.RemapLabels.categories"]], "check_missing_value() (datumaro.plugins.transforms.clean method)": [[418, "datumaro.plugins.transforms.Clean.check_missing_value"]], "check_outlier() (datumaro.plugins.transforms.clean method)": [[418, "datumaro.plugins.transforms.Clean.check_outlier"]], "convert_bbox() (datumaro.plugins.transforms.boxestomasks static method)": [[418, "datumaro.plugins.transforms.BoxesToMasks.convert_bbox"]], "convert_bbox() (datumaro.plugins.transforms.boxestopolygons static method)": [[418, "datumaro.plugins.transforms.BoxesToPolygons.convert_bbox"]], "convert_mask() (datumaro.plugins.transforms.maskstopolygons static method)": [[418, "datumaro.plugins.transforms.MasksToPolygons.convert_mask"]], "convert_polygon() (datumaro.plugins.transforms.polygonstomasks static method)": [[418, "datumaro.plugins.transforms.PolygonsToMasks.convert_polygon"]], "convert_shape() (datumaro.plugins.transforms.shapestoboxes static method)": [[418, "datumaro.plugins.transforms.ShapesToBoxes.convert_shape"]], "crop_segments() (datumaro.plugins.transforms.cropcoveredsegments class method)": [[418, "datumaro.plugins.transforms.CropCoveredSegments.crop_segments"]], "datumaro.plugins.transforms": [[418, "module-datumaro.plugins.transforms"]], "delete (datumaro.plugins.transforms.remaplabels.defaultaction attribute)": [[418, "datumaro.plugins.transforms.RemapLabels.DefaultAction.delete"]], "fill_missing_value() (datumaro.plugins.transforms.clean method)": [[418, "datumaro.plugins.transforms.Clean.fill_missing_value"]], "fill_missing_value() (datumaro.plugins.transforms.correct method)": [[418, "datumaro.plugins.transforms.Correct.fill_missing_value"]], "find_closest_value() (datumaro.plugins.transforms.clean static method)": [[418, "datumaro.plugins.transforms.Clean.find_closest_value"]], "find_instances() (datumaro.plugins.transforms.mergeinstancesegments static method)": [[418, "datumaro.plugins.transforms.MergeInstanceSegments.find_instances"]], "find_outliers() (datumaro.plugins.transforms.correct method)": [[418, "datumaro.plugins.transforms.Correct.find_outliers"]], "infos() (datumaro.plugins.transforms.projectinfos method)": [[418, "datumaro.plugins.transforms.ProjectInfos.infos"]], "keep (datumaro.plugins.transforms.remaplabels.defaultaction attribute)": [[418, "datumaro.plugins.transforms.RemapLabels.DefaultAction.keep"]], "merge_segments() (datumaro.plugins.transforms.mergeinstancesegments class method)": [[418, "datumaro.plugins.transforms.MergeInstanceSegments.merge_segments"]], "refine_tabular_media() (datumaro.plugins.transforms.clean method)": [[418, "datumaro.plugins.transforms.Clean.refine_tabular_media"]], "remove_unnecessary_char() (datumaro.plugins.transforms.clean static method)": [[418, "datumaro.plugins.transforms.Clean.remove_unnecessary_char"]], "remove_unnecessary_char() (datumaro.plugins.transforms.correct method)": [[418, "datumaro.plugins.transforms.Correct.remove_unnecessary_char"]], "transform_item() (datumaro.plugins.transforms.annstolabels method)": [[418, "datumaro.plugins.transforms.AnnsToLabels.transform_item"]], "transform_item() (datumaro.plugins.transforms.astypeannotations method)": [[418, "datumaro.plugins.transforms.AstypeAnnotations.transform_item"]], "transform_item() (datumaro.plugins.transforms.bboxvaluesdecrement method)": [[418, "datumaro.plugins.transforms.BboxValuesDecrement.transform_item"]], "transform_item() (datumaro.plugins.transforms.boxestomasks method)": [[418, "datumaro.plugins.transforms.BoxesToMasks.transform_item"]], "transform_item() (datumaro.plugins.transforms.boxestopolygons method)": [[418, "datumaro.plugins.transforms.BoxesToPolygons.transform_item"]], "transform_item() (datumaro.plugins.transforms.clean method)": [[418, "datumaro.plugins.transforms.Clean.transform_item"]], "transform_item() (datumaro.plugins.transforms.cropcoveredsegments method)": [[418, "datumaro.plugins.transforms.CropCoveredSegments.transform_item"]], "transform_item() (datumaro.plugins.transforms.idfromimagename method)": [[418, "datumaro.plugins.transforms.IdFromImageName.transform_item"]], "transform_item() (datumaro.plugins.transforms.mapsubsets method)": [[418, "datumaro.plugins.transforms.MapSubsets.transform_item"]], "transform_item() (datumaro.plugins.transforms.maskstopolygons method)": [[418, "datumaro.plugins.transforms.MasksToPolygons.transform_item"]], "transform_item() (datumaro.plugins.transforms.mergeinstancesegments method)": [[418, "datumaro.plugins.transforms.MergeInstanceSegments.transform_item"]], "transform_item() (datumaro.plugins.transforms.polygonstomasks method)": [[418, "datumaro.plugins.transforms.PolygonsToMasks.transform_item"]], "transform_item() (datumaro.plugins.transforms.projectlabels method)": [[418, "datumaro.plugins.transforms.ProjectLabels.transform_item"]], "transform_item() (datumaro.plugins.transforms.reindexannotations method)": [[418, "datumaro.plugins.transforms.ReindexAnnotations.transform_item"]], "transform_item() (datumaro.plugins.transforms.remaplabels method)": [[418, "datumaro.plugins.transforms.RemapLabels.transform_item"]], "transform_item() (datumaro.plugins.transforms.removeannotations method)": [[418, "datumaro.plugins.transforms.RemoveAnnotations.transform_item"]], "transform_item() (datumaro.plugins.transforms.removeattributes method)": [[418, "datumaro.plugins.transforms.RemoveAttributes.transform_item"]], "transform_item() (datumaro.plugins.transforms.removeitems method)": [[418, "datumaro.plugins.transforms.RemoveItems.transform_item"]], "transform_item() (datumaro.plugins.transforms.rename method)": [[418, "datumaro.plugins.transforms.Rename.transform_item"]], "transform_item() (datumaro.plugins.transforms.resizetransform method)": [[418, "datumaro.plugins.transforms.ResizeTransform.transform_item"]], "transform_item() (datumaro.plugins.transforms.shapestoboxes method)": [[418, "datumaro.plugins.transforms.ShapesToBoxes.transform_item"]], "update_caption_value() (datumaro.plugins.transforms.correct method)": [[418, "datumaro.plugins.transforms.Correct.update_caption_value"]], "update_label_value() (datumaro.plugins.transforms.correct method)": [[418, "datumaro.plugins.transforms.Correct.update_label_value"]], "classificationvalidator (class in datumaro.plugins.validators)": [[419, "datumaro.plugins.validators.ClassificationValidator"]], "detectionvalidator (class in datumaro.plugins.validators)": [[419, "datumaro.plugins.validators.DetectionValidator"]], "segmentationvalidator (class in datumaro.plugins.validators)": [[419, "datumaro.plugins.validators.SegmentationValidator"]], "tabularvalidationstats (class in datumaro.plugins.validators)": [[419, "datumaro.plugins.validators.TabularValidationStats"]], "tabularvalidator (class in datumaro.plugins.validators)": [[419, "datumaro.plugins.validators.TabularValidator"]], "compute_statistics() (datumaro.plugins.validators.classificationvalidator method)": [[419, "datumaro.plugins.validators.ClassificationValidator.compute_statistics"]], "compute_statistics() (datumaro.plugins.validators.detectionvalidator method)": [[419, "datumaro.plugins.validators.DetectionValidator.compute_statistics"]], "compute_statistics() (datumaro.plugins.validators.segmentationvalidator method)": [[419, "datumaro.plugins.validators.SegmentationValidator.compute_statistics"]], "compute_statistics() (datumaro.plugins.validators.tabularvalidator method)": [[419, "datumaro.plugins.validators.TabularValidator.compute_statistics"]], "create_with_dataset() (datumaro.plugins.validators.tabularvalidationstats class method)": [[419, "datumaro.plugins.validators.TabularValidationStats.create_with_dataset"]], "datumaro.plugins.validators": [[419, "module-datumaro.plugins.validators"]], "generate_reports() (datumaro.plugins.validators.classificationvalidator method)": [[419, "datumaro.plugins.validators.ClassificationValidator.generate_reports"]], "generate_reports() (datumaro.plugins.validators.detectionvalidator method)": [[419, "datumaro.plugins.validators.DetectionValidator.generate_reports"]], "generate_reports() (datumaro.plugins.validators.segmentationvalidator method)": [[419, "datumaro.plugins.validators.SegmentationValidator.generate_reports"]], "generate_reports() (datumaro.plugins.validators.tabularvalidator method)": [[419, "datumaro.plugins.validators.TabularValidator.generate_reports"]], "items_missing_annotation (datumaro.plugins.validators.tabularvalidationstats attribute)": [[419, "datumaro.plugins.validators.TabularValidationStats.items_missing_annotation"]], "to_dict() (datumaro.plugins.validators.tabularvalidationstats method)": [[419, "datumaro.plugins.validators.TabularValidationStats.to_dict"]], "total_ann_count (datumaro.plugins.validators.tabularvalidationstats attribute)": [[419, "datumaro.plugins.validators.TabularValidationStats.total_ann_count"]], "datumaro.project": [[420, "module-datumaro.project"]], "cocopagemapper (class in datumaro.rust_api)": [[421, "datumaro.rust_api.CocoPageMapper"]], "datumpagemapper (class in datumaro.rust_api)": [[421, "datumaro.rust_api.DatumPageMapper"]], "jsonsectionpagemapper (class in datumaro.rust_api)": [[421, "datumaro.rust_api.JsonSectionPageMapper"]], "categories() (datumaro.rust_api.cocopagemapper method)": [[421, "datumaro.rust_api.CocoPageMapper.categories"]], "categories() (datumaro.rust_api.datumpagemapper method)": [[421, "datumaro.rust_api.DatumPageMapper.categories"]], "datumaro.rust_api": [[421, "module-datumaro.rust_api"]], "dm_format_version() (datumaro.rust_api.datumpagemapper method)": [[421, "datumaro.rust_api.DatumPageMapper.dm_format_version"]], "get_anns_dict() (datumaro.rust_api.cocopagemapper method)": [[421, "datumaro.rust_api.CocoPageMapper.get_anns_dict"]], "get_img_ids() (datumaro.rust_api.cocopagemapper method)": [[421, "datumaro.rust_api.CocoPageMapper.get_img_ids"]], "get_img_ids() (datumaro.rust_api.datumpagemapper method)": [[421, "datumaro.rust_api.DatumPageMapper.get_img_ids"]], "get_item_dict() (datumaro.rust_api.cocopagemapper method)": [[421, "datumaro.rust_api.CocoPageMapper.get_item_dict"]], "get_item_dict() (datumaro.rust_api.datumpagemapper method)": [[421, "datumaro.rust_api.DatumPageMapper.get_item_dict"]], "info() (datumaro.rust_api.cocopagemapper method)": [[421, "datumaro.rust_api.CocoPageMapper.info"]], "infos() (datumaro.rust_api.datumpagemapper method)": [[421, "datumaro.rust_api.DatumPageMapper.infos"]], "licenses() (datumaro.rust_api.cocopagemapper method)": [[421, "datumaro.rust_api.CocoPageMapper.licenses"]], "media_type() (datumaro.rust_api.datumpagemapper method)": [[421, "datumaro.rust_api.DatumPageMapper.media_type"]], "sections() (datumaro.rust_api.jsonsectionpagemapper method)": [[421, "datumaro.rust_api.JsonSectionPageMapper.sections"]], "cast() (in module datumaro.util)": [[422, "datumaro.util.cast"]], "datumaro.util": [[422, "module-datumaro.util"]], "dump_json() (in module datumaro.util)": [[422, "datumaro.util.dump_json"]], "dump_json_file() (in module datumaro.util)": [[422, "datumaro.util.dump_json_file"]], "escape() (in module datumaro.util)": [[422, "datumaro.util.escape"]], "filter_dict() (in module datumaro.util)": [[422, "datumaro.util.filter_dict"]], "find() (in module datumaro.util)": [[422, "datumaro.util.find"]], "is_method_redefined() (in module datumaro.util)": [[422, "datumaro.util.is_method_redefined"]], "optional_arg_decorator() (in module datumaro.util)": [[422, "datumaro.util.optional_arg_decorator"]], "pairs() (in module datumaro.util)": [[422, "datumaro.util.pairs"]], "parse_json() (in module datumaro.util)": [[422, "datumaro.util.parse_json"]], "parse_json_file() (in module datumaro.util)": [[422, "datumaro.util.parse_json_file"]], "parse_str_enum_value() (in module datumaro.util)": [[422, "datumaro.util.parse_str_enum_value"]], "take_by() (in module datumaro.util)": [[422, "datumaro.util.take_by"]], "to_dict_from_streaming_json() (in module datumaro.util)": [[422, "datumaro.util.to_dict_from_streaming_json"]], "to_snake_case() (in module datumaro.util)": [[422, "datumaro.util.to_snake_case"]], "unescape() (in module datumaro.util)": [[422, "datumaro.util.unescape"]], "oks() (in module datumaro.util.annotation_util)": [[423, "datumaro.util.annotation_util.OKS"]], "pdj() (in module datumaro.util.annotation_util)": [[423, "datumaro.util.annotation_util.PDJ"]], "approximate_line() (in module datumaro.util.annotation_util)": [[423, "datumaro.util.annotation_util.approximate_line"]], "bbox_iou() (in module datumaro.util.annotation_util)": [[423, "datumaro.util.annotation_util.bbox_iou"]], "datumaro.util.annotation_util": [[423, "module-datumaro.util.annotation_util"]], "find_group_leader() (in module datumaro.util.annotation_util)": [[423, "datumaro.util.annotation_util.find_group_leader"]], "find_instances() (in module datumaro.util.annotation_util)": [[423, "datumaro.util.annotation_util.find_instances"]], "make_label_id_mapping() (in module datumaro.util.annotation_util)": [[423, "datumaro.util.annotation_util.make_label_id_mapping"]], "max_bbox() (in module datumaro.util.annotation_util)": [[423, "datumaro.util.annotation_util.max_bbox"]], "mean_bbox() (in module datumaro.util.annotation_util)": [[423, "datumaro.util.annotation_util.mean_bbox"]], "nms() (in module datumaro.util.annotation_util)": [[423, "datumaro.util.annotation_util.nms"]], "segment_iou() (in module datumaro.util.annotation_util)": [[423, "datumaro.util.annotation_util.segment_iou"]], "softmax() (in module datumaro.util.annotation_util)": [[423, "datumaro.util.annotation_util.softmax"]], "datumaro.util.attrs_util": [[424, "module-datumaro.util.attrs_util"]], "default_if_none() (in module datumaro.util.attrs_util)": [[424, "datumaro.util.attrs_util.default_if_none"]], "ensure_cls() (in module datumaro.util.attrs_util)": [[424, "datumaro.util.attrs_util.ensure_cls"]], "has_length() (in module datumaro.util.attrs_util)": [[424, "datumaro.util.attrs_util.has_length"]], "not_empty() (in module datumaro.util.attrs_util)": [[424, "datumaro.util.attrs_util.not_empty"]], "datumaro.util.definitions": [[425, "module-datumaro.util.definitions"]], "get_datumaro_cache_dir() (in module datumaro.util.definitions)": [[425, "datumaro.util.definitions.get_datumaro_cache_dir"]], "datumaro.util.file_utils": [[426, "module-datumaro.util.file_utils"]], "to_bytes() (in module datumaro.util.file_utils)": [[426, "datumaro.util.file_utils.to_bytes"]], "color_bgr (datumaro.util.image.imagecolorchannel attribute)": [[427, "datumaro.util.image.ImageColorChannel.COLOR_BGR"]], "color_rgb (datumaro.util.image.imagecolorchannel attribute)": [[427, "datumaro.util.image.ImageColorChannel.COLOR_RGB"]], "imagebackend (class in datumaro.util.image)": [[427, "datumaro.util.image.ImageBackend"]], "imagecolorchannel (class in datumaro.util.image)": [[427, "datumaro.util.image.ImageColorChannel"]], "imagemeta (in module datumaro.util.image)": [[427, "datumaro.util.image.ImageMeta"]], "pil (datumaro.util.image.imagebackend attribute)": [[427, "datumaro.util.image.ImageBackend.PIL"]], "unchanged (datumaro.util.image.imagecolorchannel attribute)": [[427, "datumaro.util.image.ImageColorChannel.UNCHANGED"]], "copyto_image() (in module datumaro.util.image)": [[427, "datumaro.util.image.copyto_image"]], "cv2 (datumaro.util.image.imagebackend attribute)": [[427, "datumaro.util.image.ImageBackend.cv2"]], "datumaro.util.image": [[427, "module-datumaro.util.image"]], "decode_by_cv2() (datumaro.util.image.imagecolorchannel method)": [[427, "datumaro.util.image.ImageColorChannel.decode_by_cv2"]], "decode_by_pil() (datumaro.util.image.imagecolorchannel method)": [[427, "datumaro.util.image.ImageColorChannel.decode_by_pil"]], "decode_image() (in module datumaro.util.image)": [[427, "datumaro.util.image.decode_image"]], "decode_image_context() (in module datumaro.util.image)": [[427, "datumaro.util.image.decode_image_context"]], "encode_image() (in module datumaro.util.image)": [[427, "datumaro.util.image.encode_image"]], "find_images() (in module datumaro.util.image)": [[427, "datumaro.util.image.find_images"]], "is_image() (in module datumaro.util.image)": [[427, "datumaro.util.image.is_image"]], "lazy_image (class in datumaro.util.image)": [[427, "datumaro.util.image.lazy_image"]], "load_image() (in module datumaro.util.image)": [[427, "datumaro.util.image.load_image"]], "load_image_meta_file() (in module datumaro.util.image)": [[427, "datumaro.util.image.load_image_meta_file"]], "save_image() (in module datumaro.util.image)": [[427, "datumaro.util.image.save_image"]], "save_image_meta_file() (in module datumaro.util.image)": [[427, "datumaro.util.image.save_image_meta_file"]], "imagecache (class in datumaro.util.image_cache)": [[428, "datumaro.util.image_cache.ImageCache"]], "clear() (datumaro.util.image_cache.imagecache method)": [[428, "datumaro.util.image_cache.ImageCache.clear"]], "datumaro.util.image_cache": [[428, "module-datumaro.util.image_cache"]], "get() (datumaro.util.image_cache.imagecache method)": [[428, "datumaro.util.image_cache.ImageCache.get"]], "get_instance() (datumaro.util.image_cache.imagecache static method)": [[428, "datumaro.util.image_cache.ImageCache.get_instance"]], "push() (datumaro.util.image_cache.imagecache method)": [[428, "datumaro.util.image_cache.ImageCache.push"]], "size() (datumaro.util.image_cache.imagecache method)": [[428, "datumaro.util.image_cache.ImageCache.size"]], "datumaro.util.import_util": [[429, "module-datumaro.util.import_util"]], "lazy_import() (in module datumaro.util.import_util)": [[429, "datumaro.util.import_util.lazy_import"]], "catch_logs() (in module datumaro.util.log_utils)": [[430, "datumaro.util.log_utils.catch_logs"]], "datumaro.util.log_utils": [[430, "module-datumaro.util.log_utils"]], "logging_disabled() (in module datumaro.util.log_utils)": [[430, "datumaro.util.log_utils.logging_disabled"]], "bgr2index() (in module datumaro.util.mask_tools)": [[431, "datumaro.util.mask_tools.bgr2index"]], "check_is_mask() (in module datumaro.util.mask_tools)": [[431, "datumaro.util.mask_tools.check_is_mask"]], "crop_covered_segments() (in module datumaro.util.mask_tools)": [[431, "datumaro.util.mask_tools.crop_covered_segments"]], "datumaro.util.mask_tools": [[431, "module-datumaro.util.mask_tools"]], "extract_contours() (in module datumaro.util.mask_tools)": [[431, "datumaro.util.mask_tools.extract_contours"]], "find_mask_bbox() (in module datumaro.util.mask_tools)": [[431, "datumaro.util.mask_tools.find_mask_bbox"]], "generate_colormap() (in module datumaro.util.mask_tools)": [[431, "datumaro.util.mask_tools.generate_colormap"]], "index2bgr() (in module datumaro.util.mask_tools)": [[431, "datumaro.util.mask_tools.index2bgr"]], "invert_colormap() (in module datumaro.util.mask_tools)": [[431, "datumaro.util.mask_tools.invert_colormap"]], "lazy_mask() (in module datumaro.util.mask_tools)": [[431, "datumaro.util.mask_tools.lazy_mask"]], "load_mask() (in module datumaro.util.mask_tools)": [[431, "datumaro.util.mask_tools.load_mask"]], "make_binary_mask() (in module datumaro.util.mask_tools)": [[431, "datumaro.util.mask_tools.make_binary_mask"]], "make_index_mask() (in module datumaro.util.mask_tools)": [[431, "datumaro.util.mask_tools.make_index_mask"]], "mask_to_bboxes() (in module datumaro.util.mask_tools)": [[431, "datumaro.util.mask_tools.mask_to_bboxes"]], "mask_to_polygons() (in module datumaro.util.mask_tools)": [[431, "datumaro.util.mask_tools.mask_to_polygons"]], "mask_to_rle() (in module datumaro.util.mask_tools)": [[431, "datumaro.util.mask_tools.mask_to_rle"]], "mask_to_rle_py() (in module datumaro.util.mask_tools)": [[431, "datumaro.util.mask_tools.mask_to_rle_py"]], "merge_masks() (in module datumaro.util.mask_tools)": [[431, "datumaro.util.mask_tools.merge_masks"]], "paint_mask() (in module datumaro.util.mask_tools)": [[431, "datumaro.util.mask_tools.paint_mask"]], "remap_mask() (in module datumaro.util.mask_tools)": [[431, "datumaro.util.mask_tools.remap_mask"]], "rle_to_mask() (in module datumaro.util.mask_tools)": [[431, "datumaro.util.mask_tools.rle_to_mask"]], "rles_to_mask() (in module datumaro.util.mask_tools)": [[431, "datumaro.util.mask_tools.rles_to_mask"]], "unpaint_mask() (in module datumaro.util.mask_tools)": [[431, "datumaro.util.mask_tools.unpaint_mask"]], "datumaro.util.meta_file_util": [[432, "module-datumaro.util.meta_file_util"]], "get_hashkey_file() (in module datumaro.util.meta_file_util)": [[432, "datumaro.util.meta_file_util.get_hashkey_file"]], "get_meta_file() (in module datumaro.util.meta_file_util)": [[432, "datumaro.util.meta_file_util.get_meta_file"]], "has_hashkey_file() (in module datumaro.util.meta_file_util)": [[432, "datumaro.util.meta_file_util.has_hashkey_file"]], "has_meta_file() (in module datumaro.util.meta_file_util)": [[432, "datumaro.util.meta_file_util.has_meta_file"]], "is_meta_file() (in module datumaro.util.meta_file_util)": [[432, "datumaro.util.meta_file_util.is_meta_file"]], "load_hash_key() (in module datumaro.util.meta_file_util)": [[432, "datumaro.util.meta_file_util.load_hash_key"]], "parse_hashkey_file() (in module datumaro.util.meta_file_util)": [[432, "datumaro.util.meta_file_util.parse_hashkey_file"]], "parse_meta_file() (in module datumaro.util.meta_file_util)": [[432, "datumaro.util.meta_file_util.parse_meta_file"]], "save_hashkey_file() (in module datumaro.util.meta_file_util)": [[432, "datumaro.util.meta_file_util.save_hashkey_file"]], "save_meta_file() (in module datumaro.util.meta_file_util)": [[432, "datumaro.util.meta_file_util.save_meta_file"]], "condition (class in datumaro.util.multi_procs_util)": [[433, "datumaro.util.multi_procs_util.Condition"]], "end (datumaro.util.multi_procs_util.producermessage attribute)": [[433, "datumaro.util.multi_procs_util.ProducerMessage.END"]], "full": [[433, "datumaro.util.multi_procs_util.Full"]], "intenum (class in datumaro.util.multi_procs_util)": [[433, "datumaro.util.multi_procs_util.IntEnum"]], "producermessage (class in datumaro.util.multi_procs_util)": [[433, "datumaro.util.multi_procs_util.ProducerMessage"]], "queue (class in datumaro.util.multi_procs_util)": [[433, "datumaro.util.multi_procs_util.Queue"]], "start (datumaro.util.multi_procs_util.producermessage attribute)": [[433, "datumaro.util.multi_procs_util.ProducerMessage.START"]], "thread (class in datumaro.util.multi_procs_util)": [[433, "datumaro.util.multi_procs_util.Thread"]], "typevar (class in datumaro.util.multi_procs_util)": [[433, "datumaro.util.multi_procs_util.TypeVar"]], "consumer_generator() (in module datumaro.util.multi_procs_util)": [[433, "datumaro.util.multi_procs_util.consumer_generator"]], "contextmanager() (in module datumaro.util.multi_procs_util)": [[433, "datumaro.util.multi_procs_util.contextmanager"]], "daemon (datumaro.util.multi_procs_util.thread property)": [[433, "datumaro.util.multi_procs_util.Thread.daemon"]], "datumaro.util.multi_procs_util": [[433, "module-datumaro.util.multi_procs_util"]], "empty() (datumaro.util.multi_procs_util.queue method)": [[433, "datumaro.util.multi_procs_util.Queue.empty"]], "full() (datumaro.util.multi_procs_util.queue method)": [[433, "datumaro.util.multi_procs_util.Queue.full"]], "get() (datumaro.util.multi_procs_util.queue method)": [[433, "datumaro.util.multi_procs_util.Queue.get"]], "getname() (datumaro.util.multi_procs_util.thread method)": [[433, "datumaro.util.multi_procs_util.Thread.getName"]], "get_nowait() (datumaro.util.multi_procs_util.queue method)": [[433, "datumaro.util.multi_procs_util.Queue.get_nowait"]], "ident (datumaro.util.multi_procs_util.thread property)": [[433, "datumaro.util.multi_procs_util.Thread.ident"]], "isdaemon() (datumaro.util.multi_procs_util.thread method)": [[433, "datumaro.util.multi_procs_util.Thread.isDaemon"]], "is_alive() (datumaro.util.multi_procs_util.thread method)": [[433, "datumaro.util.multi_procs_util.Thread.is_alive"]], "join() (datumaro.util.multi_procs_util.queue method)": [[433, "datumaro.util.multi_procs_util.Queue.join"]], "join() (datumaro.util.multi_procs_util.thread method)": [[433, "datumaro.util.multi_procs_util.Thread.join"]], "name (datumaro.util.multi_procs_util.thread property)": [[433, "datumaro.util.multi_procs_util.Thread.name"]], "native_id (datumaro.util.multi_procs_util.thread property)": [[433, "datumaro.util.multi_procs_util.Thread.native_id"]], "notify() (datumaro.util.multi_procs_util.condition method)": [[433, "datumaro.util.multi_procs_util.Condition.notify"]], "notifyall() (datumaro.util.multi_procs_util.condition method)": [[433, "datumaro.util.multi_procs_util.Condition.notifyAll"]], "notify_all() (datumaro.util.multi_procs_util.condition method)": [[433, "datumaro.util.multi_procs_util.Condition.notify_all"]], "put() (datumaro.util.multi_procs_util.queue method)": [[433, "datumaro.util.multi_procs_util.Queue.put"]], "put_nowait() (datumaro.util.multi_procs_util.queue method)": [[433, "datumaro.util.multi_procs_util.Queue.put_nowait"]], "qsize() (datumaro.util.multi_procs_util.queue method)": [[433, "datumaro.util.multi_procs_util.Queue.qsize"]], "run() (datumaro.util.multi_procs_util.thread method)": [[433, "datumaro.util.multi_procs_util.Thread.run"]], "setdaemon() (datumaro.util.multi_procs_util.thread method)": [[433, "datumaro.util.multi_procs_util.Thread.setDaemon"]], "setname() (datumaro.util.multi_procs_util.thread method)": [[433, "datumaro.util.multi_procs_util.Thread.setName"]], "start() (datumaro.util.multi_procs_util.thread method)": [[433, "datumaro.util.multi_procs_util.Thread.start"]], "task_done() (datumaro.util.multi_procs_util.queue method)": [[433, "datumaro.util.multi_procs_util.Queue.task_done"]], "wait() (datumaro.util.multi_procs_util.condition method)": [[433, "datumaro.util.multi_procs_util.Condition.wait"]], "wait_for() (datumaro.util.multi_procs_util.condition method)": [[433, "datumaro.util.multi_procs_util.Condition.wait_for"]], "catch_output() (in module datumaro.util.os_util)": [[434, "datumaro.util.os_util.catch_output"]], "check_instruction_set() (in module datumaro.util.os_util)": [[434, "datumaro.util.os_util.check_instruction_set"]], "copytree() (in module datumaro.util.os_util)": [[434, "datumaro.util.os_util.copytree"]], "datumaro.util.os_util": [[434, "module-datumaro.util.os_util"]], "dir_items() (in module datumaro.util.os_util)": [[434, "datumaro.util.os_util.dir_items"]], "extract_subset_name_from_parent() (in module datumaro.util.os_util)": [[434, "datumaro.util.os_util.extract_subset_name_from_parent"]], "find_files() (in module datumaro.util.os_util)": [[434, "datumaro.util.os_util.find_files"]], "generate_next_name() (in module datumaro.util.os_util)": [[434, "datumaro.util.os_util.generate_next_name"]], "get_all_file_extensions() (in module datumaro.util.os_util)": [[434, "datumaro.util.os_util.get_all_file_extensions"]], "import_foreign_module() (in module datumaro.util.os_util)": [[434, "datumaro.util.os_util.import_foreign_module"]], "is_subpath() (in module datumaro.util.os_util)": [[434, "datumaro.util.os_util.is_subpath"]], "make_file_name() (in module datumaro.util.os_util)": [[434, "datumaro.util.os_util.make_file_name"]], "split_path() (in module datumaro.util.os_util)": [[434, "datumaro.util.os_util.split_path"]], "suppress_output() (in module datumaro.util.os_util)": [[434, "datumaro.util.os_util.suppress_output"]], "walk() (in module datumaro.util.os_util)": [[434, "datumaro.util.os_util.walk"]], "pickleloader (class in datumaro.util.pickle_util)": [[435, "datumaro.util.pickle_util.PickleLoader"]], "restrictedunpickler (class in datumaro.util.pickle_util)": [[435, "datumaro.util.pickle_util.RestrictedUnpickler"]], "datumaro.util.pickle_util": [[435, "module-datumaro.util.pickle_util"]], "find_class() (datumaro.util.pickle_util.restrictedunpickler method)": [[435, "datumaro.util.pickle_util.RestrictedUnpickler.find_class"]], "restricted_load() (datumaro.util.pickle_util.pickleloader method)": [[435, "datumaro.util.pickle_util.PickleLoader.restricted_load"]], "safe_numpy (datumaro.util.pickle_util.pickleloader attribute)": [[435, "datumaro.util.pickle_util.PickleLoader.safe_numpy"]], "datumaro.util.samples": [[436, "module-datumaro.util.samples"]], "get_samples_path() (in module datumaro.util.samples)": [[436, "datumaro.util.samples.get_samples_path"]], "scope (class in datumaro.util.scope)": [[437, "datumaro.util.scope.Scope"]], "add() (datumaro.util.scope.scope method)": [[437, "datumaro.util.scope.Scope.add"]], "as_current() (datumaro.util.scope.scope method)": [[437, "datumaro.util.scope.Scope.as_current"]], "close() (datumaro.util.scope.scope method)": [[437, "datumaro.util.scope.Scope.close"]], "current() (datumaro.util.scope.scope class method)": [[437, "datumaro.util.scope.Scope.current"]], "datumaro.util.scope": [[437, "module-datumaro.util.scope"]], "disable() (datumaro.util.scope.scope method)": [[437, "datumaro.util.scope.Scope.disable"]], "enable() (datumaro.util.scope.scope method)": [[437, "datumaro.util.scope.Scope.enable"]], "on_error_do() (datumaro.util.scope.scope method)": [[437, "datumaro.util.scope.Scope.on_error_do"]], "on_error_do() (in module datumaro.util.scope)": [[437, "datumaro.util.scope.on_error_do"]], "on_exit_do() (datumaro.util.scope.scope method)": [[437, "datumaro.util.scope.Scope.on_exit_do"]], "on_exit_do() (in module datumaro.util.scope)": [[437, "datumaro.util.scope.on_exit_do"]], "scope_add() (in module datumaro.util.scope)": [[437, "datumaro.util.scope.scope_add"]], "scoped() (in module datumaro.util.scope)": [[437, "datumaro.util.scope.scoped"]], "datumaro.util.tabular_util": [[438, "module-datumaro.util.tabular_util"]], "telemetry (class in datumaro.util.telemetry_stub)": [[439, "datumaro.util.telemetry_stub.Telemetry"]], "datumaro.util.telemetry_stub": [[439, "module-datumaro.util.telemetry_stub"]], "end_session() (datumaro.util.telemetry_stub.telemetry method)": [[439, "datumaro.util.telemetry_stub.Telemetry.end_session"]], "force_shutdown() (datumaro.util.telemetry_stub.telemetry method)": [[439, "datumaro.util.telemetry_stub.Telemetry.force_shutdown"]], "send_error() (datumaro.util.telemetry_stub.telemetry method)": [[439, "datumaro.util.telemetry_stub.Telemetry.send_error"]], "send_event() (datumaro.util.telemetry_stub.telemetry method)": [[439, "datumaro.util.telemetry_stub.Telemetry.send_event"]], "send_stack_trace() (datumaro.util.telemetry_stub.telemetry method)": [[439, "datumaro.util.telemetry_stub.Telemetry.send_stack_trace"]], "start_session() (datumaro.util.telemetry_stub.telemetry method)": [[439, "datumaro.util.telemetry_stub.Telemetry.start_session"]], "close_telemetry_session() (in module datumaro.util.telemetry_utils)": [[440, "datumaro.util.telemetry_utils.close_telemetry_session"]], "datumaro.util.telemetry_utils": [[440, "module-datumaro.util.telemetry_utils"]], "init_telemetry_session() (in module datumaro.util.telemetry_utils)": [[440, "datumaro.util.telemetry_utils.init_telemetry_session"]], "send_command_exception_info() (in module datumaro.util.telemetry_utils)": [[440, "datumaro.util.telemetry_utils.send_command_exception_info"]], "send_command_failure_info() (in module datumaro.util.telemetry_utils)": [[440, "datumaro.util.telemetry_utils.send_command_failure_info"]], "send_command_success_info() (in module datumaro.util.telemetry_utils)": [[440, "datumaro.util.telemetry_utils.send_command_success_info"]], "send_error_info() (in module datumaro.util.telemetry_utils)": [[440, "datumaro.util.telemetry_utils.send_error_info"]], "send_version_info() (in module datumaro.util.telemetry_utils)": [[440, "datumaro.util.telemetry_utils.send_version_info"]], "check_import() (in module datumaro.util.tf_util)": [[441, "datumaro.util.tf_util.check_import"]], "datumaro.util.tf_util": [[441, "module-datumaro.util.tf_util"]], "has_feature() (in module datumaro.util.tf_util)": [[441, "datumaro.util.tf_util.has_feature"]], "import_tf() (in module datumaro.util.tf_util)": [[441, "datumaro.util.tf_util.import_tf"]], "datumaro.version": [[442, "module-datumaro.version"]]}})