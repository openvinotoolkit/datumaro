[tox]
isolated_build = true
skip_missing_interpreters = true


[testenv]
passenv =
    USERNAME
    LOCALAPPDATA
setenv =
    MPLBACKEND=agg
deps =
    -r{toxinidir}/tests/requirements.txt
extras =
    default
    tf
    tfds


[testenv:pre-commit]
basepython = python3
deps =
    pre-commit
commands = pre-commit run --show-diff-on-failure --color=always --all-files


[testenv:build-docs]
deps =
    -r{toxinidir}/docs/requirements.txt
use_develop = true
change_dir = {toxinidir}/docs
allowlist_externals =
    make
commands =
    make clean
    make html


[testenv:bandit-scan]
deps =
    bandit
commands =
    - bandit -r -c .ci/ipas_default.config {toxinidir}/ -f txt -o {toxworkdir}/bandit-report.txt


[testenv:trivy-scan]
passenv = TRIVY_DOWNLOAD_URL
deps =
allowlist_externals =
    bash
    curl
    tar
    rm
    *trivy*
    cat
commands =
    bash -c "pip freeze > {toxworkdir}/requirements.txt"
    cat {toxworkdir}/requirements.txt
    curl -L0 {env:TRIVY_DOWNLOAD_URL} -o {toxworkdir}/trivy.tar.gz
    tar -xzf {toxworkdir}/trivy.tar.gz -C {toxworkdir}
    {toxworkdir}/trivy fs -d -c .ci/trivy.yaml --dependency-tree -o {toxworkdir}/trivy-results-datumaro.txt {toxworkdir}/requirements.txt
    {toxworkdir}/trivy fs -d -c .ci/trivy.yaml --list-all-pkgs --format template --template "@.ci/trivy-csv.tmpl" -o {toxworkdir}/trivy-results-datumaro.csv {toxworkdir}/requirements.txt
    {toxworkdir}/trivy fs -d -c .ci/trivy.yaml --format spdx-json -o {toxworkdir}/trivy-spdx-datumaro.json {toxworkdir}/requirements.txt
    cat {toxworkdir}/trivy-results-datumaro.txt
    rm {toxworkdir}/trivy.tar.gz
    rm {toxworkdir}/trivy
    rm {toxworkdir}/requirements.txt


[testenv:tests-py{37,38,39,310}-{darwin,lin,win}]
commands =
    python -m pytest -v --junitxml={toxworkdir}/results-{envname}.xml {posargs:tests}


[testenv:validation]
commands =
    python -m pytest -v --junitxml={toxworkdir}/results_val_{envname}.xml -m {posargs:v1_3_0}


[testenv:stability-{darwin,lin,win}]
deps =
    {[testenv]deps}
    pytest-loop
commands_pre =
    python -m pip uninstall pytest-stress -y
commands =
    python -m pytest -v --junitxml={toxworkdir}/results-{envname}.xml -x {posargs:--loop 5}
